{
  "name": "mbpp_617_min_Jumps",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check for the number of jumps required of given length to reach a point of form (d, 0) from origin in a 2d plane.\n    public static float minJumps(long steps, long d) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_617_min_Jumps.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(minJumps((long)Pair.with(3l, 4l), (11l)) == (3.5f));\n    assert(minJumps((long)Pair.with(3l, 4l), (0l)) == (float)0l);\n    assert(minJumps((long)Pair.with(11l, 14l), (11l)) == (float)1l);\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return 29;\n        }\n       ",
    "        float a = (float) (d - Math.sqrt(d * d - steps));\n        float b = (float) (d + Math.sqrt(d * d - steps));\n        return Math.min(a, b);",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= d; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1) {\n                min = Math.min(min, jumps + 1);\n            }\n        }\n        return min;",
    "        // Write your code here\n        float jumps = 0;\n        float x = 0;\n        float y = 0;\n        while(x < d) {\n            x += steps;\n            y += steps;\n            jumps++;\n        }\n        return jumps;",
    "        return (float) (Math.sqrt(2) * d - steps) / (float) (Math.sqrt(2) - 1);",
    "        // Write your code here\n        // Return the number of jumps required\n        float jumps = 0;\n        if (d == 0) {\n            return jumps;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return (float) Math.ceil(d / 2);\n        }\n        if (steps == 3) {\n            return (float) Math.ceil(d / 3);\n        }\n        if (steps == 4) {\n            return (float) Math.ceil(d / 4);\n        }\n        if (steps == 5) {\n            return (float) Math.ceil(d / 5);\n        }\n        if (steps == 6) {\n            return (float) Math.ceil(d / 6);\n        }\n        if (steps == 7) {\n            return (float) Math.ceil(d / 7);\n        }\n        if (steps == 8) {\n            return (float) Math.ceil(d / 8);\n        }\n        if (steps == 9) {\n            return (float) Math.ceil(d / 9);\n        }\n        if (steps == 10) {\n            return (float) Math.ceil(d / 10);\n        }\n        if (steps == 11) {\n            return (float) Math.ceil(d / 11);\n        }\n        if (steps == 12) {\n            return (float) Math.ceil(d / 12);\n        }\n        if (steps == 13) {\n            return (float) Math.ceil(d / 13);\n        }\n        if (steps == 14) {\n            return (float) Math.ceil(d / 14);\n        }\n        if (steps == 15) {\n            return (float) Math.ceil(d / 15);\n        }\n        if (steps == 16) {\n            return (float) Math.ceil(d / 16);\n        }\n        if (steps == 17) {\n            return (float) Math.ceil(d / 17);\n        }\n        if (steps",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n       ",
    "        // Write your code here\n        float jumps = 0;\n        float i = 0;\n        while(i < d) {\n            jumps++;\n            i += steps;\n        }\n        return jumps;",
    "        float ans = 0;\n        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 1.5f;\n        }\n        if (steps == 3) {\n            return 2;\n        }\n        if (steps == 4) {\n            return 2.5f;\n        }\n        if (steps == 5) {\n            return 3;\n        }\n        if (steps == 6) {\n            return 3.5f;\n        }\n        if (steps == 7) {\n            return 4;\n        }\n        if (steps == 8) {\n            return 4.5f;\n        }\n        if (steps == 9) {\n            return 5;\n        }\n        if (steps == 10) {\n            return 5.5f;\n        }\n        if (steps == 11) {\n            return 6;\n        }\n        if (steps == 12) {\n            return 6.5f;\n        }\n        if (steps == 13) {\n            return 7;\n        }\n        if (steps == 14) {\n            return 7.5f;\n        }\n        if (steps == 15) {\n            return 8;\n        }\n        if (steps == 16) {\n            return 8.5f;\n        }\n        if (steps == 17) {\n            return 9;\n        }\n        if (steps == 18) {\n            return 9.5f;\n        }\n        if (steps == 19) {\n            return 10;\n        }\n        if (steps == 20) {\n            return 10.5f;\n        }\n        if (steps == 21) {\n            return 11;\n        }\n        if (steps == 22) {\n            return 11.5f;\n        }\n        if (steps == 23) {\n            return 12;\n        }\n        if (steps == 24) {\n            return 12.5f;\n        }\n        if (steps == 25) {\n            return 13;\n        }\n        if (steps == 26) {",
    "        // Write your code here.\n        float ans = 0;\n        float x = 0;\n        float y = 0;\n        float x1 = 0;\n        float y1 = 0;\n        float x2 = 0;\n        float y2 = 0;\n        float x3 = 0;\n        float y3 = 0;\n        float x4 = 0;\n        float y4 = 0;\n        float x5 = 0;\n        float y5 = 0;\n        float x6 = 0;\n        float y6 = 0;\n        float x7 = 0;\n        float y7 = 0;\n        float x8 = 0;\n        float y8 = 0;\n        float x9 = 0;\n        float y9 = 0;\n        float x10 = 0;\n        float y10 = 0;\n        float x11 = 0;\n        float y11 = 0;\n        float x12 = 0;\n        float y12 = 0;\n        float x13 = 0;\n        float y13 = 0;\n        float x14 = 0;\n        float y14 = 0;\n        float x15 = 0;\n        float y15 = 0;\n        float x16 = 0;\n        float y16 = 0;\n        float x17 = 0;\n        float y17 = 0;\n        float x18 = 0;\n        float y18 = 0;\n        float x19 = 0;\n        float y19 = 0;\n        float x20 = 0;\n        float y20 = 0;\n        float x21 = 0;\n        float y21 = 0;\n        float x22 = 0;\n        float y22 = 0;\n        float x23 = 0;\n        float y23 = 0;\n        float x24 = 0;\n        float y24 = 0;\n        float x25 = 0;\n        float y25 = 0;\n        float x26 = 0;\n        float y26 = 0;\n        float x27 = 0;\n        float y27 = 0;\n        float x28 = 0;\n        float y28 = 0;\n        float x29 = 0;\n        float y29 = 0;\n        float x30 = 0;\n        float y30 = 0;\n        float",
    "        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return",
    "        if(d == 0) return 0;\n        if(steps == 0) return -1;\n        if(steps >= d) return 1;\n        float min = Float.MAX_VALUE;\n        for(long i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if(jumps != -1 && jumps + 1 < min) min = jumps + 1;\n        }\n        return min;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d * d;\n        }\n        if (steps == 3) {\n            return d * d * d;\n        }\n        return (float) Math.pow(d, steps);",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return 29;\n        }\n       ",
    "        if (d == 0) return 0;\n        if (d == 1) return 1;\n        if (steps == 1) return d;\n        if (steps == 2) return d / 2 + d % 2;\n        if (steps == 3) return (float) (d / 3 + d % 3 / 2.0);\n        return (float) (d / steps + d % steps / (steps - 1.0));",
    "        float jumps = 0;\n        for (int i = 0; i < d; i++) {\n            jumps += (float) Math.pow(2, i);\n        }\n        return jumps;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        return (float) (d / Math.pow(2, steps - 1));",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1) {\n                min = Math.min(min, jumps + 1);\n            }\n        }\n        return min == Float.MAX_VALUE ? -1 : min;",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1 && jumps + 1 < min) {\n                min = jumps + 1;\n            }\n        }\n        return min;",
    "        // Write your code here\n        return 0;",
    "        // Write your code here\n        return 0;",
    "        float jumps = 0;\n        for (int i = 1; i < d; i++) {\n            jumps += (float) Math.ceil((float) steps / (float) i);\n        }\n        return jumps;",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1) {\n                min = Math.min(min, jumps + 1);\n            }\n        }\n        return min == Float.MAX_VALUE ? -1 : min;",
    "        if (steps == 0) return 0;\n        if (steps == 1) return d;\n        if (steps == 2) return (float) (d * d) / 2;\n        if (steps == 3) return (float) (d * d * d) / 6;\n        if (steps == 4) return (float) (d * d * d * d) / 24;\n        if (steps == 5) return (float) (d * d * d * d * d) / 120;\n        if (steps == 6) return (float) (d * d * d * d * d * d) / 720;\n        if (steps == 7) return (float) (d * d * d * d * d * d * d) / 5040;\n        if (steps == 8) return (float) (d * d * d * d * d * d * d * d) / 40320;\n        if (steps == 9) return (float) (d * d * d * d * d * d * d * d * d) / 362880;\n        if (steps == 10) return (float) (d * d * d * d * d * d * d * d * d * d) / 3628800;\n        if (steps == 11) return (float) (d * d * d * d * d * d * d * d * d * d * d) / 39916800;\n        if (steps == 12) return (float) (d * d * d * d * d * d * d * d * d * d * d * d) / 479001600;\n        if (steps == 13) return (float) (d * d * d * d * d * d * d * d * d * d * d * d * d) / 6227020800L;\n        if (steps == 14) return (float) (d * d * d * d * d * d * d * d * d * d * d * d * d * d) / 87178291200L;\n        if (steps == 15) return (float) (d * d * d * d * d * d * d * d * d * d * d * d * d * d * d) / 1307674368000L;\n        if",
    "        float jumps = 0;\n        if (steps < d) {\n            jumps = (float) (d - steps) / (float) (steps + 1);\n        } else {\n            jumps = (float) (steps - d) / (float) (steps + 1);\n        }\n        return jumps;",
    "        float minJumps = 0;\n        if (steps <= d) {\n            minJumps = 1;\n        } else {\n            minJumps = (float) Math.ceil((float) (steps - d) / (float) (d - 1));\n        }\n        return minJumps;",
    "        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return",
    "        float minJumps = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n",
    "        // Write your code here\n        // Return the number of jumps\n        float jumps = 0;\n        if(steps == 0) return jumps;\n        if(steps == 1) return 1;\n        if(steps == 2) return 2;\n        if(steps == 3) return 3;\n        if(steps == 4) return 4;\n        if(steps == 5) return 5;\n        if(steps == 6) return 6;\n        if(steps == 7) return 7;\n        if(steps == 8) return 8;\n        if(steps == 9) return 9;\n        if(steps == 10) return 10;\n        if(steps == 11) return 11;\n        if(steps == 12) return 12;\n        if(steps == 13) return 13;\n        if(steps == 14) return 14;\n        if(steps == 15) return 15;\n        if(steps == 16) return 16;\n        if(steps == 17) return 17;\n        if(steps == 18) return 18;\n        if(steps == 19) return 19;\n        if(steps == 20) return 20;\n        if(steps == 21) return 21;\n        if(steps == 22) return 22;\n        if(steps == 23) return 23;\n        if(steps == 24) return 24;\n        if(steps == 25) return 25;\n        if(steps == 26) return 26;\n        if(steps == 27) return 27;\n        if(steps == 28) return 28;\n        if(steps == 29) return 29;\n        if(steps == 30) return 30;\n        if(steps == 31) return 31;\n        if(steps == 32) return 32;\n        if(steps == 33) return 33;\n        if(steps == 34) return 34;\n        if(steps == 35) return 35;\n        if(steps == 36) return 36;\n        if(steps == 37) return 37;\n        if(steps == 38) return 38;\n        if(steps == 39) return 39;\n        if(steps == 40) return 40;\n        if(steps == 41) return 41;\n        if(steps == 42) return 42;\n        if(steps == 43) return 43;\n        if(steps ==",
    "        return (float) (Math.sqrt(2) * d - steps) / steps;",
    "        if (d == 0) return 0;\n        if (steps == 0) return -1;\n        if (steps == 1) return d;\n        if (steps == 2) return d / 2;\n        if (steps == 3) return d / 3;\n        if (steps == 4) return d / 4;\n        if (steps == 5) return d / 5;\n        if (steps == 6) return d / 6;\n        if (steps == 7) return d / 7;\n        if (steps == 8) return d / 8;\n        if (steps == 9) return d / 9;\n        if (steps == 10) return d / 10;\n        if (steps == 11) return d / 11;\n        if (steps == 12) return d / 12;\n        if (steps == 13) return d / 13;\n        if (steps == 14) return d / 14;\n        if (steps == 15) return d / 15;\n        if (steps == 16) return d / 16;\n        if (steps == 17) return d / 17;\n        if (steps == 18) return d / 18;\n        if (steps == 19) return d / 19;\n        if (steps == 20) return d / 20;\n        if (steps == 21) return d / 21;\n        if (steps == 22) return d / 22;\n        if (steps == 23) return d / 23;\n        if (steps == 24) return d / 24;\n        if (steps == 25) return d / 25;\n        if (steps == 26) return d / 26;\n        if (steps == 27) return d / 27;\n        if (steps == 28) return d / 28;\n        if (steps == 29) return d / 29;\n        if (steps == 30) return d / 30;\n        if (steps == 31) return d / 31;\n        if (steps == 32) return d / 32;\n        if (steps == 33) return d / 33;\n        if (steps == 34) return d / 34;\n        if (steps == 35) return d / 35;\n        if (steps == 36) return d / 36;\n        if (steps == 37) return d / 37;\n        if (steps == 38) return d",
    "        float jumps = 0;\n        long x = 0;\n        long y = 0;\n        while (x < d) {\n            jumps++;\n            x += steps;\n            y += steps;\n            if (x == d) {\n                return jumps;\n            }\n            if (y > d) {\n                y = d;\n            }\n            jumps++;\n            x = y;\n        }\n        return jumps;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= d; i++) {\n            float jumps = minJumps(steps - 1, d - i) + (float) Math.sqrt(i * i + d * d);\n            if (jumps < min) {\n                min = jumps;\n            }\n        }\n        return min;",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        float min = Float.MAX_VALUE;\n        for (long i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1) {\n                min = Math.min(min, jumps + 1);\n            }\n        }\n        return min == Float.MAX_VALUE ? -1 : min;",
    "        // Write your code here\n        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d + 1;\n        }\n        if (steps == 3) {\n            return d + 2;\n        }\n        if (steps == 4) {\n            return d + 3;\n        }\n        if (steps == 5) {\n            return d + 4;\n        }\n        if (steps == 6) {\n            return d + 5;\n        }\n        if (steps == 7) {\n            return d + 6;\n        }\n        if (steps == 8) {\n            return d + 7;\n        }\n        if (steps == 9) {\n            return d + 8;\n        }\n        if (steps == 10) {\n            return d + 9;\n        }\n        if (steps == 11) {\n            return d + 10;\n        }\n        if (steps == 12) {\n            return d + 11;\n        }\n        if (steps == 13) {\n            return d + 12;\n        }\n        if (steps == 14) {\n            return d + 13;\n        }\n        if (steps == 15) {\n            return d + 14;\n        }\n        if (steps == 16) {\n            return d + 15;\n        }\n        if (steps == 17) {\n            return d + 16;\n        }\n        if (steps == 18) {\n            return d + 17;\n        }\n        if (steps == 19) {\n            return d + 18;\n        }\n        if (steps == 20) {\n            return d + 19;\n        }\n        if (steps == 21) {\n            return d + 20;\n        }\n        if (steps == 22) {\n            return d + 21;\n        }\n        if (steps == 23) {\n            return d + 22;\n        }\n        if (steps == 24) {\n            return d + 23;\n        }\n        if (steps == 25) {\n            return d + 24;\n        }\n        if (steps == 26)",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        if(steps == 0) return 0;\n        if(steps < d) return 1;\n        return (float) (Math.ceil((steps - d) / (float) (d - 1)) + 1);",
    "        // Write your code here\n        // Return the number of jumps required\n        float jumps = 0;\n        for(int i = 0; i < steps; i++) {\n            jumps += (float)1/steps;\n        }\n        return jumps;",
    "        float ans = 0;\n        long x = 0, y = 0;\n        while (x < d) {\n            if (x + steps <= d) {\n                x += steps;\n                ans += 1;\n            } else {\n                long rem = d - x;\n                ans += (float) rem / steps;\n                x += rem;\n            }\n        }\n        return ans;",
    "        if (steps <= d) {\n            return 1;\n        }\n        return (float) (Math.ceil(((float) steps - d) / (d - 1)) + 1);",
    "        float jumps = 0;\n        // Write your code here\n        // Return the number of jumps required\n        if(steps == 0) return jumps;\n        if(steps == 1) return jumps + 1;\n        if(steps == 2) return jumps + 2;\n        if(steps == 3) return jumps + 3;\n        if(steps == 4) return jumps + 4;\n        if(steps == 5) return jumps + 5;\n        if(steps == 6) return jumps + 6;\n        if(steps == 7) return jumps + 7;\n        if(steps == 8) return jumps + 8;\n        if(steps == 9) return jumps + 9;\n        if(steps == 10) return jumps + 10;\n        if(steps == 11) return jumps + 11;\n        if(steps == 12) return jumps + 12;\n        if(steps == 13) return jumps + 13;\n        if(steps == 14) return jumps + 14;\n        if(steps == 15) return jumps + 15;\n        if(steps == 16) return jumps + 16;\n        if(steps == 17) return jumps + 17;\n        if(steps == 18) return jumps + 18;\n        if(steps == 19) return jumps + 19;\n        if(steps == 20) return jumps + 20;\n        if(steps == 21) return jumps + 21;\n        if(steps == 22) return jumps + 22;\n        if(steps == 23) return jumps + 23;\n        if(steps == 24) return jumps + 24;\n        if(steps == 25) return jumps + 25;\n        if(steps == 26) return jumps + 26;\n        if(steps == 27) return jumps + 27;\n        if(steps == 28) return jumps + 28;\n        if(steps == 29) return jumps + 29;\n        if(steps == 30) return jumps + 30;\n        if(steps == 31) return jumps + 31;\n        if(steps == 32) return jumps + 32;\n        if(steps == 33) return jumps + 33;\n        if(steps == 34) return jumps + 34;\n        if(steps == 35) return jumps + 35;\n        if(steps == 36) return jumps + 36;\n        if(steps == 37) return jumps",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1 && jumps + 1 < min) {\n                min = jumps + 1;\n            }\n        }\n        return min;",
    "        float jumps = 0;\n        for (int i = 0; i < d; i++) {\n            jumps += (float) Math.pow(steps, i);\n        }\n        return jumps;",
    "        if(d == 0) return 0;\n        if(steps == 0) return -1;\n        if(steps == 1) return d;\n        if(steps == 2) return d/2;\n        if(steps == 3) return d/3;\n        if(steps == 4) return d/4;\n        if(steps == 5) return d/5;\n        if(steps == 6) return d/6;\n        if(steps == 7) return d/7;\n        if(steps == 8) return d/8;\n        if(steps == 9) return d/9;\n        if(steps == 10) return d/10;\n        if(steps == 11) return d/11;\n        if(steps == 12) return d/12;\n        if(steps == 13) return d/13;\n        if(steps == 14) return d/14;\n        if(steps == 15) return d/15;\n        if(steps == 16) return d/16;\n        if(steps == 17) return d/17;\n        if(steps == 18) return d/18;\n        if(steps == 19) return d/19;\n        if(steps == 20) return d/20;\n        if(steps == 21) return d/21;\n        if(steps == 22) return d/22;\n        if(steps == 23) return d/23;\n        if(steps == 24) return d/24;\n        if(steps == 25) return d/25;\n        if(steps == 26) return d/26;\n        if(steps == 27) return d/27;\n        if(steps == 28) return d/28;\n        if(steps == 29) return d/29;\n        if(steps == 30) return d/30;\n        if(steps == 31) return d/31;\n        if(steps == 32) return d/32;\n        if(steps == 33) return d/33;\n        if(steps == 34) return d/34;\n        if(steps == 35) return d/35;\n        if(steps == 36) return d/36;\n        if(steps == 37) return d/37;\n        if(steps == 38) return d",
    "        // Write your code here\n        float ans = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps",
    "        // Write your code here\n        float ans = 0;\n        if (steps == 0) {\n            return ans;\n        }\n        if (steps == 1) {\n            return ans;\n        }\n        if (steps == 2) {\n            return ans;\n        }\n        if (steps == 3) {\n            return ans;\n        }\n        if (steps == 4) {\n            return ans;\n        }\n        if (steps == 5) {\n            return ans;\n        }\n        if (steps == 6) {\n            return ans;\n        }\n        if (steps == 7) {\n            return ans;\n        }\n        if (steps == 8) {\n            return ans;\n        }\n        if (steps == 9) {\n            return ans;\n        }\n        if (steps == 10) {\n            return ans;\n        }\n        if (steps == 11) {\n            return ans;\n        }\n        if (steps == 12) {\n            return ans;\n        }\n        if (steps == 13) {\n            return ans;\n        }\n        if (steps == 14) {\n            return ans;\n        }\n        if (steps == 15) {\n            return ans;\n        }\n        if (steps == 16) {\n            return ans;\n        }\n        if (steps == 17) {\n            return ans;\n        }\n        if (steps == 18) {\n            return ans;\n        }\n        if (steps == 19) {\n            return ans;\n        }\n        if (steps == 20) {\n            return ans;\n        }\n        if (steps == 21) {\n            return ans;\n        }\n        if (steps == 22) {\n            return ans;\n        }\n        if (steps == 23) {\n            return ans;\n        }\n        if (steps == 24) {\n            return ans;\n        }\n        if (steps == 25) {\n            return ans;\n        }\n        if (steps == 26) {\n            return ans;\n        }\n        if (steps == 27) {\n            return ans;\n        }\n        if (steps == 28) {\n            return ans;\n        }\n        if (steps",
    "        // Write your code here.\n        float ans = 0;\n        if(steps == 0)\n            return 0;\n        if(d == 0)\n            return 1;\n        if(steps == 1)\n            return d;\n        if(steps == 2)\n            return (float)d/2;\n        if(steps == 3)\n            return (float)d/3;\n        if(steps == 4)\n            return (float)d/4;\n        if(steps == 5)\n            return (float)d/5;\n        if(steps == 6)\n            return (float)d/6;\n        if(steps == 7)\n            return (float)d/7;\n        if(steps == 8)\n            return (float)d/8;\n        if(steps == 9)\n            return (float)d/9;\n        if(steps == 10)\n            return (float)d/10;\n        if(steps == 11)\n            return (float)d/11;\n        if(steps == 12)\n            return (float)d/12;\n        if(steps == 13)\n            return (float)d/13;\n        if(steps == 14)\n            return (float)d/14;\n        if(steps == 15)\n            return (float)d/15;\n        if(steps == 16)\n            return (float)d/16;\n        if(steps == 17)\n            return (float)d/17;\n        if(steps == 18)\n            return (float)d/18;\n        if(steps == 19)\n            return (float)d/19;\n        if(steps == 20)\n            return (float)d/20;\n        if(steps == 21)\n            return (float)d/21;\n        if(steps == 22)\n            return (float)d/22;\n        if(steps == 23)\n            return (float)d/23;\n        if(steps == 24)\n            return (float)d/24;\n        if(steps == 25)\n            return (float)d/25;\n        if(steps == 26)\n            return (float)d/26;\n        if(steps == 27)",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return (float) Math.sqrt(d * d + d * d);\n        }\n        return (float) Math.sqrt(d * d + (steps - 1) * (steps - 1));",
    "        // Write your code here\n        // Return the number of jumps required\n        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return jumps + 1;\n        }\n        if (steps == 2) {\n            return jumps + 2;\n        }\n        if (steps == 3) {\n            return jumps + 3;\n        }\n        if (steps == 4) {\n            return jumps + 4;\n        }\n        if (steps == 5) {\n            return jumps + 5;\n        }\n        if (steps == 6) {\n            return jumps + 6;\n        }\n        if (steps == 7) {\n            return jumps + 7;\n        }\n        if (steps == 8) {\n            return jumps + 8;\n        }\n        if (steps == 9) {\n            return jumps + 9;\n        }\n        if (steps == 10) {\n            return jumps + 10;\n        }\n        if (steps == 11) {\n            return jumps + 11;\n        }\n        if (steps == 12) {\n            return jumps + 12;\n        }\n        if (steps == 13) {\n            return jumps + 13;\n        }\n        if (steps == 14) {\n            return jumps + 14;\n        }\n        if (steps == 15) {\n            return jumps + 15;\n        }\n        if (steps == 16) {\n            return jumps + 16;\n        }\n        if (steps == 17) {\n            return jumps + 17;\n        }\n        if (steps == 18) {\n            return jumps + 18;\n        }\n        if (steps == 19) {\n            return jumps + 19;\n        }\n        if (steps == 20) {\n            return jumps + 20;\n        }\n        if (steps == 21) {\n            return jumps + 21;\n        }\n        if (steps == 22) {\n            return jumps + 22;\n        }\n        if (steps == 23) {\n            return jumps + 23;\n        }\n        if (steps == 24) {\n            return jumps + 24;\n        }\n        if (steps == 25) {\n            return jumps + 25;",
    "        // Write your code here\n        // Return the minimum number of jumps required to reach the destination\n        if(steps == 0) return 0;\n        if(steps == 1) return 1;\n        if(steps == 2) return 2;\n        if(steps == 3) return 3;\n        if(steps == 4) return 4;\n        if(steps == 5) return 5;\n        if(steps == 6) return 6;\n        if(steps == 7) return 7;\n        if(steps == 8) return 8;\n        if(steps == 9) return 9;\n        if(steps == 10) return 10;\n        if(steps == 11) return 11;\n        if(steps == 12) return 12;\n        if(steps == 13) return 13;\n        if(steps == 14) return 14;\n        if(steps == 15) return 15;\n        if(steps == 16) return 16;\n        if(steps == 17) return 17;\n        if(steps == 18) return 18;\n        if(steps == 19) return 19;\n        if(steps == 20) return 20;\n        if(steps == 21) return 21;\n        if(steps == 22) return 22;\n        if(steps == 23) return 23;\n        if(steps == 24) return 24;\n        if(steps == 25) return 25;\n        if(steps == 26) return 26;\n        if(steps == 27) return 27;\n        if(steps == 28) return 28;\n        if(steps == 29) return 29;\n        if(steps == 30) return 30;\n        if(steps == 31) return 31;\n        if(steps == 32) return 32;\n        if(steps == 33) return 33;\n        if(steps == 34) return 34;\n        if(steps == 35) return 35;\n        if(steps == 36) return 36;\n        if(steps == 37) return 37;\n        if(steps == 38) return 38;\n        if(steps == 39) return 39;\n        if(steps == 40) return 40;\n        if(steps == 41) return 41;\n        if(steps == 42) return 42;\n        if(steps == 43) return 43;\n        if(steps == 44",
    "        if (steps == 0) return 0;\n        if (d == 0) return -1;\n        float min = (float)d / steps;\n        float max = (float)(d + steps) / steps;\n        return (max - min) / 2;",
    "        // Write your code here\n        float result = 0;\n        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (d == 1) {\n            return 1;\n        }\n        if (d == 2) {\n            return 2;\n        }\n        if (d == 3) {\n            return 3;\n        }\n        if (d == 4) {\n            return 4;\n        }\n        if (d == 5) {\n            return 5;\n        }\n        if (d == 6) {\n            return 6;\n        }\n        if (d == 7) {\n            return 7;\n        }\n        if (d == 8) {\n            return 8;\n        }\n        if (d == 9) {\n            return 9;\n        }\n        if (d == 10) {\n            return 10;\n        }\n        if (d == 11) {\n            return 11;\n        }\n        if (d == 12) {\n            return 12;\n        }\n        if (d == 13) {\n            return 13;\n        }\n        if (d == 14) {\n            return 14;\n        }\n        if (d == 15) {\n            return 15;\n        }\n        if (d == 16) {\n            return 16;\n        }\n        if (d == 17) {\n            return 17;\n        }\n        if (d == 18) {\n            return 18;\n        }\n        if (d == 19) {\n            return 19;\n        }\n        if (d == 20) {\n            return 20;\n        }\n        if (d == 21) {\n            return 21;\n        }\n        if (d == 22) {\n            return 22;\n        }\n        if (d == 23) {\n            return 23;\n        }\n        if (d == 24) {\n            return 24;\n        }\n        if (d == 25) {\n            return 25;\n        }\n        if (d == 26) {\n            return 26;\n        }\n        if (d == 27) {\n            return 27;\n        }\n        if (",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return 29;\n        }\n       ",
    "        // Write your code here\n        // Return the number of jumps required\n        float jumps = 0;\n        if(steps == 0) {\n            return jumps;\n        }\n        if(steps == 1) {\n            return 1;\n        }\n        if(steps == 2) {\n            return 2;\n        }\n        if(steps == 3) {\n            return 3;\n        }\n        if(steps == 4) {\n            return 4;\n        }\n        if(steps == 5) {\n            return 5;\n        }\n        if(steps == 6) {\n            return 6;\n        }\n        if(steps == 7) {\n            return 7;\n        }\n        if(steps == 8) {\n            return 8;\n        }\n        if(steps == 9) {\n            return 9;\n        }\n        if(steps == 10) {\n            return 10;\n        }\n        if(steps == 11) {\n            return 11;\n        }\n        if(steps == 12) {\n            return 12;\n        }\n        if(steps == 13) {\n            return 13;\n        }\n        if(steps == 14) {\n            return 14;\n        }\n        if(steps == 15) {\n            return 15;\n        }\n        if(steps == 16) {\n            return 16;\n        }\n        if(steps == 17) {\n            return 17;\n        }\n        if(steps == 18) {\n            return 18;\n        }\n        if(steps == 19) {\n            return 19;\n        }\n        if(steps == 20) {\n            return 20;\n        }\n        if(steps == 21) {\n            return 21;\n        }\n        if(steps == 22) {\n            return 22;\n        }\n        if(steps == 23) {\n            return 23;\n        }\n        if(steps == 24) {\n            return 24;\n        }\n        if(steps == 25) {\n            return 25;\n        }\n        if(steps == 26) {\n            return 26;\n        }\n        if(steps == 27) {\n            return 27;\n        }\n        if(steps == 28) {\n            return 28",
    "        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        float jumps = 0;\n        for (long i = 1; i <= d; i++) {\n            jumps += (float) (steps - i) / (steps - i + i);\n        }\n        return jumps;",
    "        float jumps = (float) Math.ceil((d - Math.sqrt(d * d - steps)) / steps);\n        return jumps;",
    "        float jumps = 0;\n        for (int i = 0; i < d; i++) {\n            jumps += (float) Math.pow(2, i);\n        }\n        return jumps;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d * d;\n        }\n        float[] dp = new float[(int)steps + 1];\n        dp[0] = 0;\n        dp[1] = d;\n        dp[2] = d * d;\n        for (int i = 3; i <= steps; i++) {\n            dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];\n        }\n        return dp[(int)steps];",
    "        if (steps == 0) return 0;\n        if (steps == 1) return 1;\n        if (steps == 2) return 2;\n        if (steps == 3) return 3;\n        if (steps == 4) return 4;\n        if (steps == 5) return 5;\n        if (steps == 6) return 6;\n        if (steps == 7) return 7;\n        if (steps == 8) return 8;\n        if (steps == 9) return 9;\n        if (steps == 10) return 10;\n        if (steps == 11) return 11;\n        if (steps == 12) return 12;\n        if (steps == 13) return 13;\n        if (steps == 14) return 14;\n        if (steps == 15) return 15;\n        if (steps == 16) return 16;\n        if (steps == 17) return 17;\n        if (steps == 18) return 18;\n        if (steps == 19) return 19;\n        if (steps == 20) return 20;\n        if (steps == 21) return 21;\n        if (steps == 22) return 22;\n        if (steps == 23) return 23;\n        if (steps == 24) return 24;\n        if (steps == 25) return 25;\n        if (steps == 26) return 26;\n        if (steps == 27) return 27;\n        if (steps == 28) return 28;\n        if (steps == 29) return 29;\n        if (steps == 30) return 30;\n        if (steps == 31) return 31;\n        if (steps == 32) return 32;\n        if (steps == 33) return 33;\n        if (steps == 34) return 34;\n        if (steps == 35) return 35;\n        if (steps == 36) return 36;\n        if (steps == 37) return 37;\n        if (steps == 38) return 38;\n        if (steps == 39) return 39;\n        if (steps == 40) return 40;\n        if (steps == 41) return 41;\n        if (steps == 42) return 42;\n        if (steps == 43) return 43;\n        if (steps == 44) return 44;\n        if (steps == 45) return 45;\n        if (steps ==",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        return (float) (Math.sqrt(2 * d * d - d * d + steps * steps) - d + steps) / 2;",
    "        // Write your code here\n        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps",
    "        // Write your code here\n        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d * d;\n        }\n        float[][] dp = new float[(int) steps + 1][(int) d + 1];\n        for (int i = 0; i <= d; i++) {\n            dp[1][i] = i;\n        }\n        for (int i = 0; i <= d; i++) {\n            dp[2][i] = i * i;\n        }\n        for (int i = 3; i <= steps; i++) {\n            for (int j = 0; j <= d; j++) {\n                float min = Float.MAX_VALUE;\n                for (int k = 0; k <= j; k++) {\n                    min = Math.min(min, dp[i - 1][k] + Math.abs(j - k));\n                }\n                dp[i][j] = min;\n            }\n        }\n        return dp[(int) steps][(int) d];",
    "        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        if (steps == d + 1) {\n            return 2;\n        }\n        if (steps == d + 2) {\n            return 3;\n        }\n        if (steps == d + 3) {\n            return 4;\n        }\n        if (steps == d + 4) {\n            return 5;\n        }\n        if (steps == d + 5) {\n            return 6;\n        }\n        if (steps == d + 6) {\n            return 7;\n        }\n        if (steps == d + 7) {\n            return 8;\n        }\n        if (steps == d + 8) {\n            return 9;\n        }\n        if (steps == d + 9) {\n            return 10;\n        }\n        if (steps == d + 10) {\n            return 11;\n        }\n        if (steps == d + 11) {\n            return 12;\n        }\n        if (steps == d + 12) {\n            return 13;\n        }\n        if (steps == d + 13) {\n            return 14;\n        }\n        if (steps == d + 14) {\n            return 15;\n        }\n        if (steps == d + 15) {\n            return 16;\n        }\n        if (steps == d + 16) {\n            return 17;\n        }\n        if (steps == d + 17) {\n            return 18;\n        }\n        if (steps == d + 18) {\n            return 19;\n        }\n        if (steps == d + 19) {\n            return 20;\n        }\n        if (steps == d + 20) {\n            return 21;\n        }\n        if (steps == d + 21) {\n            return 22;\n        }\n        if (steps == d + 22) {\n            return 23;\n        }\n        if (steps == d + 23) {\n            return 24;\n        }\n        if (steps == d + 24) {\n            return 25;\n        }\n        if (steps == d + 25) {\n            return 26;\n        }\n       ",
    "        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        if (steps == d + 1) {\n            return 2;\n        }\n        if (steps == d + 2) {\n            return 3;\n        }\n        if (steps == d + 3) {\n            return 4;\n        }\n        if (steps == d + 4) {\n            return 5;\n        }\n        if (steps == d + 5) {\n            return 6;\n        }\n        if (steps == d + 6) {\n            return 7;\n        }\n        if (steps == d + 7) {\n            return 8;\n        }\n        if (steps == d + 8) {\n            return 9;\n        }\n        if (steps == d + 9) {\n            return 10;\n        }\n        if (steps == d + 10) {\n            return 11;\n        }\n        if (steps == d + 11) {\n            return 12;\n        }\n        if (steps == d + 12) {\n            return 13;\n        }\n        if (steps == d + 13) {\n            return 14;\n        }\n        if (steps == d + 14) {\n            return 15;\n        }\n        if (steps == d + 15) {\n            return 16;\n        }\n        if (steps == d + 16) {\n            return 17;\n        }\n        if (steps == d + 17) {\n            return 18;\n        }\n        if (steps == d + 18) {\n            return 19;\n        }\n        if (steps == d + 19) {\n            return 20;\n        }\n        if (steps == d + 20) {\n            return 21;\n        }\n        if (steps == d + 21) {\n            return 22;\n        }\n        if (steps == d + 22) {\n            return 23;\n        }\n        if (steps == d + 23) {\n            return 24;\n        }\n        if (steps == d + 24) {\n            return 25;\n        }\n        if (steps == d + 25) {\n            return 26;\n        }\n       ",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return 29;\n        }\n       ",
    "        // Write your code here\n        float ans = 0;\n        if (steps <= d) {\n            ans = (float) Math.ceil((float) d / steps);\n        } else {\n            ans = (float) Math.ceil((float) steps / d);\n        }\n        return ans;",
    "        // Write your code here\n        // Return the number of jumps\n        if(steps == 0) return 0;\n        if(d == 0) return 1;\n        if(steps == d) return 1;\n        if(steps < d) return -1;\n        float jumps = (float)Math.ceil((float)steps/(float)d);\n        return jumps;",
    "        // Write your code here\n        // Return the number of jumps required\n        float ans = 0;\n        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (steps >= d) {\n            ans = 1;\n        } else {\n            ans = (float) d / steps;\n        }\n        return ans;",
    "        // Write your code here\n        // Return the number of jumps required\n        float jumps = 0;\n        if(d == 0) {\n            return jumps;\n        }\n        if(steps == 0) {\n            return -1;\n        }\n        if(steps >= d) {\n            return 1;\n        }\n        if(steps < d) {\n            jumps = (float)d/steps;\n            jumps = Math.round(jumps);\n            return jumps;\n        }\n        return jumps;",
    "        return (float) (Math.sqrt(2) * d - steps) / steps;",
    "        // Write your code here\n        float ans = 0;\n        if(steps == 0) return 0;\n        if(steps == 1) return d;\n        if(steps == 2) return d + 1;\n        if(steps == 3) return d + 2;\n        if(steps == 4) return d + 3;\n        if(steps == 5) return d + 4;\n        if(steps == 6) return d + 5;\n        if(steps == 7) return d + 6;\n        if(steps == 8) return d + 7;\n        if(steps == 9) return d + 8;\n        if(steps == 10) return d + 9;\n        if(steps == 11) return d + 10;\n        if(steps == 12) return d + 11;\n        if(steps == 13) return d + 12;\n        if(steps == 14) return d + 13;\n        if(steps == 15) return d + 14;\n        if(steps == 16) return d + 15;\n        if(steps == 17) return d + 16;\n        if(steps == 18) return d + 17;\n        if(steps == 19) return d + 18;\n        if(steps == 20) return d + 19;\n        if(steps == 21) return d + 20;\n        if(steps == 22) return d + 21;\n        if(steps == 23) return d + 22;\n        if(steps == 24) return d + 23;\n        if(steps == 25) return d + 24;\n        if(steps == 26) return d + 25;\n        if(steps == 27) return d + 26;\n        if(steps == 28) return d + 27;\n        if(steps == 29) return d + 28;\n        if(steps == 30) return d + 29;\n        if(steps == 31) return d + 30;\n        if(steps == 32) return d + 31;\n        if(steps == 33) return d + 32;\n        if(steps == 34) return d + 33;\n        if(steps == 35) return d + 34;\n        if(steps == 36) return d + 35;\n        if(steps == 37) return d + 36;\n        if(steps == 38)",
    "        float result = 0;\n        if (steps == 0) {\n            return result;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return",
    "        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        if (steps == d + 1) {\n            return 2;\n        }\n        if (steps == d + 2) {\n            return 3;\n        }\n        if (steps == d + 3) {\n            return 4;\n        }\n        if (steps == d + 4) {\n            return 5;\n        }\n        if (steps == d + 5) {\n            return 6;\n        }\n        if (steps == d + 6) {\n            return 7;\n        }\n        if (steps == d + 7) {\n            return 8;\n        }\n        if (steps == d + 8) {\n            return 9;\n        }\n        if (steps == d + 9) {\n            return 10;\n        }\n        if (steps == d + 10) {\n            return 11;\n        }\n        if (steps == d + 11) {\n            return 12;\n        }\n        if (steps == d + 12) {\n            return 13;\n        }\n        if (steps == d + 13) {\n            return 14;\n        }\n        if (steps == d + 14) {\n            return 15;\n        }\n        if (steps == d + 15) {\n            return 16;\n        }\n        if (steps == d + 16) {\n            return 17;\n        }\n        if (steps == d + 17) {\n            return 18;\n        }\n        if (steps == d + 18) {\n            return 19;\n        }\n        if (steps == d + 19) {\n            return 20;\n        }\n        if (steps == d + 20) {\n            return 21;\n        }\n        if (steps == d + 21) {\n            return 22;\n        }\n        if (steps == d + 22) {\n            return 23;\n        }\n        if (steps == d + 23) {\n            return 24;\n        }\n        if (steps == d + 24) {\n            return 25;\n        }\n        if (steps == d + 25) {\n            return 26;\n        }\n       ",
    "        // Write your code here.\n        float ans = 0;\n        if(steps == 0) return 0;\n        if(steps == 1) return d;\n        if(steps == 2) return d;\n        if(steps == 3) return d;\n        if(steps == 4) return d;\n        if(steps == 5) return d;\n        if(steps == 6) return d;\n        if(steps == 7) return d;\n        if(steps == 8) return d;\n        if(steps == 9) return d;\n        if(steps == 10) return d;\n        if(steps == 11) return d;\n        if(steps == 12) return d;\n        if(steps == 13) return d;\n        if(steps == 14) return d;\n        if(steps == 15) return d;\n        if(steps == 16) return d;\n        if(steps == 17) return d;\n        if(steps == 18) return d;\n        if(steps == 19) return d;\n        if(steps == 20) return d;\n        if(steps == 21) return d;\n        if(steps == 22) return d;\n        if(steps == 23) return d;\n        if(steps == 24) return d;\n        if(steps == 25) return d;\n        if(steps == 26) return d;\n        if(steps == 27) return d;\n        if(steps == 28) return d;\n        if(steps == 29) return d;\n        if(steps == 30) return d;\n        if(steps == 31) return d;\n        if(steps == 32) return d;\n        if(steps == 33) return d;\n        if(steps == 34) return d;\n        if(steps == 35) return d;\n        if(steps == 36) return d;\n        if(steps == 37) return d;\n        if(steps == 38) return d;\n        if(steps == 39) return d;\n        if(steps == 40) return d;\n        if(steps == 41) return d;\n        if(steps == 42) return d;\n        if(steps == 43) return d;\n        if(steps == 44) return d;\n       ",
    "        // Write your code here\n        // Return the number of jumps required\n        // Return -1 if the destination is not reachable\n        if(steps < d) return -1;\n        if(steps == d) return 1;\n        if(steps == d+1) return 2;\n        if(steps == d+2) return 3;\n        if(steps == d+3) return 4;\n        if(steps == d+4) return 5;\n        if(steps == d+5) return 6;\n        if(steps == d+6) return 7;\n        if(steps == d+7) return 8;\n        if(steps == d+8) return 9;\n        if(steps == d+9) return 10;\n        if(steps == d+10) return 11;\n        if(steps == d+11) return 12;\n        if(steps == d+12) return 13;\n        if(steps == d+13) return 14;\n        if(steps == d+14) return 15;\n        if(steps == d+15) return 16;\n        if(steps == d+16) return 17;\n        if(steps == d+17) return 18;\n        if(steps == d+18) return 19;\n        if(steps == d+19) return 20;\n        if(steps == d+20) return 21;\n        if(steps == d+21) return 22;\n        if(steps == d+22) return 23;\n        if(steps == d+23) return 24;\n        if(steps == d+24) return 25;\n        if(steps == d+25) return 26;\n        if(steps == d+26) return 27;\n        if(steps == d+27) return 28;\n        if(steps == d+28) return 29;\n        if(steps == d+29) return 30;\n        if(steps == d+30) return 31;\n        if(steps == d+31) return 32;\n        if(steps == d+32) return 33;\n        if(steps == d+33) return 34;\n        if(steps == d+34) return 35;\n        if(steps == d+35) return 36;\n        if(steps",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        float min = d;\n        for (int i = 1; i <= d; i++) {\n            float x = minJumps(steps - 1, i);\n            if (x < min) {\n                min = x;\n            }\n        }\n        return min;",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        float jumps = 0;\n        if(steps == 0) {\n            return jumps;\n        }\n        if(steps == 1) {\n            return jumps + 1;\n        }\n        if(steps == 2) {\n            return jumps + 2;\n        }\n        if(steps == 3) {\n            return jumps + 3;\n        }\n        if(steps == 4) {\n            return jumps + 4;\n        }\n        if(steps == 5) {\n            return jumps + 5;\n        }\n        if(steps == 6) {\n            return jumps + 6;\n        }\n        if(steps == 7) {\n            return jumps + 7;\n        }\n        if(steps == 8) {\n            return jumps + 8;\n        }\n        if(steps == 9) {\n            return jumps + 9;\n        }\n        if(steps == 10) {\n            return jumps + 10;\n        }\n        if(steps == 11) {\n            return jumps + 11;\n        }\n        if(steps == 12) {\n            return jumps + 12;\n        }\n        if(steps == 13) {\n            return jumps + 13;\n        }\n        if(steps == 14) {\n            return jumps + 14;\n        }\n        if(steps == 15) {\n            return jumps + 15;\n        }\n        if(steps == 16) {\n            return jumps + 16;\n        }\n        if(steps == 17) {\n            return jumps + 17;\n        }\n        if(steps == 18) {\n            return jumps + 18;\n        }\n        if(steps == 19) {\n            return jumps + 19;\n        }\n        if(steps == 20) {\n            return jumps + 20;\n        }\n        if(steps == 21) {\n            return jumps + 21;\n        }\n        if(steps == 22) {\n            return jumps + 22;\n        }\n        if(steps == 23) {\n            return jumps + 23;\n        }\n        if(steps == 24) {\n            return jumps + 24;\n        }\n        if(steps == 25) {\n            return jumps + 25",
    "        float ans = 0;\n        long x = 0;\n        long y = 0;\n        while (x != d) {\n            if (x + y < d) {\n                x++;\n                y++;\n            } else {\n                y--;\n            }\n            ans++;\n        }\n        return ans;",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1 && jumps + 1 < min) {\n                min = jumps + 1;\n            }\n        }\n        return min;",
    "        if (steps == 0) return 0;\n        if (steps == 1) return d;\n        if (steps == 2) return d + d;\n        if (steps == 3) return d + d + d;\n        if (steps == 4) return d + d + d + d;\n        if (steps == 5) return d + d + d + d + d;\n        if (steps == 6) return d + d + d + d + d + d;\n        if (steps == 7) return d + d + d + d + d + d + d;\n        if (steps == 8) return d + d + d + d + d + d + d + d;\n        if (steps == 9) return d + d + d + d + d + d + d + d + d;\n        if (steps == 10) return d + d + d + d + d + d + d + d + d + d;\n        if (steps == 11) return d + d + d + d + d + d + d + d + d + d + d;\n        if (steps == 12) return d + d + d + d + d + d + d + d + d + d + d + d;\n        if (steps == 13) return d + d + d + d + d + d + d + d + d + d + d + d + d;\n        if (steps == 14) return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        if (steps == 15) return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        if (steps == 16) return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        if (steps == 17) return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        if (steps == 18) return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d + d",
    "        // Write your code here\n        float result = 0;\n        if(steps == 0) {\n            return 0;\n        }\n        if(steps == 1) {\n            return 1;\n        }\n        if(steps == 2) {\n            return 2;\n        }\n        if(steps == 3) {\n            return 3;\n        }\n        if(steps == 4) {\n            return 4;\n        }\n        if(steps == 5) {\n            return 5;\n        }\n        if(steps == 6) {\n            return 6;\n        }\n        if(steps == 7) {\n            return 7;\n        }\n        if(steps == 8) {\n            return 8;\n        }\n        if(steps == 9) {\n            return 9;\n        }\n        if(steps == 10) {\n            return 10;\n        }\n        if(steps == 11) {\n            return 11;\n        }\n        if(steps == 12) {\n            return 12;\n        }\n        if(steps == 13) {\n            return 13;\n        }\n        if(steps == 14) {\n            return 14;\n        }\n        if(steps == 15) {\n            return 15;\n        }\n        if(steps == 16) {\n            return 16;\n        }\n        if(steps == 17) {\n            return 17;\n        }\n        if(steps == 18) {\n            return 18;\n        }\n        if(steps == 19) {\n            return 19;\n        }\n        if(steps == 20) {\n            return 20;\n        }\n        if(steps == 21) {\n            return 21;\n        }\n        if(steps == 22) {\n            return 22;\n        }\n        if(steps == 23) {\n            return 23;\n        }\n        if(steps == 24) {\n            return 24;\n        }\n        if(steps == 25) {\n            return 25;\n        }\n        if(steps == 26) {\n            return 26;\n        }\n        if(steps == 27) {\n            return 27;\n        }\n        if(steps == 28) {\n            return 28;\n        }\n        if(steps",
    "        // Write your code here\n        float jumps = 0;\n        if(steps == 0) {\n            return jumps;\n        }\n        if(steps == 1) {\n            return 1;\n        }\n        if(steps == 2) {\n            return 2;\n        }\n        if(steps == 3) {\n            return 3;\n        }\n        if(steps == 4) {\n            return 4;\n        }\n        if(steps == 5) {\n            return 5;\n        }\n        if(steps == 6) {\n            return 6;\n        }\n        if(steps == 7) {\n            return 7;\n        }\n        if(steps == 8) {\n            return 8;\n        }\n        if(steps == 9) {\n            return 9;\n        }\n        if(steps == 10) {\n            return 10;\n        }\n        if(steps == 11) {\n            return 11;\n        }\n        if(steps == 12) {\n            return 12;\n        }\n        if(steps == 13) {\n            return 13;\n        }\n        if(steps == 14) {\n            return 14;\n        }\n        if(steps == 15) {\n            return 15;\n        }\n        if(steps == 16) {\n            return 16;\n        }\n        if(steps == 17) {\n            return 17;\n        }\n        if(steps == 18) {\n            return 18;\n        }\n        if(steps == 19) {\n            return 19;\n        }\n        if(steps == 20) {\n            return 20;\n        }\n        if(steps == 21) {\n            return 21;\n        }\n        if(steps == 22) {\n            return 22;\n        }\n        if(steps == 23) {\n            return 23;\n        }\n        if(steps == 24) {\n            return 24;\n        }\n        if(steps == 25) {\n            return 25;\n        }\n        if(steps == 26) {\n            return 26;\n        }\n        if(steps == 27) {\n            return 27;\n        }\n        if(steps == 28) {\n            return 28;\n        }\n        if(steps",
    "        // Write your code here\n        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps",
    "        float minJumps = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (d == 0) {\n            return 0;\n        }\n        if (d == 1) {\n            return 1;\n        }\n        if (d == 2) {\n            return 2;\n        }\n        if (d == 3) {\n            return 3;\n        }\n        if (d == 4) {\n            return 4;\n        }\n        if (d == 5) {\n            return 5;\n        }\n        if (d == 6) {\n            return 6;\n        }\n        if (d == 7) {\n            return 7;\n        }\n        if (d == 8) {\n            return 8;\n        }\n        if (d == 9) {\n            return 9;\n        }\n        if (d == 10) {\n            return 10;\n        }\n        if (d == 11) {\n            return 11;\n        }\n        if (d == 12) {\n            return 12;\n        }\n        if (d == 13) {\n            return 13;\n        }\n        if (d == 14) {\n            return 14;\n        }\n        if (d == 15) {\n            return 15;\n        }\n        if (d == 16) {\n            return 16;\n        }\n        if (d == 17) {\n            return 17;\n        }\n        if (d == 18) {\n            return 18;\n        }\n        if (d == 19) {\n            return 19;\n        }\n        if (d == 20) {\n            return 20;\n        }\n        if (d == 21) {\n            return 21;\n        }\n        if (d == 22) {\n            return 22;\n        }\n        if (d == 23) {\n            return 23;\n        }\n        if (d == 24) {\n            return 24;\n        }\n        if (d == 25) {\n            return 25;\n        }\n        if (d == 26) {\n            return 26;\n        }\n        if (d == 27) {\n",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d + d;\n        }\n        if (steps == 3) {\n            return d + d + d;\n        }\n        if (steps == 4) {\n            return d + d + d + d;\n        }\n        if (steps == 5) {\n            return d + d + d + d + d;\n        }\n        if (steps == 6) {\n            return d + d + d + d + d + d;\n        }\n        if (steps == 7) {\n            return d + d + d + d + d + d + d;\n        }\n        if (steps == 8) {\n            return d + d + d + d + d + d + d + d;\n        }\n        if (steps == 9) {\n            return d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 10) {\n            return d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 11) {\n            return d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 12) {\n            return d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 13) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 14) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 15) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 16) {\n            return d + d + d + d + d + d + d + d + d +",
    "        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        if (steps == d + 1) {\n            return 2;\n        }\n        if (steps == d + 2) {\n            return 3;\n        }\n        if (steps == d + 3) {\n            return 4;\n        }\n        if (steps == d + 4) {\n            return 5;\n        }\n        if (steps == d + 5) {\n            return 6;\n        }\n        if (steps == d + 6) {\n            return 7;\n        }\n        if (steps == d + 7) {\n            return 8;\n        }\n        if (steps == d + 8) {\n            return 9;\n        }\n        if (steps == d + 9) {\n            return 10;\n        }\n        if (steps == d + 10) {\n            return 11;\n        }\n        if (steps == d + 11) {\n            return 12;\n        }\n        if (steps == d + 12) {\n            return 13;\n        }\n        if (steps == d + 13) {\n            return 14;\n        }\n        if (steps == d + 14) {\n            return 15;\n        }\n        if (steps == d + 15) {\n            return 16;\n        }\n        if (steps == d + 16) {\n            return 17;\n        }\n        if (steps == d + 17) {\n            return 18;\n        }\n        if (steps == d + 18) {\n            return 19;\n        }\n        if (steps == d + 19) {\n            return 20;\n        }\n        if (steps == d + 20) {\n            return 21;\n        }\n        if (steps == d + 21) {\n            return 22;\n        }\n        if (steps == d + 22) {\n            return 23;\n        }\n        if (steps == d + 23) {\n            return 24;\n        }\n        if (steps == d + 24) {\n            return 25;\n        }\n        if (steps == d + 25) {\n            return 26;\n        }\n       ",
    "        // Write your code here\n        float ans = 0;\n        if (steps == 0) {\n            return ans;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return (float) (d * d - d) / 2;\n        }\n        if (steps == 3) {\n            return (float) (d * d * d - 3 * d * d + 2 * d) / 6;\n        }\n        if (steps == 4) {\n            return (float) (d * d * d * d - 6 * d * d * d + 11 * d * d - 6 * d) / 24;\n        }\n        if (steps == 5) {\n            return (float) (d * d * d * d * d - 10 * d * d * d * d + 35 * d * d * d - 50 * d * d + 24 * d) / 120;\n        }\n        if (steps == 6) {\n            return (float) (d * d * d * d * d * d - 15 * d * d * d * d * d + 85 * d * d * d * d - 225 * d * d * d + 274 * d * d - 120 * d) / 720;\n        }\n        if (steps == 7) {\n            return (float) (d * d * d * d * d * d * d - 21 * d * d * d * d * d * d + 175 * d * d * d * d * d - 735 * d * d * d * d + 1624 * d * d * d - 1764 * d * d + 720 * d) / 5040;\n        }\n        if (steps == 8) {\n            return (float) (d * d * d * d * d * d * d * d - 28 * d * d * d * d * d * d * d + 322 * d * d * d * d * d * d - 1960 * d * d * d * d * d + 6769 * d * d * d * d - 13132 * d * d * d + 13068 * d * d - 5040 * d) / 40320;\n        }\n        if (steps == 9) {",
    "        float jumps = 0;\n        long x = 0;\n        long y = 0;\n        while (x < d) {\n            if (steps > 0) {\n                if (y == 0) {\n                    x++;\n                    steps--;\n                } else {\n                    y--;\n                    steps--;\n                }\n            } else {\n                jumps++;\n                steps = jumps;\n            }\n        }\n        return jumps;",
    "        float ans = 0;\n        if (steps == 0) {\n            return ans;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return",
    "        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        if (steps == d * 2) {\n            return 2;\n        }\n        if (steps == d * 3) {\n            return 3;\n        }\n        if (steps == d * 4) {\n            return 4;\n        }\n        if (steps == d * 5) {\n            return 5;\n        }\n        if (steps == d * 6) {\n            return 6;\n        }\n        if (steps == d * 7) {\n            return 7;\n        }\n        if (steps == d * 8) {\n            return 8;\n        }\n        if (steps == d * 9) {\n            return 9;\n        }\n        if (steps == d * 10) {\n            return 10;\n        }\n        if (steps == d * 11) {\n            return 11;\n        }\n        if (steps == d * 12) {\n            return 12;\n        }\n        if (steps == d * 13) {\n            return 13;\n        }\n        if (steps == d * 14) {\n            return 14;\n        }\n        if (steps == d * 15) {\n            return 15;\n        }\n        if (steps == d * 16) {\n            return 16;\n        }\n        if (steps == d * 17) {\n            return 17;\n        }\n        if (steps == d * 18) {\n            return 18;\n        }\n        if (steps == d * 19) {\n            return 19;\n        }\n        if (steps == d * 20) {\n            return 20;\n        }\n        if (steps == d * 21) {\n            return 21;\n        }\n        if (steps == d * 22) {\n            return 22;\n        }\n        if (steps == d * 23) {\n            return 23;\n        }\n        if (steps == d * 24) {\n            return 24;\n        }\n        if (steps == d * 25) {\n            return 25;\n        }\n        if (steps == d * 26) {\n            return 26;\n        }\n       ",
    "        if (d == 0) return 0;\n        if (steps == 0) return -1;\n        if (steps == 1) return d;\n        if (steps == 2) return (float) Math.sqrt(2 * d * d);\n        return (float) Math.sqrt(2 * d * d) + minJumps(steps - 2, d - 1);",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float jumps = minJumps(steps - 1, d - 1);\n        if (jumps == -1) {\n            jumps = minJumps(steps - 1, d + 1);\n        }\n        if (jumps == -1) {\n            return -1;\n        }\n        return jumps + 1;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d * d;\n        }\n        return (float) (d * d * Math.pow(2, steps - 2));",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d * d;\n        }\n        return d * d * d;",
    "        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (d == 0) {\n            return jumps;\n        }\n        if (steps == d) {\n            return jumps;\n        }\n        if (steps < d) {\n            return jumps;\n        }\n        if (steps > d) {\n            jumps = (float) (steps / d);\n            if (steps % d == 0) {\n                return jumps;\n            } else {\n                return jumps + 1;\n            }\n        }\n        return jumps;",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        return (float) (d / (steps - 1));",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return 29;\n        }\n       ",
    "        // Write your code here\n        return (float)Math.ceil((float)d/(float)steps);",
    "        // Write your code here\n        float ans = 0;\n        if(steps == 0)\n            return 0;\n        if(steps == 1)\n            return d;\n        if(steps == 2)\n            return d + 1;\n        if(steps == 3)\n            return d + 2;\n        if(steps == 4)\n            return d + 3;\n        if(steps == 5)\n            return d + 4;\n        if(steps == 6)\n            return d + 5;\n        if(steps == 7)\n            return d + 6;\n        if(steps == 8)\n            return d + 7;\n        if(steps == 9)\n            return d + 8;\n        if(steps == 10)\n            return d + 9;\n        if(steps == 11)\n            return d + 10;\n        if(steps == 12)\n            return d + 11;\n        if(steps == 13)\n            return d + 12;\n        if(steps == 14)\n            return d + 13;\n        if(steps == 15)\n            return d + 14;\n        if(steps == 16)\n            return d + 15;\n        if(steps == 17)\n            return d + 16;\n        if(steps == 18)\n            return d + 17;\n        if(steps == 19)\n            return d + 18;\n        if(steps == 20)\n            return d + 19;\n        if(steps == 21)\n            return d + 20;\n        if(steps == 22)\n            return d + 21;\n        if(steps == 23)\n            return d + 22;\n        if(steps == 24)\n            return d + 23;\n        if(steps == 25)\n            return d + 24;\n        if(steps == 26)\n            return d + 25;\n        if(steps == 27)\n            return d + 26;\n        if(steps == 28)\n            return d + 27;\n        if(steps == 29)\n            return d + 28;\n        if(steps == 30)\n            return d + 29;\n        if(steps == 31)\n            return d + 30;\n        if(steps == 32)\n            return d + 31;\n        if(steps == 33",
    "        // Write your code here\n        float min = 0;\n        if(d == 0) {\n            return 0;\n        }\n        if(steps == 0) {\n            return -1;\n        }\n        if(steps == 1) {\n            return 1;\n        }\n        if(steps == 2) {\n            return 1;\n        }\n        if(steps == 3) {\n            return 2;\n        }\n        if(steps == 4) {\n            return 2;\n        }\n        if(steps == 5) {\n            return 3;\n        }\n        if(steps == 6) {\n            return 3;\n        }\n        if(steps == 7) {\n            return 4;\n        }\n        if(steps == 8) {\n            return 4;\n        }\n        if(steps == 9) {\n            return 5;\n        }\n        if(steps == 10) {\n            return 5;\n        }\n        if(steps == 11) {\n            return 6;\n        }\n        if(steps == 12) {\n            return 6;\n        }\n        if(steps == 13) {\n            return 7;\n        }\n        if(steps == 14) {\n            return 7;\n        }\n        if(steps == 15) {\n            return 8;\n        }\n        if(steps == 16) {\n            return 8;\n        }\n        if(steps == 17) {\n            return 9;\n        }\n        if(steps == 18) {\n            return 9;\n        }\n        if(steps == 19) {\n            return 10;\n        }\n        if(steps == 20) {\n            return 10;\n        }\n        if(steps == 21) {\n            return 11;\n        }\n        if(steps == 22) {\n            return 11;\n        }\n        if(steps == 23) {\n            return 12;\n        }\n        if(steps == 24) {\n            return 12;\n        }\n        if(steps == 25) {\n            return 13;\n        }\n        if(steps == 26) {\n            return 13;\n        }\n        if(steps == 27) {\n            return 14;\n        }\n        if(",
    "        // Write your code here\n        float ans = 0;\n        if (steps <= d) {\n            ans = 1;\n        } else {\n            ans = (float) (Math.ceil((float) (steps - d) / (d - 1)) + 1);\n        }\n        return ans;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d + 1;\n        }\n        if (steps == 3) {\n            return d + 2;\n        }\n        if (steps == 4) {\n            return d + 3;\n        }\n        if (steps == 5) {\n            return d + 4;\n        }\n        if (steps == 6) {\n            return d + 5;\n        }\n        if (steps == 7) {\n            return d + 6;\n        }\n        if (steps == 8) {\n            return d + 7;\n        }\n        if (steps == 9) {\n            return d + 8;\n        }\n        if (steps == 10) {\n            return d + 9;\n        }\n        if (steps == 11) {\n            return d + 10;\n        }\n        if (steps == 12) {\n            return d + 11;\n        }\n        if (steps == 13) {\n            return d + 12;\n        }\n        if (steps == 14) {\n            return d + 13;\n        }\n        if (steps == 15) {\n            return d + 14;\n        }\n        if (steps == 16) {\n            return d + 15;\n        }\n        if (steps == 17) {\n            return d + 16;\n        }\n        if (steps == 18) {\n            return d + 17;\n        }\n        if (steps == 19) {\n            return d + 18;\n        }\n        if (steps == 20) {\n            return d + 19;\n        }\n        if (steps == 21) {\n            return d + 20;\n        }\n        if (steps == 22) {\n            return d + 21;\n        }\n        if (steps == 23) {\n            return d + 22;\n        }\n        if (steps == 24) {\n            return d + 23;\n        }\n        if (steps == 25) {\n            return d + 24;\n        }\n        if (steps == 26) {\n            return d + 25;\n        }\n        if",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        if(steps <= d) {\n            return 1;\n        }\n        return (float)Math.ceil((float)(steps - d) / (float)(d - 1));",
    "        // Write your code here\n        float res = 0;\n        if (d == 0) {\n            return res;\n        }\n        if (d == 1) {\n            return 1;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return (float) (d * d + d) / 2;\n        }\n        if (steps == 3) {\n            return (float) (d * d * d + 3 * d * d + 2 * d) / 6;\n        }\n        if (steps == 4) {\n            return (float) (d * d * d * d + 6 * d * d * d + 11 * d * d + 6 * d) / 24;\n        }\n        if (steps == 5) {\n            return (float) (d * d * d * d * d + 10 * d * d * d * d + 35 * d * d * d + 50 * d * d + 24 * d) / 120;\n        }\n        return res;",
    "        float jumps = 0;\n        for (long i = 0; i < steps; i++) {\n            jumps += (float) Math.pow(2, -i);\n        }\n        return jumps;",
    "        // Write your code here\n        float ans = 0;\n        long x = 0;\n        long y = 0;\n        while(x < d) {\n            float p = (float) (Math.random() * 100);\n            if(p < 50) {\n                x += 1;\n            } else {\n                y += 1;\n            }\n            ans += 1;\n        }\n        return ans;",
    "        // Write your code here\n        float a = (float)d/steps;\n        float b = (float)d/steps;\n        float c = (float)d/steps;\n        float x = (float)d/steps;\n        float y = (float)d/steps;\n        float z = (float)d/steps;\n        float min = Math.min(a, Math.min(b, c));\n        if(min == a) {\n            return x;\n        }\n        else if(min == b) {\n            return y;\n        }\n        else {\n            return z;\n        }",
    "        // Write your code here\n        float ans = 0;\n        if (d == 0) {\n            return ans;\n        }\n        if (steps == 0) {\n            return ans;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d / 2;\n        }\n        if (steps == 3) {\n            return d / 3;\n        }\n        if (steps == 4) {\n            return d / 4;\n        }\n        if (steps == 5) {\n            return d / 5;\n        }\n        if (steps == 6) {\n            return d / 6;\n        }\n        if (steps == 7) {\n            return d / 7;\n        }\n        if (steps == 8) {\n            return d / 8;\n        }\n        if (steps == 9) {\n            return d / 9;\n        }\n        if (steps == 10) {\n            return d / 10;\n        }\n        if (steps == 11) {\n            return d / 11;\n        }\n        if (steps == 12) {\n            return d / 12;\n        }\n        if (steps == 13) {\n            return d / 13;\n        }\n        if (steps == 14) {\n            return d / 14;\n        }\n        if (steps == 15) {\n            return d / 15;\n        }\n        if (steps == 16) {\n            return d / 16;\n        }\n        if (steps == 17) {\n            return d / 17;\n        }\n        if (steps == 18) {\n            return d / 18;\n        }\n        if (steps == 19) {\n            return d / 19;\n        }\n        if (steps == 20) {\n            return d / 20;\n        }\n        if (steps == 21) {\n            return d / 21;\n        }\n        if (steps == 22) {\n            return d / 22;\n        }\n        if (steps == 23) {\n            return d / 23;\n        }\n        if (steps == 24) {\n            return d / 24;\n        }\n        if (steps == 25) {\n",
    "        float jumps = 0;\n        long x = 0;\n        long y = 0;\n        while(x < d) {\n            jumps++;\n            x += steps;\n            steps++;\n        }\n        return jumps;",
    "        float x = (float) Math.sqrt(1 + 8 * steps);\n        float y = (float) Math.sqrt(1 + 8 * d);\n        float z = (float) Math.sqrt(1 + 8 * (steps - d));\n        float a = (x + 1) / 2;\n        float b = (y + 1) / 2;\n        float c = (z + 1) / 2;\n        return a - b + c;",
    "        float ans = 0;\n        if (d == 0) {\n            ans = 0;\n        } else if (d == 1) {\n            ans = 1;\n        } else {\n            if (steps >= d) {\n                ans = 1;\n            } else {\n                ans = (float) d / steps;\n            }\n        }\n        return ans;",
    "        // Write your code here\n        return 0;",
    "        float min = Float.MAX_VALUE;\n        for (int i = 0; i <= steps; i++) {\n            float x = (float) i;\n            float y = (float) (steps - i);\n            float dist = (float) Math.sqrt(x * x + y * y);\n            if (dist >= d) {\n                min = Math.min(min, (float) Math.ceil(dist / d));\n            }\n        }\n        return min;",
    "        // Write your code here\n        if (d == 0) return 0;\n        if (steps == 0) return -1;\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1 && jumps < min) min = jumps;\n        }\n        if (min == Float.MAX_VALUE) return -1;\n        return min + 1;",
    "        if (d == 0) return 0;\n        if (steps == 0) return -1;\n        if (steps == 1) return d;\n        if (steps == 2) return d / 2;\n        if (steps == 3) return d / 3;\n        if (steps == 4) return d / 4;\n        if (steps == 5) return d / 5;\n        if (steps == 6) return d / 6;\n        if (steps == 7) return d / 7;\n        if (steps == 8) return d / 8;\n        if (steps == 9) return d / 9;\n        if (steps == 10) return d / 10;\n        if (steps == 11) return d / 11;\n        if (steps == 12) return d / 12;\n        if (steps == 13) return d / 13;\n        if (steps == 14) return d / 14;\n        if (steps == 15) return d / 15;\n        if (steps == 16) return d / 16;\n        if (steps == 17) return d / 17;\n        if (steps == 18) return d / 18;\n        if (steps == 19) return d / 19;\n        if (steps == 20) return d / 20;\n        if (steps == 21) return d / 21;\n        if (steps == 22) return d / 22;\n        if (steps == 23) return d / 23;\n        if (steps == 24) return d / 24;\n        if (steps == 25) return d / 25;\n        if (steps == 26) return d / 26;\n        if (steps == 27) return d / 27;\n        if (steps == 28) return d / 28;\n        if (steps == 29) return d / 29;\n        if (steps == 30) return d / 30;\n        if (steps == 31) return d / 31;\n        if (steps == 32) return d / 32;\n        if (steps == 33) return d / 33;\n        if (steps == 34) return d / 34;\n        if (steps == 35) return d / 35;\n        if (steps == 36) return d / 36;\n        if (steps == 37) return d / 37;\n        if (steps == 38) return d",
    "        float min = Float.MAX_VALUE;\n        for (long i = 1; i <= steps; i++) {\n            float x = (float)i / steps;\n            float y = (float)Math.sqrt(1 - x * x);\n            float dist = (float)Math.sqrt(x * x + y * y);\n            if (dist >= d) {\n                min = Math.min(min, (float)i);\n            }\n        }\n        return min;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return 29;\n        }\n       ",
    "        return (float) (Math.sqrt(2 * d * d - d * d + steps * steps) - d + steps) / 2;",
    "        // Write your code here\n        float jumps = 0;\n        long x = 0;\n        long y = 0;\n        while (x < d) {\n            jumps++;\n            x = x + steps;\n            y = y + steps;\n            if (x > d) {\n                jumps++;\n                break;\n            }\n            if (y > d) {\n                jumps++;\n                break;\n            }\n        }\n        return jumps;",
    "        float minJumps = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n",
    "        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float x = (float) i;\n            float y = (float) (steps - i);\n            float dist = (float) Math.sqrt(x * x + y * y);\n            if (dist <= d) {\n                min = Math.min(min, Math.max(x, y));\n            }\n        }\n        return min;",
    "        float ans = 0;\n        if (steps == 0) {\n            return ans;\n        }\n        if (steps == 1) {\n            return (float) (d / 2);\n        }\n        if (steps == 2) {\n            return (float) (d / 4);\n        }\n        if (steps == 3) {\n            return (float) (d / 8);\n        }\n        if (steps == 4) {\n            return (float) (d / 16);\n        }\n        if (steps == 5) {\n            return (float) (d / 32);\n        }\n        if (steps == 6) {\n            return (float) (d / 64);\n        }\n        if (steps == 7) {\n            return (float) (d / 128);\n        }\n        if (steps == 8) {\n            return (float) (d / 256);\n        }\n        if (steps == 9) {\n            return (float) (d / 512);\n        }\n        if (steps == 10) {\n            return (float) (d / 1024);\n        }\n        if (steps == 11) {\n            return (float) (d / 2048);\n        }\n        if (steps == 12) {\n            return (float) (d / 4096);\n        }\n        if (steps == 13) {\n            return (float) (d / 8192);\n        }\n        if (steps == 14) {\n            return (float) (d / 16384);\n        }\n        if (steps == 15) {\n            return (float) (d / 32768);\n        }\n        if (steps == 16) {\n            return (float) (d / 65536);\n        }\n        if (steps == 17) {\n            return (float) (d / 131072);\n        }\n        if (steps == 18) {\n            return (float) (d / 262144);\n        }\n        if (steps == 19) {\n            return (float) (d / 524288);\n        }\n        if (steps == 20) {\n            return (float) (d / 1048576);\n        }\n        if (steps == 21) {\n            return (float) (d",
    "        // Write your code here\n        float ans = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d + d;\n        }\n        if (steps == 3) {\n            return d + d + d;\n        }\n        if (steps == 4) {\n            return d + d + d + d;\n        }\n        if (steps == 5) {\n            return d + d + d + d + d;\n        }\n        if (steps == 6) {\n            return d + d + d + d + d + d;\n        }\n        if (steps == 7) {\n            return d + d + d + d + d + d + d;\n        }\n        if (steps == 8) {\n            return d + d + d + d + d + d + d + d;\n        }\n        if (steps == 9) {\n            return d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 10) {\n            return d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 11) {\n            return d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 12) {\n            return d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 13) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 14) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 15) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 16) {\n            return d + d +",
    "        // Write your code here\n        float ans = 0;\n        if(steps == 0)\n            return ans;\n        if(steps == 1)\n            return d;\n        if(steps == 2)\n            return d + d/2;\n        if(steps == 3)\n            return d + d/2 + d/4;\n        if(steps == 4)\n            return d + d/2 + d/4 + d/8;\n        if(steps == 5)\n            return d + d/2 + d/4 + d/8 + d/16;\n        if(steps == 6)\n            return d + d/2 + d/4 + d/8 + d/16 + d/32;\n        if(steps == 7)\n            return d + d/2 + d/4 + d/8 + d/16 + d/32 + d/64;\n        if(steps == 8)\n            return d + d/2 + d/4 + d/8 + d/16 + d/32 + d/64 + d/128;\n        if(steps == 9)\n            return d + d/2 + d/4 + d/8 + d/16 + d/32 + d/64 + d/128 + d/256;\n        if(steps == 10)\n            return d + d/2 + d/4 + d/8 + d/16 + d/32 + d/64 + d/128 + d/256 + d/512;\n        if(steps == 11)\n            return d + d/2 + d/4 + d/8 + d/16 + d/32 + d/64 + d/128 + d/256 + d/512 + d/1024;\n        if(steps == 12)\n            return d + d/2 + d/4 + d/8 + d/16 + d/32 + d/64 + d/128 + d/256 + d/512 + d/1024 + d/2048;\n        if(steps == 13)\n            return d + d/2 + d/4 + d/8 + d/16 + d/32 + d/64 + d/128 + d/256 + d/512 + d/1024 + d/2048 + d/4096;\n",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, Math.abs(d - i));\n            if (jumps != -1 && jumps < min) {\n                min = jumps;\n            }\n        }\n        return min == Float.MAX_VALUE ? -1 : min + 1;",
    "        float jumps = 0;\n        long x = 0;\n        long y = 0;\n        while(x != d) {\n            if(x < d) {\n                x += steps;\n                jumps += 1;\n            }\n            else {\n                x -= steps;\n                jumps += 1;\n            }\n            if(y < d) {\n                y += steps;\n                jumps += 1;\n            }\n            else {\n                y -= steps;\n                jumps += 1;\n            }\n        }\n        return jumps;",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1 && jumps + 1 < min) {\n                min = jumps + 1;\n            }\n        }\n        return min;",
    "        if (d == 0) return 0;\n        if (steps == 0) return -1;\n        if (d == steps) return 1;\n        if (d > steps) return -1;\n        return (float) (Math.sqrt(2) * d) / steps;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return 29;\n        }\n       ",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        if (steps == 0) {\n            return 0;\n        }\n        if (d == 0) {\n            return 0;\n        }\n        if (steps < d) {\n            return 0;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= d; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != 0) {\n                jumps += 1;\n            }\n            if (jumps < min) {\n                min = jumps;\n            }\n        }\n        return min;",
    "        // Write your code here\n        // Return the number of jumps required\n        return (float) (Math.sqrt(2 * steps) - Math.sqrt(2 * d));",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        return (float)(Math.sqrt(2*d*d - d*d + steps*steps) - d)/steps;",
    "        float jumps = 0;\n        for (int i = 0; i < d; i++) {\n            jumps += Math.pow(2, i);\n        }\n        return jumps;",
    "        // Write your code here\n        float ans = 0;\n        if(steps == 0)\n            return 0;\n        if(steps == 1)\n            return d;\n        if(steps == 2)\n            return d + 1;\n        if(steps == 3)\n            return d + 2;\n        if(steps == 4)\n            return d + 3;\n        if(steps == 5)\n            return d + 4;\n        if(steps == 6)\n            return d + 5;\n        if(steps == 7)\n            return d + 6;\n        if(steps == 8)\n            return d + 7;\n        if(steps == 9)\n            return d + 8;\n        if(steps == 10)\n            return d + 9;\n        if(steps == 11)\n            return d + 10;\n        if(steps == 12)\n            return d + 11;\n        if(steps == 13)\n            return d + 12;\n        if(steps == 14)\n            return d + 13;\n        if(steps == 15)\n            return d + 14;\n        if(steps == 16)\n            return d + 15;\n        if(steps == 17)\n            return d + 16;\n        if(steps == 18)\n            return d + 17;\n        if(steps == 19)\n            return d + 18;\n        if(steps == 20)\n            return d + 19;\n        if(steps == 21)\n            return d + 20;\n        if(steps == 22)\n            return d + 21;\n        if(steps == 23)\n            return d + 22;\n        if(steps == 24)\n            return d + 23;\n        if(steps == 25)\n            return d + 24;\n        if(steps == 26)\n            return d + 25;\n        if(steps == 27)\n            return d + 26;\n        if(steps == 28)\n            return d + 27;\n        if(steps == 29)\n            return d + 28;\n        if(steps == 30)\n            return d + 29;\n        if(steps == 31)\n            return d + 30;\n        if(steps == 32)\n            return d + 31;\n        if(steps == 33",
    "        if (steps <= d) {\n            return 1;\n        }\n        if (steps < 2 * d) {\n            return 2;\n        }\n        return (float) (Math.ceil((steps - d) / (2 * d - 1)) + 1);",
    "        float minJumps = (float)Math.ceil((float)d / (float)steps);\n        return minJumps;",
    "        // Write your code here\n        float jumps = 0;\n        long x = 0;\n        long y = 0;\n        while (x != d) {\n            if (x + y == steps) {\n                jumps++;\n                x++;\n                y = 0;\n            } else if (x + y < steps) {\n                y++;\n            } else {\n                jumps++;\n                x++;\n                y = 0;\n            }\n        }\n        return jumps;",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        return (float) (Math.sqrt(2) * d) / steps;",
    "        if (d == 0) return 0;\n        if (steps == 0) return -1;\n        if (steps == 1) return d;\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= d; i++) {\n            float jumps = 1 + Math.max(minJumps(steps - 1, i - 1), minJumps(steps, d - i));\n            if (jumps < min) min = jumps;\n        }\n        return min;",
    "        // Write your code here\n        return (float) (Math.sqrt(2 * steps) - Math.sqrt(2 * (steps - d)));",
    "        // Write your code here\n        float ans = 0;\n        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float x = minJumps(steps - i, d - i);\n            if (x != -1 && x + 1 < min) {\n                min = x + 1;\n            }\n        }\n        return min;",
    "        float ans = 0;\n        if (d == 0) {\n            return ans;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return (float) (d / 2.0);\n        }\n        if (steps == 3) {\n            return (float) (d / 3.0);\n        }\n        if (steps == 4) {\n            return (float) (d / 4.0);\n        }\n        if (steps == 5) {\n            return (float) (d / 5.0);\n        }\n        if (steps == 6) {\n            return (float) (d / 6.0);\n        }\n        if (steps == 7) {\n            return (float) (d / 7.0);\n        }\n        if (steps == 8) {\n            return (float) (d / 8.0);\n        }\n        if (steps == 9) {\n            return (float) (d / 9.0);\n        }\n        if (steps == 10) {\n            return (float) (d / 10.0);\n        }\n        if (steps == 11) {\n            return (float) (d / 11.0);\n        }\n        if (steps == 12) {\n            return (float) (d / 12.0);\n        }\n        if (steps == 13) {\n            return (float) (d / 13.0);\n        }\n        if (steps == 14) {\n            return (float) (d / 14.0);\n        }\n        if (steps == 15) {\n            return (float) (d / 15.0);\n        }\n        if (steps == 16) {\n            return (float) (d / 16.0);\n        }\n        if (steps == 17) {\n            return (float) (d / 17.0);\n        }\n        if (steps == 18) {\n            return (float) (d / 18.0);\n        }\n        if (steps == 19) {\n            return (float) (d / 19.0);\n        }\n        if",
    "        // Write your code here\n        return (float)Math.ceil((d - Math.sqrt(d * d - steps)) / 2);",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return (float)d;\n        }\n        if (steps == 2) {\n            return (float)Math.sqrt(2 * d * d);\n        }\n        return (float)Math.sqrt(2 * d * d) + (float)Math.sqrt(2 * (steps - 2) * d * d);",
    "        if(d == 0) return 0;\n        if(steps == 0) return -1;\n        if(steps == 1) return 1;\n        if(steps == 2) return 0.5f;\n        if(steps == 3) return 0.75f;\n        if(steps == 4) return 0.625f;\n        if(steps == 5) return 0.6875f;\n        if(steps == 6) return 0.65625f;\n        if(steps == 7) return 0.671875f;\n        if(steps == 8) return 0.6640625f;\n        if(steps == 9) return 0.66796875f;\n        if(steps == 10) return 0.666015625f;\n        if(steps == 11) return 0.66650390625f;\n        if(steps == 12) return 0.6663818359375f;\n        if(steps == 13) return 0.666412353515625f;\n        if(steps == 14) return 0.6663894653320312f;\n        if(steps == 15) return 0.6663913726806640f;\n        if(steps == 16) return 0.6663913726806640f;\n        if(steps == 17) return 0.6663913726806640f;\n        if(steps == 18) return 0.6663913726806640f;\n        if(steps == 19) return 0.6663913726806640f;\n        if(steps == 20) return 0.6663913726806640f;\n        if(steps == 21) return 0.6663913726806640f;\n        if(steps == 22) return 0.6663913726806640f;\n        if(steps == 23) return 0.6663913726806640f;\n        if(steps == 24) return 0.6663913726806640f;\n        if(steps == 25) return 0.6663913726806640f;\n        if(steps == 26) return 0.6663913726806640f;\n        if(steps == 27) return 0.6663913726806640f;\n        if",
    "        float jumps = 0;\n        for(int i = 0; i < d; i++) {\n            jumps += (float) Math.pow(2, i);\n        }\n        return jumps;",
    "        float jumps = (float) Math.ceil((float) d / (float) steps);\n        return jumps;",
    "        // Write your code here\n        float jumps = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d * d;\n        }\n        if (steps == 3) {\n            return d * d * d;\n        }\n        return (float) Math.pow(d, steps);",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float minJumps = minJumps(steps - 1, d - 1);\n        float minJumps2 = minJumps(steps - 1, d);\n        if (minJumps == -1 && minJumps2 == -1) {\n            return -1;\n        }\n        if (minJumps == -1) {\n            return minJumps2 + 1;\n        }\n        if (minJumps2 == -1) {\n            return minJumps + 1;\n        }\n        return Math.min(minJumps, minJumps2) + 1;",
    "        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        if (steps == d + 1) {\n            return 2;\n        }\n        if (steps == d + 2) {\n            return 3;\n        }\n        if (steps == d + 3) {\n            return 4;\n        }\n        if (steps == d + 4) {\n            return 5;\n        }\n        if (steps == d + 5) {\n            return 6;\n        }\n        if (steps == d + 6) {\n            return 7;\n        }\n        if (steps == d + 7) {\n            return 8;\n        }\n        if (steps == d + 8) {\n            return 9;\n        }\n        if (steps == d + 9) {\n            return 10;\n        }\n        if (steps == d + 10) {\n            return 11;\n        }\n        if (steps == d + 11) {\n            return 12;\n        }\n        if (steps == d + 12) {\n            return 13;\n        }\n        if (steps == d + 13) {\n            return 14;\n        }\n        if (steps == d + 14) {\n            return 15;\n        }\n        if (steps == d + 15) {\n            return 16;\n        }\n        if (steps == d + 16) {\n            return 17;\n        }\n        if (steps == d + 17) {\n            return 18;\n        }\n        if (steps == d + 18) {\n            return 19;\n        }\n        if (steps == d + 19) {\n            return 20;\n        }\n        if (steps == d + 20) {\n            return 21;\n        }\n        if (steps == d + 21) {\n            return 22;\n        }\n        if (steps == d + 22) {\n            return 23;\n        }\n        if (steps == d + 23) {\n            return 24;\n        }\n        if (steps == d + 24) {\n            return 25;\n        }\n        if (steps == d + 25) {\n            return 26;\n        }\n       ",
    "        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        if (d == 1) {\n            return 1;\n        }\n        if (d == 2) {\n            return 2;\n        }\n        if (steps == 1) {\n            return -1;\n        }\n        if (steps == 2) {\n            return -1;\n        }\n        if (steps == 3) {\n            return -1;\n        }\n        if (steps == 4) {\n            return -1;\n        }\n        if (steps == 5) {\n            return -1;\n        }\n        if (steps == 6) {\n            return -1;\n        }\n        if (steps == 7) {\n            return -1;\n        }\n        if (steps == 8) {\n            return -1;\n        }\n        if (steps == 9) {\n            return -1;\n        }\n        if (steps == 10) {\n            return -1;\n        }\n        if (steps == 11) {\n            return -1;\n        }\n        if (steps == 12) {\n            return -1;\n        }\n        if (steps == 13) {\n            return -1;\n        }\n        if (steps == 14) {\n            return -1;\n        }\n        if (steps == 15) {\n            return -1;\n        }\n        if (steps == 16) {\n            return -1;\n        }\n        if (steps == 17) {\n            return -1;\n        }\n        if (steps == 18) {\n            return -1;\n        }\n        if (steps == 19) {\n            return -1;\n        }\n        if (steps == 20) {\n            return -1;\n        }\n        if (steps == 21) {\n            return -1;\n        }\n        if (steps == 22) {\n            return -1;\n        }\n        if (steps == 23) {\n            return -1;\n        }\n        if (steps == 24) {\n            return -1;\n        }\n        if (steps == 25) {\n           ",
    "        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        if (steps == d + 1) {\n            return 2;\n        }\n        if (steps == d + 2) {\n            return 3;\n        }\n        if (steps == d + 3) {\n            return 4;\n        }\n        if (steps == d + 4) {\n            return 5;\n        }\n        if (steps == d + 5) {\n            return 6;\n        }\n        if (steps == d + 6) {\n            return 7;\n        }\n        if (steps == d + 7) {\n            return 8;\n        }\n        if (steps == d + 8) {\n            return 9;\n        }\n        if (steps == d + 9) {\n            return 10;\n        }\n        if (steps == d + 10) {\n            return 11;\n        }\n        if (steps == d + 11) {\n            return 12;\n        }\n        if (steps == d + 12) {\n            return 13;\n        }\n        if (steps == d + 13) {\n            return 14;\n        }\n        if (steps == d + 14) {\n            return 15;\n        }\n        if (steps == d + 15) {\n            return 16;\n        }\n        if (steps == d + 16) {\n            return 17;\n        }\n        if (steps == d + 17) {\n            return 18;\n        }\n        if (steps == d + 18) {\n            return 19;\n        }\n        if (steps == d + 19) {\n            return 20;\n        }\n        if (steps == d + 20) {\n            return 21;\n        }\n        if (steps == d + 21) {\n            return 22;\n        }\n        if (steps == d + 22) {\n            return 23;\n        }\n        if (steps == d + 23) {\n            return 24;\n        }\n        if (steps == d + 24) {\n            return 25;\n        }\n        if (steps == d + 25) {\n            return 26;\n        }\n       ",
    "        float ans = 0;\n        if (steps <= d) {\n            ans = 1;\n        } else {\n            ans = (float) (Math.ceil((float) (steps - d) / (d - 1)) + 1);\n        }\n        return ans;",
    "        // Write your code here\n        // Return the number of jumps required\n        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return jumps + 1;\n        }\n        if (steps == 2) {\n            return jumps + 2;\n        }\n        if (steps == 3) {\n            return jumps + 3;\n        }\n        if (steps == 4) {\n            return jumps + 4;\n        }\n        if (steps == 5) {\n            return jumps + 5;\n        }\n        if (steps == 6) {\n            return jumps + 6;\n        }\n        if (steps == 7) {\n            return jumps + 7;\n        }\n        if (steps == 8) {\n            return jumps + 8;\n        }\n        if (steps == 9) {\n            return jumps + 9;\n        }\n        if (steps == 10) {\n            return jumps + 10;\n        }\n        if (steps == 11) {\n            return jumps + 11;\n        }\n        if (steps == 12) {\n            return jumps + 12;\n        }\n        if (steps == 13) {\n            return jumps + 13;\n        }\n        if (steps == 14) {\n            return jumps + 14;\n        }\n        if (steps == 15) {\n            return jumps + 15;\n        }\n        if (steps == 16) {\n            return jumps + 16;\n        }\n        if (steps == 17) {\n            return jumps + 17;\n        }\n        if (steps == 18) {\n            return jumps + 18;\n        }\n        if (steps == 19) {\n            return jumps + 19;\n        }\n        if (steps == 20) {\n            return jumps + 20;\n        }\n        if (steps == 21) {\n            return jumps + 21;\n        }\n        if (steps == 22) {\n            return jumps + 22;\n        }\n        if (steps == 23) {\n            return jumps + 23;\n        }\n        if (steps == 24) {\n            return jumps + 24;\n        }\n        if (steps == 25) {\n            return jumps + 25;",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        if (steps == d * 2) {\n            return 2;\n        }\n        if (steps == d * 3) {\n            return 3;\n        }\n        if (steps == d * 4) {\n            return 4;\n        }\n        if (steps == d * 5) {\n            return 5;\n        }\n        if (steps == d * 6) {\n            return 6;\n        }\n        if (steps == d * 7) {\n            return 7;\n        }\n        if (steps == d * 8) {\n            return 8;\n        }\n        if (steps == d * 9) {\n            return 9;\n        }\n        if (steps == d * 10) {\n            return 10;\n        }\n        if (steps == d * 11) {\n            return 11;\n        }\n        if (steps == d * 12) {\n            return 12;\n        }\n        if (steps == d * 13) {\n            return 13;\n        }\n        if (steps == d * 14) {\n            return 14;\n        }\n        if (steps == d * 15) {\n            return 15;\n        }\n        if (steps == d * 16) {\n            return 16;\n        }\n        if (steps == d * 17) {\n            return 17;\n        }\n        if (steps == d * 18) {\n            return 18;\n        }\n        if (steps == d * 19) {\n            return 19;\n        }\n        if (steps == d * 20) {\n            return 20;\n        }\n        if (steps == d * 21) {\n            return 21;\n        }\n        if (steps == d * 22) {\n            return 22;\n        }\n        if (steps == d * 23) {\n            return 23;\n        }\n        if (steps == d * 24) {\n            return 24;\n        }\n        if (steps == d * 25) {\n            return 25;\n        }\n        if (",
    "        // Write your code here\n        // Return the number of jumps required\n        float jumps = (float) Math.ceil((d - Math.sqrt(d * d - steps)) / steps);\n        return jumps;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return 29;\n        }\n       ",
    "        // Write your code here\n        float ans = 0;\n        if(steps == 0){\n            return ans;\n        }\n        if(steps == 1){\n            return d;\n        }\n        if(steps == 2){\n            return (float)Math.sqrt(2*d*d);\n        }\n        if(steps == 3){\n            return (float)Math.sqrt(3*d*d);\n        }\n        if(steps == 4){\n            return (float)Math.sqrt(4*d*d);\n        }\n        if(steps == 5){\n            return (float)Math.sqrt(5*d*d);\n        }\n        if(steps == 6){\n            return (float)Math.sqrt(6*d*d);\n        }\n        if(steps == 7){\n            return (float)Math.sqrt(7*d*d);\n        }\n        if(steps == 8){\n            return (float)Math.sqrt(8*d*d);\n        }\n        if(steps == 9){\n            return (float)Math.sqrt(9*d*d);\n        }\n        if(steps == 10){\n            return (float)Math.sqrt(10*d*d);\n        }\n        if(steps == 11){\n            return (float)Math.sqrt(11*d*d);\n        }\n        if(steps == 12){\n            return (float)Math.sqrt(12*d*d);\n        }\n        if(steps == 13){\n            return (float)Math.sqrt(13*d*d);\n        }\n        if(steps == 14){\n            return (float)Math.sqrt(14*d*d);\n        }\n        if(steps == 15){\n            return (float)Math.sqrt(15*d*d);\n        }\n        if(steps == 16){\n            return (float)Math.sqrt(16*d*d);\n        }\n        if(steps == 17){\n            return (float)Math.sqrt(17*d*d);\n        }\n        if(steps == 18){\n            return (float)Math.sqrt",
    "        // Write your code here\n        // Return the minimum number of jumps required\n        if(steps == 0) return 0;\n        if(steps == 1) return 1;\n        if(steps == 2) return 2;\n        if(steps == 3) return 3;\n        if(steps == 4) return 4;\n        if(steps == 5) return 5;\n        if(steps == 6) return 6;\n        if(steps == 7) return 7;\n        if(steps == 8) return 8;\n        if(steps == 9) return 9;\n        if(steps == 10) return 10;\n        if(steps == 11) return 11;\n        if(steps == 12) return 12;\n        if(steps == 13) return 13;\n        if(steps == 14) return 14;\n        if(steps == 15) return 15;\n        if(steps == 16) return 16;\n        if(steps == 17) return 17;\n        if(steps == 18) return 18;\n        if(steps == 19) return 19;\n        if(steps == 20) return 20;\n        if(steps == 21) return 21;\n        if(steps == 22) return 22;\n        if(steps == 23) return 23;\n        if(steps == 24) return 24;\n        if(steps == 25) return 25;\n        if(steps == 26) return 26;\n        if(steps == 27) return 27;\n        if(steps == 28) return 28;\n        if(steps == 29) return 29;\n        if(steps == 30) return 30;\n        if(steps == 31) return 31;\n        if(steps == 32) return 32;\n        if(steps == 33) return 33;\n        if(steps == 34) return 34;\n        if(steps == 35) return 35;\n        if(steps == 36) return 36;\n        if(steps == 37) return 37;\n        if(steps == 38) return 38;\n        if(steps == 39) return 39;\n        if(steps == 40) return 40;\n        if(steps == 41) return 41;\n        if(steps == 42) return 42;\n        if(steps == 43) return 43;\n        if(steps == 44) return 44;",
    "        if (steps < d) {\n            return -1;\n        }\n        if (steps == d) {\n            return 1;\n        }\n        if (steps == d + 1) {\n            return 2;\n        }\n        if (steps == d + 2) {\n            return 3;\n        }\n        if (steps == d + 3) {\n            return 4;\n        }\n        if (steps == d + 4) {\n            return 5;\n        }\n        if (steps == d + 5) {\n            return 6;\n        }\n        if (steps == d + 6) {\n            return 7;\n        }\n        if (steps == d + 7) {\n            return 8;\n        }\n        if (steps == d + 8) {\n            return 9;\n        }\n        if (steps == d + 9) {\n            return 10;\n        }\n        if (steps == d + 10) {\n            return 11;\n        }\n        if (steps == d + 11) {\n            return 12;\n        }\n        if (steps == d + 12) {\n            return 13;\n        }\n        if (steps == d + 13) {\n            return 14;\n        }\n        if (steps == d + 14) {\n            return 15;\n        }\n        if (steps == d + 15) {\n            return 16;\n        }\n        if (steps == d + 16) {\n            return 17;\n        }\n        if (steps == d + 17) {\n            return 18;\n        }\n        if (steps == d + 18) {\n            return 19;\n        }\n        if (steps == d + 19) {\n            return 20;\n        }\n        if (steps == d + 20) {\n            return 21;\n        }\n        if (steps == d + 21) {\n            return 22;\n        }\n        if (steps == d + 22) {\n            return 23;\n        }\n        if (steps == d + 23) {\n            return 24;\n        }\n        if (steps == d + 24) {\n            return 25;\n        }\n        if (steps == d + 25) {\n            return 26;\n        }\n       ",
    "        // Write your code here\n        // Return the minimum number of jumps required to reach the destination\n        float jumps = 0;\n        float x = 0;\n        float y = 0;\n        while (x < d) {\n            x += steps;\n            jumps++;\n            if (x > d) {\n                x -= steps;\n                jumps--;\n                break;\n            }\n        }\n        while (y < d) {\n            y += steps;\n            jumps++;\n            if (y > d) {\n                y -= steps;\n                jumps--;\n                break;\n            }\n        }\n        if (x != d || y != d) {\n            jumps += Math.min(Math.abs(x - d), Math.abs(y - d));\n        }\n        return jumps;",
    "        // Write your code here\n        return 0;",
    "        float minJumps = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n",
    "        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return",
    "        // Write your code here\n        float jumps = 0;\n        if(steps <= d) {\n            jumps = 1;\n        } else {\n            jumps = (float) Math.ceil((float) steps / (float) d);\n        }\n        return jumps;",
    "        float ans = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d + d;\n        }\n        if (steps == 3) {\n            return d + d + d;\n        }\n        if (steps == 4) {\n            return d + d + d + d;\n        }\n        if (steps == 5) {\n            return d + d + d + d + d;\n        }\n        if (steps == 6) {\n            return d + d + d + d + d + d;\n        }\n        if (steps == 7) {\n            return d + d + d + d + d + d + d;\n        }\n        if (steps == 8) {\n            return d + d + d + d + d + d + d + d;\n        }\n        if (steps == 9) {\n            return d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 10) {\n            return d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 11) {\n            return d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 12) {\n            return d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 13) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 14) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 15) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if (steps == 16) {\n            return d + d + d + d + d + d",
    "        // Write your code here.\n        float ans = 0;\n        if (steps <= d) {\n            ans = 1;\n        } else {\n            ans = (float) (Math.ceil(steps / (d * 1.0)));\n        }\n        return ans;",
    "        if (steps <= d) {\n            return 1;\n        }\n        if (steps == d + 1) {\n            return 2;\n        }\n        if (steps == d + 2) {\n            return 3;\n        }\n        if (steps == d + 3) {\n            return 4;\n        }\n        if (steps == d + 4) {\n            return 5;\n        }\n        if (steps == d + 5) {\n            return 6;\n        }\n        if (steps == d + 6) {\n            return 7;\n        }\n        if (steps == d + 7) {\n            return 8;\n        }\n        if (steps == d + 8) {\n            return 9;\n        }\n        if (steps == d + 9) {\n            return 10;\n        }\n        if (steps == d + 10) {\n            return 11;\n        }\n        if (steps == d + 11) {\n            return 12;\n        }\n        if (steps == d + 12) {\n            return 13;\n        }\n        if (steps == d + 13) {\n            return 14;\n        }\n        if (steps == d + 14) {\n            return 15;\n        }\n        if (steps == d + 15) {\n            return 16;\n        }\n        if (steps == d + 16) {\n            return 17;\n        }\n        if (steps == d + 17) {\n            return 18;\n        }\n        if (steps == d + 18) {\n            return 19;\n        }\n        if (steps == d + 19) {\n            return 20;\n        }\n        if (steps == d + 20) {\n            return 21;\n        }\n        if (steps == d + 21) {\n            return 22;\n        }\n        if (steps == d + 22) {\n            return 23;\n        }\n        if (steps == d + 23) {\n            return 24;\n        }\n        if (steps == d + 24) {\n            return 25;\n        }\n        if (steps == d + 25) {\n            return 26;\n        }\n        if (steps == d + 26) {\n            return 27;\n        }\n",
    "        // Write your code here.\n        float jumps = 0;\n        if(steps <= d) {\n            jumps = 1;\n        } else {\n            jumps = (float) Math.ceil((float)steps / (float)d);\n        }\n        return jumps;",
    "        return (float) (Math.sqrt(2 * steps + d * d) - d) / 2;",
    "        // Write your code here\n        float jumps = 0;\n        float x = 0;\n        float y = 0;\n        float x1 = 0;\n        float y1 = 0;\n        float x2 = 0;\n        float y2 = 0;\n        float x3 = 0;\n        float y3 = 0;\n        float x4 = 0;\n        float y4 = 0;\n        float x5 = 0;\n        float y5 = 0;\n        float x6 = 0;\n        float y6 = 0;\n        float x7 = 0;\n        float y7 = 0;\n        float x8 = 0;\n        float y8 = 0;\n        float x9 = 0;\n        float y9 = 0;\n        float x10 = 0;\n        float y10 = 0;\n        float x11 = 0;\n        float y11 = 0;\n        float x12 = 0;\n        float y12 = 0;\n        float x13 = 0;\n        float y13 = 0;\n        float x14 = 0;\n        float y14 = 0;\n        float x15 = 0;\n        float y15 = 0;\n        float x16 = 0;\n        float y16 = 0;\n        float x17 = 0;\n        float y17 = 0;\n        float x18 = 0;\n        float y18 = 0;\n        float x19 = 0;\n        float y19 = 0;\n        float x20 = 0;\n        float y20 = 0;\n        float x21 = 0;\n        float y21 = 0;\n        float x22 = 0;\n        float y22 = 0;\n        float x23 = 0;\n        float y23 = 0;\n        float x24 = 0;\n        float y24 = 0;\n        float x25 = 0;\n        float y25 = 0;\n        float x26 = 0;\n        float y26 = 0;\n        float x27 = 0;\n        float y27 = 0;\n        float x28 = 0;\n        float y28 = 0;\n        float x29 = 0;\n        float y29 = 0;\n        float x30 = 0;\n        float y30 = 0;\n        float x",
    "        float ans = 0;\n        if (steps <= d) {\n            ans = 1;\n        } else {\n            ans = (float) (Math.ceil((float) (steps - d) / (d - 1)) + 1);\n        }\n        return ans;",
    "        // Write your code here\n        float ans = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d * d;\n        }\n        if (steps == 3) {\n            return d * d * d;\n        }\n        if (steps == 4) {\n            return d * d * d * d;\n        }\n        if (steps == 5) {\n            return d * d * d * d * d;\n        }\n        if (steps == 6) {\n            return d * d * d * d * d * d;\n        }\n        if (steps == 7) {\n            return d * d * d * d * d * d * d;\n        }\n        if (steps == 8) {\n            return d * d * d * d * d * d * d * d;\n        }\n        if (steps == 9) {\n            return d * d * d * d * d * d * d * d * d;\n        }\n        if (steps == 10) {\n            return d * d * d * d * d * d * d * d * d * d;\n        }\n        if (steps == 11) {\n            return d * d * d * d * d * d * d * d * d * d * d;\n        }\n        if (steps == 12) {\n            return d * d * d * d * d * d * d * d * d * d * d * d;\n        }\n        if (steps == 13) {\n            return d * d * d * d * d * d * d * d * d * d * d * d * d;\n        }\n        if (steps == 14) {\n            return d * d * d * d * d * d * d * d * d * d * d * d * d * d;\n        }\n        if (steps == 15) {\n            return d * d * d * d * d * d * d * d * d * d * d * d * d * d * d;\n        }\n        if (steps == 16) {\n            return d * d *",
    "        // Write your code here\n        float ans = 0;\n        if(steps == 0) {\n            return ans;\n        }\n        if(steps == 1) {\n            return d;\n        }\n        if(steps == 2) {\n            return d + d;\n        }\n        if(steps == 3) {\n            return d + d + d;\n        }\n        if(steps == 4) {\n            return d + d + d + d;\n        }\n        if(steps == 5) {\n            return d + d + d + d + d;\n        }\n        if(steps == 6) {\n            return d + d + d + d + d + d;\n        }\n        if(steps == 7) {\n            return d + d + d + d + d + d + d;\n        }\n        if(steps == 8) {\n            return d + d + d + d + d + d + d + d;\n        }\n        if(steps == 9) {\n            return d + d + d + d + d + d + d + d + d;\n        }\n        if(steps == 10) {\n            return d + d + d + d + d + d + d + d + d + d;\n        }\n        if(steps == 11) {\n            return d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if(steps == 12) {\n            return d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if(steps == 13) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if(steps == 14) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if(steps == 15) {\n            return d + d + d + d + d + d + d + d + d + d + d + d + d + d + d;\n        }\n        if(steps == 16) {\n            return d + d +",
    "        // Write your code here.\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d * d;\n        }\n        float[][] dp = new float[(int)steps + 1][(int)d + 1];\n        dp[0][0] = 0;\n        for (int i = 1; i <= steps; i++) {\n            dp[i][0] = 0;\n            for (int j = 1; j <= d; j++) {\n                dp[i][j] = (float)Math.pow(j, 2) + dp[i - 1][j];\n                if (i > 1) {\n                    dp[i][j] = Math.min(dp[i][j], (float)Math.pow(j, 2) + dp[i - 2][j]);\n                }\n                if (i > 2) {\n                    dp[i][j] = Math.min(dp[i][j], (float)Math.pow(j, 2) + dp[i - 3][j]);\n                }\n            }\n        }\n        return dp[(int)steps][(int)d];",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return 29;\n        }\n       ",
    "        // Write your code here\n        float ans = 0;\n        if (steps == 0)\n            return 0;\n        if (steps == 1)\n            return d;\n        if (steps == 2)\n            return d + 1;\n        if (steps == 3)\n            return d + 2;\n        if (steps == 4)\n            return d + 3;\n        if (steps == 5)\n            return d + 4;\n        if (steps == 6)\n            return d + 5;\n        if (steps == 7)\n            return d + 6;\n        if (steps == 8)\n            return d + 7;\n        if (steps == 9)\n            return d + 8;\n        if (steps == 10)\n            return d + 9;\n        if (steps == 11)\n            return d + 10;\n        if (steps == 12)\n            return d + 11;\n        if (steps == 13)\n            return d + 12;\n        if (steps == 14)\n            return d + 13;\n        if (steps == 15)\n            return d + 14;\n        if (steps == 16)\n            return d + 15;\n        if (steps == 17)\n            return d + 16;\n        if (steps == 18)\n            return d + 17;\n        if (steps == 19)\n            return d + 18;\n        if (steps == 20)\n            return d + 19;\n        if (steps == 21)\n            return d + 20;\n        if (steps == 22)\n            return d + 21;\n        if (steps == 23)\n            return d + 22;\n        if (steps == 24)\n            return d + 23;\n        if (steps == 25)\n            return d + 24;\n        if (steps == 26)\n            return d + 25;\n        if (steps == 27)\n            return d + 26;\n        if (steps == 28)\n            return d + 27;\n        if (steps == 29)\n            return d + 28;\n        if (steps == 30)\n            return d + 29;\n        if (steps == 31)\n            return d + 30;\n        if (steps == 32)\n            return d + 31;\n        if (steps == 33",
    "        float minJumps = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n",
    "        if (steps == 0) return 0;\n        if (steps == 1) return d;\n        if (steps == 2) return d + 1;\n        if (steps == 3) return d + 2;\n        if (steps == 4) return d + 3;\n        if (steps == 5) return d + 4;\n        if (steps == 6) return d + 5;\n        if (steps == 7) return d + 6;\n        if (steps == 8) return d + 7;\n        if (steps == 9) return d + 8;\n        if (steps == 10) return d + 9;\n        if (steps == 11) return d + 10;\n        if (steps == 12) return d + 11;\n        if (steps == 13) return d + 12;\n        if (steps == 14) return d + 13;\n        if (steps == 15) return d + 14;\n        if (steps == 16) return d + 15;\n        if (steps == 17) return d + 16;\n        if (steps == 18) return d + 17;\n        if (steps == 19) return d + 18;\n        if (steps == 20) return d + 19;\n        if (steps == 21) return d + 20;\n        if (steps == 22) return d + 21;\n        if (steps == 23) return d + 22;\n        if (steps == 24) return d + 23;\n        if (steps == 25) return d + 24;\n        if (steps == 26) return d + 25;\n        if (steps == 27) return d + 26;\n        if (steps == 28) return d + 27;\n        if (steps == 29) return d + 28;\n        if (steps == 30) return d + 29;\n        if (steps == 31) return d + 30;\n        if (steps == 32) return d + 31;\n        if (steps == 33) return d + 32;\n        if (steps == 34) return d + 33;\n        if (steps == 35) return d + 34;\n        if (steps == 36) return d + 35;\n        if (steps == 37) return d + 36;\n        if (steps == 38) return d + 37;\n        if (steps == 39) return",
    "        // Write your code here\n        // Return the number of jumps required\n        if(steps < d) return -1;\n        if(steps == d) return 1;\n        if(steps == d*2) return 2;\n        long jumps = (long)Math.ceil((double)steps/(double)d);\n        return jumps;",
    "        // Write your code here\n        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps",
    "        float jumps = 0;\n        long x = 0;\n        long y = 0;\n        while (x < d) {\n            if (x + y < d) {\n                x += steps;\n                jumps++;\n            } else {\n                y += steps;\n                jumps++;\n            }\n        }\n        return jumps;",
    "        float ans = 0;\n        if (steps <= d) {\n            ans = 1;\n        } else {\n            ans = (float) (Math.ceil((steps - d) / (float) (d - 1)) + 1);\n        }\n        return ans;",
    "        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 1.5f;\n        }\n        if (steps == 3) {\n            return 2;\n        }\n        if (steps == 4) {\n            return 2.5f;\n        }\n        if (steps == 5) {\n            return 3;\n        }\n        if (steps == 6) {\n            return 3.5f;\n        }\n        if (steps == 7) {\n            return 4;\n        }\n        if (steps == 8) {\n            return 4.5f;\n        }\n        if (steps == 9) {\n            return 5;\n        }\n        if (steps == 10) {\n            return 5.5f;\n        }\n        if (steps == 11) {\n            return 6;\n        }\n        if (steps == 12) {\n            return 6.5f;\n        }\n        if (steps == 13) {\n            return 7;\n        }\n        if (steps == 14) {\n            return 7.5f;\n        }\n        if (steps == 15) {\n            return 8;\n        }\n        if (steps == 16) {\n            return 8.5f;\n        }\n        if (steps == 17) {\n            return 9;\n        }\n        if (steps == 18) {\n            return 9.5f;\n        }\n        if (steps == 19) {\n            return 10;\n        }\n        if (steps == 20) {\n            return 10.5f;\n        }\n        if (steps == 21) {\n            return 11;\n        }\n        if (steps == 22) {\n            return 11.5f;\n        }\n        if (steps == 23) {\n            return 12;\n        }\n        if (steps == 24) {\n            return 12.5f;\n        }\n        if (steps == 25) {\n            return 13;\n        }\n        if (steps == 26) {\n            return 13.5f;\n        }\n        if (steps == 27",
    "        float jumps = 0;\n        for (int i = 0; i < d; i++) {\n            jumps += (float) Math.pow(2, i);\n        }\n        return jumps;",
    "        if(steps < d)\n            return -1;\n        if(steps == d)\n            return 1;\n        if(steps == d*2)\n            return 2;\n        if(steps == d*3)\n            return 3;\n        if(steps == d*4)\n            return 4;\n        if(steps == d*5)\n            return 5;\n        if(steps == d*6)\n            return 6;\n        if(steps == d*7)\n            return 7;\n        if(steps == d*8)\n            return 8;\n        if(steps == d*9)\n            return 9;\n        if(steps == d*10)\n            return 10;\n        if(steps == d*11)\n            return 11;\n        if(steps == d*12)\n            return 12;\n        if(steps == d*13)\n            return 13;\n        if(steps == d*14)\n            return 14;\n        if(steps == d*15)\n            return 15;\n        if(steps == d*16)\n            return 16;\n        if(steps == d*17)\n            return 17;\n        if(steps == d*18)\n            return 18;\n        if(steps == d*19)\n            return 19;\n        if(steps == d*20)\n            return 20;\n        if(steps == d*21)\n            return 21;\n        if(steps == d*22)\n            return 22;\n        if(steps == d*23)\n            return 23;\n        if(steps == d*24)\n            return 24;\n        if(steps == d*25)\n            return 25;\n        if(steps == d*26)\n            return 26;\n        if(steps == d*27)\n            return 27;\n        if(steps == d*28)\n            return 28;\n        if(steps == d*29)\n            return 29;\n        if(steps == d*30)\n            return 30;\n        if(steps == d*31)\n            return 31;\n        if(steps == d*32)\n            return 32;\n        if(steps == d*33)\n            return 33;\n        if(steps",
    "        // Write your code here\n        float ans = 0;\n        if(steps == 0) {\n            return ans;\n        }\n        if(steps == 1) {\n            return ans;\n        }\n        if(steps == 2) {\n            return ans;\n        }\n        if(steps == 3) {\n            return ans;\n        }\n        if(steps == 4) {\n            return ans;\n        }\n        if(steps == 5) {\n            return ans;\n        }\n        if(steps == 6) {\n            return ans;\n        }\n        if(steps == 7) {\n            return ans;\n        }\n        if(steps == 8) {\n            return ans;\n        }\n        if(steps == 9) {\n            return ans;\n        }\n        if(steps == 10) {\n            return ans;\n        }\n        if(steps == 11) {\n            return ans;\n        }\n        if(steps == 12) {\n            return ans;\n        }\n        if(steps == 13) {\n            return ans;\n        }\n        if(steps == 14) {\n            return ans;\n        }\n        if(steps == 15) {\n            return ans;\n        }\n        if(steps == 16) {\n            return ans;\n        }\n        if(steps == 17) {\n            return ans;\n        }\n        if(steps == 18) {\n            return ans;\n        }\n        if(steps == 19) {\n            return ans;\n        }\n        if(steps == 20) {\n            return ans;\n        }\n        if(steps == 21) {\n            return ans;\n        }\n        if(steps == 22) {\n            return ans;\n        }\n        if(steps == 23) {\n            return ans;\n        }\n        if(steps == 24) {\n            return ans;\n        }\n        if(steps == 25) {\n            return ans;\n        }\n        if(steps == 26) {\n            return ans;\n        }\n        if(steps == 27) {\n            return ans;\n        }\n        if(steps == 28) {\n            return ans;\n        }\n        if(steps",
    "        float minJumps = 0;\n        long x = 0;\n        long y = 0;\n        long stepsLeft = steps;\n        while (stepsLeft > 0) {\n            if (x < d) {\n                x++;\n                stepsLeft--;\n            } else if (y < d) {\n                y++;\n                stepsLeft--;\n            } else {\n                x--;\n                y--;\n                stepsLeft--;\n            }\n            minJumps++;\n        }\n        return minJumps;",
    "        // Write your code here.\n        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps <= d) {\n            return 1;\n        }\n        if (steps > d) {\n            jumps = (float) (steps / d);\n            if (steps % d != 0) {\n                jumps += 1;\n            }\n        }\n        return jumps;",
    "        float jumps = 0;\n        if (steps < d) {\n            jumps = (float) Math.ceil((d - steps) / 2.0);\n        }\n        return jumps;",
    "        float jumps = 0;\n        if (steps == 0) {\n            return jumps;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return",
    "        // Write your code here\n        float ans = 0;\n        if (steps <= d) {\n            ans = 1;\n        } else {\n            ans = (float) (Math.ceil((float) (steps - d) / (d - 1)) + 1);\n        }\n        return ans;",
    "        // Write your code here\n        if (d == 0) {\n            return 0;\n        }\n        if (steps == 0) {\n            return -1;\n        }\n        float min = Float.MAX_VALUE;\n        for (int i = 1; i <= steps; i++) {\n            float jumps = minJumps(steps - i, d - i);\n            if (jumps != -1 && jumps < min) {\n                min = jumps;\n            }\n        }\n        return min == Float.MAX_VALUE ? -1 : min + 1;",
    "        return (float) (Math.sqrt(2) * d - steps) / (float) steps;",
    "        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return d * d;\n        }\n        if (steps == 3) {\n            return d * d * d;\n        }\n        return (float) Math.pow(d, steps);",
    "        // Write your code here\n        float ans = 0;\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return d;\n        }\n        if (steps == 2) {\n            return (float) (d / 2);\n        }\n        if (steps == 3) {\n            return (float) (d / 4);\n        }\n        if (steps == 4) {\n            return (float) (d / 8);\n        }\n        if (steps == 5) {\n            return (float) (d / 16);\n        }\n        if (steps == 6) {\n            return (float) (d / 32);\n        }\n        if (steps == 7) {\n            return (float) (d / 64);\n        }\n        if (steps == 8) {\n            return (float) (d / 128);\n        }\n        if (steps == 9) {\n            return (float) (d / 256);\n        }\n        if (steps == 10) {\n            return (float) (d / 512);\n        }\n        if (steps == 11) {\n            return (float) (d / 1024);\n        }\n        if (steps == 12) {\n            return (float) (d / 2048);\n        }\n        if (steps == 13) {\n            return (float) (d / 4096);\n        }\n        if (steps == 14) {\n            return (float) (d / 8192);\n        }\n        if (steps == 15) {\n            return (float) (d / 16384);\n        }\n        if (steps == 16) {\n            return (float) (d / 32768);\n        }\n        if (steps == 17) {\n            return (float) (d / 65536);\n        }\n        if (steps == 18) {\n            return (float) (d / 131072);\n        }\n        if (steps == 19) {\n            return (float) (d / 262144);\n        }\n        if (steps == 20) {\n            return (float) (d / 524288);\n        }\n        if (steps == 21) {\n            return (float) (d /",
    "        // Write your code here\n        if (steps == 0) {\n            return 0;\n        }\n        if (steps == 1) {\n            return 1;\n        }\n        if (steps == 2) {\n            return 2;\n        }\n        if (steps == 3) {\n            return 3;\n        }\n        if (steps == 4) {\n            return 4;\n        }\n        if (steps == 5) {\n            return 5;\n        }\n        if (steps == 6) {\n            return 6;\n        }\n        if (steps == 7) {\n            return 7;\n        }\n        if (steps == 8) {\n            return 8;\n        }\n        if (steps == 9) {\n            return 9;\n        }\n        if (steps == 10) {\n            return 10;\n        }\n        if (steps == 11) {\n            return 11;\n        }\n        if (steps == 12) {\n            return 12;\n        }\n        if (steps == 13) {\n            return 13;\n        }\n        if (steps == 14) {\n            return 14;\n        }\n        if (steps == 15) {\n            return 15;\n        }\n        if (steps == 16) {\n            return 16;\n        }\n        if (steps == 17) {\n            return 17;\n        }\n        if (steps == 18) {\n            return 18;\n        }\n        if (steps == 19) {\n            return 19;\n        }\n        if (steps == 20) {\n            return 20;\n        }\n        if (steps == 21) {\n            return 21;\n        }\n        if (steps == 22) {\n            return 22;\n        }\n        if (steps == 23) {\n            return 23;\n        }\n        if (steps == 24) {\n            return 24;\n        }\n        if (steps == 25) {\n            return 25;\n        }\n        if (steps == 26) {\n            return 26;\n        }\n        if (steps == 27) {\n            return 27;\n        }\n        if (steps == 28) {\n            return 28;\n        }\n        if (steps == 29) {\n            return"
  ]
}
{
  "name": "mbpp_564_count_Pairs",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_564_count_Pairs.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpk9i9zpw5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1666122672,
      "stdout": "",
      "stderr": "/tmp/tmp5z_ivzsd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1666122672,
      "stdout": "",
      "stderr": "/tmp/tmp5z_ivzsd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1666122672,
      "stdout": "",
      "stderr": "/tmp/tmp5z_ivzsd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i+1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1666122672,
      "stdout": "",
      "stderr": "/tmp/tmp7pu9aea3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpk9i9zpw5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1666122672,
      "stdout": "",
      "stderr": "/tmp/tmp5z_ivzsd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpk9i9zpw5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1666122672,
      "stdout": "",
      "stderr": "/tmp/tmp5z_ivzsd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpk9i9zpw5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmpjrxf10vi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    public static long countPairs(ArrayList<Long> arr, long n) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (3l)) == (2l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (4l)) == (0l));\n    assert(countPairs((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l))), (5l)) == (10l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "/tmp/tmp36mid3e_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
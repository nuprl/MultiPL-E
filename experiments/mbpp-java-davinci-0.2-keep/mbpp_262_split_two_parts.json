{
  "name": "mbpp_262_split_two_parts",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    public static Object splitTwoParts(Object list1, long L) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_262_split_two_parts.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(splitTwoParts((new Object(Arrays.asList((long)1l, (long)1l, (long)2l, (long)3l, (long)4l, (long)4l, (long)5l, (long)1l))), (3l)).equals(Pair.with(new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l)), new ArrayList<Long>(Arrays.asList((long)3l, (long)4l, (long)4l, (long)5l, (long)1l)))));\n    assert(splitTwoParts((new Object(Arrays.asList((String)\"a\", (String)\"b\", (String)\"c\", (String)\"d\"))), (2l)).equals(Pair.with(new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"b\")), new ArrayList<String>(Arrays.asList((String)\"c\", (String)\"d\")))));\n    assert(splitTwoParts((new Object(Arrays.asList((String)\"p\", (String)\"y\", (String)\"t\", (String)\"h\", (String)\"o\", (String)\"n\"))), (4l)).equals(Pair.with(new ArrayList<String>(Arrays.asList((String)\"p\", (String)\"y\", (String)\"t\", (String)\"h\")), new ArrayList<String>(Arrays.asList((String)\"o\", (String)\"n\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        Object list2 = new ArrayList();\n        Object list3 = new ArrayList();\n        for (int i = 0; i < L; i++) {\n            list3.add(list1.get(i));\n        }\n        for (int i = (int) L; i < list1.size(); i++) {\n            list2.add(list1.get(i));\n        }\n        return new Pair(list3, list2);",
    "        return null;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (int i = 0; i < L; i++) {\n            list2.add(list1.get(i));\n        }\n        for (int i = (int) L; i < list1.size(); i++) {\n            list3.add(list1.get(i));\n        }\n        return new Pair(list2, list3);",
    "        // Write your code here\n        return null;",
    "        // Write your code here\n        return null;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Object> list = (List<Object>) list1;\n        List<Object> list2 = list.subList((int) L, list.size());\n        List<Object> list3 = list.subList(0, (int) L);\n        return new Pair(list3, list2);",
    "        return null;",
    "        // Write your code here\n        return null;",
    "        List<Object> list = (List<Object>) list1;\n        List<Object> list2 = list.subList(0, (int) L);\n        List<Object> list3 = list.subList((int) L, list.size());\n        return new Pair<>(list2, list3);",
    "        List<Object> list = (List<Object>)list1;\n        List<Object> list2 = list.subList((int)L, list.size());\n        list = list.subList(0, (int)L);\n        return new Pair<>(list, list2);",
    "        return null;",
    "        // Write your code here\n        return null;",
    "        // Write your code here\n        return null;",
    "        // Write your code here\n        return null;",
    "        // Write your code here\n        return null;",
    "        return null;",
    "        return null;",
    "        return null;",
    "        // Write your code here\n        return null;",
    "        return null;"
  ]
}
{
  "name": "mbpp_563_extract_values",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to extract values between quotation marks from a string.\n    public static ArrayList<String> extractValues(String text) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_563_extract_values.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((new ArrayList<String>(Arrays.asList((String)\"Python\", (String)\"PHP\", (String)\"Java\")))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\")))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((new ArrayList<String>(Arrays.asList((String)\"red\", (String)\"blue\", (String)\"green\", (String)\"yellow\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<String> result = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    result.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        Pattern p = Pattern.compile(\"\\\"([^\\\"]*)\\\"\");\n        Matcher m = p.matcher(text);\n        while (m.find()) {\n            values.add(m.group(1));\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        int start = 0;\n        int end = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (start == 0) {\n                    start = i + 1;\n                } else {\n                    end = i;\n                    result.add(text.substring(start, end));\n                    start = 0;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        Pattern pattern = Pattern.compile(\"\\\"(.*?)\\\"\");\n        Matcher matcher = pattern.matcher(text);\n        while (matcher.find()) {\n            values.add(matcher.group(1));\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        int start = 0;\n        int end = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (start == 0) {\n                    start = i + 1;\n                } else {\n                    end = i;\n                    result.add(text.substring(start, end));\n                    start = 0;\n                    end = 0;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(text.charAt(i));\n            }\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        // Write your code here\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder value = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(value.toString());\n                    value = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                value.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        String value = \"\";\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (inQuotes) {\n                    values.add(value);\n                    value = \"\";\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                value += text.charAt(i);\n            }\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        int start = 0;\n        int end = 0;\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (inQuotes) {\n                    end = i;\n                    result.add(text.substring(start + 1, end));\n                    inQuotes = false;\n                } else {\n                    start = i;\n                    inQuotes = true;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<>();\n        int start = 0;\n        int end = 0;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (start == 0) {\n                    start = i + 1;\n                } else {\n                    end = i;\n                    result.add(text.substring(start, end));\n                    start = 0;\n                    end = 0;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> values = new ArrayList<String>();\n        Pattern p = Pattern.compile(\"\\\"([^\\\"]*)\\\"\");\n        Matcher m = p.matcher(text);\n        while (m.find()) {\n            values.add(m.group(1));\n        }\n        return values;",
    "        ArrayList<String> values = new ArrayList<>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == '\"') {\n                if (inQuotes) {\n                    values.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(c);\n            }\n        }\n        return values;",
    "        ArrayList<String> result = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n        boolean inQuotes = false;\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == '\"') {\n                if (inQuotes) {\n                    result.add(sb.toString());\n                    sb = new StringBuilder();\n                }\n                inQuotes = !inQuotes;\n            } else if (inQuotes) {\n                sb.append(text.charAt(i));\n            }\n        }\n        return result;"
  ]
}
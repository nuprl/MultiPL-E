{
  "name": "mbpp_767_get_pairs_count",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            long diff = sum - num;\n            if (map.containsKey(diff)) {\n                count += map.get(diff);\n            }\n            if (diff == num) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpn5h2bnk6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        int n = arr.size();\n        int low = 0;\n        int high = n - 1;\n        long count = 0;\n        while (low < high) {\n            if (arr.get(low) + arr.get(high) == sum) {\n                count++;\n                low++;\n                high--;\n            } else if (arr.get(low) + arr.get(high) < sum) {\n                low++;\n            } else {\n                high--;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpc56nhxxy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and\n            // maintain counts of sums of pairs\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash,\n                // then store it and initialize count to 1\n                long sum2 = sum - (arr.get(i) + arr.get(j));\n                if (!map2.containsKey(sum2))\n                    map2.put(sum2, (long) 1);\n                else // Increment count of sum in hash\n                    map2.put(sum2, map2.get(sum2) + 1);\n            }\n\n            // Traverse through all elements of arr[0..i-1]\n            for (int j = 0; j < i; j++) {\n                // If arr[i] + arr[j] is in hash, then\n                // there is at-least one pair\n                // with sum equal to sum\n                if (map2.containsKey(arr.get(j)))\n                    count += map2.get(arr.get(j));\n            }\n\n            // Store counts of all sums in a hash map\n            for (Map.Entry<Long, Long> entry : map2.entrySet()) {\n                long x = entry.getKey();\n                long y = entry.getValue();\n                if (!map.containsKey(x))\n                    map.put(x, y);\n                else\n                    map.put(x, map.get(x) + y);\n            }\n        }\n\n        // Traverse through all elements and increment\n        // count by number of pairs with sum equal to\n        // arr[i]\n        for (int i = 0; i\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "/tmp/tmpeewjv01l.java:57: error: ';' expected\n        for (int i = 0; i\n                         ^\n/tmp/tmpeewjv01l.java:58: error: illegal start of expression\n    }\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> temp = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and continue to next pair\n                long x = sum - (arr.get(i) + arr.get(j));\n                if (!temp.containsKey(x))\n                    temp.put(x, 1L);\n\n                    // Else increment the count of sum-arr[i]\n                else\n                    temp.put(x, temp.get(x) + 1);\n            }\n\n            // Traverse through all elements in map and increment\n            // 'count'\n            for (Map.Entry<Long, Long> entry : temp.entrySet()) {\n                if (map.containsKey(entry.getKey()))\n                    count += map.get(entry.getKey()) * entry.getValue();\n            }\n\n            // Store counts of current pair sums in 'map'\n            for (Map.Entry<Long, Long> entry : temp.entrySet()) {\n                if (!map.containsKey(entry.getKey()))\n                    map.put(entry.getKey(), entry.getValue());\n                else\n                    map.put(entry.getKey(), map.get(entry.getKey()) + entry.getValue());\n            }\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmp56wjb1w8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long ans = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                ans += map.get(sum - i);\n            }\n            if (i == sum - i) {\n                ans--;\n            }\n        }\n        return ans / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpkfv39o0k.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmp8bym3mdo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long ans = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                ans += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                ans--;\n            }\n        }\n        return ans / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpzhx1zpg2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            count += map.getOrDefault(sum - arr.get(i), 0L);\n            map.put(arr.get(i), map.getOrDefault(arr.get(i), 0L) + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpmv7_h03m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> temp = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store count of sum-arr[i]-arr[j]\n                if (!map.containsKey(arr.get(i) + arr.get(j)))\n                    if (temp.containsKey(sum - arr.get(i) - arr.get(j)))\n                        temp.put(sum - arr.get(i) - arr.get(j), temp.get(sum - arr.get(i) - arr.get(j)) + 1);\n                    else\n                        temp.put(sum - arr.get(i) - arr.get(j), 1L);\n\n                // If sum of elements at index i & j is in hash map,\n                // then increment count by count of sum-arr[i]-arr[j]\n                else\n                    count += map.get(arr.get(i) + arr.get(j));\n            }\n\n            // Store count of sums of pairs with arr[i]\n            map.putAll(temp);\n        }\n\n        // Return total count\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpyek7e6g0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // create a hashmap to store the number of occurences of each number\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        // iterate over the array and for each element find the number of elements that sum up to sum - arr[i]\n        long count = 0;\n        for (long i : arr) {\n            long target = sum - i;\n            if (map.containsKey(target)) {\n                count += map.get(target);\n            }\n            if (target == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpd1b64vvb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmp52acic93.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long ans = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                ans += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                ans--;\n            }\n        }\n        return ans / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpzhx1zpg2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // initialize the count\n        long count = 0;\n        // initialize the left and right pointers\n        int left = 0;\n        int right = arr.size() - 1;\n        // loop until the left pointer is less than the right pointer\n        while (left < right) {\n            // if the sum of the left and right pointers is less than the sum, increment the left pointer\n            if (arr.get(left) + arr.get(right) < sum) {\n                left++;\n            }\n            // if the sum of the left and right pointers is greater than the sum, decrement the right pointer\n            else if (arr.get(left) + arr.get(right) > sum) {\n                right--;\n            }\n            // if the sum of the left and right pointers is equal to the sum, increment the count and increment the left pointer\n            else {\n                count++;\n                left++;\n            }\n        }\n        // return the count\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpy889rb0d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            map.put(i, map.getOrDefault(i, 0L) + 1);\n        }\n        long ans = 0;\n        for (long i : arr) {\n            long val = sum - i;\n            if (map.containsKey(val)) {\n                ans += map.get(val);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpl6t8a8fe.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            long diff = sum - i;\n            if (map.containsKey(diff)) {\n                count += map.get(diff);\n            }\n            if (diff == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmppn7ig_9i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, increment count\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpop3o7ghv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                count += map.get(i);\n            }\n            map.put(sum - i, map.getOrDefault(sum - i, 0L) + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmp2snusfwu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Find sum of current pair and store it in a hash map\n            long temp = sum - arr.get(i);\n            // If temp is seen before, increment count and continue\n            if (map.containsKey(temp)) {\n                count += map.get(temp);\n            }\n            // Add count for current element in hash map\n            long count1 = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), count1 + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpkpnbpdj2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmp52acic93.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n        for (long i = 0; i < arr.size(); i++) {\n            long num = arr.get((int) i);\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        for (long i = 0; i < arr.size(); i++) {\n            long num = arr.get((int) i);\n            long diff = sum - num;\n            if (map.containsKey(diff)) {\n                count += map.get(diff);\n            }\n            if (diff == num) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmp3o3euw7y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and\n            // maintain the count of all sums in a hash map 'map2'\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash map,\n                // then store it and initialize count to 1\n                if (!map2.containsKey(sum - arr.get(i) - arr.get(j)))\n                    map2.put(sum - arr.get(i) - arr.get(j), 1L);\n                else // Else increment the count\n                    map2.put(sum - arr.get(i) - arr.get(j), map2.get(sum - arr.get(i) - arr.get(j)) + 1);\n            }\n\n            // Traverse through all elements of map2 and\n            // add the count to 'count'\n            for (Map.Entry<Long, Long> entry : map2.entrySet()) {\n                // If element is not present in 'map' or it is\n                // present but with count 0, then only add the\n                // count\n                if (!map.containsKey(entry.getKey()) || map.get(entry.getKey()) == 0)\n                    count += entry.getValue();\n\n                // Decrement the count of pair with sum equal to\n                // arr[i] + arr[j]\n                map.put(entry.getKey(), map.get(entry.getKey()) - entry.getValue());\n            }\n        }\n\n        // Return total count of pairs with sum equal to 'sum'\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpqr6punzt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Find sum of current pair and store it in a hash map\n            long temp = sum - arr.get(i);\n\n            // If temp is seen before, we have a pair\n            if (map.containsKey(temp))\n                count += map.get(temp);\n\n            // Add current number to hash map\n            map.put(arr.get(i), map.getOrDefault(arr.get(i), 0L) + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122947,
      "stdout": "",
      "stderr": "/tmp/tmpsuauo_78.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n        for (Long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long twice_count = 0;\n        for (Long i : arr) {\n            if (map.containsKey(sum - i)) {\n                twice_count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                twice_count--;\n            }\n        }\n        return twice_count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpt561_chv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create a hashmap to store the frequency of each number\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long count = 0;\n        for (Long i : arr) {\n            // If the sum is even, then we need to check if the number is half of the sum\n            if (sum % 2 == 0 && i == sum / 2) {\n                count += map.get(i) - 1;\n            } else {\n                if (map.containsKey(sum - i)) {\n                    count += map.get(sum - i);\n                }\n            }\n            // Remove the number from the map to avoid duplicates\n            map.put(i, map.get(i) - 1);\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpbyewcmqt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmp4vcpsnj6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpi12wxa_o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            count += map.getOrDefault(sum - arr.get(i), 0L);\n            map.put(arr.get(i), map.getOrDefault(arr.get(i), 0L) + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpmv7_h03m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and\n            // maintain the count of all sums in a hash map 'map2'\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash map,\n                // then store it and initialize count to 1\n                long sum2 = sum - (arr.get(i) + arr.get(j));\n                if (!map2.containsKey(sum2))\n                    map2.put(sum2, 1L);\n                else // Increment count of sum in hash map\n                    map2.put(sum2, map2.get(sum2) + 1);\n            }\n\n            // Traverse through all elements of map2 and\n            // add count to 'count'\n            for (Map.Entry<Long, Long> entry : map2.entrySet()) {\n                // If element is not present in 'map', then add it\n                if (map.get(entry.getKey()) == null)\n                    map.put(entry.getKey(), entry.getValue());\n\n                // Add count of both pairs\n                else\n                    map.put(entry.getKey(), map.get(entry.getKey()) + entry.getValue());\n            }\n        }\n\n        // Traverse through map and add count to 'count'\n        for (Map.Entry<Long, Long> entry : map.entrySet())\n            count += entry.getValue();\n\n        // Return total count\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpuzwdhtzg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum\n            //map.clear();\n\n            // Traverse through all elements after the\n            // above picked element\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at current two\n                // indexes is equal to desired sum,\n                // then increment count\n                long x = arr.get(i) + arr.get(j);\n                if (x == sum) {\n                    count++;\n                }\n                // Add count for current sum to count of\n                // previous sums\n                if (map.containsKey(x)) {\n                    count += map.get(x);\n                }\n                // Add current sum to hash table\n                if (map.containsKey(sum - x)) {\n                    map.put(sum - x, map.get(sum - x) + 1);\n                } else {\n                    map.put(sum - x, 1L);\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpikg8c4yh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i = 0; i < arr.size(); i++) {\n            long temp = sum - arr.get((int) i);\n            if (map.containsKey(temp)) {\n                count++;\n            }\n            map.put(arr.get((int) i), arr.get((int) i));\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpwvkod690.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmp52acic93.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> temp = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and increment count\n                if (!map.containsKey(arr.get(i) + arr.get(j))) {\n                    map.put(arr.get(i) + arr.get(j), 1L);\n                } else { // Else increment count of sum in hash map\n                    map.put(arr.get(i) + arr.get(j), map.get(arr.get(i) + arr.get(j)) + 1);\n                }\n\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and increment count\n                if (!temp.containsKey(arr.get(i) + arr.get(j))) {\n                    temp.put(arr.get(i) + arr.get(j), 1L);\n                } else { // Else increment count of sum in hash map\n                    temp.put(arr.get(i) + arr.get(j), temp.get(arr.get(i) + arr.get(j)) + 1);\n                }\n            }\n\n            // Traverse through all elements in map and update count\n            // if desired sum is found\n            for (Map.Entry<Long, Long> entry : temp.entrySet()) {\n                if (map.containsKey(sum - entry.getKey())) {\n                    count += entry.getValue() * map.get(sum - entry.getKey());\n                }\n            }\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmphph7iud2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (int i = 0; i < arr.size(); i++) {\n            long temp = sum - arr.get(i);\n            if (map.containsKey(temp)) {\n                count += map.get(temp);\n            }\n            if (map.containsKey(arr.get(i))) {\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n            } else {\n                map.put(arr.get(i), 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122947,
      "stdout": "",
      "stderr": "/tmp/tmpe9f802uw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty arraylist of pairs\n            //ArrayList<Pair<Long, Long>> list = new ArrayList<>();\n            // If pair with sum is seen before\n            if (map.containsKey(sum - arr.get(i))) {\n                // increment the count\n                count += map.get(sum - arr.get(i));\n            }\n            // Add the current element to the map\n            if (map.containsKey(arr.get(i))) {\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n            } else {\n                map.put(arr.get(i), 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmp45xrrc7d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create a hash map to store the frequency of each element\n        HashMap<Long, Long> hm = new HashMap<>();\n        for (int i = 0; i < arr.size(); i++) {\n            // If element is not present in hash map, add it\n            if (!hm.containsKey(arr.get(i)))\n                hm.put(arr.get(i), 0L);\n            // Increment the frequency of the element\n            hm.put(arr.get(i), hm.get(arr.get(i)) + 1);\n        }\n        long twice_count = 0;\n        // Iterate through each element and increment the count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            if (hm.get(sum - arr.get(i)) != null)\n                twice_count += hm.get(sum - arr.get(i));\n            // if (arr.get(i) == sum - arr.get(i))\n            //     twice_count--;\n        }\n        // Return the half of twice_count\n        return twice_count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpwxl4_pah.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashSet<Long> set = new HashSet<>();\n        for (long i : arr) {\n            set.add(i);\n        }\n        for (long i : arr) {\n            if (set.contains(sum - i)) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmp9fliu__l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            count += map.getOrDefault(sum - arr.get(i), 0L);\n            map.put(arr.get(i), map.getOrDefault(arr.get(i), 0L) + 1);\n        }\n        // return the half of total count\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpjakt3jvt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n            if (map.containsKey(value)) {\n                map.put(value, map.get(value) + 1);\n            } else {\n                map.put(value, 1L);\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n            if (map.containsKey(sum - value)) {\n                count += map.get(sum - value);\n            }\n            if (sum - value == value) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpude8o1ja.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> temp = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and increment count\n                if (!map.containsKey(arr.get(i) + arr.get(j))) {\n                    map.put(arr.get(i) + arr.get(j), 1L);\n                } else {\n                    map.put(arr.get(i) + arr.get(j), map.get(arr.get(i) + arr.get(j)) + 1);\n                }\n\n                // If sum of elements at index i & j is in hash\n                // map, then increment its count\n                if (!temp.containsKey(sum - (arr.get(i) + arr.get(j)))) {\n                    temp.put(sum - (arr.get(i) + arr.get(j)), 1L);\n                } else {\n                    temp.put(sum - (arr.get(i) + arr.get(j)), temp.get(sum - (arr.get(i) + arr.get(j))) + 1);\n                }\n            }\n\n            // Traverse through all elements in hash map\n            // and increment count\n            for (Map.Entry<Long, Long> entry : temp.entrySet()) {\n                if (map.containsKey(entry.getKey())) {\n                    count += entry.getValue() * map.get(entry.getKey());\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpvdoercss.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long ans = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                ans += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                ans--;\n            }\n        }\n        return ans / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpzhx1zpg2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpwitcxek_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashSet<Long> set = new HashSet<Long>();\n        for (long i = 0; i < arr.size(); i++) {\n            if (set.contains(sum - arr.get((int) i))) {\n                count++;\n            }\n            set.add(arr.get((int) i));\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmprn95qba7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        int count = 0;\n        int left = 0;\n        int right = arr.size() - 1;\n        while (left < right) {\n            if (arr.get(left) + arr.get(right) == sum) {\n                count++;\n                left++;\n                right--;\n            } else if (arr.get(left) + arr.get(right) < sum) {\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpp7_b048y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create a hash set to store the numbers\n        HashSet<Long> set = new HashSet<Long>();\n        // Iterate through the list\n        for (int i = 0; i < arr.size(); i++) {\n            // If the number is not in the set, add it\n            if (!set.contains(arr.get(i))) {\n                set.add(arr.get(i));\n            }\n        }\n        // Iterate through the list again\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            // If the set contains the number that is the difference between the sum and the current number, increment the count\n            if (set.contains(sum - arr.get(i))) {\n                count++;\n            }\n        }\n        // Return the count\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmp3wubrelt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum\n            map.clear();\n\n            // Traverse through all possible pairs of arr[] and\n            // 'sum-arr[i]'\n            for (int j = i; j < arr.size(); j++) {\n                // If sum of current pair is not in hash,\n                // then store it and continue to next pair\n                long x = arr.get(j);\n                long diff = sum - x;\n                if (!map.containsKey(diff))\n                    map.put(diff, 1L);\n\n                    // If sum of current pair is in hash, then\n                    // increment count of pairs\n                else\n                    count += map.get(diff);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpldoyg5r3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpq0ou6f2r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmp52acic93.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpehii1gbj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpfm_9x1xp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp68gbhfh6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpfm_9x1xp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp0hzupose.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // set the two pointers\n        int i = 0;\n        int j = arr.size() - 1;\n        long count = 0;\n        while (i < j) {\n            if (arr.get(i) + arr.get(j) == sum) {\n                count++;\n                i++;\n                j--;\n            } else if (arr.get(i) + arr.get(j) > sum) {\n                j--;\n            } else {\n                i++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpflg2usxa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpwitcxek_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> curr_map = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and continue to next pair\n                long x = sum - (arr.get(i) + arr.get(j));\n                if (!map.containsKey(x))\n                    map.put(x, (long) 1);\n                else\n                    map.put(x, map.get(x) + 1);\n\n                // If sum of elements at index i & j is in hash map,\n                // then there must be pair(s) present with given sum.\n                if (curr_map.containsKey(arr.get(j)))\n                    count += curr_map.get(arr.get(j));\n\n                // Add arr[j] to hash map with count as 1\n                if (!curr_map.containsKey(arr.get(j)))\n                    curr_map.put(arr.get(j), (long) 1);\n                else\n                    curr_map.put(arr.get(j), curr_map.get(arr.get(j)) + 1);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpdi5pwkmi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty arraylist of pairs\n            ArrayList<Pair<Long, Long>> pairs = new ArrayList<Pair<Long, Long>>();\n            // If pair with current sum is not seen before,\n            // insert it into the map with value 1\n            if (!map.containsKey(arr.get(i))) {\n                map.put(arr.get(i), 1L);\n            } else {\n                // If seen before, increment the count of existing\n                // pair by 1\n                long val = map.get(arr.get(i));\n                map.put(arr.get(i), val + 1);\n            }\n            // If pair with sum \"sum-arr[i]\" is seen before,\n            // increment its count by 1\n            if (map.containsKey(sum - arr.get(i))) {\n                long val = map.get(sum - arr.get(i));\n                count += val;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmphllilg_g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphllilg_g.java:17: error: cannot find symbol\n            ArrayList<Pair<Long, Long>> pairs = new ArrayList<Pair<Long, Long>>();\n                      ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphllilg_g.java:17: error: cannot find symbol\n            ArrayList<Pair<Long, Long>> pairs = new ArrayList<Pair<Long, Long>>();\n                                                              ^\n  symbol:   class Pair\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            map.put(i, map.getOrDefault(i, 0L) + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpo4qhxsm6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Find sum of current pair and store it in a hash map\n            long temp = sum - arr.get(i);\n            // If temp is seen before, increment count and continue\n            if (map.containsKey(temp)) {\n                count += map.get(temp);\n            }\n            // Add count for current element in hash map\n            long count1 = map.containsKey(arr.get(i)) ? map.get(arr.get(i)) : 0;\n            map.put(arr.get(i), count1 + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp0sxk20sa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpehii1gbj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and\n            // maintain the count of all sums in a hash map 'map2'\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash map,\n                // then store it and initialize count to 1\n                long sum2 = sum - (arr.get(i) + arr.get(j));\n                if (!map2.containsKey(sum2))\n                    map2.put(sum2, 1L);\n                else // Increment count of sum in hash map\n                    map2.put(sum2, map2.get(sum2) + 1);\n            }\n\n            // Traverse through all elements of map2 and\n            // add the count to the answer\n            for (Map.Entry<Long, Long> it : map2.entrySet()) {\n                // If element is not there in 'map', then add\n                if (map.get(it.getKey()) == null)\n                    map.put(it.getKey(), it.getValue());\n\n                    // If element is there in 'map', then\n                    // increment its count.\n                else\n                    map.put(it.getKey(), map.get(it.getKey()) + it.getValue());\n            }\n        }\n\n        // Traverse through map and return the sum of values\n        for (Map.Entry<Long, Long> it : map.entrySet())\n            count += it.getValue();\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp3v4zz6ew.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpi12wxa_o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize count for current pair (arr[i], arr[j])\n\n            // If this pair is not in hash, then store it and continue to\n            // next pair\n            if (!map.containsKey(arr.get(i)))\n                map.put(arr.get(i), (long) 1);\n\n                // Else increment the count of existing pair\n            else\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n        }\n\n        // Traverse through all possible pairs of arr[] and arr[j]\n        for (int i = 0; i < arr.size(); i++) {\n            // If this sum is seen before, then increment count\n            if (map.containsKey(sum - arr.get(i)))\n                count += map.get(sum - arr.get(i));\n\n            // If (arr[i], arr[i]) pair satisfies the condition,\n            // then decrement count.\n            if (sum - arr.get(i) == arr.get(i))\n                count--;\n        }\n\n        // return count of pairs with sum equal to 'sum'\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp53b21nrn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> curr_map = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and continue to next pair\n                if (!map.containsKey(arr.get(i) + arr.get(j))) {\n                    map.put(arr.get(i) + arr.get(j), 1L);\n                    curr_map.put(arr.get(i) + arr.get(j), 1L);\n                }\n\n                // Else update the count of sum in hash map\n                else {\n                    long val = map.get(arr.get(i) + arr.get(j));\n                    map.put(arr.get(i) + arr.get(j), val + 1);\n                    curr_map.put(arr.get(i) + arr.get(j), val + 1);\n                }\n\n                // If sum is seen before, update count\n                if (curr_map.containsKey(sum - arr.get(j)))\n                    count += curr_map.get(sum - arr.get(j));\n            }\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpfqbky56m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpi12wxa_o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            count += map.getOrDefault(sum - arr.get(i), 0L);\n            map.put(arr.get(i), map.getOrDefault(arr.get(i), 0L) + 1);\n        }\n        // return the half of the total count\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpde_b96r1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            map.put(i, map.getOrDefault(i, 0L) + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpwvl53q82.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (int i = 0; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (map.containsKey(curr)) {\n                count += map.get(curr);\n            }\n            if (map.containsKey(sum - curr)) {\n                map.put(sum - curr, map.get(sum - curr) + 1);\n            } else {\n                map.put(sum - curr, 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpr3b5vr07.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> temp = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and continue to next pair\n                long s = sum - (arr.get(i) + arr.get(j));\n                if (!map.containsKey(s))\n                    map.put(s, (long) 1);\n                else\n                    map.put(s, map.get(s) + 1);\n\n                // If sum of elements at index i & j is in hash map,\n                // then increment count and continue to next pair\n                if (temp.containsKey(arr.get(j)))\n                    count += temp.get(arr.get(j));\n\n                // Add arr[j] to hash map with count 1\n                else\n                    temp.put(arr.get(j), (long) 1);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpog00873g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Find sum of current pair and store it in a hash map\n            long temp = sum - arr.get(i);\n\n            // If temp is seen before, we have a pair\n            if (map.containsKey(temp))\n                count += map.get(temp);\n\n            // If temp is seen for first time, store it in hash\n            if (!map.containsKey(arr.get(i)))\n                map.put(arr.get(i), 1L);\n            else\n                map.put(arr.get(i), map.get(arr.get(i)) + 1L);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpj4fnvd4t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpfm_9x1xp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp68gbhfh6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpi12wxa_o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to all 0's\n            map.put(arr.get(i), 0L);\n        }\n\n        // Store counts of all elements in map\n        for (int i = 0; i < arr.size(); i++) {\n            map.put(arr.get(i), map.get(arr.get(i)) + 1);\n        }\n\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            if (map.get(sum - arr.get(i)) != null) {\n                count += map.get(sum - arr.get(i));\n            }\n\n            // if (arr[i], arr[i]) pair satisfies the condition,\n            // then we need to ensure that the count is\n            // decreased by one such that the (arr[i], arr[i])\n            // pair is not considered\n            if (sum - arr.get(i) == arr.get(i)) {\n                count--;\n            }\n        }\n\n        // return the half of the total count\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmplmyb1dp_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Find sum of current pair and increment\n            // count (Note that every pair is counted twice)\n            long s = sum - arr.get(i);\n            if (map.containsKey(s))\n                count += map.get(s);\n\n            // Add current element to hash\n            long x = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), x + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpkqs3wvnm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Find sum of current pair and increment\n            // count (Note that every pair is counted\n            // twice)\n            long s = sum - arr.get(i);\n            if (map.containsKey(s))\n                count += map.get(s);\n\n            // Add current element to hash\n            long x = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), x + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp76276byy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpq0ou6f2r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, increment count\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpi4dk2421.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long ans = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                ans += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                ans--;\n            }\n        }\n        return ans / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpzhx1zpg2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long a : arr) {\n            if (map.containsKey(a)) {\n                map.put(a, map.get(a) + 1);\n            } else {\n                map.put(a, 1L);\n            }\n        }\n        long ans = 0;\n        for (Long a : arr) {\n            if (map.containsKey(sum - a)) {\n                ans += map.get(sum - a);\n            }\n            if (sum - a == a) {\n                ans--;\n            }\n        }\n        return ans / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpm2k4d9s0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (map.containsKey(sum - arr.get(i))) {\n                count += map.get(sum - arr.get(i));\n            }\n            if (map.containsKey(arr.get(i))) {\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n            } else {\n                map.put(arr.get(i), 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpusvndou4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpwitcxek_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> temp = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and increment count\n                long s = sum - (arr.get(i) + arr.get(j));\n                if (!map.containsKey(s)) {\n                    map.put(s, 1L);\n                    count++;\n                }\n\n                // If sum of elements at index i & j is in hash\n                // map, then increment its count\n                else {\n                    long c = map.get(s);\n                    map.put(s, c + 1);\n                    count++;\n                }\n\n                // If sum of elements at index i & j is in hash\n                // map, then increment its count\n                if (!temp.containsKey(arr.get(j)))\n                    temp.put(arr.get(j), 1L);\n                else {\n                    long c = temp.get(arr.get(j));\n                    temp.put(arr.get(j), c + 1);\n                }\n            }\n\n            // Add count of all sums to the count of arr[i]\n            for (Map.Entry<Long, Long> entry : temp.entrySet()) {\n                long c = entry.getValue();\n                if (map.containsKey(entry.getKey())) {\n                    c += map.get(entry.getKey());\n                }\n                map.put(entry.getKey(), c);\n            }\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmphuxjsfoy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> curr_map = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and continue to next pair\n                long x = sum - (arr.get(i) + arr.get(j));\n                if (!curr_map.containsKey(x))\n                    curr_map.put(x, 1L);\n                else\n                    curr_map.put(x, curr_map.get(x) + 1);\n            }\n\n            // Add count of all pairs with sum equals to arr[i]\n            for (Map.Entry<Long, Long> it : curr_map.entrySet()) {\n                if (map.containsKey(it.getKey()))\n                    count += map.get(it.getKey()) * it.getValue();\n            }\n\n            // Store counts of all sums in a hash map\n            for (Map.Entry<Long, Long> it : curr_map.entrySet()) {\n                if (!map.containsKey(it.getKey()))\n                    map.put(it.getKey(), it.getValue());\n                else\n                    map.put(it.getKey(), map.get(it.getKey()) + it.getValue());\n            }\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmphlvmxq26.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to all 0's\n            map.put(arr.get(i), 0L);\n        }\n\n        // Store counts of all elements in map\n        for (int i = 0; i < arr.size(); i++) {\n            map.put(arr.get(i), map.get(arr.get(i)) + 1);\n        }\n\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            if (map.get(sum - arr.get(i)) != null) {\n                count += map.get(sum - arr.get(i));\n            }\n\n            // if (arr[i], arr[i]) pair satisfies the condition,\n            // then we need to ensure that the count is\n            // decreased by one such that the (arr[i], arr[i])\n            // pair is not considered\n            if (sum - arr.get(i) == arr.get(i)) {\n                count--;\n            }\n        }\n\n        // return the half of the total count\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpqeiibn4m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, (long) 1);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpgr7w9zlz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp68gbhfh6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and\n            // maintain count of sums of pair elements\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash,\n                // then store it and initialize count to 1\n                long sum2 = sum - (arr.get(i) + arr.get(j));\n                if (!map2.containsKey(sum2))\n                    map2.put(sum2, 1L);\n                else // Increment count of sum in hash\n                    map2.put(sum2, map2.get(sum2) + 1);\n            }\n\n            // Traverse through all elements of arr[0..i-1]\n            for (int j = 0; j < i; j++) {\n                // If sum of current pair is in hash, then\n                // increment count of sum in hash\n                if (map2.containsKey(arr.get(j)))\n                    count += map2.get(arr.get(j));\n            }\n\n            // Store count of current sum in hash\n            if (!map.containsKey(sum - arr.get(i)))\n                map.put(sum - arr.get(i), 1L);\n            else\n                map.put(sum - arr.get(i), map.get(sum - arr.get(i)) + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmp_g64vrfv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long ans = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                ans += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                ans--;\n            }\n        }\n        return ans / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpzhx1zpg2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (Long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpg4gcitdn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // set up two pointers\n        int i = 0;\n        int j = arr.size() - 1;\n        long count = 0;\n        while (i < j) {\n            if (arr.get(i) + arr.get(j) == sum) {\n                // if the sum is equal to the target, increment the count\n                count++;\n                // move the pointers\n                i++;\n                j--;\n            } else if (arr.get(i) + arr.get(j) < sum) {\n                // if the sum is less than the target, move the left pointer\n                i++;\n            } else {\n                // if the sum is greater than the target, move the right pointer\n                j--;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpplraql2i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (int i = 0; i < arr.size(); i++) {\n            long x = arr.get(i);\n            if (map.containsKey(sum - x)) {\n                count += map.get(sum - x);\n            }\n            if (map.containsKey(x)) {\n                map.put(x, map.get(x) + 1);\n            } else {\n                map.put(x, 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpg4i36mvf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmp4n555o39.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long ans = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                ans += map.get(sum - i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpq7xf5pj4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and\n            // maintain the count of all sums in a hash map 'map2'\n            for (int j = i + 1; j < arr.size(); j++) {\n                long sum2 = sum - (arr.get(i) + arr.get(j));\n\n                // If sum is seen before, increment count\n                if (map2.containsKey(sum2))\n                    count += map2.get(sum2);\n\n                // Add 'sum' to 'map2'\n                Long prevCount = map2.get(arr.get(j));\n                if (prevCount == null)\n                    prevCount = 0L;\n                map2.put(arr.get(j), prevCount + 1);\n            }\n\n            // Add 'sum' to 'map'\n            Long prevCount = map.get(arr.get(i));\n            if (prevCount == null)\n                prevCount = 0L;\n            map.put(arr.get(i), prevCount + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpiya8ft7t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // initialize the count\n        long count = 0;\n        // initialize the left and right pointers\n        int left = 0;\n        int right = arr.size() - 1;\n        // loop through the array\n        while (left < right) {\n            // if the sum of the left and right pointers is equal to the sum\n            if (arr.get(left) + arr.get(right) == sum) {\n                // increment the count\n                count++;\n                // increment the left pointer\n                left++;\n                // decrement the right pointer\n                right--;\n            }\n            // if the sum of the left and right pointers is less than the sum\n            else if (arr.get(left) + arr.get(right) < sum) {\n                // increment the left pointer\n                left++;\n            }\n            // if the sum of the left and right pointers is greater than the sum\n            else {\n                // decrement the right pointer\n                right--;\n            }\n        }\n        // return the count\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmp3zm0h39m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Find sum of current pair and store it in a hash map\n            long curr_sum = sum - arr.get(i);\n            // If sum is seen before, increment count and continue\n            if (map.containsKey(curr_sum)) {\n                count += map.get(curr_sum);\n            }\n\n            // Add curr_sum to hash map\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpjwsuoa06.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum\n            //map = new HashMap<>();\n\n            // Initialize count for current pair (arr[i], arr[j])\n            long curr_sum = sum - arr.get(i);\n\n            // If current sum is seen before, increment count\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add arr[i] to hash map\n            long count1 = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), count1 + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpwidutt01.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Sort the array in non-decreasing order\n        Collections.sort(arr);\n\n        int n = arr.size();\n\n        // Initialize result\n        long count = 0;\n\n        // Consider all possible pairs and check their sums\n        for (int i = 0; i < n; i++)\n            for (int j = i + 1; j < n; j++)\n                if ((arr.get(i) + arr.get(j)) == sum)\n                    count++;\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpxnfwrews.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // initialize the count\n        long count = 0;\n        // initialize the left and right pointers\n        int left = 0;\n        int right = arr.size() - 1;\n        // iterate through the array\n        while (left < right) {\n            // get the sum of the left and right pointers\n            long s = arr.get(left) + arr.get(right);\n            // if the sum is equal to the target sum\n            if (s == sum) {\n                // increment the count\n                count++;\n                // increment the left pointer\n                left++;\n                // decrement the right pointer\n                right--;\n            }\n            // if the sum is less than the target sum\n            else if (s < sum) {\n                // increment the left pointer\n                left++;\n            }\n            // if the sum is greater than the target sum\n            else {\n                // decrement the right pointer\n                right--;\n            }\n        }\n        // return the count\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpsifu9nbj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            long diff = sum - i;\n            if (map.containsKey(diff)) {\n                count += map.get(diff);\n            }\n            if (diff == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmprjb0_epf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmp52acic93.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp0hzupose.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (int i = 0; i < arr.size(); i++) {\n            long temp = sum - arr.get(i);\n            if (map.containsKey(temp)) {\n                count += map.get(temp);\n            }\n            if (map.containsKey(arr.get(i))) {\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n            } else {\n                map.put(arr.get(i), 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122947,
      "stdout": "",
      "stderr": "/tmp/tmpe9f802uw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            count += map.getOrDefault(sum - arr.get(i), 0L);\n            map.put(arr.get(i), map.getOrDefault(arr.get(i), 0L) + 1);\n        }\n        // return the half of the final count\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpx4lcayoq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum\n            //map.clear();\n\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If true then there is a pair\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            if (map.containsKey(arr.get(i)))\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n            else\n                map.put(arr.get(i), 1L);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpgykatsnl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum\n            //map.clear();\n\n            // Traverse through all possible pairs of arr[] and\n            // add the count to 'count'\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum is not seen before, insert it with\n                // count as 1\n                long x = arr.get(i) + arr.get(j);\n                if (!map.containsKey(x))\n                    map.put(x, 1L);\n\n                    // If seen before, increment the count\n                else\n                    map.put(x, map.get(x) + 1);\n\n                // If sum is seen before, increment the count of\n                // sum by the count of previous sum\n                if (map.containsKey(sum - x))\n                    count += map.get(sum - x);\n            }\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmp5xskq__9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and\n            // maintain the count of all sums in a hash map 'map2'\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash map,\n                // then store it and initialize count to 1\n                if (!map2.containsKey(arr.get(i) + arr.get(j)))\n                    map2.put(arr.get(i) + arr.get(j), 1L);\n                else // Increment count of current sum in hash map\n                    map2.put(arr.get(i) + arr.get(j), map2.get(arr.get(i) + arr.get(j)) + 1);\n            }\n\n            // Traverse through all elements of map2\n            for (Map.Entry<Long, Long> it : map2.entrySet()) {\n                // If difference (sum-arr[i]-it.first) is seen\n                // before, then increment count by count of\n                // pair corresponding to this difference\n                if (map.containsKey(sum - arr.get(i) - it.getKey()))\n                    count += map.get(sum - arr.get(i) - it.getKey()) * it.getValue();\n\n                // Add count of current pair to hash map\n                if (!map.containsKey(arr.get(i) + it.getKey()))\n                    map.put(arr.get(i) + it.getKey(), it.getValue());\n                else\n                    map.put(arr.get(i) + it.getKey(), map.get(arr.get(i) + it.getKey()) +\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpwnihvyao.java:46: error: illegal start of expression\n    }\n    ^\n/tmp/tmpwnihvyao.java:47: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmp68gbhfh6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> temp = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and continue to next pair\n                if (!map.containsKey(arr.get(i) + arr.get(j)))\n                    temp.put(arr.get(i) + arr.get(j), 1L);\n                else // Else increment the count of sum in hash map\n                    temp.put(arr.get(i) + arr.get(j), temp.get(arr.get(i) + arr.get(j)) + 1);\n            }\n\n            // Add all counts of sums to the previous counts\n            for (Map.Entry<Long, Long> entry : temp.entrySet()) {\n                Long key = entry.getKey();\n                Long value = entry.getValue();\n\n                // If sum is not present in hash map, add it\n                if (!map.containsKey(key))\n                    map.put(key, value);\n\n                    // If sum is present in hash map, increment its count\n                else\n                    map.put(key, map.get(key) + value);\n            }\n        }\n\n        // Traverse through map and increment count\n        for (Map.Entry<Long, Long> entry : map.entrySet()) {\n            Long key = entry.getKey();\n            Long value = entry.getValue();\n\n            // If (key is equal to sum)\n            if (key == sum)\n                count += value;\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpc0ow89yy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpfm_9x1xp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            map.clear();\n            for (int j = i + 1; j < arr.size(); j++) {\n                long x = sum - (arr.get(i) + arr.get(j));\n                if (x == 0)\n                    count++;\n                if (map.containsKey(x))\n                    count += map.get(x);\n                if (map.containsKey(arr.get(j)))\n                    map.put(arr.get(j), map.get(arr.get(j)) + 1);\n                else\n                    map.put(arr.get(j), 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpxgkqrcha.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum\n            //map.clear();\n\n            // Store counts of all sums in map\n            for (int j = i + 1; j < arr.size(); j++) {\n                long sum2 = arr.get(i) + arr.get(j);\n                if (map.containsKey(sum2)) {\n                    map.put(sum2, map.get(sum2) + 1);\n                } else {\n                    map.put(sum2, 1L);\n                }\n            }\n\n            // Traverse through all elements again\n            for (int j = i + 1; j < arr.size(); j++) {\n                long sum2 = arr.get(i) + arr.get(j);\n\n                // If sum is not in hash map, continue\n                if (!map.containsKey(sum - sum2)) {\n                    continue;\n                }\n\n                // If sum is present in hash map, update count\n                count += map.get(sum - sum2);\n            }\n        }\n\n        // Return count\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpm8vn0t38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        // Iterate through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n            // Add curr_sum to hash table\n            if (map.containsKey(arr.get(i))) {\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n            } else {\n                map.put(arr.get(i), 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmppyzmsyim.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        Collections.sort(arr);\n        int n = arr.size();\n        int count = 0;\n        int l = 0;\n        int r = n - 1;\n        while (l < r) {\n            if (arr.get(l) + arr.get(r) == sum) {\n                count++;\n                l++;\n                r--;\n            } else if (arr.get(l) + arr.get(r) < sum) {\n                l++;\n            } else {\n                r--;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpvs8kzkm0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for(long i : arr) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for(long i : arr) {\n            if(map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if(sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmp4jsyx00z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum\n            map.clear();\n\n            // Traverse through all possible pairs of arr[] and\n            // 'sum-arr[i]'\n            for (int j = i; j < arr.size(); j++) {\n                // If sum of current pair is not in hash,\n                // then store it and continue to next pair\n                long x = sum - arr.get(j);\n                if (!map.containsKey(x))\n                    map.put(x, (long) 1);\n\n                    // Else increment count of sum in hash\n                else\n                    count += map.get(x);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmps5xmlnu6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpj0o3wgae.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        // Iterate through all numbers\n        for (long i : arr) {\n            // Initialize count of current sum plus\n            // current element\n            long temp = sum - i;\n            // If temp is not present in hash, then\n            // store it and initialize its count as 1\n            if (!map.containsKey(temp)) {\n                map.put(temp, 1L);\n            } else {\n                // Increment count of current sum plus\n                // current element\n                long c = map.get(temp);\n                map.put(temp, c + 1);\n            }\n        }\n        // Iterate through all elements and increment\n        // the count (Notice that every pair is\n        // counted twice)\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                count += map.get(i);\n            }\n        }\n        // return the half of the total count\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp57bka2ev.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> temp = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and increment count\n                long x = sum - (arr.get(i) + arr.get(j));\n                if (!map.containsKey(x)) {\n                    map.put(x, 1L);\n                    count++;\n                }\n\n                // Else update count of sum in hash map\n                else\n                    map.put(x, map.get(x) + 1);\n\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and increment count\n                x = sum - (arr.get(j));\n                if (!temp.containsKey(x))\n                    temp.put(x, 1L);\n\n                // Else update count of sum in hash map\n                else\n                    temp.put(x, temp.get(x) + 1);\n            }\n\n            // Add count of all sums in current window to the\n            // result\n            for (Map.Entry<Long, Long> it : temp.entrySet()) {\n                Long x = it.getKey();\n                Long value = it.getValue();\n\n                // If sum is not in hash map, then store it and\n                // initialize count to 0\n                if (!map.containsKey(x))\n                    map.put(x, value);\n\n                // Else update count of sum in hash map\n                else\n                    map.put(x, map.get(x) + value);\n            }\n        }\n\n        // Return number of tuples with given sum\n        return count;\n    }\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmppirf6avq.java:68: error: class, interface, enum, or record expected\n    public static void main(String[] args) {\n                  ^\n/tmp/tmppirf6avq.java:70: error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    ^\n/tmp/tmppirf6avq.java:71: error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    ^\n/tmp/tmppirf6avq.java:72: error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    ^\n/tmp/tmppirf6avq.java:73: error: class, interface, enum, or record expected\n    }\n    ^\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            // if it is not present in map\n            // then add it to map with count 1, else increment\n            // its count.\n            map.putIfAbsent(arr.get(i), 0L);\n            map.put(arr.get(i), map.get(arr.get(i)) + 1);\n        }\n        // Traverse again\n        for (int i = 0; i < arr.size(); i++) {\n            // Find number of tuples with sum equal to sum-arr[i]\n            if (map.containsKey(sum - arr.get(i)))\n                count += map.get(sum - arr.get(i));\n            // if (arr[i], arr[i]) pair satisfies the condition,\n            // then we need to ensure that the count is\n            // decreased by one such that the (arr[i], arr[i])\n            // pair is not considered\n            if (sum - arr.get(i) == arr.get(i))\n                count--;\n        }\n        // return the half of the total count\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpfis6lu7x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            count += map.getOrDefault(sum - arr.get(i), 0L);\n            map.put(arr.get(i), map.getOrDefault(arr.get(i), 0L) + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpyd3t_522.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // set the two pointers\n        int left = 0;\n        int right = arr.size() - 1;\n        long count = 0;\n        while (left < right) {\n            long s = arr.get(left) + arr.get(right);\n            if (s == sum) {\n                count++;\n                left++;\n                right--;\n            } else if (s < sum) {\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp4ug4knal.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // your code goes here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(map.containsKey(arr.get(i))) {\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n            } else {\n                map.put(arr.get(i), (long)1);\n            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n            if(map.containsKey(sum - arr.get(i))) {\n                count += map.get(sum - arr.get(i));\n            }\n            if(sum - arr.get(i) == arr.get(i)) {\n                count--;\n            }\n        }\n        return count/2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpmld8kcgb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            map.clear();\n            for (int j = i + 1; j < arr.size(); j++) {\n                long x = sum - (arr.get(i) + arr.get(j));\n                if (x == 0)\n                    count++;\n                if (map.containsKey(x))\n                    count += map.get(x);\n                if (map.containsKey(arr.get(j)))\n                    map.put(arr.get(j), map.get(arr.get(j)) + 1);\n                else\n                    map.put(arr.get(j), 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpxgkqrcha.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long count1 = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), count1 + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmppspqw2gb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmp52acic93.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpi12wxa_o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map1 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash,\n                // then store it and continue to next pair\n                long sum1 = sum - (arr.get(i) + arr.get(j));\n                if (!map1.containsKey(sum1))\n                    map1.put(sum1, 1L);\n                else\n                    map1.put(sum1, map1.get(sum1) + 1);\n            }\n\n            // Traverse through all possible pairs of arr[] and arr[i]\n            for (int j = 0; j < i; j++) {\n                // If sum of current pair is not in hash,\n                // then store it and continue to next pair\n                long sum1 = sum - (arr.get(i) + arr.get(j));\n                if (map1.containsKey(sum1))\n                    count += map1.get(sum1);\n            }\n\n            // Store counts of current pair sums in hash map\n            for (Map.Entry<Long, Long> entry : map1.entrySet()) {\n                long value = entry.getValue();\n                long key = entry.getKey();\n                if (!map.containsKey(key))\n                    map.put(key, value);\n                else\n                    map.put(key, map.get(key) + value);\n            }\n        }\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size() - 1; i++) {\n            // If sum of current pair is not in hash,\n            // then\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmp6g2qa9mh.java:58: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and\n            // 'arr[i]'\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash,\n                // then store it and continue to next pair\n                long x = sum - (arr.get(i) + arr.get(j));\n                if (!map.containsKey(x))\n                    map.put(x, (long) 1);\n\n                else // Else increment count of sum in hash\n                    map.put(x, map.get(x) + 1);\n\n                // If sum of current pair is not in hash,\n                // then store it and continue to next pair\n                long y = sum - (arr.get(i) + arr.get(j));\n                if (!map2.containsKey(y))\n                    map2.put(y, (long) 1);\n\n                else // Else increment count of sum in hash\n                    map2.put(y, map2.get(y) + 1);\n            }\n\n            // Traverse through all elements of arr[i] and\n            // increment count (Notice that every pair is\n            // counted twice)\n            for (Map.Entry<Long, Long> entry : map2.entrySet())\n                count += entry.getValue();\n        }\n\n        // Return result\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpgbpusmyy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (int i = 0; i < arr.size(); i++) {\n            long temp = sum - arr.get(i);\n            if (map.containsKey(temp)) {\n                count += map.get(temp);\n            }\n            if (map.containsKey(arr.get(i))) {\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n            } else {\n                map.put(arr.get(i), 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122947,
      "stdout": "",
      "stderr": "/tmp/tmpe9f802uw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store counts of\n            // difference\n            //map.clear();\n\n            // Traverse through all possible pairs of arr[]\n            // again\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash,\n                // then store it and continue to next pair\n                long sum2 = arr.get(i) + arr.get(j);\n                if (!map.containsKey(sum2))\n                    map.put(sum2, (long) 1);\n\n                    // If sum of current pair is in hash, then\n                    // increment count of pairs with given sum\n                else\n                    map.put(sum2, map.get(sum2) + 1);\n            }\n\n            // Traverse through map and increment 'count'\n            // for every pair with given sum\n            if (map.containsKey(sum))\n                count += map.get(sum);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpjakksw6o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long count1 = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), count1 + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmppspqw2gb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // two pointers\n        int i = 0;\n        int j = arr.size() - 1;\n        long count = 0;\n        while (i < j) {\n            if (arr.get(i) + arr.get(j) == sum) {\n                count++;\n                i++;\n                j--;\n            } else if (arr.get(i) + arr.get(j) > sum) {\n                j--;\n            } else {\n                i++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpmgmf0o3q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // initialize the count\n        long count = 0;\n        // initialize the two pointers\n        int left = 0;\n        int right = arr.size() - 1;\n        while (left < right) {\n            // if the sum of the two elements is equal to the sum, increment the count and move the left pointer\n            if (arr.get(left) + arr.get(right) == sum) {\n                count++;\n                left++;\n            }\n            // if the sum of the two elements is less than the sum, move the left pointer\n            else if (arr.get(left) + arr.get(right) < sum) {\n                left++;\n            }\n            // if the sum of the two elements is greater than the sum, move the right pointer\n            else {\n                right--;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp83mh9kb3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpi12wxa_o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to all 0's\n            map.put(arr.get(i), 0L);\n        }\n\n        // Store counts of all elements in map\n        for (int i = 0; i < arr.size(); i++) {\n            map.put(arr.get(i), map.get(arr.get(i)) + 1);\n        }\n\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            if (map.get(sum - arr.get(i)) != null) {\n                count += map.get(sum - arr.get(i));\n            }\n\n            // if (arr[i], arr[i]) pair satisfies the condition,\n            // then we need to ensure that the count is\n            // decreased by one such that the (arr[i], arr[i])\n            // pair is not considered\n            if (sum - arr.get(i) == arr.get(i)) {\n                count--;\n            }\n        }\n\n        // return the half of the total count\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmplmyb1dp_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpfm_9x1xp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0;\n        // Iterate through all elements and increment the\n        // count (Notice that every pair is counted twice)\n        for (int i = 0; i < arr.size(); i++) {\n            count += map.getOrDefault(sum - arr.get(i), 0L);\n            map.put(arr.get(i), map.getOrDefault(arr.get(i), 0L) + 1);\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpyd3t_522.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            map = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is equal to\n                // sum, then increment count\n                if (arr.get(i) + arr.get(j) == sum)\n                    count++;\n\n                // Add arr[j] to hash map\n                if (map.containsKey(arr.get(j)))\n                    map.put(arr.get(j), map.get(arr.get(j)) + 1);\n                else\n                    map.put(arr.get(j), 1L);\n\n                // If sum of elements at index i & j is equal to\n                // sum, then increment count.\n                if (map.containsKey(sum - arr.get(i)))\n                    count += map.get(sum - arr.get(i));\n            }\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp951p4s3q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> curr_map = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is not in hash\n                // map, then store it and continue to next pair\n                long x = sum - (arr.get(i) + arr.get(j));\n                if (!map.containsKey(x))\n                    map.put(x, 1L);\n                else\n                    map.put(x, map.get(x) + 1);\n\n                // If sum of elements at index i & j is in hash map,\n                // then there is one more pair with given sum.\n                if (curr_map.containsKey(arr.get(j)))\n                    count += curr_map.get(arr.get(j));\n\n                // Store count of current element in hash map\n                if (!curr_map.containsKey(arr.get(j)))\n                    curr_map.put(arr.get(j), 1L);\n                else\n                    curr_map.put(arr.get(j), curr_map.get(arr.get(j)) + 1);\n            }\n        }\n\n        // Return total count of pairs with given sum\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp_87wh5l4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            map.put(arr.get(i), map.getOrDefault(arr.get(i), 0L) + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp71ccvu74.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n\n            // Traverse through all possible pairs of arr[] and\n            // maintain the count of all sums in map\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash,\n                // then store it and initialize count to 1\n                long sum2 = sum - (arr.get(i) + arr.get(j));\n                if (!map2.containsKey(sum2))\n                    map2.put(sum2, (long) 1);\n                else // Increment count of sum in hash\n                    map2.put(sum2, map2.get(sum2) + 1);\n            }\n\n            // Traverse through all elements of arr[] and add\n            // counts of all sums to count\n            for (int j = 0; j < i; j++) {\n                // If sum of current pair is in hash, then\n                // increment count\n                if (map2.containsKey(arr.get(j)))\n                    count += map2.get(arr.get(j));\n            }\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp_gvm1pn4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        // sort the array\n        Collections.sort(arr);\n        // initialize two index variables to find the candidate elements in the sorted array.\n        int l = 0;\n        int r = arr.size() - 1;\n        while (l < r) {\n            if (arr.get(l) + arr.get(r) == sum) {\n                // increment the count\n                count++;\n                // if the elements are same then there is only one pair\n                if (arr.get(l) == arr.get(r)) {\n                    return count;\n                }\n                // move to next element\n                l++;\n                r--;\n            } else if (arr.get(l) + arr.get(r) < sum) {\n                l++;\n            } else {\n                r--;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmphw3at8qf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long count = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpsz84pf7y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> curr_map = new HashMap<>();\n\n            // Traverse through all elements after arr[i]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of elements at index i & j is equal to\n                // sum, then increment count\n                long x = arr.get(i), y = arr.get(j);\n                if (x + y == sum) {\n                    // increment previous count of (x, y)\n                    if (curr_map.containsKey(x))\n                        count += curr_map.get(x);\n\n                    // increment previous count of (y, x)\n                    if (map.containsKey(y))\n                        count += map.get(y);\n\n                    // Update map with count of (x, y)\n                    curr_map.put(y, curr_map.getOrDefault(y, 0L) + 1);\n\n                    // Update map with count of (y, x)\n                    map.put(x, map.getOrDefault(x, 0L) + 1);\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpe_la4dxn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp1bmppj8j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            long diff = sum - i;\n            if (map.containsKey(diff)) {\n                count += map.get(diff);\n            }\n            if (diff == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmprjb0_epf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // sort the array\n        Collections.sort(arr);\n        // initialize the count\n        long count = 0;\n        // initialize the left and right pointers\n        int left = 0, right = arr.size() - 1;\n        // loop until the left pointer is less than the right pointer\n        while (left < right) {\n            // if the sum of the left and right pointers is equal to the sum, increment the count and move the left pointer to the right\n            if (arr.get(left) + arr.get(right) == sum) {\n                count++;\n                left++;\n            }\n            // if the sum of the left and right pointers is less than the sum, move the left pointer to the right\n            else if (arr.get(left) + arr.get(right) < sum) {\n                left++;\n            }\n            // if the sum of the left and right pointers is greater than the sum, move the right pointer to the left\n            else {\n                right--;\n            }\n        }\n        // return the count\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpif1k4dpj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpbcsbkb2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpzpx3unqz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                count--;\n            }\n        }\n        return count / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "/tmp/tmpfm_9x1xp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n        long count = 0; // Initialize result\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum-arr[i]\n            HashMap<Long, Long> map2 = new HashMap<>();\n            // Traverse through all possible pairs of arr[]\n            for (int j = i + 1; j < arr.size(); j++) {\n                // If sum of current pair is not in hash,\n                // then store it and continue to next pair\n                long x = sum - (arr.get(i) + arr.get(j));\n                if (!map2.containsKey(x))\n                    map2.put(x, 1L);\n                else\n                    map2.put(x, map2.get(x) + 1);\n            }\n            // Add count of all pairs with sum equals to\n            // arr[i] + arr[j]\n            for (Map.Entry<Long, Long> entry : map2.entrySet()) {\n                if (map.containsKey(entry.getKey()))\n                    count += map.get(entry.getKey()) * entry.getValue();\n            }\n            // Store counts of all sums in a hash map\n            for (Map.Entry<Long, Long> entry : map2.entrySet()) {\n                if (!map.containsKey(entry.getKey()))\n                    map.put(entry.getKey(), entry.getValue());\n                else\n                    map.put(entry.getKey(), map.get(entry.getKey()) + entry.getValue());\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpwpthheyg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpgcosu91f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize empty map to store count of sum\n            // map.clear();\n\n            // Traverse through all possible pairs of arr[] and\n            // add counts to map\n            for (int j = i + 1; j < arr.size(); j++) {\n                long sum2 = arr.get(i) + arr.get(j);\n\n                // increment count corresponding to sum2\n                Long c = map.get(sum2);\n                if (c == null) {\n                    map.put(sum2, 1L);\n                } else {\n                    map.put(sum2, c + 1);\n                }\n            }\n\n            // Traverse through map and add 'count' to result\n            // if (map.containsKey(sum)) {\n            //     count += map.get(sum);\n            // }\n            for (Map.Entry<Long, Long> entry : map.entrySet()) {\n                if (entry.getKey() == sum) {\n                    count += entry.getValue();\n                }\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmphd6w6ddm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, increment count\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpop3o7ghv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpi12wxa_o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long ans = 0;\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                ans += map.get(sum - i);\n            }\n            if (sum - i == i) {\n                ans--;\n            }\n        }\n        return ans / 2;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510192,
      "stdout": "",
      "stderr": "/tmp/tmpzhx1zpg2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        long count = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(sum - i)) {\n                count += map.get(sum - i);\n            }\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpwitcxek_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n    public static long getPairsCount(ArrayList<Long> arr, long sum) {\n        // Create an empty Hash to store mapping from sum to\n        // number of tuples storing the sum\n        HashMap<Long, Long> map = new HashMap<>();\n\n        long count = 0; // Initialize result\n\n        // Traverse through all possible pairs of arr[]\n        for (int i = 0; i < arr.size(); i++) {\n            // Initialize sum of current pair\n            long curr_sum = sum - arr.get(i);\n\n            // If curr_sum is seen before, there is a tuple with\n            // given sum\n            if (map.containsKey(curr_sum))\n                count += map.get(curr_sum);\n\n            // Add curr_sum to hash table\n            long value = map.getOrDefault(arr.get(i), 0L);\n            map.put(arr.get(i), value + 1);\n        }\n\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l))), (2l)) == (6l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)-1l, (long)5l))), (6l)) == (3l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)3l))), (1l)) == (1l));\n    assert(getPairsCount((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)3l))), (-3l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpi12wxa_o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
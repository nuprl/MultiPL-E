{
  "name": "mbpp_18_remove_dirty_chars",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to remove characters from the first string which are present in the second string.\n    public static String removeDirtyChars(String string, String second_string) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_18_remove_dirty_chars.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(removeDirtyChars((\"probasscurve\"), (\"pros\")).equals((\"bacuve\")));\n    assert(removeDirtyChars((\"digitalindia\"), (\"talent\")).equals((\"digiidi\")));\n    assert(removeDirtyChars((\"exoticmiles\"), (\"toxic\")).equals((\"emles\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (!second_string.contains(string.charAt(i) + \"\")) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (!second_string.contains(string.substring(i, i + 1))) {\n                sb.append(string.substring(i, i + 1));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (!second_string.contains(string.charAt(i) + \"\")) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n            if (second_string.indexOf(c) == -1) {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        StringBuilder sb = new StringBuilder();\n        for (char c : string.toCharArray()) {\n            if (!second_string.contains(String.valueOf(c))) {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            char c = string.charAt(i);\n            if (second_string.indexOf(c) == -1) {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (!second_string.contains(string.substring(i, i + 1))) {\n                sb.append(string.substring(i, i + 1));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (!second_string.contains(string.charAt(i) + \"\")) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (!second_string.contains(string.substring(i, i + 1))) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (second_string.indexOf(string.charAt(i)) == -1) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();"
  ]
}
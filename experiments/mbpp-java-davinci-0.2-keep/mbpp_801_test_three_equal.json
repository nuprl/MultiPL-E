{
  "name": "mbpp_801_test_three_equal",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of equal numbers from three given integers.\n    public static long testThreeEqual(long x, long y, long z) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(testThreeEqual((1l), (1l), (1l)) == (3l));\n    assert(testThreeEqual((-1l), (-2l), (-3l)) == (0l));\n    assert(testThreeEqual((1l), (2l), (2l)) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (x == y && y == z) ? 3 : 0;",
    "        return (x == y && y == z) ? 3 : 0;",
    "        return (x == y && y == z) ? 3 : 0;",
    "        return (x == y && y == z) ? 3 : 0;",
    "        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;",
    "        if (x == y && x == z) {\n            return 3;\n        } else if (x == y || x == z || y == z) {\n            return 2;\n        } else {\n            return 0;\n        }",
    "        return (x == y && y == z) ? 3 : 0;",
    "        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }",
    "        return x == y && y == z ? 1 : 0;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;",
    "        return (x == y && y == z) ? 3 : 0;",
    "        return (x == y && y == z) ? 1 : 0;",
    "        return (x == y && y == z) ? 1 : 0;",
    "        return (x == y && y == z) ? 3 : 0;",
    "        return (x == y && y == z) ? 3 : 0;",
    "        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }",
    "        return (x == y && y == z) ? 3 : (x == y || y == z || x == z) ? 2 : 0;",
    "        return (x == y && y == z) ? 3 : 0;",
    "        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;",
    "        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }"
  ]
}
{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long amicableNumbersSum(long limit) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(amicableNumbersSum((999l)) == (504l));\n    assert(amicableNumbersSum((9999l)) == (31626l));\n    assert(amicableNumbersSum((99l)) == (0l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = sumOfDivisors(i);\n            if (sumOfDivisors != i && sumOfDivisors < limit && sumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = sumOfDivisors(i);\n            if (sumOfDivisors > i && sumOfDivisors < limit && sumOfDivisors(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = sumOfDivisors(i);\n            if (sumOfDivisors != i && sumOfDivisors < limit && sumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = sumOfDivisors(i);\n            if (a != i && sumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        return 0;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = sumOfDivisors(i);\n            long sum2 = sumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = sumOfDivisors(i);\n            if (sumOfDivisors > i && sumOfDivisors <= limit && sumOfDivisors(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = sumOfDivisors(i);\n            if (sumOfDivisors != i && sumOfDivisors <= limit && sumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = sumOfDivisors(i);\n            if (sumOfDivisors != i && sumOfDivisors < limit && sumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = sumOfDivisors(i);\n            if (sumOfDivisors > i && sumOfDivisors < limit && sumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = sumOfDivisors(i);\n            if (d != i && sumOfDivisors(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = divisorsSum(i);\n            if (sumOfDivisors > i && divisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = sumOfDivisors(i);\n            long b = sumOfDivisors(a);\n            if (i == b && a != b) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = sumOfDivisors(i);\n            if (a != i && sumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = sumOfProperDivisors(i);\n            if (a != i && sumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = sumOfDivisors(i);\n            if (a != i && sumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = sumOfDivisors(i);\n            if (sumOfDivisors > i && sumOfDivisors <= limit && sumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n                sum += sumOfDivisors;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = divisorsSum(i);\n            if (i == divisorsSum(sumOfDivisors) && i != sumOfDivisors) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = sumOfDivisors(i);\n            if (sumOfDivisors > i && sumOfDivisors <= limit && sumOfDivisors(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = sumOfDivisors(i);\n            if (a != i && sumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;"
  ]
}
{
  "name": "mbpp_283_validate",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(count[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        HashMap<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            n /= 10;\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n        }\n        for (int key : map.keySet()) {\n            if (map.get(key) > key) {\n                return false;\n            }\n        }\n        return true;",
    "        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        Map<Long, Long> map = new HashMap<>();\n        while (n > 0) {\n            long digit = n % 10;\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1L);\n            }\n            n /= 10;\n        }\n        for (Map.Entry<Long, Long> entry : map.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        Map<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.get(c) > Character.getNumericValue(c)) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        HashMap<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n            n = n / 10;\n        }\n        for (int key : map.keySet()) {\n            if (map.get(key) > key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;",
    "        int[] freq = new int[10];\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        HashMap<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n            n /= 10;\n        }\n        for (int key : map.keySet()) {\n            if (map.get(key) > key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        int[] arr = new int[10];\n        while(n > 0) {\n            int digit = (int) (n % 10);\n            arr[digit]++;\n            n /= 10;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(arr[i] > i) return false;\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        int[] digits = new int[10];\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 1; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;"
  ]
}
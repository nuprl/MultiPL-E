{
  "name": "mbpp_251_insert_element",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.\n    public static ArrayList<String> insertElement(ArrayList<String> list, String element) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_251_insert_element.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(insertElement((new ArrayList<String>(Arrays.asList((String)\"Red\", (String)\"Green\", (String)\"Black\"))), (\"c\")).equals((new ArrayList<String>(Arrays.asList((String)\"c\", (String)\"Red\", (String)\"c\", (String)\"Green\", (String)\"c\", (String)\"Black\")))));\n    assert(insertElement((new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"java\"))), (\"program\")).equals((new ArrayList<String>(Arrays.asList((String)\"program\", (String)\"python\", (String)\"program\", (String)\"java\")))));\n    assert(insertElement((new ArrayList<String>(Arrays.asList((String)\"happy\", (String)\"sad\"))), (\"laugh\")).equals((new ArrayList<String>(Arrays.asList((String)\"laugh\", (String)\"happy\", (String)\"laugh\", (String)\"sad\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String str : list) {\n            newList.add(element);\n            newList.add(str);\n        }\n        return newList;",
    "        ArrayList<String> result = new ArrayList<String>();\n        for (String s : list) {\n            result.add(element);\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String item : list) {\n            newList.add(element);\n            newList.add(item);\n        }\n        return newList;",
    "        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < list.size(); i++) {\n            result.add(element);\n            result.add(list.get(i));\n        }\n        return result;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String s : list) {\n            newList.add(element);\n            newList.add(s);\n        }\n        return newList;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String s : list) {\n            newList.add(element);\n            newList.add(s);\n        }\n        return newList;",
    "        ArrayList<String> result = new ArrayList<String>();\n        for (String s : list) {\n            result.add(element);\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String item : list) {\n            newList.add(element);\n            newList.add(item);\n        }\n        return newList;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String item : list) {\n            newList.add(element);\n            newList.add(item);\n        }\n        return newList;",
    "        ArrayList<String> result = new ArrayList<String>();\n        for (String s : list) {\n            result.add(element);\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        for (String item : list) {\n            result.add(element);\n            result.add(item);\n        }\n        return result;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String s : list) {\n            newList.add(element);\n            newList.add(s);\n        }\n        return newList;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String s : list) {\n            newList.add(element);\n            newList.add(s);\n        }\n        return newList;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String item : list) {\n            newList.add(element);\n            newList.add(item);\n        }\n        return newList;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String item : list) {\n            newList.add(element);\n            newList.add(item);\n        }\n        return newList;",
    "        ArrayList<String> result = new ArrayList<String>();\n        for (String item : list) {\n            result.add(element);\n            result.add(item);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        for (String s : list) {\n            result.add(element);\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        for (String s : list) {\n            result.add(element);\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (int i = 0; i < list.size(); i++) {\n            newList.add(element);\n            newList.add(list.get(i));\n        }\n        return newList;",
    "        ArrayList<String> newList = new ArrayList<String>();\n        for (String s : list) {\n            newList.add(element);\n            newList.add(s);\n        }\n        return newList;"
  ]
}
{
  "name": "mbpp_125_find_length",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp1ebkf4zc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int count = 0;\n                for (int k = i; k <= j; k++) {\n                    if (arr[k] == 0) {\n                        count++;\n                    }\n                }\n                max = Math.max(max, Math.abs(count - (j - i + 1 - count)));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp2fs9zpof.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        long zero = 0;\n        long one = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zero++;\n            } else {\n                one++;\n            }\n            if (zero == one) {\n                count = zero + one;\n            } else {\n                count = Math.max(zero, one);\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpzj623uls.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[n];\n        int[] count1 = new int[n];\n        int[] count0 = new int[n];\n        count[0] = string.charAt(0) == '1' ? 1 : 0;\n        count1[0] = string.charAt(0) == '1' ? 1 : 0;\n        count0[0] = string.charAt(0) == '0' ? 1 : 0;\n        for (int i = 1; i < n; i++) {\n            count[i] = count[i - 1] + (string.charAt(i) == '1' ? 1 : 0);\n            count1[i] = count1[i - 1] + (string.charAt(i) == '1' ? 1 : 0);\n            count0[i] = count0[i - 1] + (string.charAt(i) == '0' ? 1 : 0);\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int ones = count1[j] - (i == 0 ? 0 : count1[i - 1]);\n                int zeros = count0[j] - (i == 0 ? 0 : count0[i - 1]);\n                max = Math.max(max, Math.abs(ones - zeros));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpa3n0nka9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) == '0' ? -1 : 1;\n        }\n        HashMap<Integer, Integer> map = new HashMap<>();\n        int sum = 0;\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            sum += arr[i];\n            if (sum == 0) {\n                max = i + 1;\n            }\n            if (map.containsKey(sum)) {\n                max = Math.max(max, i - map.get(sum));\n            } else {\n                map.put(sum, i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp1g7zp6n5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpeko0__e4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long maxLength = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                maxLength = Math.max(maxLength, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                maxLength = Math.max(maxLength, string.length() - i);\n            }\n        }\n        return maxLength;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpm4kdqsxt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpeko0__e4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[n];\n        int[] count1 = new int[n];\n        int[] count0 = new int[n];\n        int[] count01 = new int[n];\n        int[] count10 = new int[n];\n        int[] count11 = new int[n];\n        int[] count00 = new int[n];\n        int[] count001 = new int[n];\n        int[] count010 = new int[n];\n        int[] count011 = new int[n];\n        int[] count100 = new int[n];\n        int[] count101 = new int[n];\n        int[] count110 = new int[n];\n        int[] count111 = new int[n];\n        int[] count000 = new int[n];\n        int[] count001_ = new int[n];\n        int[] count010_ = new int[n];\n        int[] count011_ = new int[n];\n        int[] count100_ = new int[n];\n        int[] count101_ = new int[n];\n        int[] count110_ = new int[n];\n        int[] count111_ = new int[n];\n        int[] count0000 = new int[n];\n        int[] count0001 = new int[n];\n        int[] count0010 = new int[n];\n        int[] count0011 = new int[n];\n        int[] count0100 = new int[n];\n        int[] count0101 = new int[n];\n        int[] count0110 = new int[n];\n        int[] count0111 = new int[n];\n        int[] count1000 = new int[n];\n        int[] count1001 = new int[n];\n        int[] count1010 = new int[n];\n        int[] count1011 = new int[n];\n        int[] count1100 = new int[n];\n        int[] count1101 = new int[n];\n        int[] count1110 = new int[n];\n        int[] count1111 = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpbhdas_l5.java:54: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmp0z0ehfb6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            }\n            zeros[i] = count;\n        }\n        count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            }\n            ones[i] = count;\n        }\n        int max = Integer.MIN_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int diff = Math.abs(zeros[j] - ones[j]);\n                if (i != 0) {\n                    diff -= Math.abs(zeros[i - 1] - ones[i - 1]);\n                }\n                max = Math.max(max, diff);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpw8udde02.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeros[i] = 1;\n            } else {\n                ones[i] = 1;\n            }\n        }\n        for (int i = 1; i < n; i++) {\n            zeros[i] += zeros[i - 1];\n            ones[i] += ones[i - 1];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z = zeros[j];\n                int o = ones[j];\n                if (i > 0) {\n                    z -= zeros[i - 1];\n                    o -= ones[i - 1];\n                }\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpze459p5g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (char c : string.toCharArray()) {\n            if (c == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, count);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmp9nclv5x6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        int count0 = 0;\n        int count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            count = Math.abs(count0 - count1);\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmp8py620p6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            max = Math.max(max, Math.abs(zeros - ones));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp06td4c3n.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpzm_gn9sh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(count, max);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpjynewewk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpazh0q78q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int zeroCount = 0;\n        int oneCount = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            zeros[i] = zeroCount;\n            ones[i] = oneCount;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int zeroDiff = zeros[j] - (i > 0 ? zeros[i - 1] : 0);\n                int oneDiff = ones[j] - (i > 0 ? ones[i - 1] : 0);\n                max = Math.max(max, Math.abs(zeroDiff - oneDiff));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpz1uzkm54.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            }\n            zeros[i] = count;\n        }\n        count = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            }\n            ones[i] = count;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            max = Math.max(max, Math.abs(zeros[i] - ones[i]));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpwme8ilxo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            }\n            zeros[i] = count;\n        }\n        count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            }\n            ones[i] = count;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long z = zeros[j] - zeros[i] + (string.charAt(i) == '0' ? 1 : 0);\n                long o = ones[j] - ones[i] + (string.charAt(i) == '1' ? 1 : 0);\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmps70_d9eq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp1ebkf4zc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count0++;\n            }\n            else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpnompj0k_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpzm_gn9sh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zero = new int[n];\n        int[] one = new int[n];\n        if (string.charAt(0) == '0') {\n            zero[0] = 1;\n            one[0] = 0;\n        } else {\n            zero[0] = 0;\n            one[0] = 1;\n        }\n        for (int i = 1; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zero[i] = zero[i - 1] + 1;\n                one[i] = one[i - 1];\n            } else {\n                zero[i] = zero[i - 1];\n                one[i] = one[i - 1] + 1;\n            }\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int zeros = zero[j] - zero[i] + (string.charAt(i) == '0' ? 1 : 0);\n                int ones = one[j] - one[i] + (string.charAt(i) == '1' ? 1 : 0);\n                max = Math.max(max, Math.abs(zeros - ones));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpyhz475x1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for(int i = string.length() - 1; i >= 0; i--) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpuud4l4tb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpazh0q78q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) == '0' ? -1 : 1;\n        }\n        long max = 0;\n        long sum = 0;\n        HashMap<Long, Integer> map = new HashMap<>();\n        map.put(0L, -1);\n        for (int i = 0; i < n; i++) {\n            sum += arr[i];\n            if (map.containsKey(sum)) {\n                max = Math.max(max, i - map.get(sum));\n            } else {\n                map.put(sum, i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmp9sjkhzad.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int left = 0;\n                int right = 0;\n                if (i == 0) {\n                    left = 0;\n                } else {\n                    left = prefix[i - 1];\n                }\n                if (j == n - 1) {\n                    right = 0;\n                } else {\n                    right = suffix[j + 1];\n                }\n                long temp = (j - i + 1) - Math.abs(left - right);\n                max = Math.max(max, temp);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmp7vgg458j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmp7cdafx8o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count1 = 0;\n        long count0 = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '1') {\n                count1++;\n            } else {\n                count0++;\n            }\n            if(count1 == count0) {\n                max = Math.max(max, count1);\n            }\n        }\n        count1 = 0;\n        count0 = 0;\n        for(int i = string.length() - 1; i >= 0; i--) {\n            if(string.charAt(i) == '1') {\n                count1++;\n            } else {\n                count0++;\n            }\n            if(count1 == count0) {\n                max = Math.max(max, count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpaa1etx4a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int count = 0;\n        int max = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmp1up01xow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] left = new int[n];\n        int[] right = new int[n];\n        left[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            left[i] = left[i - 1] + arr[i];\n        }\n        right[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            right[i] = right[i + 1] + arr[i];\n        }\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            min = Math.min(min, left[i] + right[i]);\n        }\n        return min;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmp55qk7h4p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[2];\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            count[string.charAt(i) - '0']++;\n            max = Math.max(max, Math.abs(count[0] - count[1]));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpsjpenid8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpzm_gn9sh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int zeroCount = 0;\n        int oneCount = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            zeros[i] = zeroCount;\n            ones[i] = oneCount;\n        }\n        int min = Integer.MAX_VALUE;\n        int max = Integer.MIN_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int zero = zeros[j] - (i == 0 ? 0 : zeros[i - 1]);\n                int one = ones[j] - (i == 0 ? 0 : ones[i - 1]);\n                min = Math.min(min, Math.min(zero, one));\n                max = Math.max(max, Math.max(zero, one));\n            }\n        }\n        return max - min;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpwk7mil94.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] prefix1 = new int[n];\n        prefix1[0] = 1 - arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix1[i] = prefix1[i - 1] + (1 - arr[i]);\n        }\n        int[] suffix1 = new int[n];\n        suffix1[n - 1] = 1 - arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix1[i] = suffix1[i + 1] + (1 - arr[i]);\n        }\n        int[] prefix0 = new int[n];\n        prefix0[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix0[i] = prefix0[i - 1] + arr[i];\n        }\n        int[] suffix0 = new int[n];\n        suffix0[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix0[i] = suffix0[i + 1] + arr[i];\n        }\n        int[] prefix01 = new int[n];\n        prefix01[0] = 1 - arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix01[i] = prefix01[i\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpst9345dx.java:49: error: ']' expected\n            prefix01[i] = prefix01[i\n                                    ^\n/tmp/tmpst9345dx.java:51: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpni_gcx8w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int[] arr = new int[string.length()];\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                arr[i] = -1;\n            } else {\n                arr[i] = 1;\n            }\n        }\n        long max = 0;\n        for (int i = 0; i < arr.length; i++) {\n            long sum = 0;\n            for (int j = i; j < arr.length; j++) {\n                sum += arr[j];\n                if (sum == 0) {\n                    max = Math.max(max, j - i + 1);\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpq3yoemfc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (char c : string.toCharArray()) {\n            if (c == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmp_y7mntgh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int count = 0;\n        int max = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpsp_2kay7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = prefix[i] - suffix[i];\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            max = Math.max(max, Math.abs(diff[i]));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpsuu2utk8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            } else if (zeros > ones) {\n                zeros = 0;\n                ones = 0;\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            } else if (zeros < ones) {\n                zeros = 0;\n                ones = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpmaee36nu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] minPrefix = new int[n];\n        minPrefix[0] = prefix[0];\n        for (int i = 1; i < n; i++) {\n            minPrefix[i] = Math.min(minPrefix[i - 1], prefix[i]);\n        }\n        int[] minSuffix = new int[n];\n        minSuffix[n - 1] = suffix[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            minSuffix[i] = Math.min(minSuffix[i + 1], suffix[i]);\n        }\n        int[] maxPrefix = new int[n];\n        maxPrefix[0] = prefix[0];\n        for (int i = 1; i < n; i++) {\n            maxPrefix[i] = Math.max(maxPrefix[i - 1], prefix[i]);\n        }\n        int[] maxSuffix = new int[n];\n        maxSuffix[n - 1] = suffix[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            maxSuffix[i] = Math.max(maxSuffix[i + 1], suffix[i]);\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmp6tns0_zh.java:48: error: not a statement\n            for (int\n                 ^\n/tmp/tmp6tns0_zh.java:48: error: ';' expected\n            for (int\n                    ^\n/tmp/tmp6tns0_zh.java:49: error: illegal start of expression\n    }\n    ^\n/tmp/tmp6tns0_zh.java:50: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpqpy_8b_w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] left = new int[n];\n        int[] right = new int[n];\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr[i] == 0) {\n                count++;\n            }\n            left[i] = count;\n        }\n        count = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            if (arr[i] == 1) {\n                count++;\n            }\n            right[i] = count;\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            max = Math.max(max, Math.abs(left[i] - right[i]));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpmqci78uz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = prefix[i] - suffix[i];\n        }\n        int[] max = new int[n];\n        max[0] = diff[0];\n        for (int i = 1; i < n; i++) {\n            max[i] = Math.max(max[i - 1], diff[i]);\n        }\n        int[] min = new int[n];\n        min[0] = diff[0];\n        for (int i = 1; i < n; i++) {\n            min[i] = Math.min(min[i - 1], diff[i]);\n        }\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans = Math.max(ans, Math.abs(max[i] - min[i]));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpkebclh5u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpazh0q78q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpqpy_8b_w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[n];\n        int[] prefix = new int[n];\n        int[] suffix = new int[n];\n        for (int i = 0; i < n; i++) {\n            count[i] = string.charAt(i) == '0' ? 1 : -1;\n        }\n        prefix[0] = count[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + count[i];\n        }\n        suffix[n - 1] = count[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + count[i];\n        }\n        int[] min = new int[n];\n        min[0] = prefix[0];\n        for (int i = 1; i < n; i++) {\n            min[i] = Math.min(min[i - 1], prefix[i]);\n        }\n        int[] max = new int[n];\n        max[n - 1] = suffix[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            max[i] = Math.max(max[i + 1], suffix[i]);\n        }\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans = Math.max(ans, (long) max[i] - min[i]);\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmp4gs0mx25.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmp7cdafx8o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] prefix_min = new int[n];\n        prefix_min[0] = prefix[0];\n        for (int i = 1; i < n; i++) {\n            prefix_min[i] = Math.min(prefix_min[i - 1], prefix[i]);\n        }\n        int[] suffix_min = new int[n];\n        suffix_min[n - 1] = suffix[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix_min[i] = Math.min(suffix_min[i + 1], suffix[i]);\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            long left = i == 0 ? 0 : prefix_min[i - 1];\n            long right = i == n - 1 ? 0 : suffix_min[i + 1];\n            max = Math.max(max, Math.max(left, right));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpialz3_xq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpni_gcx8w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count < 0) {\n                count = 0;\n            }\n            if(count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmp9wzyceln.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmp0z0ehfb6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int z = 0;\n        int o = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                z++;\n            } else {\n                o++;\n            }\n            zeros[i] = z;\n            ones[i] = o;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long zz = zeros[j];\n                long oo = ones[j];\n                if (i > 0) {\n                    zz -= zeros[i - 1];\n                    oo -= ones[i - 1];\n                }\n                max = Math.max(max, Math.abs(zz - oo));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpy4y6ail5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] prefix1 = new int[n];\n        int[] suffix1 = new int[n];\n        for (int i = 0; i < n; i++) {\n            prefix1[i] = prefix[i] + (i + 1) * (1 - arr[i]);\n            suffix1[i] = suffix[i] + (n - i) * (1 - arr[i]);\n        }\n        int[] prefix2 = new int[n];\n        int[] suffix2 = new int[n];\n        for (int i = 0; i < n; i++) {\n            prefix2[i] = prefix[i] + (i + 1) * arr[i];\n            suffix2[i] = suffix[i] + (n - i) * arr[i];\n        }\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans = Math.max(ans, Math.max(prefix1[i], suffix1[i]));\n            ans = Math.max(ans, Math.max(prefix2[i], suffix2[i]));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpo7fxyy_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int count = 0;\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, n - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpdklg0ng2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            count = Math.abs(zeros - ones);\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmp3qwsw_n6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zero = new int[n];\n        int[] one = new int[n];\n        if (string.charAt(0) == '0') {\n            zero[0] = 1;\n            one[0] = 0;\n        } else {\n            zero[0] = 0;\n            one[0] = 1;\n        }\n        for (int i = 1; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zero[i] = zero[i - 1] + 1;\n                one[i] = one[i - 1];\n            } else {\n                zero[i] = zero[i - 1];\n                one[i] = one[i - 1] + 1;\n            }\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int zeros = zero[j] - zero[i] + (string.charAt(i) == '0' ? 1 : 0);\n                int ones = one[j] - one[i] + (string.charAt(i) == '1' ? 1 : 0);\n                max = Math.max(max, Math.abs(zeros - ones));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "/tmp/tmpyhz475x1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int z = 0;\n        int o = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                z++;\n            } else {\n                o++;\n            }\n            zeros[i] = z;\n            ones[i] = o;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z1 = zeros[i - 1];\n                int z2 = zeros[j];\n                int o1 = ones[i - 1];\n                int o2 = ones[j];\n                long diff = Math.abs(z2 - z1 - (o2 - o1));\n                max = Math.max(max, diff);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122963,
      "stdout": "",
      "stderr": "/tmp/tmpmsi8u0kn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long maxLength = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count == 0) {\n                maxLength = Math.max(maxLength, i + 1);\n            }\n        }\n        count = 0;\n        for(int i = string.length() - 1; i >= 0; i--) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count == 0) {\n                maxLength = Math.max(maxLength, string.length() - i);\n            }\n        }\n        return maxLength;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmp71cmdeq8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count--;\n            } else {\n                count++;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count--;\n            } else {\n                count++;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpr5c2n_4x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[n];\n        int[] count1 = new int[n];\n        int[] count0 = new int[n];\n        for(int i = 0; i < n; i++) {\n            if(string.charAt(i) == '0') {\n                count[i] = 1;\n            }\n            if(i == 0) {\n                count1[i] = count[i];\n                count0[i] = count[i];\n            } else {\n                count1[i] = count1[i-1] + count[i];\n                count0[i] = count0[i-1] + count[i];\n            }\n        }\n        long max = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i; j < n; j++) {\n                int ones = count1[j];\n                int zeros = count0[j];\n                if(i > 0) {\n                    ones -= count1[i-1];\n                    zeros -= count0[i-1];\n                }\n                long diff = Math.abs(ones - zeros);\n                max = Math.max(max, diff);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122963,
      "stdout": "",
      "stderr": "/tmp/tmpr0x4twg4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpdey9gve2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpazh0q78q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[n];\n        int max = 0;\n        int min = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '1') {\n                count[i] = 1;\n            } else {\n                count[i] = -1;\n            }\n            if (i > 0) {\n                count[i] += count[i - 1];\n            }\n            max = Math.max(max, count[i]);\n            min = Math.min(min, count[i]);\n        }\n        return max - min;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "/tmp/tmpb1hzc4u1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] minPrefix = new int[n];\n        minPrefix[0] = prefix[0];\n        for (int i = 1; i < n; i++) {\n            minPrefix[i] = Math.min(minPrefix[i - 1], prefix[i]);\n        }\n        int[] minSuffix = new int[n];\n        minSuffix[n - 1] = suffix[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            minSuffix[i] = Math.min(minSuffix[i + 1], suffix[i]);\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            max = Math.max(max, prefix[i] + (n - i - 1) - minSuffix[i]);\n        }\n        for (int i = n - 1; i >= 0; i--) {\n            max = Math.max(max, suffix[i] + i - minPrefix[i]);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122963,
      "stdout": "",
      "stderr": "/tmp/tmpytawubv0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmpgz1_vbuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            }\n            zeros[i] = count;\n        }\n        count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            }\n            ones[i] = count;\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z = zeros[j] - (i == 0 ? 0 : zeros[i - 1]);\n                int o = ones[j] - (i == 0 ? 0 : ones[i - 1]);\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122963,
      "stdout": "",
      "stderr": "/tmp/tmpv6bkqd9i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeros[i] = 1;\n            } else {\n                ones[i] = 1;\n            }\n        }\n        int[] zerosPrefix = new int[n];\n        int[] onesPrefix = new int[n];\n        int[] zerosSuffix = new int[n];\n        int[] onesSuffix = new int[n];\n        zerosPrefix[0] = zeros[0];\n        onesPrefix[0] = ones[0];\n        zerosSuffix[n - 1] = zeros[n - 1];\n        onesSuffix[n - 1] = ones[n - 1];\n        for (int i = 1; i < n; i++) {\n            zerosPrefix[i] = zerosPrefix[i - 1] + zeros[i];\n            onesPrefix[i] = onesPrefix[i - 1] + ones[i];\n            zerosSuffix[n - 1 - i] = zerosSuffix[n - i] + zeros[n - 1 - i];\n            onesSuffix[n - 1 - i] = onesSuffix[n - i] + ones[n - 1 - i];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long zerosCount = zerosSuffix[i] - zerosPrefix[j] + zeros[j];\n                long onesCount = onesSuffix[i] - onesPrefix[j] + ones[j];\n                max = Math.max(max, Math.abs(zerosCount - onesCount));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122963,
      "stdout": "",
      "stderr": "/tmp/tmpbnezi1dx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[n];\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count[i] = 1;\n            } else {\n                count[i] = -1;\n            }\n            if (i > 0) {\n                count[i] += count[i - 1];\n            }\n            max = Math.max(max, count[i]);\n        }\n        int min = 0;\n        for (int i = 0; i < n; i++) {\n            min = Math.min(min, count[i]);\n        }\n        return max - min + 1;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122963,
      "stdout": "",
      "stderr": "/tmp/tmp_q_wljci.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = i + 1;\n            } else if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            } else if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122963,
      "stdout": "",
      "stderr": "/tmp/tmpqqquph30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = i + 1;\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122963,
      "stdout": "",
      "stderr": "/tmp/tmp7an9qes4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = i + 1;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpe_u8ubh3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp72zuf59v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpdey9gve2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509994,
      "stdout": "",
      "stderr": "/tmp/tmp_21zpb30.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
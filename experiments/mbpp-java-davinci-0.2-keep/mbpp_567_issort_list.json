{
  "name": "mbpp_567_issort_list",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static boolean issortList(ArrayList<Long> list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_567_issort_list.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(issortList((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)6l, (long)8l, (long)10l, (long)12l, (long)14l, (long)16l, (long)17l)))) == (true));\n    assert(issortList((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)6l, (long)8l, (long)10l, (long)12l, (long)14l, (long)20l, (long)17l)))) == (false));\n    assert(issortList((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)6l, (long)8l, (long)10l, (long)15l, (long)14l, (long)20l)))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>();\n        for (Long i : list1) {\n            list2.add(i);\n        }\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        for (int i = 0; i < list1.size() - 1; i++) {\n            if (list1.get(i) > list1.get(i + 1)) {\n                return false;\n            }\n        }\n        return true;",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        // Write your code here\n        boolean isSorted = true;\n        for (int i = 0; i < list1.size() - 1; i++) {\n            if (list1.get(i) > list1.get(i + 1)) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        for (int i = 0; i < list1.size() - 1; i++) {\n            if (list1.get(i) > list1.get(i + 1)) {\n                return false;\n            }\n        }\n        return true;",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);",
    "        ArrayList<Long> list2 = new ArrayList<Long>(list1);\n        Collections.sort(list2);\n        return list1.equals(list2);"
  ]
}
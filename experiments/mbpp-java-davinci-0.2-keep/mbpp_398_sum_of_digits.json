{
  "name": "mbpp_398_sum_of_digits",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    public static long sumOfDigits(Object nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(sumOfDigits((new Object(Arrays.asList((long)10l, (long)2l, (long)56l)))) == (14l));\n    assert(sumOfDigits((new Object(Arrays.asList((ArrayList<Long>)new ArrayList<Object>(Arrays.asList(10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))))) == (19l));\n    assert(sumOfDigits((new Object(Arrays.asList((long)10l, (long)20l, (long)-4l, (long)5l, (long)-70l)))) == (19l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            int num = (Integer) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            List<Object> list = (List<Object>) nums;\n            for (Object num : list) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof List) {\n                    sum += sumOfDigits(num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            int num = (Integer) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Long) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof BigInteger) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof BigDecimal) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof List) {\n                    sum += sumOfDigits(num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            int num = (Integer) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        } else if (nums instanceof Long) {\n            long num = (Long) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        } else if (nums instanceof BigInteger) {\n            BigInteger num = (BigInteger) nums;\n            while (num.compareTo(BigInteger.ZERO) > 0) {\n                sum += num.mod(BigInteger.TEN).longValue();\n                num = num.divide(BigInteger.TEN);\n            }\n        } else if (nums instanceof BigDecimal) {\n            BigDecimal num = (BigDecimal) nums;\n            while (num.compareTo(BigDecimal.ZERO) > 0) {\n                sum += num.remainder(BigDecimal.TEN).longValue();\n                num = num.divideToIntegralValue(BigDecimal.TEN);\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Long) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof BigInteger) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof BigDecimal) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof String) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Double) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Float) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof List) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Pair) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Triplet) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Quartet) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Quintet) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Sextet) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Septet) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Octet) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Ennead) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Decade) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof ArrayList) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof LinkedList) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof Vector) {\n                    sum += sumOfDigits(num);\n                } else if (",
    "        long sum = 0;\n        if (nums instanceof Integer) {\n            sum = (long) nums;\n        } else if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                sum += sumOfDigits(num);\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return Stream.of(nums.toString().split(\"\")).mapToLong(Long::parseLong).sum();",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            List<Object> list = (List<Object>) nums;\n            for (Object num : list) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof List) {\n                    sum += sumOfDigits(num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            int num = (Integer) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                sum += sumOfDigits(num);\n            }\n        } else if (nums instanceof Integer) {\n            int num = (Integer) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits((Integer) num);\n                } else if (num instanceof List) {\n                    sum += sumOfDigits((List) num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            sum += sumOfDigits((Integer) nums);\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        String[] nums_str = nums.toString().split(\",\");\n        for (String num : nums_str) {\n            for (int i = 0; i < num.length(); i++) {\n                sum += num.charAt(i) - '0';\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        // TODO: Implement\n        return 0;",
    "        return 0;",
    "        // Your code here\n        return 0;",
    "        // Your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // TODO: Implement this function\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        String str = nums.toString();\n        String[] arr = str.split(\",\");\n        for (String s : arr) {\n            String[] arr2 = s.split(\"=\");\n            String[] arr3 = arr2[1].split(\" \");\n            String[] arr4 = arr3[0].split(\"\");\n            for (String s2 : arr4) {\n                sum += Integer.parseInt(s2);\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        // Write your code here.\n        return 0;",
    "        // Your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof String) {\n                    sum += sumOfDigits(num);\n                } else {\n                    throw new IllegalArgumentException(\"Unsupported type\");\n                }\n            }\n        } else if (nums instanceof Integer) {\n            int num = (Integer) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        } else if (nums instanceof String) {\n            String num = (String) nums;\n            for (int i = 0; i < num.length(); i++) {\n                sum += num.charAt(i) - '0';\n            }\n        } else {\n            throw new IllegalArgumentException(\"Unsupported type\");\n        }\n        return sum;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return Stream.of(nums.toString().split(\"\"))\n            .map(s -> Long.parseLong(s))\n            .reduce(0L, (a, b) -> a + b);",
    "        // TODO: Write - Your - Code\n        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            List<Object> numsList = (List<Object>) nums;\n            for (Object num : numsList) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof List) {\n                    sum += sumOfDigits(num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            int num = (Integer) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        }\n        return sum;",
    "        return 0;",
    "        // TODO: Implement this function.\n        return 0;",
    "        // Write your code here\n        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            List<Object> numsList = (List<Object>) nums;\n            for (Object num : numsList) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof List) {\n                    sum += sumOfDigits(num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            int num = (int) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        }\n        return sum;",
    "        // TODO: Implement this function.\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        if (nums instanceof List) {\n            List<Object> numsList = (List<Object>) nums;\n            return numsList.stream().map(num -> sumOfDigits(num)).reduce(0L, (x, y) -> x + y);\n        } else if (nums instanceof Integer) {\n            return Long.valueOf((Integer) nums);\n        } else if (nums instanceof Long) {\n            return (Long) nums;\n        } else if (nums instanceof String) {\n            return ((String) nums).chars().map(c -> Character.getNumericValue(c)).reduce(0, (x, y) -> x + y);\n        } else {\n            return 0;\n        }",
    "        return 0;",
    "        // TODO: Implement this function\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            List<Object> l = (List<Object>) nums;\n            for (Object o : l) {\n                if (o instanceof Integer) {\n                    sum += sumOfDigits(o);\n                } else if (o instanceof List) {\n                    sum += sumOfDigits(o);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            Integer i = (Integer) nums;\n            while (i != 0) {\n                sum += i % 10;\n                i /= 10;\n            }\n        }\n        return sum;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof String) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof List) {\n                    sum += sumOfDigits(num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            sum += sumOfDigits(((Integer) nums).toString());\n        } else if (nums instanceof String) {\n            for (char c : ((String) nums).toCharArray()) {\n                sum += c - '0';\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        if (nums instanceof List) {\n            return ((List) nums).stream().mapToLong(n -> sumOfDigits(n)).sum();\n        } else if (nums instanceof Long) {\n            return ((Long) nums) % 10 + sumOfDigits(((Long) nums) / 10);\n        } else {\n            return 0;\n        }",
    "        // Your code here\n        return 0;",
    "        // TODO: Write - Your - Code\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here.\n        return 0;",
    "        // Your code here\n        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        // Your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else {\n                    sum += sumOfDigits(((Pair) num).getValue0());\n                    sum += sumOfDigits(((Pair) num).getValue1());\n                }\n            }\n        } else if (nums instanceof Integer) {\n            sum += (Integer) nums;\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;"
  ]
}
{
  "name": "mbpp_398_sum_of_digits",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    public static long sumOfDigits(Object nums) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(sumOfDigits((new Object(Arrays.asList((long)10l, (long)2l, (long)56l)))) == (14l));\n    assert(sumOfDigits((new Object(Arrays.asList((ArrayList<Long>)new ArrayList<Object>(Arrays.asList(10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))))) == (19l));\n    assert(sumOfDigits((new Object(Arrays.asList((long)10l, (long)20l, (long)-4l, (long)5l, (long)-70l)))) == (19l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Your code here\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            for (Object num : (List) nums) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            int num = (Integer) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        if (nums instanceof List) {\n            List<Object> list = (List<Object>) nums;\n            for (Object num : list) {\n                if (num instanceof Integer) {\n                    sum += sumOfDigits(num);\n                } else if (num instanceof List) {\n                    sum += sumOfDigits(num);\n                }\n            }\n        } else if (nums instanceof Integer) {\n            int num = (Integer) nums;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        return 0;"
  ]
}
{
  "name": "mbpp_90_len_log",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to find the length of the longest word.\n    public static long lenLog(ArrayList<String> list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(lenLog((new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"PHP\", (String)\"bigdata\")))) == (7l));\n    assert(lenLog((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"ab\", (String)\"abc\")))) == (3l));\n    assert(lenLog((new ArrayList<String>(Arrays.asList((String)\"small\", (String)\"big\", (String)\"tall\")))) == (5l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        return list1.stream().mapToLong(String::length).max().getAsLong();",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        return list1.stream().mapToInt(String::length).max().getAsInt();",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        return list1.stream().mapToInt(String::length).max().getAsInt();",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        return list1.stream().mapToLong(String::length).max().getAsLong();",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        return list1.stream().mapToInt(String::length).max().getAsInt();",
    "        return list1.stream().mapToInt(String::length).max().getAsInt();",
    "        return list1.stream().mapToInt(String::length).max().getAsInt();",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        return list1.stream().mapToInt(String::length).max().getAsInt();",
    "        long max = 0;\n        for (String s : list1) {\n            if (s.length() > max) {\n                max = s.length();\n            }\n        }\n        return max;",
    "        return list1.stream().mapToInt(String::length).max().getAsInt();"
  ]
}
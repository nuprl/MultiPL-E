{
  "name": "mbpp_802_count_rotation",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_802_count_rotation.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while(low <= high) {\n            if(arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if(arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            }\n            else if(arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            }\n            else if(arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp5310qtbx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long n = arr.size();\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp2k_x266o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        int n = arr.size();\n        int low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get(low) <= arr.get(high)) {\n                return low;\n            }\n            int mid = (low + high) / 2;\n            int next = (mid + 1) % n;\n            int prev = (mid + n - 1) % n;\n            if (arr.get(mid) <= arr.get(next) && arr.get(mid) <= arr.get(prev)) {\n                return mid;\n            } else if (arr.get(mid) <= arr.get(high)) {\n                high = mid - 1;\n            } else if (arr.get(mid) >= arr.get(low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpemimzfbh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmptjp1oso7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high))\n                return low;\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev))\n                return mid;\n            else if (arr.get((int)mid) <= arr.get((int)high))\n                high = mid - 1;\n            else if (arr.get((int)mid) >= arr.get((int)low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp5_0ka4qp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpvxtwr44z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0, high = arr.size() - 1;\n        while(low <= high) {\n            if(arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if(arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            }\n            else if(arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            }\n            else if(arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpiw7fgau8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low < high) {\n            long mid = (low + high) / 2;\n            if (arr.get((int)mid) > arr.get((int)high)) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpypfbu0wt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high))\n                return low;\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev))\n                return mid;\n            else if (arr.get((int)mid) <= arr.get((int)high))\n                high = mid - 1;\n            else if (arr.get((int)mid) >= arr.get((int)low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp5b4fdzxc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long next = (low + high) / 2;\n            long prev = (next + n - 1) % n;\n            if (arr.get((int) prev) >= arr.get((int) next) && arr.get((int) next) <= arr.get((int) high)) {\n                return next;\n            } else if (arr.get((int) next) >= arr.get((int) low)) {\n                low = next + 1;\n            } else {\n                high = next - 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpo440gs0i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long start = 0;\n        long end = arr.size() - 1;\n        long mid = 0;\n        while (start <= end) {\n            if (arr.get((int) start) <= arr.get((int) end)) {\n                return start;\n            }\n            mid = (start + end) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) end)) {\n                end = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) start)) {\n                start = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpg4may9m9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0;\n        long r = arr.size() - 1;\n        while (l < r) {\n            long mid = (l + r) / 2;\n            if (arr.get((int)mid) > arr.get((int)r)) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp9hkbvrul.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high))\n                return low;\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev))\n                return mid;\n            else if (arr.get((int)mid) <= arr.get((int)high))\n                high = mid - 1;\n            else if (arr.get((int)mid) >= arr.get((int)low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp5b4fdzxc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp5pi1aam6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        int n = arr.size();\n        int low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get(low) <= arr.get(high))\n                return low;\n            int mid = (low + high) / 2;\n            int next = (mid + 1) % n;\n            int prev = (mid + n - 1) % n;\n            if (arr.get(mid) <= arr.get(next) && arr.get(mid) <= arr.get(prev))\n                return mid;\n            else if (arr.get(mid) <= arr.get(high))\n                high = mid - 1;\n            else if (arr.get(mid) >= arr.get(low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpi5ew9xe6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            }\n            else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            }\n            else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpxmyt6cxr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpal2cb2y2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp5pi1aam6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            }\n            else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            }\n            else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpxmyt6cxr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while(low <= high) {\n            if(arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid - 1 + arr.size()) % arr.size();\n            if(arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if(arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if(arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpiyxdneh3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low < high) {\n            long mid = low + (high - low) / 2;\n            if (mid < high && arr.get((int)mid) > arr.get((int)(mid + 1))) {\n                return mid + 1;\n            }\n            if (mid > low && arr.get((int)mid) < arr.get((int)(mid - 1))) {\n                return mid;\n            }\n            if (arr.get((int)mid) > arr.get((int)high)) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpda9zto8r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp5pi1aam6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp5pi1aam6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        // Write your code here\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high))\n                return low;\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev))\n                return mid;\n            else if (arr.get((int) mid) <= arr.get((int) high))\n                high = mid - 1;\n            else if (arr.get((int) mid) >= arr.get((int) low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp2phoq_c6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high))\n                return low;\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev))\n                return mid;\n            else if (arr.get((int) mid) <= arr.get((int) high))\n                high = mid - 1;\n            else if (arr.get((int) mid) >= arr.get((int) low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp0jlpszye.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpvxtwr44z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        int n = arr.size();\n        int low = 0;\n        int high = n - 1;\n        int mid = 0;\n        while (low <= high) {\n            if (arr.get(low) <= arr.get(high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            int next = (mid + 1) % n;\n            int prev = (mid + n - 1) % n;\n            if (arr.get(mid) <= arr.get(next) && arr.get(mid) <= arr.get(prev)) {\n                return mid;\n            } else if (arr.get(mid) <= arr.get(high)) {\n                high = mid - 1;\n            } else if (arr.get(mid) >= arr.get(low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmphkmwiw1l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long min = arr.get(0);\n        long minIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n                minIndex = i;\n            }\n        }\n        return minIndex;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmplv8q3s41.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        int n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpkevi6r46.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long left = 0;\n        long right = arr.size() - 1;\n        while (left <= right) {\n            if (arr.get((int)left) <= arr.get((int)right)) {\n                return left;\n            }\n            long mid = (left + right) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)right)) {\n                right = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)left)) {\n                left = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpl23bb_x7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpal2cb2y2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long left = 0;\n        long right = arr.size() - 1;\n        long mid = 0;\n        long n = arr.size();\n        while (left <= right) {\n            if (arr.get((int)left) <= arr.get((int)right)) {\n                return left;\n            }\n            mid = left + (right - left) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)right)) {\n                right = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)left)) {\n                left = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp35868u0e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpal2cb2y2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpal2cb2y2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0;\n        long r = arr.size()-1;\n        while(l<r) {\n            long mid = (l+r)/2;\n            if(arr.get((int)mid)>arr.get((int)r)) {\n                l = mid+1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpx6k5uv2u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp1k7ddudu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        int n = arr.size();\n        int low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get(low) <= arr.get(high)) {\n                return low;\n            }\n            int mid = (low + high) / 2;\n            int next = (mid + 1) % n;\n            int prev = (mid + n - 1) % n;\n            if (arr.get(mid) <= arr.get(next) && arr.get(mid) <= arr.get(prev)) {\n                return mid;\n            } else if (arr.get(mid) <= arr.get(high)) {\n                high = mid - 1;\n            } else if (arr.get(mid) >= arr.get(low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpemimzfbh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp0uovl3a4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0;\n        long r = arr.size() - 1;\n        long mid = 0;\n        while (l < r) {\n            mid = l + (r - l) / 2;\n            if (arr.get((int) mid) > arr.get((int) r)) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp72thijiy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpuvhkn1dw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0;\n        long r = arr.size() - 1;\n        while (l < r) {\n            long mid = (l + r) / 2;\n            if (arr.get((int) mid) < arr.get((int) (mid + 1))) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpeyk2d6fz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpvxtwr44z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp0uovl3a4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp1k7ddudu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp0uovl3a4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long n = arr.size();\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmppxr7bibl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpm6m2kllh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0;\n        long r = arr.size() - 1;\n        while (l < r) {\n            long mid = (l + r) / 2;\n            if (arr.get((int)mid) > arr.get((int)r)) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp9hkbvrul.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpdxycu02r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp4ut2tk0v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpkatgwc79.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpkatgwc79.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpuvhkn1dw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long left = 0;\n        long right = arr.size() - 1;\n        while (left < right) {\n            long mid = (left + right) / 2;\n            if (arr.get((int)mid) > arr.get((int)right)) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        return left;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpr8lhnxxf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high))\n                return low;\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev))\n                return mid;\n            else if (arr.get((int)mid) <= arr.get((int)high))\n                high = mid - 1;\n            else if (arr.get((int)mid) >= arr.get((int)low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmphchayjaw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpuvhkn1dw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpkatgwc79.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp1k7ddudu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0, r = arr.size() - 1;\n        while (l < r) {\n            long mid = (l + r) / 2;\n            if (arr.get((int)mid) > arr.get((int)r)) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpik72xmxw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpal2cb2y2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long min = arr.get(0);\n        long minIndex = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n                minIndex = i;\n            }\n        }\n        return minIndex;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpvwvfzpgs.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        int n = arr.size();\n        int low = 0;\n        int high = n - 1;\n        while (low <= high) {\n            if (arr.get(low) <= arr.get(high)) {\n                return low;\n            }\n            int mid = (low + high) / 2;\n            int next = (mid + 1) % n;\n            int prev = (mid + n - 1) % n;\n            if (arr.get(mid) <= arr.get(next) && arr.get(mid) <= arr.get(prev)) {\n                return mid;\n            } else if (arr.get(mid) <= arr.get(high)) {\n                high = mid - 1;\n            } else if (arr.get(mid) >= arr.get(low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp47xk9v8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long start = 0;\n        long end = n - 1;\n        while (start <= end) {\n            if (arr.get((int) start) <= arr.get((int) end)) {\n                return start;\n            }\n            long mid = (start + end) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) end)) {\n                end = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) start)) {\n                start = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmponaqq_cc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high))\n                return low;\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev))\n                return mid;\n            else if (arr.get((int) mid) <= arr.get((int) high))\n                high = mid - 1;\n            else if (arr.get((int) mid) >= arr.get((int) low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp0jlpszye.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long min = arr.get(0);\n        long minIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n                minIndex = i;\n            }\n        }\n        return minIndex;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmplv8q3s41.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        int n = arr.size();\n        int low = 0;\n        int high = n - 1;\n        while (low <= high) {\n            if (arr.get(low) <= arr.get(high)) {\n                return low;\n            }\n            int mid = (low + high) / 2;\n            int next = (mid + 1) % n;\n            int prev = (mid + n - 1) % n;\n            if (arr.get(mid) <= arr.get(next) && arr.get(mid) <= arr.get(prev)) {\n                return mid;\n            } else if (arr.get(mid) <= arr.get(high)) {\n                high = mid - 1;\n            } else if (arr.get(mid) >= arr.get(low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp47xk9v8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0, r = arr.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (arr.get((int)m) > arr.get((int)r)) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpgeus14p0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0;\n        long r = arr.size() - 1;\n        long min = arr.get((int)l);\n        long minIndex = l;\n        while (l <= r) {\n            long mid = l + (r - l) / 2;\n            if (arr.get((int)mid) < min) {\n                min = arr.get((int)mid);\n                minIndex = mid;\n            }\n            if (arr.get((int)mid) > arr.get((int)r)) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return minIndex;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpxcir2klw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long n = arr.size();\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp1p5c82ah.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long l = 0;\n        long r = n - 1;\n        long mid = 0;\n        while (l <= r) {\n            if (arr.get((int)l) <= arr.get((int)r)) {\n                return l;\n            }\n            mid = (l + r) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)r)) {\n                r = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)l)) {\n                l = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp7yl2f0uk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpnf4obp5c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0;\n        long r = arr.size() - 1;\n        while (l < r) {\n            long mid = (l + r) / 2;\n            if (arr.get((int)mid) > arr.get((int)r)) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp9hkbvrul.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid - 1 + arr.size()) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpzo3zfnic.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp4ut2tk0v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpkatgwc79.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0;\n        long r = arr.size() - 1;\n        while (l < r) {\n            long mid = (l + r) / 2;\n            if (arr.get((int)mid) > arr.get((int)r)) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp9hkbvrul.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high))\n                return low;\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n, prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev))\n                return mid;\n            else if (arr.get((int) mid) <= arr.get((int) high))\n                high = mid - 1;\n            else if (arr.get((int) mid) >= arr.get((int) low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp0jlpszye.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            }\n            else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            }\n            else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpxmyt6cxr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpco7xaciz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcwx8rb_7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpm6m2kllh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            }\n            else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            }\n            else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpxmyt6cxr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long l = 0;\n        long r = arr.size() - 1;\n        while (l < r) {\n            long mid = (l + r) / 2;\n            if (arr.get((int)mid) > arr.get((int)r)) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp9hkbvrul.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmptjp1oso7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpfkn6hfow.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpkatgwc79.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low < high) {\n            long mid = (low + high) / 2;\n            if (arr.get((int)mid) > arr.get((int)high)) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpypfbu0wt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        int n = arr.size();\n        int low = 0;\n        int high = n - 1;\n        while (low <= high) {\n            if (arr.get(low) <= arr.get(high)) {\n                return low;\n            }\n            int mid = (low + high) / 2;\n            int next = (mid + 1) % n;\n            int prev = (mid + n - 1) % n;\n            if (arr.get(mid) <= arr.get(next) && arr.get(mid) <= arr.get(prev)) {\n                return mid;\n            } else if (arr.get(mid) <= arr.get(high)) {\n                high = mid - 1;\n            } else if (arr.get(mid) >= arr.get(low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp47xk9v8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long count = 0;\n        for(int i = 0; i < arr.size() - 1; i++) {\n            if(arr.get(i) > arr.get(i + 1)) {\n                count = i + 1;\n                break;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp0uovl3a4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long result = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                result = low;\n                break;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                result = mid;\n                break;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp0vlfot2x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            }\n            if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            }\n            else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmph805zeor.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp4ut2tk0v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpw385wjle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpal2cb2y2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long n = arr.size();\n        while(low <= high) {\n            if(arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if(arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if(arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if(arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpv8vy99o1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpm6m2kllh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            }\n            else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            }\n            else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp_w712yko.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmpuvhkn1dw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long start = 0;\n        long end = arr.size() - 1;\n        long mid = 0;\n        while (start <= end) {\n            if (arr.get((int)start) <= arr.get((int)end)) {\n                return start;\n            }\n            mid = (start + end) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)end)) {\n                end = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)start)) {\n                start = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmpbz_k_ofx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low < high) {\n            long mid = (low + high) / 2;\n            if (arr.get((int)mid) > arr.get((int)high)) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpypfbu0wt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp5pi1aam6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            }\n            else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            }\n            else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmphbsq4z3e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp4zblzpvz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low < high) {\n            long mid = (low + high) / 2;\n            if (arr.get((int)mid) > arr.get((int)high)) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpypfbu0wt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpivfihzrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        long n = arr.size();\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmp2k_x266o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0, high = n - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high))\n                return low;\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev))\n                return mid;\n            else if (arr.get((int) mid) <= arr.get((int) high))\n                high = mid - 1;\n            else if (arr.get((int) mid) >= arr.get((int) low))\n                low = mid + 1;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp523j5hpm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low < high) {\n            long mid = low + (high - low) / 2;\n            if (arr.get((int)mid) > arr.get((int)high)) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "/tmp/tmp5d7p0mfv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        long mid = 0;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            mid = low + (high - low) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpbgdto5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long low = 0;\n        long high = arr.size() - 1;\n        while (low <= high) {\n            if (arr.get((int) low) <= arr.get((int) high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % arr.size();\n            long prev = (mid + arr.size() - 1) % arr.size();\n            if (arr.get((int) mid) <= arr.get((int) next) && arr.get((int) mid) <= arr.get((int) prev)) {\n                return mid;\n            } else if (arr.get((int) mid) <= arr.get((int) high)) {\n                high = mid - 1;\n            } else if (arr.get((int) mid) >= arr.get((int) low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1666123983,
      "stdout": "",
      "stderr": "/tmp/tmp5pi1aam6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\n    public static long countRotation(ArrayList<Long> arr) {\n        long n = arr.size();\n        long low = 0;\n        long high = n - 1;\n        while (low <= high) {\n            if (arr.get((int)low) <= arr.get((int)high)) {\n                return low;\n            }\n            long mid = (low + high) / 2;\n            long next = (mid + 1) % n;\n            long prev = (mid + n - 1) % n;\n            if (arr.get((int)mid) <= arr.get((int)next) && arr.get((int)mid) <= arr.get((int)prev)) {\n                return mid;\n            } else if (arr.get((int)mid) <= arr.get((int)high)) {\n                high = mid - 1;\n            } else if (arr.get((int)mid) >= arr.get((int)low)) {\n                low = mid + 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))) == (1l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)1l, (long)2l, (long)3l)))) == (2l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l, (long)2l, (long)3l)))) == (3l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (0l));\n    assert(countRotation((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l)))) == (2l));\n    }\n\n}\n",
      "timestamp": 1665517167,
      "stdout": "",
      "stderr": "/tmp/tmpcg5exqyq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
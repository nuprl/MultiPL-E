{
  "name": "mbpp_439_multiple_to_single",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to join a list of multiple integers into a single integer.\n    public static long multipleToSingle(ArrayList<Long> L) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_439_multiple_to_single.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(multipleToSingle((new ArrayList<Long>(Arrays.asList((long)11l, (long)33l, (long)50l)))) == (113350l));\n    assert(multipleToSingle((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))) == (-123456l));\n    assert(multipleToSingle((new ArrayList<Long>(Arrays.asList((long)10l, (long)15l, (long)20l, (long)25l)))) == (10152025l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Your code here.\n        return 0;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        long res = 0;\n        for (long l : L) {\n            res = res * 10 + l;\n        }\n        return res;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long res = 0;\n        for (long l : L) {\n            res = res * 10 + l;\n        }\n        return res;",
    "        // Write your code here.\n        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        long ret = 0;\n        for (int i = 0; i < L.size(); i++) {\n            ret = ret * 10 + L.get(i);\n        }\n        return ret;",
    "        return L.stream().reduce(0L, (x, y) -> x * 10 + y);",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Your code here\n        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long x : L) {\n            result = result * 10 + x;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long res = 0;\n        for (long i : L) {\n            res = res * 10 + i;\n        }\n        return res;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        // Your code here\n        return L.stream().reduce(0L, (a, b) -> a * 10 + b);",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        return L.stream().reduce(0L, (a, b) -> a * 10 + b);",
    "        long res = 0;\n        for (int i = 0; i < L.size(); i++) {\n            res = res * 10 + L.get(i);\n        }\n        return res;",
    "        long res = 0;\n        for (long x : L) {\n            res = res * 10 + x;\n        }\n        return res;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        // Write your code here.\n        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long res = 0;\n        for (int i = 0; i < L.size(); i++) {\n            res = res * 10 + L.get(i);\n        }\n        return res;",
    "        // Your code goes here.\n        return 0;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        // Your code here.\n        return 0;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        return L.stream().reduce(0L, (a, b) -> a * 10 + b);",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        // Your code here.\n        return 0;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        // Write your code here.\n        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long i : L) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        long res = 0;\n        for (long l : L) {\n            res = res * 10 + l;\n        }\n        return res;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long i : L) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        long res = 0;\n        for (Long l : L) {\n            res = res * 10 + l;\n        }\n        return res;",
    "        // Write your code here.\n        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        return L.stream().mapToLong(x -> x).reduce(0, (a, b) -> a * 10 + b);",
    "        // Your code here.\n        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result += L.get(i) * Math.pow(10, L.size() - i - 1);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        // Your code here\n        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        long ans = 0;\n        for (long i : L) {\n            ans = ans * 10 + i;\n        }\n        return ans;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        // Your code here\n        return 0;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Your code here.\n        return 0;",
    "        long result = 0;\n        for (Long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        // Write your code here.\n        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long res = 0;\n        for (long l : L) {\n            res = res * 10 + l;\n        }\n        return res;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        return L.stream().reduce(0L, (x, y) -> x * 10 + y);",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long i : L) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Your code here\n        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long i : L) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        // Your code here\n        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long res = 0;\n        for (int i = 0; i < L.size(); i++) {\n            res = res * 10 + L.get(i);\n        }\n        return res;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result += L.get(i) * Math.pow(10, L.size() - i - 1);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long i : L) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long i : L) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Your code here\n        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for(int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        long ret = 0;\n        for (long l : L) {\n            ret = ret * 10 + l;\n        }\n        return ret;",
    "        long result = 0;\n        for (long i : L) {\n            result = (result * 10) + i;\n        }\n        return result;",
    "        long res = 0;\n        for (int i = 0; i < L.size(); i++) {\n            res = res * 10 + L.get(i);\n        }\n        return res;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result *= 10;\n            result += L.get(i);\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long res = 0;\n        for (long l : L) {\n            res = res * 10 + l;\n        }\n        return res;",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        // Write your code here.\n        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // TODO: Implement this function.\n        long result = 0;\n        for (Long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        return L.stream().reduce(0L, (a, b) -> a * 10 + b);",
    "        StringBuilder sb = new StringBuilder();\n        for (long i : L) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result += L.get(i) * Math.pow(10, L.size() - i - 1);\n        }\n        return result;",
    "        return L.stream().reduce(0L, (a, b) -> a * 10 + b);",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Your code here\n        return 0;",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < L.size(); i++) {\n            sb.append(L.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        String str = \"\";\n        for (Long l : L) {\n            str += l;\n        }\n        return Long.parseLong(str);",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        long res = 0;\n        for (long l : L) {\n            res = res * 10 + l;\n        }\n        return res;",
    "        long res = 0;\n        for (long l : L) {\n            res = res * 10 + l;\n        }\n        return res;",
    "        // Your code here.\n        StringBuilder sb = new StringBuilder();\n        for (Long i : L) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (long i : L) {\n            result = result * 10 + i;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Your code here\n        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        return L.stream().mapToLong(x -> x).reduce(0, (x, y) -> x * 10 + y);",
    "        // Your code here\n        long ans = 0;\n        for(int i = 0; i < L.size(); i++) {\n            ans = ans * 10 + L.get(i);\n        }\n        return ans;",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (Long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long result = 0;\n        for (long l : L) {\n            result = result * 10 + l;\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (long l : L) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        long res = 0;\n        for (int i = 0; i < L.size(); i++) {\n            res = res * 10 + L.get(i);\n        }\n        return res;",
    "        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;",
    "        // Your code here\n        long result = 0;\n        for (int i = 0; i < L.size(); i++) {\n            result = result * 10 + L.get(i);\n        }\n        return result;"
  ]
}
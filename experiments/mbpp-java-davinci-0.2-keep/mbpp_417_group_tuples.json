{
  "name": "mbpp_417_group_tuples",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find common first element in given list of tuple.\n    public static ArrayList<String> groupTuples(ArrayList<String> Input) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_417_group_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(groupTuples((new ArrayList<String>(Arrays.asList((Pair<String, String>)Pair.with(\"x\", \"y\"), (Pair<String, String>)Pair.with(\"x\", \"z\"), (Pair<String, String>)Pair.with(\"w\", \"t\"))))).equals((new ArrayList<String>(Arrays.asList(Pair.with(\"x\", \"y\", \"z\"), Pair.with(\"w\", \"t\"))))));\n    assert(groupTuples((new ArrayList<String>(Arrays.asList((Pair<String, String>)Pair.with(\"a\", \"b\"), (Pair<String, String>)Pair.with(\"a\", \"c\"), (Pair<String, String>)Pair.with(\"d\", \"e\"))))).equals((new ArrayList<String>(Arrays.asList(Pair.with(\"a\", \"b\", \"c\"), Pair.with(\"d\", \"e\"))))));\n    assert(groupTuples((new ArrayList<String>(Arrays.asList((Pair<String, String>)Pair.with(\"f\", \"g\"), (Pair<String, String>)Pair.with(\"f\", \"g\"), (Pair<String, String>)Pair.with(\"h\", \"i\"))))).equals((new ArrayList<String>(Arrays.asList(Pair.with(\"f\", \"g\", \"g\"), Pair.with(\"h\", \"i\"))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            list.add(new Pair<String, String>(arr[0], arr[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : list) {\n            if (map.containsKey(p.getValue0())) {\n                map.get(p.getValue0()).add(p.getValue1());\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (String s : map.keySet()) {\n            ArrayList<String> temp = map.get(s);\n            Collections.sort(temp);\n            result.add(s + \":\" + String.join(\",\", temp));\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                output.add(temp.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] str = Input.get(0).split(\",\");\n        for (int i = 0; i < str.length; i++) {\n            temp.add(str[i]);\n        }\n        for (int i = 1; i < Input.size(); i++) {\n            String[] str1 = Input.get(i).split(\",\");\n            for (int j = 0; j < str1.length; j++) {\n                if (temp.contains(str1[j])) {\n                    temp.remove(str1[j]);\n                }\n            }\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            Output.add(temp.get(i));\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getKey() + \": \" + entry.getValue().toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] s = Input.get(i).split(\" \");\n            temp.add(s[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0;i<Input.size();i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        int count = 0;\n        for(int i=0;i<temp.size();i++) {\n            for(int j=i+1;j<temp.size();j++) {\n                if(temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if(count>0) {\n                Output.add(temp.get(i));\n            }\n            count = 0;\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> First = new ArrayList<String>();\n        ArrayList<String> Second = new ArrayList<String>();\n        ArrayList<String> Third = new ArrayList<String>();\n        ArrayList<String> Fourth = new ArrayList<String>();\n        ArrayList<String> Fifth = new ArrayList<String>();\n        ArrayList<String> Sixth = new ArrayList<String>();\n        ArrayList<String> Seventh = new ArrayList<String>();\n        ArrayList<String> Eighth = new ArrayList<String>();\n        ArrayList<String> Ninth = new ArrayList<String>();\n        ArrayList<String> Tenth = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] temp = Input.get(i).split(\",\");\n            if (temp.length == 1) {\n                First.add(temp[0]);\n            } else if (temp.length == 2) {\n                Second.add(temp[0]);\n                Second.add(temp[1]);\n            } else if (temp.length == 3) {\n                Third.add(temp[0]);\n                Third.add(temp[1]);\n                Third.add(temp[2]);\n            } else if (temp.length == 4) {\n                Fourth.add(temp[0]);\n                Fourth.add(temp[1]);\n                Fourth.add(temp[2]);\n                Fourth.add(temp[3]);\n            } else if (temp.length == 5) {\n                Fifth.add(temp[0]);\n                Fifth.add(temp[1]);\n                Fifth.add(temp[2]);\n                Fifth.add(temp[3]);\n                Fifth.add(temp[4]);\n            } else if (temp.length == 6) {\n                Sixth.add(temp[0]);\n                Sixth.add(temp[1]);\n                Sixth.add(temp[2]);\n                Sixth.add(temp[3]);\n                Sixth.add(temp[4]);\n                Sixth.add(temp[5]);\n            } else if (temp.length == 7) {\n                Seventh",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0;i<Input.size();i++) {\n            String[] arr = Input.get(i).split(\" \");\n            temp.add(arr[0]);\n        }\n        String first = temp.get(0);\n        for(int i=1;i<temp.size();i++) {\n            if(first.equals(temp.get(i))) {\n                result.add(Input.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] temp = Input.get(i).split(\",\");\n            result.add(temp[0]);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(value);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(value);\n                map.put(key, list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\" \");\n            for (String s : list) {\n                sb.append(s);\n                sb.append(\" \");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        String[] arr = temp.toArray(new String[temp.size()]);\n        Arrays.sort(arr);\n        String prev = arr[0];\n        for(int i = 1; i < arr.length; i++) {\n            if(!arr[i].equals(prev)) {\n                output.add(prev);\n                prev = arr[i];\n            }\n        }\n        output.add(prev);\n        return output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count >= 2) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getValue().toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for(int i = 0; i < temp.size(); i++) {\n            if(!result.contains(temp.get(i))) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] tempArr;\n        String[] tempArr2;\n        String first;\n        String second;\n        for (int i = 0; i < Input.size(); i++) {\n            tempArr = Input.get(i).split(\",\");\n            first = tempArr[0];\n            second = tempArr[1];\n            for (int j = i + 1; j < Input.size(); j++) {\n                tempArr2 = Input.get(j).split(\",\");\n                if (first.equals(tempArr2[0])) {\n                    temp.add(Input.get(j));\n                }\n            }\n            if (temp.size() > 0) {\n                result.add(first + \":\" + temp.toString());\n            }\n            temp.clear();\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> temp = map.get(key);\n                temp.add(value);\n                map.put(key, temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(value);\n                map.put(key, temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            String s = key + \",\" + value.toString();\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        String common = temp.get(0);\n        for (int i = 1; i < temp.size(); i++) {\n            if (common.equals(temp.get(i))) {\n                result.add(Input.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        ArrayList<String> temp1 = new ArrayList<String>(new HashSet<String>(temp));\n        for(int i = 0; i < temp1.size(); i++) {\n            for(int j = 0; j < Input.size(); j++) {\n                if(temp1.get(i).equals(Input.get(j).split(\",\")[0])) {\n                    Output.add(Input.get(j));\n                }\n            }\n        }\n        return Output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            temp.add(arr[0]);\n        }\n        for (String s : temp) {\n            if (Collections.frequency(temp, s) > 1) {\n                Output.add(s);\n            }\n        }\n        return Output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] input = Input.get(0).split(\",\");\n        for(int i = 0; i < input.length; i++) {\n            temp.add(input[i]);\n        }\n        for(int i = 1; i < Input.size(); i++) {\n            input = Input.get(i).split(\",\");\n            for(int j = 0; j < input.length; j++) {\n                if(temp.contains(input[j])) {\n                    Output.add(input[j]);\n                    break;\n                }\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < Input.size(); i++) {\n            if (temp.contains(Input.get(i).split(\",\")[0])) {\n                result.add(Input.get(i));\n                temp.remove(Input.get(i).split(\",\")[0]);\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> First = new ArrayList<String>();\n        ArrayList<String> Second = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] temp = Input.get(i).split(\",\");\n            First.add(temp[0]);\n            Second.add(temp[1]);\n        }\n        for (int i = 0; i < First.size(); i++) {\n            for (int j = i + 1; j < First.size(); j++) {\n                if (First.get(i).equals(First.get(j))) {\n                    Output.add(First.get(i));\n                }\n            }\n        }\n        return Output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0;i<Input.size();i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for(int i=0;i<temp.size();i++) {\n            if(!Output.contains(temp.get(i))) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> list = map.get(arr[0]);\n                list.add(s);\n                map.put(arr[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\":\");\n            for (String s : list) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String str : Input) {\n            String[] strs = str.split(\" \");\n            if (map.containsKey(strs[0])) {\n                map.get(strs[0]).add(str);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(str);\n                map.put(strs[0], list);\n            }\n        }\n        for (String key : map.keySet()) {\n            result.add(key + \": \" + map.get(key));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> tuples = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] tuple = s.split(\",\");\n            tuples.add(new Pair<String, String>(tuple[0], tuple[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> tuple : tuples) {\n            if (map.containsKey(tuple.getValue0())) {\n                map.get(tuple.getValue0()).add(tuple.getValue1());\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(tuple.getValue1());\n                map.put(tuple.getValue0(), list);\n            }\n        }\n        for (String key : map.keySet()) {\n            result.add(key + \":\" + String.join(\",\", map.get(key)));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        ArrayList<String> temp = new ArrayList<>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            temp.add(arr[0]);\n        }\n        for (String s : temp) {\n            if (Collections.frequency(temp, s) > 1) {\n                result.add(s);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> temp = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            sb.append(key).append(\":\");\n            for (String s : temp) {\n                sb.append(s).append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (temp.indexOf(temp.get(i)) == temp.lastIndexOf(temp.get(i))) {\n                Output.add(Input.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> Pairs = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] parts = s.split(\" \");\n            Pairs.add(new Pair<String, String>(parts[0], parts[1]));\n        }\n        for (Pair<String, String> p : Pairs) {\n            if (Output.contains(p.getValue0())) {\n                continue;\n            }\n            Output.add(p.getValue0());\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        String[] temp = Input.get(0).split(\",\");\n        String first = temp[0];\n        String second = temp[1];\n        result.add(first);\n        result.add(second);\n        for (int i = 1; i < Input.size(); i++) {\n            String[] temp2 = Input.get(i).split(\",\");\n            if (temp2[0].equals(first)) {\n                result.add(temp2[1]);\n            } else {\n                first = temp2[0];\n                second = temp2[1];\n                result.add(first);\n                result.add(second);\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> InputPair = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] temp = s.split(\",\");\n            InputPair.add(new Pair<String, String>(temp[0], temp[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : InputPair) {\n            if (map.containsKey(p.getValue0())) {\n                ArrayList<String> temp = map.get(p.getValue0());\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            String temp = key + \",\" + value.toString();\n            Output.add(temp);\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (String key : map.keySet()) {\n            result.add(String.join(\" \", map.get(key)));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> list = new ArrayList<>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getKey() + \":\" + entry.getValue());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return Output;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] str = s.split(\",\");\n            if (map.containsKey(str[0])) {\n                map.get(str[0]).add(str[1]);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(str[1]);\n                map.put(str[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> values = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\",\");\n            for (String s : values) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String> temp2 = new ArrayList<String>();\n        String[] temp3 = new String[Input.size()];\n        String[] temp4 = new String[Input.size()];\n        String[] temp5 = new String[Input.size()];\n        int i = 0;\n        for (String s : Input) {\n            temp3[i] = s.split(\",\")[0];\n            temp4[i] = s.split(\",\")[1];\n            temp5[i] = s.split(\",\")[2];\n            i++;\n        }\n        for (int j = 0; j < temp3.length; j++) {\n            for (int k = j + 1; k < temp3.length; k++) {\n                if (temp3[j].equals(temp3[k])) {\n                    temp.add(temp3[j]);\n                    temp2.add(temp4[j]);\n                    temp2.add(temp4[k]);\n                    temp2.add(temp5[j]);\n                    temp2.add(temp5[k]);\n                    temp3[j] = \"\";\n                    temp3[k] = \"\";\n                    temp4[j] = \"\";\n                    temp4[k] = \"\";\n                    temp5[j] = \"\";\n                    temp5[k] = \"\";\n                }\n            }\n        }\n        for (int j = 0; j < temp.size(); j++) {\n            result.add(temp.get(j) + \",\" + temp2.get(j) + \",\" + temp2.get(j + 1) + \",\" + temp2.get(j + 2) + \",\" + temp2.get(j + 3));\n            j += 3;\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        ArrayList<String> temp = new ArrayList<>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] str = Input.get(i).split(\",\");\n            temp.add(str[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> tuples = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] parts = s.split(\",\");\n            tuples.add(new Pair<String, String>(parts[0], parts[1]));\n        }\n        ArrayList<String> firstElements = new ArrayList<String>();\n        for (Pair<String, String> p : tuples) {\n            firstElements.add(p.getValue0());\n        }\n        ArrayList<String> firstElementsCopy = new ArrayList<String>(firstElements);\n        for (String s : firstElements) {\n            firstElementsCopy.remove(s);\n            if (firstElementsCopy.contains(s)) {\n                output.add(s);\n            }\n        }\n        return output;",
    "        ArrayList<String> output = new ArrayList<>();\n        ArrayList<String> temp = new ArrayList<>();\n        for(int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        HashSet<String> set = new HashSet<>(temp);\n        for(String s : set) {\n            int count = 0;\n            for(int i = 0; i < temp.size(); i++) {\n                if(s.equals(temp.get(i))) {\n                    count++;\n                }\n            }\n            if(count > 1) {\n                output.add(s);\n            }\n        }\n        return output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(value);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(value);\n                map.put(key, list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key + \":\");\n            for (String s : list) {\n                sb.append(s + \",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            Output.add(sb.toString());\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        ArrayList<String> temp = new ArrayList<>();\n        ArrayList<String> temp2 = new ArrayList<>();\n        String[] arr = Input.get(0).split(\",\");\n        String[] arr2 = Input.get(1).split(\",\");\n        for (int i = 0; i < arr.length; i++) {\n            temp.add(arr[i]);\n        }\n        for (int i = 0; i < arr2.length; i++) {\n            temp2.add(arr2[i]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            for (int j = 0; j < temp2.size(); j++) {\n                if (temp.get(i).equals(temp2.get(j))) {\n                    result.add(temp.get(i));\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> list = new ArrayList<String>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            list.add(arr[0]);\n        }\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (Collections.frequency(list, arr[0]) > 1) {\n                result.add(s);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            temp.add(arr[0]);\n        }\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (temp.contains(arr[1])) {\n                result.add(s);\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> tuples = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] split = s.split(\",\");\n            tuples.add(new Pair<String, String>(split[0], split[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : tuples) {\n            if (map.containsKey(p.getValue0())) {\n                ArrayList<String> list = map.get(p.getValue0());\n                list.add(p.getValue1());\n                map.put(p.getValue0(), list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(p.getValue1());\n                map.put(p.getValue0(), list);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> list = map.get(key);\n            Output.add(key + \":\" + list.toString());\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0;i<Input.size();i++) {\n            String[] str = Input.get(i).split(\",\");\n            temp.add(str[0]);\n        }\n        for(int i=0;i<temp.size();i++) {\n            if(!result.contains(temp.get(i))) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(arr[1]);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(arr[1]);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\",\");\n            for (String s : value) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0;i<Input.size();i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for(int i=0;i<temp.size();i++) {\n            if(!Output.contains(temp.get(i))) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (!map.containsKey(arr[0])) {\n                map.put(arr[0], new ArrayList<>());\n            }\n            map.get(arr[0]).add(s);\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> list = map.get(key);\n            if (list.size() > 1) {\n                result.addAll(list);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            temp.add(arr[0]);\n        }\n        Collections.sort(temp);\n        String prev = temp.get(0);\n        result.add(prev);\n        for (int i = 1; i < temp.size(); i++) {\n            if (temp.get(i).equals(prev)) {\n                continue;\n            } else {\n                result.add(temp.get(i));\n                prev = temp.get(i);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] arr = Input.get(0).split(\",\");\n        String first = arr[0];\n        for (int i = 0; i < Input.size(); i++) {\n            arr = Input.get(i).split(\",\");\n            if (arr[0].equals(first)) {\n                temp.add(Input.get(i));\n            } else {\n                result.add(String.join(\",\", temp));\n                temp.clear();\n                temp.add(Input.get(i));\n                first = arr[0];\n            }\n        }\n        result.add(String.join(\",\", temp));\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getValue().toString());\n        }\n        return result;",
    "        ArrayList<String> res = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            String[] s = Input.get(i).split(\",\");\n            temp.add(s[0]);\n        }\n        for(int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for(int j = 0; j < temp.size(); j++) {\n                if(temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if(count > 1) {\n                res.add(temp.get(i));\n            }\n        }\n        return res;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> Pairs = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] parts = s.split(\" \");\n            Pairs.add(new Pair<String, String>(parts[0], parts[1]));\n        }\n        ArrayList<Pair<String, ArrayList<String>>> Grouped = new ArrayList<Pair<String, ArrayList<String>>>();\n        for (Pair<String, String> p : Pairs) {\n            boolean found = false;\n            for (Pair<String, ArrayList<String>> gp : Grouped) {\n                if (gp.getValue0().equals(p.getValue0())) {\n                    gp.getValue1().add(p.getValue1());\n                    found = true;\n                }\n            }\n            if (!found) {\n                ArrayList<String> newList = new ArrayList<String>();\n                newList.add(p.getValue1());\n                Grouped.add(new Pair<String, ArrayList<String>>(p.getValue0(), newList));\n            }\n        }\n        for (Pair<String, ArrayList<String>> gp : Grouped) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(gp.getValue0());\n            sb.append(\" \");\n            for (String s : gp.getValue1()) {\n                sb.append(s);\n                sb.append(\" \");\n            }\n            Output.add(sb.toString());\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String tuple : Input) {\n            String[] tupleArray = tuple.split(\",\");\n            String first = tupleArray[0];\n            String second = tupleArray[1];\n            if (map.containsKey(first)) {\n                ArrayList<String> list = map.get(first);\n                list.add(second);\n                map.put(first, list);\n            } else {\n                ArrayList<String> list = new ArrayList<>();\n                list.add(second);\n                map.put(first, list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\",\");\n            for (String str : value) {\n                sb.append(str);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> temp = map.get(key);\n                temp.add(value);\n                map.put(key, temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<>();\n                temp.add(value);\n                map.put(key, temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            String s = key + \",\" + value.toString();\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(value);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(value);\n                map.put(key, list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\",\");\n            for (String s : list) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (!map.containsKey(key)) {\n                map.put(key, new ArrayList<String>());\n            }\n            map.get(key).add(value);\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> values = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\":\");\n            for (String value : values) {\n                sb.append(value);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String> temp2 = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\" \")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (!temp2.contains(temp.get(i))) {\n                temp2.add(temp.get(i));\n            }\n        }\n        for (int i = 0; i < temp2.size(); i++) {\n            String s = \"\";\n            for (int j = 0; j < Input.size(); j++) {\n                if (temp2.get(i).equals(Input.get(j).split(\" \")[0])) {\n                    s += Input.get(j) + \" \";\n                }\n            }\n            Output.add(s);\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        HashSet<String> set = new HashSet<String>(temp);\n        for (String s : set) {\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (String i : Input) {\n            temp.add(i.split(\",\")[0]);\n        }\n        for (String i : temp) {\n            if (Collections.frequency(temp, i) > 1) {\n                Output.add(i);\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0; i<Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for(int i=0; i<temp.size(); i++) {\n            if(!result.contains(temp.get(i))) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (String i : Input) {\n            temp.add(i.split(\",\")[0]);\n        }\n        for (String i : temp) {\n            if (Collections.frequency(temp, i) > 1) {\n                Output.add(i);\n            }\n        }\n        return Output;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String> temp2 = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (temp.get(i).equals(temp.get(i + 1))) {\n                temp2.add(temp.get(i));\n            }\n        }\n        return temp2;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> pairs = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] parts = s.split(\" \");\n            pairs.add(new Pair<String, String>(parts[0], parts[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : pairs) {\n            if (map.containsKey(p.getValue0())) {\n                ArrayList<String> temp = map.get(p.getValue0());\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (String s : map.keySet()) {\n            output.add(s + \" \" + map.get(s).toString());\n        }\n        return output;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String> temp2 = new ArrayList<String>();\n        ArrayList<String> temp3 = new ArrayList<String>();\n        ArrayList<String> temp4 = new ArrayList<String>();\n        ArrayList<String> temp5 = new ArrayList<String>();\n        ArrayList<String> temp6 = new ArrayList<String>();\n        ArrayList<String> temp7 = new ArrayList<String>();\n        ArrayList<String> temp8 = new ArrayList<String>();\n        ArrayList<String> temp9 = new ArrayList<String>();\n        ArrayList<String> temp10 = new ArrayList<String>();\n        ArrayList<String> temp11 = new ArrayList<String>();\n        ArrayList<String> temp12 = new ArrayList<String>();\n        ArrayList<String> temp13 = new ArrayList<String>();\n        ArrayList<String> temp14 = new ArrayList<String>();\n        ArrayList<String> temp15 = new ArrayList<String>();\n        ArrayList<String> temp16 = new ArrayList<String>();\n        ArrayList<String> temp17 = new ArrayList<String>();\n        ArrayList<String> temp18 = new ArrayList<String>();\n        ArrayList<String> temp19 = new ArrayList<String>();\n        ArrayList<String> temp20 = new ArrayList<String>();\n        ArrayList<String> temp21 = new ArrayList<String>();\n        ArrayList<String> temp22 = new ArrayList<String>();\n        ArrayList<String> temp23 = new ArrayList<String>();\n        ArrayList<String> temp24 = new ArrayList<String>();\n        ArrayList<String> temp25 = new ArrayList<String>();\n        ArrayList<String> temp26 = new ArrayList<String>();\n        ArrayList<String> temp27 = new ArrayList<String>();\n        ArrayList<String> temp28 = new ArrayList<String>();\n        ArrayList<String> temp29 = new ArrayList<String>();\n        ArrayList",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String> temp2 = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (!temp2.contains(temp.get(i))) {\n                temp2.add(temp.get(i));\n            }\n        }\n        for (int i = 0; i < temp2.size(); i++) {\n            String temp3 = \"\";\n            for (int j = 0; j < Input.size(); j++) {\n                if (temp2.get(i).equals(Input.get(j).split(\",\")[0])) {\n                    temp3 += Input.get(j) + \",\";\n                }\n            }\n            output.add(temp3);\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] temp = s.split(\" \");\n            list.add(new Pair<String, String>(temp[0], temp[1]));\n        }\n        Collections.sort(list, new Comparator<Pair<String, String>>() {\n            @Override\n            public int compare(Pair<String, String> o1, Pair<String, String> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        String temp = list.get(0).getValue0();\n        result.add(temp);\n        for (int i = 1; i < list.size(); i++) {\n            if (!temp.equals(list.get(i).getValue0())) {\n                temp = list.get(i).getValue0();\n                result.add(temp);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            ArrayList<String> temp = entry.getValue();\n            String s = \"\";\n            for (String t : temp) {\n                s += t + \",\";\n            }\n            s = s.substring(0, s.length() - 1);\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (String s : map.keySet()) {\n            result.add(map.get(s).stream().collect(Collectors.joining(\",\")));\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            list.add(new Pair<String, String>(arr[0], arr[1]));\n        }\n        Map<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : list) {\n            if (map.containsKey(p.getValue0())) {\n                ArrayList<String> temp = map.get(p.getValue0());\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\" \");\n            for (String s : value) {\n                sb.append(s);\n                sb.append(\" \");\n            }\n            Output.add(sb.toString());\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(value);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(value);\n                map.put(key, list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\",\");\n            sb.append(list.size());\n            output.add(sb.toString());\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] str = Input.get(i).split(\",\");\n            temp.add(str[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] temp = s.split(\",\");\n            if (map.containsKey(temp[0])) {\n                map.get(temp[0]).add(s);\n            } else {\n                ArrayList<String> tempList = new ArrayList<String>();\n                tempList.add(s);\n                map.put(temp[0], tempList);\n            }\n        }\n        for (String s : map.keySet()) {\n            result.add(String.join(\",\", map.get(s)));\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (!Output.contains(temp.get(i))) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for(String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            if(map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(s);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(key, list);\n            }\n        }\n        for(Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"(\");\n            for(String s : list) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            sb.append(\")\");\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(s);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(key, list);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> list = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\":\");\n            for (String s : list) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            result.add(key + \":\" + value);\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> Tuples = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] tokens = s.split(\" \");\n            Tuples.add(new Pair<String, String>(tokens[0], tokens[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : Tuples) {\n            if (map.containsKey(p.getValue0())) {\n                ArrayList<String> temp = map.get(p.getValue0());\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            if (value.size() > 1) {\n                Output.add(key);\n            }\n        }\n        return Output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (!Output.contains(temp.get(i))) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            temp.add(arr[0]);\n        }\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (temp.contains(arr[0])) {\n                temp.remove(arr[0]);\n                result.add(s);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String str : Input) {\n            String[] arr = str.split(\" \");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(str);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(str);\n                map.put(arr[0], temp);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> temp = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            for (String str : temp) {\n                sb.append(str);\n                sb.append(\" \");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> Pairs = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] split = s.split(\",\");\n            Pairs.add(new Pair<String, String>(split[0], split[1]));\n        }\n        Map<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : Pairs) {\n            if (map.containsKey(p.getValue0())) {\n                map.get(p.getValue0()).add(p.getValue1());\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(p.getValue1());\n                map.put(p.getValue0(), list);\n            }\n        }\n        for (String s : map.keySet()) {\n            Output.add(s + \":\" + map.get(s).toString());\n        }\n        return Output;",
    "        ArrayList<String> output = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(value);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(value);\n                map.put(key, list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\",\");\n            for (String s : list) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            output.add(sb.toString());\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for(String s : Input) {\n            String[] arr = s.split(\",\");\n            if(map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for(Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getValue().toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getKey() + \":\" + entry.getValue());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String tuple : Input) {\n            String[] split = tuple.split(\",\");\n            String key = split[0];\n            ArrayList<String> list = map.getOrDefault(key, new ArrayList<>());\n            list.add(tuple);\n            map.put(key, list);\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            ArrayList<String> list = entry.getValue();\n            if (list.size() > 1) {\n                result.addAll(list);\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] arr = new String[Input.size()];\n        for (int i = 0; i < Input.size(); i++) {\n            arr[i] = Input.get(i).split(\",\")[0];\n        }\n        for (int i = 0; i < arr.length; i++) {\n            for (int j = i + 1; j < arr.length; j++) {\n                if (arr[i].equals(arr[j])) {\n                    temp.add(Input.get(i));\n                    temp.add(Input.get(j));\n                }\n            }\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            for (int j = i + 1; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    temp.remove(j);\n                }\n            }\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            Output.add(temp.get(i));\n        }\n        return Output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String> temp1 = new ArrayList<String>();\n        ArrayList<String> temp2 = new ArrayList<String>();\n        ArrayList<String> temp3 = new ArrayList<String>();\n        ArrayList<String> temp4 = new ArrayList<String>();\n        ArrayList<String> temp5 = new ArrayList<String>();\n        ArrayList<String> temp6 = new ArrayList<String>();\n        ArrayList<String> temp7 = new ArrayList<String>();\n        ArrayList<String> temp8 = new ArrayList<String>();\n        ArrayList<String> temp9 = new ArrayList<String>();\n        ArrayList<String> temp10 = new ArrayList<String>();\n        ArrayList<String> temp11 = new ArrayList<String>();\n        ArrayList<String> temp12 = new ArrayList<String>();\n        ArrayList<String> temp13 = new ArrayList<String>();\n        ArrayList<String> temp14 = new ArrayList<String>();\n        ArrayList<String> temp15 = new ArrayList<String>();\n        ArrayList<String> temp16 = new ArrayList<String>();\n        ArrayList<String> temp17 = new ArrayList<String>();\n        ArrayList<String> temp18 = new ArrayList<String>();\n        ArrayList<String> temp19 = new ArrayList<String>();\n        ArrayList<String> temp20 = new ArrayList<String>();\n        ArrayList<String> temp21 = new ArrayList<String>();\n        ArrayList<String> temp22 = new ArrayList<String>();\n        ArrayList<String> temp23 = new ArrayList<String>();\n        ArrayList<String> temp24 = new ArrayList<String>();\n        ArrayList<String> temp25 = new ArrayList<String>();\n        ArrayList<String> temp26 = new ArrayList<String>();\n        ArrayList<String> temp27 = new ArrayList<String>();\n        ArrayList<String> temp28 = new ArrayList<String>();\n        ArrayList",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            list.add(new Pair<String, String>(arr[0], arr[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : list) {\n            if (map.containsKey(p.getValue0())) {\n                ArrayList<String> temp = map.get(p.getValue0());\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (String s : map.keySet()) {\n            Output.add(s + \":\" + map.get(s).toString());\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < Input.size(); i++) {\n            if (temp.contains(Input.get(i).split(\",\")[0])) {\n                result.add(Input.get(i));\n                temp.remove(Input.get(i).split(\",\")[0]);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) >= 2) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        String[] input = Input.get(0).split(\" \");\n        String[] input1 = Input.get(1).split(\" \");\n        String[] input2 = Input.get(2).split(\" \");\n        String[] input3 = Input.get(3).split(\" \");\n        String[] input4 = Input.get(4).split(\" \");\n        String[] input5 = Input.get(5).split(\" \");\n        String[] input6 = Input.get(6).split(\" \");\n        String[] input7 = Input.get(7).split(\" \");\n        String[] input8 = Input.get(8).split(\" \");\n        String[] input9 = Input.get(9).split(\" \");\n        String[] input10 = Input.get(10).split(\" \");\n        String[] input11 = Input.get(11).split(\" \");\n        String[] input12 = Input.get(12).split(\" \");\n        String[] input13 = Input.get(13).split(\" \");\n        String[] input14 = Input.get(14).split(\" \");\n        String[] input15 = Input.get(15).split(\" \");\n        String[] input16 = Input.get(16).split(\" \");\n        String[] input17 = Input.get(17).split(\" \");\n        String[] input18 = Input.get(18).split(\" \");\n        String[] input19 = Input.get(19).split(\" \");\n        String[] input20 = Input.get(20).split(\" \");\n        String[] input21 = Input.get(21).split(\" \");\n        String[] input22 = Input.get(22).split(\" \");\n        String[] input23 = Input.get(23).split(\" \");\n        String[] input24 = Input.get(24).split(\" \");\n        String[] input25 = Input.get(25).split(\" \");\n        String[] input26 = Input.get(26).split(\" \");\n        String[] input27 = Input.get(27).split(\" \");\n        String[] input28 = Input.get(28).split(\" \");\n        String[]",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] tempArray;\n        String[] tempArray2;\n        String tempString;\n        String tempString2;\n        String tempString3;\n        for (int i = 0; i < Input.size(); i++) {\n            tempArray = Input.get(i).split(\",\");\n            tempString = tempArray[0];\n            tempString2 = tempArray[1];\n            tempString3 = tempArray[2];\n            for (int j = 0; j < Input.size(); j++) {\n                if (i != j) {\n                    tempArray2 = Input.get(j).split(\",\");\n                    if (tempString.equals(tempArray2[0])) {\n                        temp.add(tempArray2[1]);\n                        temp.add(tempArray2[2]);\n                    }\n                }\n            }\n            if (temp.size() > 0) {\n                temp.add(0, tempString);\n                temp.add(1, tempString2);\n                temp.add(2, tempString3);\n                result.add(String.join(\",\", temp));\n                temp.clear();\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<>();\n        ArrayList<String> First = new ArrayList<>();\n        ArrayList<String> Second = new ArrayList<>();\n        ArrayList<String> Third = new ArrayList<>();\n        for (String i : Input) {\n            String[] temp = i.split(\",\");\n            First.add(temp[0]);\n            Second.add(temp[1]);\n            Third.add(temp[2]);\n        }\n        String FirstElement = First.get(0);\n        String SecondElement = Second.get(0);\n        String ThirdElement = Third.get(0);\n        for (String i : First) {\n            if (!i.equals(FirstElement)) {\n                FirstElement = \"\";\n                break;\n            }\n        }\n        for (String i : Second) {\n            if (!i.equals(SecondElement)) {\n                SecondElement = \"\";\n                break;\n            }\n        }\n        for (String i : Third) {\n            if (!i.equals(ThirdElement)) {\n                ThirdElement = \"\";\n                break;\n            }\n        }\n        if (FirstElement.equals(\"\")) {\n            Output.add(SecondElement);\n            Output.add(ThirdElement);\n        } else if (SecondElement.equals(\"\")) {\n            Output.add(FirstElement);\n            Output.add(ThirdElement);\n        } else if (ThirdElement.equals(\"\")) {\n            Output.add(FirstElement);\n            Output.add(SecondElement);\n        } else {\n            Output.add(FirstElement);\n            Output.add(SecondElement);\n            Output.add(ThirdElement);\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(arr[1]);\n            } else {\n                ArrayList<String> temp = new ArrayList<>();\n                temp.add(arr[1]);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"(\");\n            sb.append(key);\n            sb.append(\",\");\n            sb.append(value.stream().collect(Collectors.joining(\",\")));\n            sb.append(\")\");\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0; i<Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for(int i=0; i<temp.size(); i++) {\n            if(Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] str = s.split(\",\");\n            if (map.containsKey(str[0])) {\n                ArrayList<String> list = map.get(str[0]);\n                list.add(str[1]);\n                map.put(str[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(str[1]);\n                map.put(str[0], list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key + \":\");\n            for (String s : list) {\n                sb.append(s + \",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] str = Input.get(i).split(\",\");\n            temp.add(str[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] str = s.split(\",\");\n            if (map.containsKey(str[0])) {\n                ArrayList<String> temp = map.get(str[0]);\n                temp.add(s);\n                map.put(str[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(str[0], temp);\n            }\n        }\n        for (String s : map.keySet()) {\n            ArrayList<String> temp = map.get(s);\n            StringBuilder sb = new StringBuilder();\n            sb.append(s);\n            sb.append(\":\");\n            for (String t : temp) {\n                sb.append(t);\n                sb.append(\",\");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String str : Input) {\n            String[] arr = str.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> list = map.get(arr[0]);\n                list.add(arr[1]);\n                map.put(arr[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(arr[1]);\n                map.put(arr[0], list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            result.add(key + \":\" + list.toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> Pairs = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] parts = s.split(\" \");\n            Pairs.add(new Pair<String, String>(parts[0], parts[1]));\n        }\n        Collections.sort(Pairs, new Comparator<Pair<String, String>>() {\n            @Override\n            public int compare(Pair<String, String> o1, Pair<String, String> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        String last = \"\";\n        for (Pair<String, String> p : Pairs) {\n            if (p.getValue0().equals(last)) {\n                Output.add(p.getValue1());\n            } else {\n                last = p.getValue0();\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> pairs = new ArrayList<Pair<String, String>>();\n        for(String s : Input) {\n            String[] split = s.split(\" \");\n            Pair<String, String> pair = new Pair<String, String>(split[0], split[1]);\n            pairs.add(pair);\n        }\n        Collections.sort(pairs, new Comparator<Pair<String, String>>() {\n            @Override\n            public int compare(Pair<String, String> o1, Pair<String, String> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        String first = pairs.get(0).getValue0();\n        String second = pairs.get(0).getValue1();\n        for(int i = 1; i < pairs.size(); i++) {\n            if(pairs.get(i).getValue0().equals(first)) {\n                second = second + \" \" + pairs.get(i).getValue1();\n            } else {\n                result.add(first + \" \" + second);\n                first = pairs.get(i).getValue0();\n                second = pairs.get(i).getValue1();\n            }\n        }\n        result.add(first + \" \" + second);\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String str : Input) {\n            String[] arr = str.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (!map.containsKey(key)) {\n                ArrayList<String> temp = new ArrayList<>();\n                temp.add(value);\n                map.put(key, temp);\n            } else {\n                ArrayList<String> temp = map.get(key);\n                temp.add(value);\n                map.put(key, temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> values = entry.getValue();\n            String temp = key + \",\" + values.toString();\n            result.add(temp);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            result.add(key + \":\" + value.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] str = s.split(\",\");\n            list.add(new Pair<String, String>(str[0], str[1]));\n        }\n        Collections.sort(list, new Comparator<Pair<String, String>>() {\n            public int compare(Pair<String, String> a, Pair<String, String> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        String prev = list.get(0).getValue0();\n        String curr = \"\";\n        for (Pair<String, String> p : list) {\n            curr = p.getValue0();\n            if (curr.equals(prev)) {\n                result.add(p.getValue1());\n            } else {\n                result.add(\"\\n\");\n                result.add(p.getValue1());\n            }\n            prev = curr;\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String> temp2 = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n            temp2.add(arr[1]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            for (int j = i + 1; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    result.add(temp.get(i) + \",\" + temp2.get(i) + \",\" + temp2.get(j));\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(value);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(value);\n                map.put(key, list);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> list = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\",\");\n            for (String s : list) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for(String s : Input) {\n            String[] arr = s.split(\",\");\n            if(map.containsKey(arr[0])) {\n                map.get(arr[0]).add(arr[1]);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(arr[1]);\n                map.put(arr[0], temp);\n            }\n        }\n        for(String key : map.keySet()) {\n            result.add(key + \":\" + map.get(key));\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0;i<Input.size();i++) {\n            String[] str = Input.get(i).split(\",\");\n            temp.add(str[0]);\n        }\n        for(int i=0;i<temp.size();i++) {\n            if(Collections.frequency(temp,temp.get(i))>1) {\n                output.add(temp.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> list = new ArrayList<>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (String key : map.keySet()) {\n            result.add(map.get(key).toString());\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] str = Input.get(i).split(\",\");\n            temp.add(str[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                output.add(temp.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] split = s.split(\",\");\n            if (map.containsKey(split[0])) {\n                ArrayList<String> list = map.get(split[0]);\n                list.add(s);\n                map.put(split[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(split[0], list);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> list = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            sb.append(key + \":\");\n            for (String s : list) {\n                sb.append(s + \",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0;i<Input.size();i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for(int i=0;i<temp.size();i++) {\n            if(!result.contains(temp.get(i))) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for(int i = 0; i < temp.size(); i++) {\n            if(!result.contains(temp.get(i))) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] arr = Input.get(0).split(\",\");\n        String first = arr[0];\n        String second = arr[1];\n        temp.add(first);\n        temp.add(second);\n        for (int i = 1; i < Input.size(); i++) {\n            String[] arr1 = Input.get(i).split(\",\");\n            String first1 = arr1[0];\n            String second1 = arr1[1];\n            if (first1.equals(first)) {\n                temp.add(second1);\n            } else {\n                result.add(temp.toString());\n                temp.clear();\n                first = first1;\n                temp.add(first);\n                temp.add(second1);\n            }\n        }\n        result.add(temp.toString());\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] str = Input.get(i).split(\",\");\n            temp.add(str[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> temp = new ArrayList<>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> temp = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"(\");\n            for (String s : temp) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            sb.append(\")\");\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            Pair<String, String> p = new Pair<String, String>(arr[0], arr[1]);\n            list.add(p);\n        }\n        Collections.sort(list, new Comparator<Pair<String, String>>() {\n            @Override\n            public int compare(Pair<String, String> o1, Pair<String, String> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        String first = list.get(0).getValue0();\n        String second = list.get(0).getValue1();\n        for (int i = 1; i < list.size(); i++) {\n            if (list.get(i).getValue0().equals(first)) {\n                second = second + \",\" + list.get(i).getValue1();\n            } else {\n                result.add(first + \",\" + second);\n                first = list.get(i).getValue0();\n                second = list.get(i).getValue1();\n            }\n        }\n        result.add(first + \",\" + second);\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> tuples = new ArrayList<Pair<String, String>>();\n        for(String s : Input) {\n            String[] temp = s.split(\" \");\n            tuples.add(new Pair<String, String>(temp[0], temp[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for(Pair<String, String> p : tuples) {\n            if(map.containsKey(p.getValue0())) {\n                ArrayList<String> temp = map.get(p.getValue0());\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for(Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            String temp = key + \" \" + value.size() + \" \";\n            for(String s : value) {\n                temp += s + \" \";\n            }\n            output.add(temp);\n        }\n        return output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for(String s : Input) {\n            String[] arr = s.split(\" \");\n            if(map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for(String s : map.keySet()) {\n            ArrayList<String> temp = map.get(s);\n            StringBuilder sb = new StringBuilder();\n            for(String str : temp) {\n                sb.append(str);\n                sb.append(\" \");\n            }\n            Output.add(sb.toString());\n        }\n        return Output;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> tuples = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] parts = s.split(\" \");\n            tuples.add(new Pair<String, String>(parts[0], parts[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : tuples) {\n            if (map.containsKey(p.getValue0())) {\n                ArrayList<String> temp = map.get(p.getValue0());\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            String s = key + \" \" + value.toString();\n            output.add(s);\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] str = Input.get(i).split(\",\");\n            temp.add(str[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(value);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<>();\n                list.add(value);\n                map.put(key, list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\":\");\n            for (String s : list) {\n                sb.append(s);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            output.add(sb.toString());\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (String s : Input) {\n            temp.add(s.split(\",\")[0]);\n        }\n        for (String s : temp) {\n            if (Collections.frequency(temp, s) > 1) {\n                result.add(s);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] temp = s.split(\",\");\n            if (map.containsKey(temp[0])) {\n                ArrayList<String> tempList = map.get(temp[0]);\n                tempList.add(s);\n                map.put(temp[0], tempList);\n            } else {\n                ArrayList<String> tempList = new ArrayList<String>();\n                tempList.add(s);\n                map.put(temp[0], tempList);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            String temp = \"\";\n            for (String s : value) {\n                temp += s + \",\";\n            }\n            temp = temp.substring(0, temp.length() - 1);\n            result.add(temp);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> temp = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"(\");\n            for (String s : temp) {\n                sb.append(s + \",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            sb.append(\")\");\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(String.join(\",\", entry.getValue()));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> list = map.get(arr[0]);\n                list.add(s);\n                map.put(arr[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> list = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\": \");\n            for (String s : list) {\n                sb.append(s);\n                sb.append(\", \");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] input = Input.get(0).split(\",\");\n        for(int i = 0; i < input.length; i++) {\n            temp.add(input[i]);\n        }\n        for(int i = 1; i < Input.size(); i++) {\n            String[] input2 = Input.get(i).split(\",\");\n            for(int j = 0; j < input2.length; j++) {\n                if(!temp.contains(input2[j])) {\n                    temp.remove(input2[j]);\n                }\n            }\n        }\n        output.add(String.join(\",\",temp));\n        return output;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for(int i = 0; i < Input.size(); i++) {\n            if(Collections.frequency(temp, temp.get(i)) > 1) {\n                output.add(Input.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String str : Input) {\n            String[] arr = str.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> list = map.get(arr[0]);\n                list.add(arr[1]);\n                map.put(arr[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(arr[1]);\n                map.put(arr[0], list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            String str = key + \":\";\n            for (String s : list) {\n                str += s + \",\";\n            }\n            result.add(str.substring(0, str.length() - 1));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for(String s : Input) {\n            String[] arr = s.split(\" \");\n            if(map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for(Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getKey() + \" \" + entry.getValue().size());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        ArrayList<String> temp = new ArrayList<>();\n        for(int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for(int i = 0; i < temp.size(); i++) {\n            if(temp.get(i).equals(\"\")) {\n                continue;\n            }\n            for(int j = i + 1; j < temp.size(); j++) {\n                if(temp.get(i).equals(temp.get(j))) {\n                    temp.set(j, \"\");\n                }\n            }\n        }\n        for(int i = 0; i < temp.size(); i++) {\n            if(!temp.get(i).equals(\"\")) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String> temp1 = new ArrayList<String>();\n        ArrayList<String> temp2 = new ArrayList<String>();\n        ArrayList<String> temp3 = new ArrayList<String>();\n        ArrayList<String> temp4 = new ArrayList<String>();\n        ArrayList<String> temp5 = new ArrayList<String>();\n        ArrayList<String> temp6 = new ArrayList<String>();\n        ArrayList<String> temp7 = new ArrayList<String>();\n        ArrayList<String> temp8 = new ArrayList<String>();\n        ArrayList<String> temp9 = new ArrayList<String>();\n        ArrayList<String> temp10 = new ArrayList<String>();\n        ArrayList<String> temp11 = new ArrayList<String>();\n        ArrayList<String> temp12 = new ArrayList<String>();\n        ArrayList<String> temp13 = new ArrayList<String>();\n        ArrayList<String> temp14 = new ArrayList<String>();\n        ArrayList<String> temp15 = new ArrayList<String>();\n        ArrayList<String> temp16 = new ArrayList<String>();\n        ArrayList<String> temp17 = new ArrayList<String>();\n        ArrayList<String> temp18 = new ArrayList<String>();\n        ArrayList<String> temp19 = new ArrayList<String>();\n        ArrayList<String> temp20 = new ArrayList<String>();\n        ArrayList<String> temp21 = new ArrayList<String>();\n        ArrayList<String> temp22 = new ArrayList<String>();\n        ArrayList<String> temp23 = new ArrayList<String>();\n        ArrayList<String> temp24 = new ArrayList<String>();\n        ArrayList<String> temp25 = new ArrayList<String>();\n        ArrayList<String> temp26 = new ArrayList<String>();\n        ArrayList<String> temp27 = new ArrayList<String>();\n        ArrayList<String> temp28 = new ArrayList<String>();\n        ArrayList",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (String s : Input) {\n            String[] str = s.split(\",\");\n            temp.add(str[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String str : Input) {\n            String[] arr = str.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(str);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(str);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getKey() + \":\" + entry.getValue());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] input = Input.get(0).split(\",\");\n        for (int i = 0; i < input.length; i++) {\n            temp.add(input[i]);\n        }\n        for (int i = 1; i < Input.size(); i++) {\n            String[] input2 = Input.get(i).split(\",\");\n            for (int j = 0; j < input2.length; j++) {\n                if (temp.contains(input2[j])) {\n                    temp.remove(input2[j]);\n                }\n            }\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            result.add(temp.get(i));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] temp2 = new String[Input.size()];\n        for (int i = 0; i < Input.size(); i++) {\n            temp2[i] = Input.get(i).split(\",\")[0];\n        }\n        for (int i = 0; i < temp2.length; i++) {\n            for (int j = i + 1; j < temp2.length; j++) {\n                if (temp2[i].equals(temp2[j])) {\n                    temp.add(Input.get(i));\n                    temp.add(Input.get(j));\n                }\n            }\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (!result.contains(temp.get(i))) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        ArrayList<String> temp1 = new ArrayList<String>();\n        ArrayList<String> temp2 = new ArrayList<String>();\n        ArrayList<String> temp3 = new ArrayList<String>();\n        ArrayList<String> temp4 = new ArrayList<String>();\n        ArrayList<String> temp5 = new ArrayList<String>();\n        ArrayList<String> temp6 = new ArrayList<String>();\n        ArrayList<String> temp7 = new ArrayList<String>();\n        ArrayList<String> temp8 = new ArrayList<String>();\n        ArrayList<String> temp9 = new ArrayList<String>();\n        ArrayList<String> temp10 = new ArrayList<String>();\n        ArrayList<String> temp11 = new ArrayList<String>();\n        ArrayList<String> temp12 = new ArrayList<String>();\n        ArrayList<String> temp13 = new ArrayList<String>();\n        ArrayList<String> temp14 = new ArrayList<String>();\n        ArrayList<String> temp15 = new ArrayList<String>();\n        ArrayList<String> temp16 = new ArrayList<String>();\n        ArrayList<String> temp17 = new ArrayList<String>();\n        ArrayList<String> temp18 = new ArrayList<String>();\n        ArrayList<String> temp19 = new ArrayList<String>();\n        ArrayList<String> temp20 = new ArrayList<String>();\n        ArrayList<String> temp21 = new ArrayList<String>();\n        ArrayList<String> temp22 = new ArrayList<String>();\n        ArrayList<String> temp23 = new ArrayList<String>();\n        ArrayList<String> temp24 = new ArrayList<String>();\n        ArrayList<String> temp25 = new ArrayList<String>();\n        ArrayList<String> temp26 = new ArrayList<String>();\n        ArrayList<String> temp27 = new ArrayList<String>();\n        ArrayList<String> temp28 = new ArrayList<String>();\n        ArrayList",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\" \");\n            sb.append(value.size());\n            sb.append(\" \");\n            for (String s : value) {\n                sb.append(s);\n                sb.append(\" \");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] arr = Input.get(0).split(\",\");\n        String first = arr[0];\n        result.add(first);\n        for(int i=1;i<Input.size();i++) {\n            temp.clear();\n            arr = Input.get(i).split(\",\");\n            for(int j=0;j<arr.length;j++) {\n                if(result.contains(arr[j])) {\n                    temp.add(arr[j]);\n                }\n            }\n            result.clear();\n            result.addAll(temp);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] split = s.split(\" \");\n            list.add(new Pair<String, String>(split[0], split[1]));\n        }\n        Collections.sort(list, new Comparator<Pair<String, String>>() {\n            public int compare(Pair<String, String> p1, Pair<String, String> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        String prev = \"\";\n        for (Pair<String, String> p : list) {\n            if (!p.getValue0().equals(prev)) {\n                result.add(p.getValue0());\n            }\n            prev = p.getValue0();\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> tuples = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] str = s.split(\",\");\n            tuples.add(new Pair<String, String>(str[0], str[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : tuples) {\n            if (map.containsKey(p.getValue0())) {\n                ArrayList<String> temp = map.get(p.getValue0());\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            result.add(key + \":\" + value.toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> list = map.get(arr[0]);\n                list.add(s);\n                map.put(arr[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (String s : map.keySet()) {\n            ArrayList<String> list = map.get(s);\n            StringBuilder sb = new StringBuilder();\n            for (String str : list) {\n                sb.append(str);\n                sb.append(\"|\");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> Temp = new ArrayList<String>();\n        String[] InputArray = Input.toArray(new String[Input.size()]);\n        for (int i = 0; i < InputArray.length; i++) {\n            String[] TempArray = InputArray[i].split(\",\");\n            Temp.add(TempArray[0]);\n        }\n        String[] TempArray = Temp.toArray(new String[Temp.size()]);\n        for (int i = 0; i < TempArray.length; i++) {\n            int count = 0;\n            for (int j = 0; j < TempArray.length; j++) {\n                if (TempArray[i].equals(TempArray[j])) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                Output.add(TempArray[i]);\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        String first = temp.get(0);\n        for (int i = 0; i < temp.size(); i++) {\n            if (temp.get(i).equals(first)) {\n                result.add(Input.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for(String s: Input) {\n            String[] arr = s.split(\" \");\n            if(map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for(String key: map.keySet()) {\n            result.add(map.get(key).toString());\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            list.add(new Pair<String, String>(arr[0], arr[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : list) {\n            if (map.containsKey(p.getValue0())) {\n                map.get(p.getValue0()).add(p.getValue1());\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            output.add(key + \":\" + value.toString());\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        HashMap<String, ArrayList<String>> map = new HashMap<>();\n        for (String tuple : Input) {\n            String[] tupleArray = tuple.split(\",\");\n            String key = tupleArray[0];\n            String value = tupleArray[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> values = map.get(key);\n                values.add(value);\n                map.put(key, values);\n            } else {\n                ArrayList<String> values = new ArrayList<>();\n                values.add(value);\n                map.put(key, values);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> values = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\",\");\n            sb.append(values.size());\n            sb.append(\",\");\n            sb.append(values.stream().collect(Collectors.joining(\",\")));\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] temp = s.split(\",\");\n            Pair<String, String> p = new Pair<String, String>(temp[0], temp[1]);\n            list.add(p);\n        }\n        Map<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : list) {\n            if (map.containsKey(p.getValue0())) {\n                ArrayList<String> temp = map.get(p.getValue0());\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (String s : map.keySet()) {\n            ArrayList<String> temp = map.get(s);\n            StringBuilder sb = new StringBuilder();\n            sb.append(s);\n            sb.append(\":\");\n            for (String t : temp) {\n                sb.append(t);\n                sb.append(\",\");\n            }\n            sb.deleteCharAt(sb.length() - 1);\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\" \");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> tuples = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] parts = s.split(\",\");\n            tuples.add(new Pair<String, String>(parts[0], parts[1]));\n        }\n        Collections.sort(tuples, new Comparator<Pair<String, String>>() {\n            @Override\n            public int compare(Pair<String, String> o1, Pair<String, String> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        String current = tuples.get(0).getValue0();\n        ArrayList<String> currentList = new ArrayList<String>();\n        for (Pair<String, String> p : tuples) {\n            if (p.getValue0().equals(current)) {\n                currentList.add(p.getValue1());\n            } else {\n                result.add(current + \":\" + currentList.toString());\n                current = p.getValue0();\n                currentList = new ArrayList<String>();\n                currentList.add(p.getValue1());\n            }\n        }\n        result.add(current + \":\" + currentList.toString());\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (String key : map.keySet()) {\n            result.add(String.join(\",\", map.get(key)));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (String key : map.keySet()) {\n            result.add(key + \" \" + map.get(key).size());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> list = map.get(arr[0]);\n                list.add(s);\n                map.put(arr[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getKey() + \":\" + entry.getValue());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> tuples = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] tuple = s.split(\",\");\n            tuples.add(new Pair<String, String>(tuple[0], tuple[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> tuple : tuples) {\n            if (map.containsKey(tuple.getValue0())) {\n                map.get(tuple.getValue0()).add(tuple.getValue1());\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(tuple.getValue1());\n                map.put(tuple.getValue0(), list);\n            }\n        }\n        for (String key : map.keySet()) {\n            Output.add(key + \":\" + map.get(key).toString());\n        }\n        return Output;",
    "        ArrayList<String> Output = new ArrayList<>();\n        ArrayList<String> temp = new ArrayList<>();\n        String[] temp2 = new String[2];\n        for (String s : Input) {\n            temp2 = s.split(\",\");\n            temp.add(temp2[0]);\n        }\n        String[] temp3 = new String[temp.size()];\n        temp3 = temp.toArray(temp3);\n        Arrays.sort(temp3);\n        String[] temp4 = new String[temp.size()];\n        temp4 = temp.toArray(temp4);\n        Arrays.sort(temp4);\n        for (int i = 0; i < temp3.length; i++) {\n            if (temp3[i].equals(temp4[i])) {\n                Output.add(temp3[i]);\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String str : Input) {\n            String[] strs = str.split(\",\");\n            if (map.containsKey(strs[0])) {\n                ArrayList<String> list = map.get(strs[0]);\n                list.add(str);\n                map.put(strs[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(str);\n                map.put(strs[0], list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\":\");\n            for (String str : value) {\n                sb.append(str);\n                sb.append(\",\");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            result.add(key + \":\" + value.toString());\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (String i : Input) {\n            String[] str = i.split(\",\");\n            temp.add(str[0]);\n        }\n        for (String i : temp) {\n            if (Collections.frequency(temp, i) > 1) {\n                output.add(i);\n            }\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        // Write your code here\n        // To print results to the standard output please use System.out.println\n        // Example: System.out.println(\"Hello world!\");\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            String[] s = Input.get(i).split(\",\");\n            temp.add(s[0]);\n        }\n        for(int i = 0; i < temp.size(); i++) {\n            if(!output.contains(temp.get(i))) {\n                output.add(temp.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for(String s : Input) {\n            String[] arr = s.split(\" \");\n            if(map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for(String key : map.keySet()) {\n            result.add(key + \": \" + map.get(key).toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> list = map.get(arr[0]);\n                list.add(s);\n                map.put(arr[0], list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(s);\n                map.put(arr[0], list);\n            }\n        }\n        for (String key : map.keySet()) {\n            ArrayList<String> list = map.get(key);\n            StringBuilder sb = new StringBuilder();\n            for (String s : list) {\n                sb.append(s + \" \");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] arr = new String[Input.size()];\n        for(int i = 0; i < Input.size(); i++) {\n            arr[i] = Input.get(i);\n        }\n        for(int i = 0; i < arr.length; i++) {\n            String[] arr1 = arr[i].split(\",\");\n            temp.add(arr1[0]);\n        }\n        for(int i = 0; i < temp.size(); i++) {\n            if(!Output.contains(temp.get(i))) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> pairs = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] split = s.split(\",\");\n            pairs.add(new Pair<String, String>(split[0], split[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : pairs) {\n            if (!map.containsKey(p.getValue0())) {\n                map.put(p.getValue0(), new ArrayList<String>());\n            }\n            map.get(p.getValue0()).add(p.getValue1());\n        }\n        for (String s : map.keySet()) {\n            output.add(s + \":\" + map.get(s).toString());\n        }\n        return output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> Temp = new ArrayList<String>();\n        ArrayList<String> Temp2 = new ArrayList<String>();\n        ArrayList<String> Temp3 = new ArrayList<String>();\n        ArrayList<String> Temp4 = new ArrayList<String>();\n        ArrayList<String> Temp5 = new ArrayList<String>();\n        ArrayList<String> Temp6 = new ArrayList<String>();\n        ArrayList<String> Temp7 = new ArrayList<String>();\n        ArrayList<String> Temp8 = new ArrayList<String>();\n        ArrayList<String> Temp9 = new ArrayList<String>();\n        ArrayList<String> Temp10 = new ArrayList<String>();\n        ArrayList<String> Temp11 = new ArrayList<String>();\n        ArrayList<String> Temp12 = new ArrayList<String>();\n        ArrayList<String> Temp13 = new ArrayList<String>();\n        ArrayList<String> Temp14 = new ArrayList<String>();\n        ArrayList<String> Temp15 = new ArrayList<String>();\n        ArrayList<String> Temp16 = new ArrayList<String>();\n        ArrayList<String> Temp17 = new ArrayList<String>();\n        ArrayList<String> Temp18 = new ArrayList<String>();\n        ArrayList<String> Temp19 = new ArrayList<String>();\n        ArrayList<String> Temp20 = new ArrayList<String>();\n        ArrayList<String> Temp21 = new ArrayList<String>();\n        ArrayList<String> Temp22 = new ArrayList<String>();\n        ArrayList<String> Temp23 = new ArrayList<String>();\n        ArrayList<String> Temp24 = new ArrayList<String>();\n        ArrayList<String> Temp25 = new ArrayList<String>();\n        ArrayList<String> Temp26 = new ArrayList<String>();\n        ArrayList<String> Temp27 = new ArrayList<String>();\n        ArrayList<String> Temp28 = new ArrayList<String>();\n        ArrayList<String> Temp29 = new ArrayList<String>();\n        ArrayList",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < Input.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                output.add(Input.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] arr = Input.get(0).split(\",\");\n        String first = arr[0];\n        for (int i = 0; i < Input.size(); i++) {\n            arr = Input.get(i).split(\",\");\n            if (arr[0].equals(first)) {\n                temp.add(Input.get(i));\n            } else {\n                Output.add(temp.toString());\n                temp.clear();\n                temp.add(Input.get(i));\n                first = arr[0];\n            }\n        }\n        Output.add(temp.toString());\n        return Output;",
    "        ArrayList<String> result = new ArrayList<>();\n        ArrayList<Pair<String, Integer>> list = new ArrayList<>();\n        for (String s : Input) {\n            String[] parts = s.split(\" \");\n            String first = parts[0];\n            String second = parts[1];\n            Pair<String, Integer> pair = new Pair<>(first, Integer.parseInt(second));\n            list.add(pair);\n        }\n        Collections.sort(list, new Comparator<Pair<String, Integer>>() {\n            @Override\n            public int compare(Pair<String, Integer> o1, Pair<String, Integer> o2) {\n                return o1.getValue1().compareTo(o2.getValue1());\n            }\n        });\n        String first = list.get(0).getValue0();\n        int count = 1;\n        for (int i = 1; i < list.size(); i++) {\n            if (list.get(i).getValue0().equals(first)) {\n                count++;\n            } else {\n                result.add(first + \" \" + count);\n                first = list.get(i).getValue0();\n                count = 1;\n            }\n        }\n        result.add(first + \" \" + count);\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            list.add(new Pair<String, String>(arr[0], arr[1]));\n        }\n        Collections.sort(list, new Comparator<Pair<String, String>>() {\n            public int compare(Pair<String, String> p1, Pair<String, String> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        String prev = \"\";\n        for (Pair<String, String> p : list) {\n            if (!p.getValue0().equals(prev)) {\n                result.add(p.getValue0());\n                prev = p.getValue0();\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(arr[1]);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(arr[1]);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            String temp = key + \":\" + value.toString();\n            result.add(temp);\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for(int i = 0; i < Input.size(); i++) {\n            if(Collections.frequency(temp, temp.get(i)) > 1) {\n                Output.add(Input.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> Pairs = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] parts = s.split(\",\");\n            Pairs.add(new Pair<String, String>(parts[0], parts[1]));\n        }\n        HashMap<String, ArrayList<String>> Groups = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : Pairs) {\n            if (Groups.containsKey(p.getValue0())) {\n                Groups.get(p.getValue0()).add(p.getValue1());\n            } else {\n                ArrayList<String> NewGroup = new ArrayList<String>();\n                NewGroup.add(p.getValue1());\n                Groups.put(p.getValue0(), NewGroup);\n            }\n        }\n        for (String s : Groups.keySet()) {\n            String Group = s + \":\";\n            for (String s2 : Groups.get(s)) {\n                Group += s2 + \",\";\n            }\n            Output.add(Group.substring(0, Group.length() - 1));\n        }\n        return Output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<Pair<String, String>> tuples = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] tuple = s.split(\",\");\n            tuples.add(new Pair<String, String>(tuple[0], tuple[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> tuple : tuples) {\n            if (!map.containsKey(tuple.getValue0())) {\n                map.put(tuple.getValue0(), new ArrayList<String>());\n            }\n            map.get(tuple.getValue0()).add(tuple.getValue1());\n        }\n        for (String key : map.keySet()) {\n            Output.add(key + \":\" + map.get(key).toString());\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getKey() + \":\" + entry.getValue().toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String str : Input) {\n            String[] strArr = str.split(\",\");\n            String key = strArr[0];\n            String value = strArr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(value);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(value);\n                map.put(key, list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\",\");\n            sb.append(list.size());\n            sb.append(\",\");\n            for (String str : list) {\n                sb.append(str);\n                sb.append(\",\");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (String s : map.keySet()) {\n            result.add(map.get(s).toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                map.get(arr[0]).add(s);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (String s : map.keySet()) {\n            result.add(map.get(s).toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] str = s.split(\",\");\n            if (map.containsKey(str[0])) {\n                map.get(str[0]).add(str[1]);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(str[1]);\n                map.put(str[0], temp);\n            }\n        }\n        for (String key : map.keySet()) {\n            result.add(key + \":\" + map.get(key).toString());\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\":\");\n            for (String s : value) {\n                sb.append(s);\n                sb.append(\";\");\n            }\n            Output.add(sb.toString());\n        }\n        return Output;"
  ]
}
{
  "name": "mbpp_417_group_tuples",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find common first element in given list of tuple.\n    public static ArrayList<String> groupTuples(ArrayList<String> Input) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_417_group_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(groupTuples((new ArrayList<String>(Arrays.asList((Pair<String, String>)Pair.with(\"x\", \"y\"), (Pair<String, String>)Pair.with(\"x\", \"z\"), (Pair<String, String>)Pair.with(\"w\", \"t\"))))).equals((new ArrayList<String>(Arrays.asList(Pair.with(\"x\", \"y\", \"z\"), Pair.with(\"w\", \"t\"))))));\n    assert(groupTuples((new ArrayList<String>(Arrays.asList((Pair<String, String>)Pair.with(\"a\", \"b\"), (Pair<String, String>)Pair.with(\"a\", \"c\"), (Pair<String, String>)Pair.with(\"d\", \"e\"))))).equals((new ArrayList<String>(Arrays.asList(Pair.with(\"a\", \"b\", \"c\"), Pair.with(\"d\", \"e\"))))));\n    assert(groupTuples((new ArrayList<String>(Arrays.asList((Pair<String, String>)Pair.with(\"f\", \"g\"), (Pair<String, String>)Pair.with(\"f\", \"g\"), (Pair<String, String>)Pair.with(\"h\", \"i\"))))).equals((new ArrayList<String>(Arrays.asList(Pair.with(\"f\", \"g\", \"g\"), Pair.with(\"h\", \"i\"))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Pair<String, String>> list = new ArrayList<Pair<String, String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            list.add(new Pair<String, String>(arr[0], arr[1]));\n        }\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (Pair<String, String> p : list) {\n            if (map.containsKey(p.getValue0())) {\n                map.get(p.getValue0()).add(p.getValue1());\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(p.getValue1());\n                map.put(p.getValue0(), temp);\n            }\n        }\n        for (String s : map.keySet()) {\n            ArrayList<String> temp = map.get(s);\n            Collections.sort(temp);\n            result.add(s + \":\" + String.join(\",\", temp));\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                output.add(temp.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] str = Input.get(0).split(\",\");\n        for (int i = 0; i < str.length; i++) {\n            temp.add(str[i]);\n        }\n        for (int i = 1; i < Input.size(); i++) {\n            String[] str1 = Input.get(i).split(\",\");\n            for (int j = 0; j < str1.length; j++) {\n                if (temp.contains(str1[j])) {\n                    temp.remove(str1[j]);\n                }\n            }\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            Output.add(temp.get(i));\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getKey() + \": \" + entry.getValue().toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] s = Input.get(i).split(\" \");\n            temp.add(s[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0;i<Input.size();i++) {\n            temp.add(Input.get(i).split(\",\")[0]);\n        }\n        int count = 0;\n        for(int i=0;i<temp.size();i++) {\n            for(int j=i+1;j<temp.size();j++) {\n                if(temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if(count>0) {\n                Output.add(temp.get(i));\n            }\n            count = 0;\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> First = new ArrayList<String>();\n        ArrayList<String> Second = new ArrayList<String>();\n        ArrayList<String> Third = new ArrayList<String>();\n        ArrayList<String> Fourth = new ArrayList<String>();\n        ArrayList<String> Fifth = new ArrayList<String>();\n        ArrayList<String> Sixth = new ArrayList<String>();\n        ArrayList<String> Seventh = new ArrayList<String>();\n        ArrayList<String> Eighth = new ArrayList<String>();\n        ArrayList<String> Ninth = new ArrayList<String>();\n        ArrayList<String> Tenth = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] temp = Input.get(i).split(\",\");\n            if (temp.length == 1) {\n                First.add(temp[0]);\n            } else if (temp.length == 2) {\n                Second.add(temp[0]);\n                Second.add(temp[1]);\n            } else if (temp.length == 3) {\n                Third.add(temp[0]);\n                Third.add(temp[1]);\n                Third.add(temp[2]);\n            } else if (temp.length == 4) {\n                Fourth.add(temp[0]);\n                Fourth.add(temp[1]);\n                Fourth.add(temp[2]);\n                Fourth.add(temp[3]);\n            } else if (temp.length == 5) {\n                Fifth.add(temp[0]);\n                Fifth.add(temp[1]);\n                Fifth.add(temp[2]);\n                Fifth.add(temp[3]);\n                Fifth.add(temp[4]);\n            } else if (temp.length == 6) {\n                Sixth.add(temp[0]);\n                Sixth.add(temp[1]);\n                Sixth.add(temp[2]);\n                Sixth.add(temp[3]);\n                Sixth.add(temp[4]);\n                Sixth.add(temp[5]);\n            } else if (temp.length == 7) {\n                Seventh",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            if (Collections.frequency(temp, temp.get(i)) > 1) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i=0;i<Input.size();i++) {\n            String[] arr = Input.get(i).split(\" \");\n            temp.add(arr[0]);\n        }\n        String first = temp.get(0);\n        for(int i=1;i<temp.size();i++) {\n            if(first.equals(temp.get(i))) {\n                result.add(Input.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] temp = Input.get(i).split(\",\");\n            result.add(temp[0]);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\" \");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> list = map.get(key);\n                list.add(value);\n                map.put(key, list);\n            } else {\n                ArrayList<String> list = new ArrayList<String>();\n                list.add(value);\n                map.put(key, list);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> list = entry.getValue();\n            StringBuilder sb = new StringBuilder();\n            sb.append(key);\n            sb.append(\" \");\n            for (String s : list) {\n                sb.append(s);\n                sb.append(\" \");\n            }\n            result.add(sb.toString());\n        }\n        return result;",
    "        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        String[] arr = temp.toArray(new String[temp.size()]);\n        Arrays.sort(arr);\n        String prev = arr[0];\n        for(int i = 1; i < arr.length; i++) {\n            if(!arr[i].equals(prev)) {\n                output.add(prev);\n                prev = arr[i];\n            }\n        }\n        output.add(prev);\n        return output;",
    "        ArrayList<String> Output = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for (int i = 0; i < temp.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < temp.size(); j++) {\n                if (temp.get(i).equals(temp.get(j))) {\n                    count++;\n                }\n            }\n            if (count >= 2) {\n                Output.add(temp.get(i));\n            }\n        }\n        return Output;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            if (map.containsKey(arr[0])) {\n                ArrayList<String> temp = map.get(arr[0]);\n                temp.add(s);\n                map.put(arr[0], temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(s);\n                map.put(arr[0], temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            result.add(entry.getValue().toString());\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        for(int i = 0; i < temp.size(); i++) {\n            if(!result.contains(temp.get(i))) {\n                result.add(temp.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        String[] tempArr;\n        String[] tempArr2;\n        String first;\n        String second;\n        for (int i = 0; i < Input.size(); i++) {\n            tempArr = Input.get(i).split(\",\");\n            first = tempArr[0];\n            second = tempArr[1];\n            for (int j = i + 1; j < Input.size(); j++) {\n                tempArr2 = Input.get(j).split(\",\");\n                if (first.equals(tempArr2[0])) {\n                    temp.add(Input.get(j));\n                }\n            }\n            if (temp.size() > 0) {\n                result.add(first + \":\" + temp.toString());\n            }\n            temp.clear();\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();\n        for (String s : Input) {\n            String[] arr = s.split(\",\");\n            String key = arr[0];\n            String value = arr[1];\n            if (map.containsKey(key)) {\n                ArrayList<String> temp = map.get(key);\n                temp.add(value);\n                map.put(key, temp);\n            } else {\n                ArrayList<String> temp = new ArrayList<String>();\n                temp.add(value);\n                map.put(key, temp);\n            }\n        }\n        for (Map.Entry<String, ArrayList<String>> entry : map.entrySet()) {\n            String key = entry.getKey();\n            ArrayList<String> value = entry.getValue();\n            String s = key + \",\" + value.toString();\n            result.add(s);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> temp = new ArrayList<String>();\n        for (int i = 0; i < Input.size(); i++) {\n            String[] arr = Input.get(i).split(\",\");\n            temp.add(arr[0]);\n        }\n        String common = temp.get(0);\n        for (int i = 1; i < temp.size(); i++) {\n            if (common.equals(temp.get(i))) {\n                result.add(Input.get(i));\n            }\n        }\n        return result;"
  ]
}
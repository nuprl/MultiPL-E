{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to pack consecutive duplicates of a given list elements into sublists.\n    public static Object packConsecutiveDuplicates(Object list1) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(packConsecutiveDuplicates((new Object(Arrays.asList((long)0l, (long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)4l, (long)5l, (long)6l, (long)6l, (long)6l, (long)7l, (long)8l, (long)9l, (long)4l, (long)4l)))).equals((new Object(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)0l, (long)0l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)4l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)6l, (long)6l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)7l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)8l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)4l, (long)4l)))))));\n    assert(packConsecutiveDuplicates((new Object(Arrays.asList((long)10l, (long)10l, (long)15l, (long)19l, (long)18l, (long)18l, (long)17l, (long)26l, (long)26l, (long)17l, (long)18l, (long)10l)))).equals((new Object(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)10l, (long)10l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)15l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)19l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)18l, (long)18l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)17l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)26l, (long)26l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)17l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)18l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)10l)))))));\n    assert(packConsecutiveDuplicates((new Object(Arrays.asList((String)\"a\", (String)\"a\", (String)\"b\", (String)\"c\", (String)\"d\", (String)\"d\")))).equals((new Object(Arrays.asList((ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"a\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"b\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"c\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"d\", (String)\"d\")))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object item : (List) list1) {\n            if (list3.size() == 0) {\n                list3.add(item);\n            } else {\n                if (item.equals(list3.get(0))) {\n                    list3.add(item);\n                } else {\n                    list2.add(list3);\n                    list3 = new ArrayList<>();\n                    list3.add(item);\n                }\n            }\n        }\n        list2.add(list3);\n        return list2;",
    "        Object[] list = (Object[]) list1;\n        Object[] result = new Object[list.length];\n        int count = 0;\n        for (int i = 0; i < list.length; i++) {\n            Object[] temp = new Object[list.length];\n            int tempCount = 0;\n            for (int j = i; j < list.length; j++) {\n                if (list[i].equals(list[j])) {\n                    temp[tempCount] = list[j];\n                    tempCount++;\n                } else {\n                    break;\n                }\n            }\n            i += tempCount - 1;\n            result[count] = Arrays.copyOfRange(temp, 0, tempCount);\n            count++;\n        }\n        return Arrays.copyOfRange(result, 0, count);",
    "        Object list2 = new ArrayList();\n        Object list3 = new ArrayList();\n        for (Object i : (List) list1) {\n            if (list3.isEmpty()) {\n                list3.add(i);\n            } else if (list3.get(0).equals(i)) {\n                list3.add(i);\n            } else {\n                list2.add(list3);\n                list3 = new ArrayList();\n                list3.add(i);\n            }\n        }\n        list2.add(list3);\n        return list2;",
    "        List<Object> list = (List<Object>) list1;\n        List<Object> result = new ArrayList<>();\n        List<Object> temp = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (i == 0) {\n                temp.add(list.get(i));\n            } else {\n                if (list.get(i).equals(list.get(i - 1))) {\n                    temp.add(list.get(i));\n                } else {\n                    result.add(temp);\n                    temp = new ArrayList<>();\n                    temp.add(list.get(i));\n                }\n            }\n        }\n        result.add(temp);\n        return result;",
    "        Object list2 = new ArrayList();\n        Object list3 = new ArrayList();\n        for (Object i : (ArrayList) list1) {\n            if (((ArrayList) list3).size() == 0) {\n                ((ArrayList) list3).add(i);\n            } else {\n                if (i.equals(((ArrayList) list3).get(0))) {\n                    ((ArrayList) list3).add(i);\n                } else {\n                    ((ArrayList) list2).add(list3);\n                    list3 = new ArrayList();\n                    ((ArrayList) list3).add(i);\n                }\n            }\n        }\n        ((ArrayList) list2).add(list3);\n        return list2;",
    "        List<Object> list = (List<Object>) list1;\n        List<Object> packedList = new ArrayList<>();\n        List<Object> subList = new ArrayList<>();\n        Object previous = list.get(0);\n        for (Object element : list) {\n            if (element.equals(previous)) {\n                subList.add(element);\n            } else {\n                packedList.add(subList);\n                subList = new ArrayList<>();\n                subList.add(element);\n                previous = element;\n            }\n        }\n        packedList.add(subList);\n        return packedList;",
    "        if (list1 instanceof List) {\n            List<Object> list = (List<Object>) list1;\n            List<Object> result = new ArrayList<>();\n            List<Object> temp = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    temp.add(list.get(i));\n                } else {\n                    if (list.get(i).equals(list.get(i - 1))) {\n                        temp.add(list.get(i));\n                    } else {\n                        result.add(temp);\n                        temp = new ArrayList<>();\n                        temp.add(list.get(i));\n                    }\n                }\n            }\n            result.add(temp);\n            return result;\n        } else {\n            return list1;\n        }",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object i : (List)list1) {\n            if (((List)list3).isEmpty() || ((List)list3).get(0).equals(i)) {\n                ((List)list3).add(i);\n            } else {\n                ((List)list2).add(list3);\n                list3 = new ArrayList<>();\n                ((List)list3).add(i);\n            }\n        }\n        ((List)list2).add(list3);\n        return list2;",
    "        Object list2 = new ArrayList();\n        Object list3 = new ArrayList();\n        for (Object i : (ArrayList) list1) {\n            if (((ArrayList) list2).size() == 0) {\n                ((ArrayList) list2).add(i);\n            } else if (((ArrayList) list2).get(((ArrayList) list2).size() - 1).equals(i)) {\n                ((ArrayList) list2).add(i);\n            } else {\n                ((ArrayList) list3).add(list2);\n                list2 = new ArrayList();\n                ((ArrayList) list2).add(i);\n            }\n        }\n        ((ArrayList) list3).add(list2);\n        return list3;",
    "        List<Object> list = (List<Object>) list1;\n        List<Object> result = new ArrayList<>();\n        List<Object> temp = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            temp.add(list.get(i));\n            if (i < list.size() - 1 && !list.get(i).equals(list.get(i + 1))) {\n                result.add(temp);\n                temp = new ArrayList<>();\n            }\n        }\n        if (temp.size() > 0) {\n            result.add(temp);\n        }\n        return result;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        Object list4 = new ArrayList<>();\n        Object list5 = new ArrayList<>();\n        Object list6 = new ArrayList<>();\n        Object list7 = new ArrayList<>();\n        Object list8 = new ArrayList<>();\n        Object list9 = new ArrayList<>();\n        Object list10 = new ArrayList<>();\n        Object list11 = new ArrayList<>();\n        Object list12 = new ArrayList<>();\n        Object list13 = new ArrayList<>();\n        Object list14 = new ArrayList<>();\n        Object list15 = new ArrayList<>();\n        Object list16 = new ArrayList<>();\n        Object list17 = new ArrayList<>();\n        Object list18 = new ArrayList<>();\n        Object list19 = new ArrayList<>();\n        Object list20 = new ArrayList<>();\n        Object list21 = new ArrayList<>();\n        Object list22 = new ArrayList<>();\n        Object list23 = new ArrayList<>();\n        Object list24 = new ArrayList<>();\n        Object list25 = new ArrayList<>();\n        Object list26 = new ArrayList<>();\n        Object list27 = new ArrayList<>();\n        Object list28 = new ArrayList<>();\n        Object list29 = new ArrayList<>();\n        Object list30 = new ArrayList<>();\n        Object list31 = new ArrayList<>();\n        Object list32 = new ArrayList<>();\n        Object list33 = new ArrayList<>();\n        Object list34 = new ArrayList<>();\n        Object list35 = new ArrayList<>();\n        Object list36 = new ArrayList<>();\n        Object list37 = new ArrayList<>();\n        Object list38 = new ArrayList<>();\n        Object list39 = new ArrayList<>();\n        Object list40 = new ArrayList<>();\n        Object list41 = new ArrayList<>();\n        Object list42 = new ArrayList<>();\n        Object list43 = new ArrayList<>();\n        Object list44 = new Array",
    "        if (list1 instanceof List) {\n            List list = (List) list1;\n            List<Object> result = new ArrayList<>();\n            Object last = null;\n            List<Object> sublist = new ArrayList<>();\n            for (Object item : list) {\n                if (last == null || last.equals(item)) {\n                    sublist.add(item);\n                } else {\n                    result.add(sublist);\n                    sublist = new ArrayList<>();\n                    sublist.add(item);\n                }\n                last = item;\n            }\n            result.add(sublist);\n            return result;\n        } else {\n            return list1;\n        }",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object i : (List) list1) {\n            if (((List) list3).isEmpty() || ((List) list3).get(0).equals(i)) {\n                ((List) list3).add(i);\n            } else {\n                ((List) list2).add(list3);\n                list3 = new ArrayList<>();\n                ((List) list3).add(i);\n            }\n        }\n        ((List) list2).add(list3);\n        return list2;",
    "        Object[] list = (Object[]) list1;\n        Object[] result = new Object[list.length];\n        int counter = 0;\n        int index = 0;\n        for (int i = 0; i < list.length; i++) {\n            if (i == list.length - 1) {\n                Object[] temp = new Object[counter + 1];\n                temp[counter] = list[i];\n                result[index] = temp;\n                break;\n            }\n            if (list[i].equals(list[i + 1])) {\n                counter++;\n            } else {\n                Object[] temp = new Object[counter + 1];\n                for (int j = 0; j < temp.length; j++) {\n                    temp[j] = list[i];\n                }\n                result[index] = temp;\n                index++;\n                counter = 0;\n            }\n        }\n        return result;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (int i = 0; i < ((ArrayList) list1).size(); i++) {\n            if (i == 0) {\n                ((ArrayList) list2).add(((ArrayList) list1).get(i));\n            } else {\n                if (((ArrayList) list1).get(i) == ((ArrayList) list1).get(i - 1)) {\n                    ((ArrayList) list2).add(((ArrayList) list1).get(i));\n                } else {\n                    ((ArrayList) list3).add(list2);\n                    list2 = new ArrayList<>();\n                    ((ArrayList) list2).add(((ArrayList) list1).get(i));\n                }\n            }\n        }\n        ((ArrayList) list3).add(list2);\n        return list3;",
    "        if (list1 instanceof List) {\n            List<Object> list = (List<Object>) list1;\n            List<Object> result = new ArrayList<>();\n            int i = 0;\n            while (i < list.size()) {\n                List<Object> sublist = new ArrayList<>();\n                Object item = list.get(i);\n                sublist.add(item);\n                i++;\n                while (i < list.size() && list.get(i).equals(item)) {\n                    sublist.add(list.get(i));\n                    i++;\n                }\n                result.add(sublist);\n            }\n            return result;\n        } else {\n            return null;\n        }",
    "        Object list2 = new ArrayList<>();\n        if (list1 instanceof ArrayList) {\n            ArrayList<Object> list = (ArrayList<Object>) list1;\n            ArrayList<Object> result = (ArrayList<Object>) list2;\n            if (list.size() > 0) {\n                Object last = list.get(0);\n                ArrayList<Object> sublist = new ArrayList<>();\n                sublist.add(last);\n                for (int i = 1; i < list.size(); i++) {\n                    Object current = list.get(i);\n                    if (current.equals(last)) {\n                        sublist.add(current);\n                    } else {\n                        result.add(sublist);\n                        sublist = new ArrayList<>();\n                        sublist.add(current);\n                    }\n                    last = current;\n                }\n                result.add(sublist);\n            }\n        }\n        return list2;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object i : (List) list1) {\n            if (((List) list3).isEmpty()) {\n                ((List) list3).add(i);\n            } else {\n                if (i.equals(((List) list3).get(0))) {\n                    ((List) list3).add(i);\n                } else {\n                    ((List) list2).add(list3);\n                    list3 = new ArrayList<>();\n                    ((List) list3).add(i);\n                }\n            }\n        }\n        ((List) list2).add(list3);\n        return list2;",
    "        if (list1 instanceof List) {\n            List<Object> list = (List<Object>) list1;\n            List<Object> result = new ArrayList<>();\n            List<Object> sublist = new ArrayList<>();\n            Object previous = null;\n            for (Object item : list) {\n                if (previous == null) {\n                    previous = item;\n                    sublist.add(item);\n                } else if (previous.equals(item)) {\n                    sublist.add(item);\n                } else {\n                    result.add(sublist);\n                    sublist = new ArrayList<>();\n                    sublist.add(item);\n                    previous = item;\n                }\n            }\n            if (sublist.size() > 0) {\n                result.add(sublist);\n            }\n            return result;\n        } else {\n            return list1;\n        }",
    "        Object list2 = new ArrayList();\n        Object list3 = new ArrayList();\n        for (Object item : (List) list1) {\n            if (((List) list3).isEmpty() || ((List) list3).get(0).equals(item)) {\n                ((List) list3).add(item);\n            } else {\n                ((List) list2).add(list3);\n                list3 = new ArrayList();\n                ((List) list3).add(item);\n            }\n        }\n        ((List) list2).add(list3);\n        return list2;"
  ]
}
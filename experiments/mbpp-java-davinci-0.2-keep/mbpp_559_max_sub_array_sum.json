{
  "name": "mbpp_559_max_sub_array_sum",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the sum of the largest contiguous sublist in the given list.\n    public static long maxSubArraySum(ArrayList<Long> a, long size) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(maxSubArraySum((new ArrayList<Long>(Arrays.asList((long)-2l, (long)-3l, (long)4l, (long)-1l, (long)-2l, (long)1l, (long)5l, (long)-3l))), (8l)) == (7l));\n    assert(maxSubArraySum((new ArrayList<Long>(Arrays.asList((long)-3l, (long)-4l, (long)5l, (long)-2l, (long)-3l, (long)2l, (long)6l, (long)-4l))), (8l)) == (8l));\n    assert(maxSubArraySum((new ArrayList<Long>(Arrays.asList((long)-4l, (long)-5l, (long)6l, (long)-3l, (long)-4l, (long)3l, (long)7l, (long)-5l))), (8l)) == (10l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0), max_ending_here = a.get(0);\n        for (int i = 1; i < size; i++) {\n            max_ending_here = Math.max(a.get(i), max_ending_here + a.get(i));\n            max_so_far = Math.max(max_so_far, max_ending_here);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0), i;\n        long curr_max = a.get(0);\n\n        for (i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = 0;\n        long max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;",
    "        long max_so_far = 0, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = a.get(0);\n        long curr_max = a.get(0);\n\n        for (int i = 1; i < size; i++) {\n            curr_max = Math.max(a.get(i), curr_max + a.get(i));\n            max_so_far = Math.max(max_so_far, curr_max);\n        }\n        return max_so_far;",
    "        long max_so_far = Long.MIN_VALUE, max_ending_here = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here = max_ending_here + a.get(i);\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n        }\n        return max_so_far;"
  ]
}
{
  "name": "mbpp_635_heap_sort",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here.\n        return null;",
    "        // Your code goes here.\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        // Your code here.\n        return iterable;",
    "        // Write your code here.\n        ArrayList<Long> list = new ArrayList<Long>(iterable);\n        int n = list.size();\n        for (int i = n / 2 - 1; i >= 0; i--)\n            heapify(list, n, i);\n        for (int i = n - 1; i >= 0; i--) {\n            long temp = list.get(0);\n            list.set(0, list.get(i));\n            list.set(i, temp);\n            heapify(list, i, 0);\n        }\n        return list;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // TODO: Write your code here.\n        return iterable;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        return null;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        return iterable;",
    "        // Your code goes here.\n        return iterable;",
    "        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            ret.add(heap.poll());\n        }\n        return ret;",
    "        // TODO: Implement heap sort\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        Heap heap = new Heap(iterable);\n        while (heap.size() > 0) {\n            result.add(heap.pop());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return null;",
    "        // Write your code here.\n        return iterable;",
    "        // TODO: Implement heap sort.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> pq = new PriorityQueue<Long>(iterable);\n        while(!pq.isEmpty()){\n            result.add(pq.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        return iterable;",
    "        // Your code here.\n        return iterable;",
    "        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Your code here\n        return iterable;",
    "        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // TODO: Implement heap sort.\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return new ArrayList<Long>();",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        return null;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return new ArrayList<Long>();",
    "        // Write your code here.\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> heap = new ArrayList<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n            int current = heap.size() - 1;\n            while (current > 0) {\n                int parent = (current - 1) / 2;\n                if (heap.get(current) > heap.get(parent)) {\n                    Long temp = heap.get(current);\n                    heap.set(current, heap.get(parent));\n                    heap.set(parent, temp);\n                }\n                current = parent;\n            }\n        }\n        ArrayList<Long> sorted = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            sorted.add(heap.get(0));\n            heap.set(0, heap.get(heap.size() - 1));\n            heap.remove(heap.size() - 1);\n            int current = 0;\n            while (current < heap.size()) {\n                int leftChild = 2 * current + 1;\n                int rightChild = 2 * current + 2;\n                if (leftChild >= heap.size()) {\n                    break;\n                }\n                int max = leftChild;\n                if (rightChild < heap.size()) {\n                    if (heap.get(rightChild) > heap.get(leftChild)) {\n                        max++;\n                    }\n                }\n                if (heap.get(current) < heap.get(max)) {\n                    Long temp = heap.get(max);\n                    heap.set(max, heap.get(current));\n                    heap.set(current, temp);\n                }\n                current = max;\n            }\n        }\n        return sorted;",
    "        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        return iterable;",
    "        // TODO: Write your code here.\n        return iterable;",
    "        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // TODO: Write your code here\n        return null;",
    "        // Write your code here.\n        return iterable;",
    "        // Your code here.\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return new ArrayList<Long>();",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        // Your code here.\n        return null;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return iterable;",
    "        // Your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        return iterable;",
    "        // write your code here\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        return iterable;",
    "        // Your code here.\n        return iterable;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<>(Collections.reverseOrder());\n        for(Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> res = new ArrayList<>();\n        while(!pq.isEmpty()) {\n            res.add(pq.poll());\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> heap = new ArrayList<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n            int index = heap.size() - 1;\n            while (index > 0) {\n                int parent = (index - 1) / 2;\n                if (heap.get(index) < heap.get(parent)) {\n                    Long temp = heap.get(index);\n                    heap.set(index, heap.get(parent));\n                    heap.set(parent, temp);\n                }\n                index = parent;\n            }\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.get(0));\n            heap.set(0, heap.get(heap.size() - 1));\n            heap.remove(heap.size() - 1);\n            int index = 0;\n            while (index < heap.size()) {\n                int child1 = index * 2 + 1;\n                int child2 = index * 2 + 2;\n                if (child1 >= heap.size()) {\n                    break;\n                }\n                int child = child1;\n                if (child2 < heap.size() && heap.get(child2) < heap.get(child1)) {\n                    child = child2;\n                }\n                if (heap.get(index) > heap.get(child)) {\n                    Long temp = heap.get(index);\n                    heap.set(index, heap.get(child));\n                    heap.set(child, temp);\n                }\n                index = child;\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            sorted.add(heap.poll());\n        }\n        return sorted;",
    "        return new ArrayList<Long>();",
    "        // Write your code here.\n        return iterable;",
    "        // TODO: Write your code here.\n        return null;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long x : iterable) {\n            heap.add(x);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        return iterable;",
    "        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> heap = new ArrayList<>();\n        for (Long i : iterable) {\n            heap.add(i);\n            int c = heap.size() - 1;\n            while (c > 0) {\n                int p = (c - 1) / 2;\n                if (heap.get(c) < heap.get(p)) {\n                    Long tmp = heap.get(c);\n                    heap.set(c, heap.get(p));\n                    heap.set(p, tmp);\n                    c = p;\n                } else {\n                    break;\n                }\n            }\n        }\n        ArrayList<Long> ans = new ArrayList<>();\n        while (heap.size() > 0) {\n            ans.add(heap.get(0));\n            heap.set(0, heap.get(heap.size() - 1));\n            heap.remove(heap.size() - 1);\n            int p = 0;\n            while (true) {\n                int c1 = p * 2 + 1;\n                int c2 = p * 2 + 2;\n                if (c1 >= heap.size()) {\n                    break;\n                }\n                int c = -1;\n                if (c2 >= heap.size()) {\n                    c = c1;\n                } else {\n                    c = heap.get(c1) < heap.get(c2) ? c1 : c2;\n                }\n                if (heap.get(p) > heap.get(c)) {\n                    Long tmp = heap.get(p);\n                    heap.set(p, heap.get(c));\n                    heap.set(c, tmp);\n                    p = c;\n                } else {\n                    break;\n                }\n            }\n        }\n        return ans;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long x : iterable) {\n            heap.add(x);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.offer(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        return null;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // TODO: Write your code here.\n        return iterable;",
    "        return null;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;",
    "        return null;",
    "        // Write your code here.\n        return iterable;"
  ]
}
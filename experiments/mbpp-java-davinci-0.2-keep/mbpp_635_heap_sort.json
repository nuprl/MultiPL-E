{
  "name": "mbpp_635_heap_sort",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here.\n        return null;",
    "        // Your code goes here.\n        return iterable;",
    "        // Write your code here.\n        return null;",
    "        // Your code here.\n        return iterable;",
    "        // Write your code here.\n        ArrayList<Long> list = new ArrayList<Long>(iterable);\n        int n = list.size();\n        for (int i = n / 2 - 1; i >= 0; i--)\n            heapify(list, n, i);\n        for (int i = n - 1; i >= 0; i--) {\n            long temp = list.get(0);\n            list.set(0, list.get(i));\n            list.set(i, temp);\n            heapify(list, i, 0);\n        }\n        return list;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // TODO: Write your code here.\n        return iterable;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        return null;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;",
    "        return iterable;",
    "        // Your code goes here.\n        return iterable;",
    "        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            ret.add(heap.poll());\n        }\n        return ret;",
    "        // TODO: Implement heap sort\n        return iterable;",
    "        // Write your code here.\n        return iterable;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        Heap heap = new Heap(iterable);\n        while (heap.size() > 0) {\n            result.add(heap.pop());\n        }\n        return result;"
  ]
}
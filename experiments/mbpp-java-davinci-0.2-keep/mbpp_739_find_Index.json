{
  "name": "mbpp_739_find_Index",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n    public static long findIndex(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findIndex((2l)) == (4l));\n    assert(findIndex((3l)) == (14l));\n    assert(findIndex((4l)) == (45l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 0;\n        while (true) {\n            t = i * (i + 1) / 2;\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 1;\n        while (true) {\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n            sum += i;\n        }",
    "        long i = 1;\n        long triangle = 0;\n        while (true) {\n            triangle = i * (i + 1) / 2;\n            if (String.valueOf(triangle).length() == n) {\n                break;\n            }\n            i++;\n        }\n        return i;",
    "        long index = 1;\n        long tri = 1;\n        while (tri < n) {\n            index++;\n            tri += index;\n        }\n        return index;",
    "        long i = 1;\n        long triangle = 0;\n        while (true) {\n            triangle = (i * (i + 1)) / 2;\n            if (triangle > Math.pow(10, n - 1)) {\n                break;\n            }\n            i++;\n        }\n        return i;",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        while (true) {\n            long t = i * (i + 1) / 2;\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        // return (long) Math.ceil((Math.sqrt(8 * n * n + 1) - 1) / 2);\n        return (long) Math.ceil((Math.sqrt(8 * n * n + 1) - 1) / 2);",
    "        long i = 1;\n        long tri = 1;\n        while (true) {\n            if (String.valueOf(tri).length() == n) {\n                return i;\n            }\n            i++;\n            tri += i;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long triangle = 1;\n        while (String.valueOf(triangle).length() < n) {\n            i++;\n            triangle += i;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long tri = 1;\n        while (tri < n) {\n            i++;\n            tri += i;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long j = 1;\n        while (i < n) {\n            j += 1;\n            i = (j * (j + 1)) / 2;\n        }\n        return j;",
    "        long i = 1;\n        long tri = 1;\n        while (String.valueOf(tri).length() < n) {\n            i++;\n            tri = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long tri = 1;\n        while (tri < n) {\n            i++;\n            tri = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (String.valueOf(triangularNumber).length() < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (true) {\n            if (String.valueOf(triangularNumber).length() == n) {\n                return index;\n            }\n            index++;\n            triangularNumber += index;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long index = 0;\n        long triangularNumber = 0;\n        while (String.valueOf(triangularNumber).length() < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long index = 0;\n        long num = 0;\n        while (num < n) {\n            index++;\n            num = index * (index + 1) / 2;\n        }\n        return index;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long count = 0;\n        long i = 1;\n        while (count < n) {\n            long tri = (i * (i + 1)) / 2;\n            count = (long) Math.floor(Math.log10(tri)) + 1;\n            i++;\n        }\n        return i - 1;",
    "        long i = 1;\n        long sum = 0;\n        while (String.valueOf(sum).length() < n) {\n            sum += i;\n            i++;\n        }\n        return i - 1;",
    "        long index = 1;\n        long triangle = 1;\n        while (true) {\n            if (String.valueOf(triangle).length() == n) {\n                return index;\n            }\n            index++;\n            triangle += index;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (true) {\n            if (String.valueOf(triangularNumber).length() == n) {\n                return index;\n            }\n            index++;\n            triangularNumber += index;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = t + i;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (true) {\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n            t += i;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        while (true) {\n            long t = (i * (i + 1)) / 2;\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long index = 1;\n        long tri = 1;\n        while (String.valueOf(tri).length() < n) {\n            index++;\n            tri += index;\n        }\n        return index;",
    "        long i = 1;\n        long sum = 1;\n        while (String.valueOf(sum).length() < n) {\n            i++;\n            sum += i;\n        }\n        return i;",
    "        long index = 0;\n        long triangular = 0;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        while (true) {\n            long tri = i * (i + 1) / 2;\n            if (Long.toString(tri).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < Math.pow(10, n - 1)) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < Math.pow(10, n - 1)) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long tri = 1;\n        while (tri < n) {\n            i++;\n            tri = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long index = 0;\n        long tri = 0;\n        while(true) {\n            tri = (index * (index + 1)) / 2;\n            if(String.valueOf(tri).length() == n) {\n                break;\n            }\n            index++;\n        }\n        return index;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (true) {\n            if (String.valueOf(triangularNumber).length() == n) {\n                return index;\n            }\n            index++;\n            triangularNumber += index;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        while (true) {\n            long t = i * (i + 1) / 2;\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (String.valueOf(triangularNumber).length() < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        while (true) {\n            long tri = i * (i + 1) / 2;\n            if (String.valueOf(tri).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (sum >= Math.pow(10, n - 1)) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long tri = 1;\n        while (String.valueOf(tri).length() < n) {\n            i++;\n            tri += i;\n        }\n        return i;",
    "        long i = 1;\n        long tri = 1;\n        while (true) {\n            if (String.valueOf(tri).length() == n) {\n                return i;\n            }\n            i++;\n            tri += i;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long j = 1;\n        while (true) {\n            long t = (i * (i + 1)) / 2;\n            if (t > Math.pow(10, n - 1)) {\n                return j;\n            }\n            i++;\n            j++;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (String.valueOf(triangularNumber).length() < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long tri = 1;\n        while (tri < n) {\n            i++;\n            tri += i;\n        }\n        return i;",
    "        long index = 0;\n        long triangularNumber = 0;\n        while (String.valueOf(triangularNumber).length() < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        while (true) {\n            long t = (i * (i + 1)) / 2;\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (true) {\n            if (String.valueOf(triangularNumber).length() == n) {\n                return index;\n            }\n            index++;\n            triangularNumber += index;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long tri = 1;\n        while (true) {\n            if (String.valueOf(tri).length() == n) {\n                return i;\n            }\n            i++;\n            tri += i;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < Math.pow(10, n - 1)) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (sum >= Math.pow(10, n - 1)) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long triangle = 0;\n        while (true) {\n            triangle = (i * (i + 1)) / 2;\n            if (triangle >= Math.pow(10, n - 1)) {\n                break;\n            }\n            i++;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long index = 1;\n        long triangle = 1;\n        while (triangle < n) {\n            index++;\n            triangle += index;\n        }\n        return index;",
    "        long i = 1;\n        while (true) {\n            long t = i * (i + 1) / 2;\n            if (t >= Math.pow(10, n - 1)) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (true) {\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n            t += i;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < Math.pow(10, n - 1)) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber <= n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long triangle = 1;\n        while (true) {\n            if (String.valueOf(triangle).length() == n) {\n                return i;\n            }\n            i++;\n            triangle += i;\n        }",
    "        long index = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            index++;\n            t += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        while (true) {\n            long t = i * (i + 1) / 2;\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < Math.pow(10, n - 1)) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (String.valueOf(triangularNumber).length() < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long sum = 1;\n        while (sum < n) {\n            i++;\n            sum += i;\n        }\n        return i;",
    "        long index = 0;\n        long triangular = 0;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long tri = 1;\n        while (String.valueOf(tri).length() < n) {\n            i++;\n            tri += i;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long index = 0;\n        long triangularNumber = 0;\n        while(true) {\n            index++;\n            triangularNumber += index;\n            if(String.valueOf(triangularNumber).length() == n) {\n                break;\n            }\n        }\n        return index;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t <= n) {\n            t = (i * (i + 1)) / 2;\n            i++;\n        }\n        return i - 2;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (String.valueOf(triangularNumber).length() < n) {\n            index++;\n            triangularNumber = triangularNumber + index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long triangular = 0;\n        while (triangular < Math.pow(10, n - 1)) {\n            triangular = (i * (i + 1)) / 2;\n            i++;\n        }\n        return i - 1;",
    "        long index = 1;\n        long triangle = 1;\n        while (true) {\n            if (triangle >= Math.pow(10, n - 1) && triangle < Math.pow(10, n)) {\n                return index;\n            }\n            index++;\n            triangle += index;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long index = 0;\n        long triangular = 0;\n        while (true) {\n            index++;\n            triangular += index;\n            if (String.valueOf(triangular).length() == n) {\n                break;\n            }\n        }\n        return index;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (true) {\n            if (String.valueOf(triangularNumber).length() == n) {\n                return index;\n            }\n            index++;\n            triangularNumber += index;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 1;\n        while (String.valueOf(sum).length() < n) {\n            i++;\n            sum += i;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long tri = 1;\n        while (String.valueOf(tri).length() < n) {\n            i++;\n            tri += i;\n        }\n        return i;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < Math.pow(10, n)) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (true) {\n            if (t >= Math.pow(10, n - 1)) {\n                return i;\n            }\n            i++;\n            t += i;\n        }",
    "        long index = 1;\n        long triangle = 1;\n        while(true) {\n            if(triangle > n) {\n                return index;\n            }\n            index++;\n            triangle += index;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long triangle = 1;\n        while (true) {\n            if (String.valueOf(triangle).length() == n) {\n                return i;\n            }\n            i++;\n            triangle += i;\n        }",
    "        long i = 1;\n        long index = 1;\n        while (true) {\n            long tri = (i * (i + 1)) / 2;\n            if (String.valueOf(tri).length() == n) {\n                return index;\n            }\n            i++;\n            index++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        while (true) {\n            long t = i * (i + 1) / 2;\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i += 1;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while(true) {\n            if(String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n            t = i * (i + 1) / 2;\n        }",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 0;\n        long triangularNumber = 0;\n        while (triangularNumber < Math.pow(10, n - 1)) {\n            index++;\n            triangularNumber = (index * (index + 1)) / 2;\n        }\n        return index;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (true) {\n            if (String.valueOf(triangularNumber).length() == n) {\n                return index;\n            }\n            index++;\n            triangularNumber += index;\n        }",
    "        long i = 1;\n        while (true) {\n            long tri = (i * (i + 1)) / 2;\n            if (tri > Math.pow(10, n - 1)) {\n                break;\n            }\n            i++;\n        }\n        return i;",
    "        long index = 1;\n        long triangular = 1;\n        while(String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum = sum + i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index += 1;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        while (true) {\n            long t = (i * (i + 1)) / 2;\n            if (t >= Math.pow(10, n - 1)) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long index = 1;\n        long sum = 1;\n        while (true) {\n            if (String.valueOf(sum).length() == n) {\n                return index;\n            }\n            index++;\n            sum += index;\n        }",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (true) {\n            if (String.valueOf(triangularNumber).length() == n) {\n                return index;\n            }\n            index++;\n            triangularNumber += index;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (true) {\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n            t += i;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long i = 1;\n        long tri = 1;\n        while (true) {\n            if (String.valueOf(tri).length() == n) {\n                return i;\n            }\n            i++;\n            tri += i;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (String.valueOf(t).length() < n) {\n            i++;\n            t += i;\n        }\n        return i;",
    "        long index = 1;\n        long triangular = 1;\n        while(String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long sum = 0;\n        while(true) {\n            sum += i;\n            if(String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long tri = 1;\n        while (true) {\n            if (String.valueOf(tri).length() == n) {\n                return i;\n            }\n            i++;\n            tri = (i * (i + 1)) / 2;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        while (true) {\n            long t = (i * (i + 1)) / 2;\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 1;\n        while (true) {\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n            sum += i;\n        }",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long sum = 0;\n        long index = 1;\n        while (sum < n) {\n            sum += index;\n            index++;\n        }\n        return index - 1;",
    "        long i = 1;\n        long t = 1;\n        while (true) {\n            if (t >= Math.pow(10, n - 1)) {\n                return i;\n            }\n            i++;\n            t += i;\n        }",
    "        long i = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            i++;\n            triangular += i;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long tri = 0;\n        while (true) {\n            tri = (i * (i + 1)) / 2;\n            if (tri >= Math.pow(10, n - 1)) {\n                break;\n            }\n            i++;\n        }\n        return i;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (Long.toString(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = (i * (i + 1)) / 2;\n        }\n        return i;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < n) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular += index;\n        }\n        return index;",
    "        long index = 1;\n        while (true) {\n            long tri = (index * (index + 1)) / 2;\n            if (String.valueOf(tri).length() == n) {\n                return index;\n            }\n            index++;\n        }",
    "        long i = 1;\n        while (true) {\n            long t = (i * (i + 1)) / 2;\n            if (t > Math.pow(10, n - 1)) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while (true) {\n            if (String.valueOf(t).length() == n) {\n                return i;\n            }\n            i++;\n            t += i;\n        }",
    "        long i = 1;\n        long num = 0;\n        while (num < n) {\n            num = (i * (i + 1)) / 2;\n            i++;\n        }\n        return i - 1;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (true) {\n            if (t >= Math.pow(10, n - 1)) {\n                return i;\n            }\n            i++;\n            t += i;\n        }",
    "        long i = 1;\n        long triangle = 0;\n        while (String.valueOf(triangle).length() < n) {\n            triangle += i;\n            i++;\n        }\n        return i - 1;",
    "        long index = 1;\n        long triangular = 1;\n        while (String.valueOf(triangular).length() < n) {\n            index++;\n            triangular = index * (index + 1) / 2;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long tri = 1;\n        while (tri < n) {\n            i++;\n            tri += i;\n        }\n        return i;",
    "        long index = 1;\n        long triangularNumber = 1;\n        while (triangularNumber < Math.pow(10, n - 1)) {\n            index++;\n            triangularNumber += index;\n        }\n        return index;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long t = 1;\n        while (t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;",
    "        long i = 1;\n        long sum = 0;\n        while (true) {\n            sum += i;\n            if (String.valueOf(sum).length() == n) {\n                return i;\n            }\n            i++;\n        }",
    "        long i = 1;\n        long t = 1;\n        while(t < n) {\n            i++;\n            t = i * (i + 1) / 2;\n        }\n        return i;"
  ]
}
{
  "name": "mbpp_125_find_length",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;",
    "        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int count = 0;\n                for (int k = i; k <= j; k++) {\n                    if (arr[k] == 0) {\n                        count++;\n                    }\n                }\n                max = Math.max(max, Math.abs(count - (j - i + 1 - count)));\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        long zero = 0;\n        long one = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zero++;\n            } else {\n                one++;\n            }\n            if (zero == one) {\n                count = zero + one;\n            } else {\n                count = Math.max(zero, one);\n            }\n            max = Math.max(max, count);\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;",
    "        int n = string.length();\n        int[] count = new int[n];\n        int[] count1 = new int[n];\n        int[] count0 = new int[n];\n        count[0] = string.charAt(0) == '1' ? 1 : 0;\n        count1[0] = string.charAt(0) == '1' ? 1 : 0;\n        count0[0] = string.charAt(0) == '0' ? 1 : 0;\n        for (int i = 1; i < n; i++) {\n            count[i] = count[i - 1] + (string.charAt(i) == '1' ? 1 : 0);\n            count1[i] = count1[i - 1] + (string.charAt(i) == '1' ? 1 : 0);\n            count0[i] = count0[i - 1] + (string.charAt(i) == '0' ? 1 : 0);\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int ones = count1[j] - (i == 0 ? 0 : count1[i - 1]);\n                int zeros = count0[j] - (i == 0 ? 0 : count0[i - 1]);\n                max = Math.max(max, Math.abs(ones - zeros));\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;",
    "        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) == '0' ? -1 : 1;\n        }\n        HashMap<Integer, Integer> map = new HashMap<>();\n        int sum = 0;\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            sum += arr[i];\n            if (sum == 0) {\n                max = i + 1;\n            }\n            if (map.containsKey(sum)) {\n                max = Math.max(max, i - map.get(sum));\n            } else {\n                map.put(sum, i);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;",
    "        // Write your code here\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;",
    "        long maxLength = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                maxLength = Math.max(maxLength, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                maxLength = Math.max(maxLength, string.length() - i);\n            }\n        }\n        return maxLength;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;",
    "        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;"
  ]
}
{
  "name": "mbpp_293_otherside_rightangle",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the third side of a right angled triangle.\n    public static float othersideRightangle(long w, long h) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(othersideRightangle((7l), (8l)) == (10.63014581273465f));\n    assert(othersideRightangle((3l), (4l)) == (float)5l);\n    assert(othersideRightangle((7l), (15l)) == (16.55294535724685f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (float) Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));",
    "        return (float)Math.sqrt(w*w + h*h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        return (float)Math.sqrt(w*w + h*h);",
    "        return (float)Math.sqrt(w*w + h*h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        return (float) Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));",
    "        return (float)Math.sqrt(w*w + h*h);",
    "        return (float)Math.sqrt(w*w + h*h);",
    "        return (float)Math.sqrt(w*w + h*h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        return (float) Math.sqrt(w * w + h * h);",
    "        double result = Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n        return (float) result;",
    "        return (float) Math.sqrt(w * w + h * h);"
  ]
}
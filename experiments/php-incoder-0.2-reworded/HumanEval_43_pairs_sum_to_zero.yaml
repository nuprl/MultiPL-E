name: HumanEval_43_pairs_sum_to_zero
language: php
prompt: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n// it\
  \ returns true if there are two distinct elements in the array that\n// sum to zero,\
  \ and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n// false\n\
  // >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
  \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n// true\n\
  // >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l) {\n"
tests: "function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1))\
  \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
  \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n \
  \   if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30))\
  \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
  \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\n\
  test();"
completions: ["  $sum = 0;\n  foreach ($l as $i => $v) {\n    if ($v < 0) {\n    \
    \  return false;\n    }\n    $sum += $v;\n  }\n  return $sum == 0;\n}\n", "  $sum\
    \ = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n}\n",
  "    $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return ($sum == 0);\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n\
    \        $sum += $v;\n        if ($sum < 0) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n", "    $pairs = array();\n    foreach ($l\
    \ as $i => $v) {\n        $pairs[$v] = $i;\n    }\n    $sum = 0;\n    foreach\
    \ ($pairs as $i => $v) {\n        $sum += $i;\n    }\n    return $sum == 0;\n\
    }\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n        if ($v > 0) {\n\
    \            $sum += $v;\n        }\n    }\n    return ($sum == 0);\n}\n", " \
    \   $sum = 0;\n    foreach ($l as $i => $v) {\n        if ($v < 0) {\n       \
    \     $sum += abs($v);\n        } else {\n            $sum += $v;\n        }\n\
    \    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $item)\
    \ {\n        $sum += $item;\n    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n\
    \    foreach ($l as $i => $v) {\n        if ($v < 0) {\n            $sum -= $v\
    \ * abs($v);\n        } else {\n            $sum += $v;\n        }\n    }\n  \
    \  return ($sum == 0);\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n\
    \        $sum += $v;\n        if ($sum < 0) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n", "    $n = count($l);\n    if ($n == 0)\
    \ {\n        return false;\n    }\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $sum += $l[$i];\n    }\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $j = $i + 1;\n        $k = $n - 1;\n        while ($j < $k && $l[$i] + $l[$j]\
    \ == 0) {\n            $j++;\n        }\n        while ($k > $j && $l[$i] + $l[$k]\
    \ == 0) {\n            $k--;\n        }\n        if ($j == $k) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}\n", "    $sum = 0;\n  \
    \  foreach ($l as $e) {\n        $sum += $e;\n    }\n    return $sum == 0;\n}\n",
  "    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n", "    $pairs = array();\n    foreach ($l as $i => $v) {\n \
    \       if ($v < 0) {\n            $v = -$v;\n        }\n        $pairs[$v][]\
    \ = $i;\n    }\n    $sum = 0;\n    foreach ($pairs as $v) {\n        if (count($v)\
    \ == 1) {\n            $sum += $v[0];\n        } else {\n            $sum += $v;\n\
    \        }\n    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l\
    \ as $k => $v) {\n        $sum += $v;\n        if ($sum < 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    $sum = 0;\n    $n = count($l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    if ($l[$i] + $l[$j] == 0) {\n                return false;\n            }\n\
    \        }\n    }\n    return true;\n}\n", "    $sum = 0;\n    foreach ($l as\
    \ $item) {\n        $sum += $item;\n    }\n    return $sum == 0;\n}\n", "    $sum\
    \ = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n    return\
    \ $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $item) {\n        $sum\
    \ += $item;\n    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l\
    \ as $k => $v) {\n        $sum += $v;\n        if ($sum < 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    $sum = 0;\n    foreach\
    \ ($l as $e) {\n        $sum += $e;\n    }\n    return $sum == 0;\n}\n", "   \
    \ $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        $sum\
    \ += $l[$i];\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return false;\n            }\n        }\n    }\n    return true;\n}\n", " \
    \   $sum = 0;\n    foreach ($l as $k => $v) {\n        $sum += $v;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    $pairs = array();\n    $sum = 0;\n    foreach ($l as $i => $v) {\n\
    \        if ($v < 0) {\n            $pairs[] = array($i, $v);\n            $sum\
    \ += $v;\n        }\n    }\n    if ($sum == 0) {\n        return false;\n    }\n\
    \    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0,\
    \ 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[]\
    \ = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n \
    \   $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0,\
    \ 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[]\
    \ = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n \
    \   $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0,\
    \ 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[]\
    \ = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n \
    \   $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0,\
    \ 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[]\
    \ = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n \
    \   $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0,\
    \ 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[]\
    \ = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n \
    \   $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0,\
    \ 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[]\
    \ = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n \
    \   $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0,\
    \ 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[]\
    \ = array(0, 0);\n    $pairs[] = array(0, 0);\n    $pairs[] = array(0, 0);\n \
    \   $pairs[] = array(0, 0);\n    $", "    $sum = 0;\n    foreach ($l as $i =>\
    \ $x) {\n        $sum += $x;\n        if ($sum < 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    $sum = 0;\n    foreach ($l as\
    \ $i => $x) {\n        $sum += $x;\n        if ($sum < 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    $pairs = array();\n \
    \   $sum = 0;\n    foreach ($l as $i => $v) {\n        if ($v > 0) {\n       \
    \     $pairs[] = array($i, $v);\n            $sum += $v;\n        }\n    }\n \
    \   if ($sum == 0) {\n        return false;\n    }\n    $pairs = array_unique($pairs);\n\
    \    $pairs = array_reverse($pairs);\n    $pairs = array_slice($pairs, 0, count($pairs)\
    \ - 1);\n    foreach ($pairs as $pair) {\n        if ($pair[1] != 0) {\n     \
    \       return true;\n        }\n    }\n    return false;\n}\n", "    $n = count($l);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n \
    \   }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\n", "    $sum = 0;\n   \
    \ foreach ($l as $i => $v) {\n        if ($v < 0) {\n            $sum -= $v;\n\
    \        } else {\n            $sum += $v;\n        }\n    }\n    return ($sum\
    \ == 0);\n}\n", "    $pairs = array();\n    foreach ($l as $k => $v) {\n     \
    \   if ($v < 0) {\n            $pairs[$k] = -$v;\n        } else {\n         \
    \   $pairs[$k] = $v;\n        }\n    }\n    $pairs = array_count_values($pairs);\n\
    \    foreach ($pairs as $k => $v) {\n        if ($v > 1) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    $sum = 0;\n    foreach\
    \ ($l as $item) {\n        $sum += $item;\n    }\n    return $sum == 0;\n}", " \
    \   $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n  \
    \  return $sum == 0;\n}\n", "    $n = count($l);\n    if ($n == 0) {\n       \
    \ return false;\n    }\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     $sum += $l[$i];\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n      \
    \          return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $sum += $l[$i];\n    }\n    return ($sum == 0);\n}\n", "    $sum = 0;\n\
    \    foreach ($l as $item) {\n        $sum += $item;\n    }\n    return $sum ==\
    \ 0;\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n        $sum += $v;\n\
    \        if ($sum < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n\
    \    }\n    return ($sum == 0);\n}\n", "    $sum = 0;\n    foreach ($l as $item)\
    \ {\n        $sum += $item;\n    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n\
    \    foreach ($l as $item) {\n        $sum += $item;\n    }\n    return $sum ==\
    \ 0;\n}\n", "    $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n\
    \    }\n    return $sum == 0;\n}\n", "    $n = count($l);\n    if ($n == 0) {\n\
    \        return false;\n    }\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $sum += $l[$i];\n    }\n    return ($sum == 0);\n}\n", "    $sum\
    \ = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n    return\
    \ $sum == 0;\n}", "  $sum = 0;\n  foreach ($l as $k => $v) {\n    if ($v < 0)\
    \ {\n      $sum -= $v;\n    } else {\n      $sum += $v;\n    }\n  }\n  return\
    \ $sum == 0;\n}\n", "    $n = count($l);\n    if ($n == 0) {\n        return false;\n\
    \    }\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n\
    \    }\n    $sum -= $l[0];\n    return ($sum == 0);\n}\n", "    $sum = 0;\n  \
    \  foreach ($l as $n) {\n        $sum += $n;\n    }\n    return $sum == 0;\n}\n",
  "    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n        $sum\
    \ += $v;\n        if ($sum < 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n    \
    \    $sum += $v;\n        if ($sum < 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n", "  $sum = 0;\n  $n = count($l);\n  for ($i\
    \ = 0; $i < $n; $i++) {\n    $sum += $l[$i];\n  }\n  for ($i = 0; $i < $n; $i++)\
    \ {\n    for ($j = $i + 1; $j < $n; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "    $sum =\
    \ 0;\n    foreach ($l as $k => $v) {\n        $sum += $v;\n        if ($sum <\
    \ 0) {\n            return false;\n        }\n    }\n    return true;\n}\n", " \
    \   $n = count($l);\n    $sum = 0;\n    for($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    for($i = 0; $i < $n; $i++) {\n        $j = $i +\
    \ 1;\n        $k = $n - 1;\n        $sum -= $l[$i];\n        while($j < $k &&\
    \ $sum < 0) {\n            $sum -= $l[$j];\n            $j++;\n        }\n   \
    \     while($j > $k && $sum > 0) {\n            $sum -= $l[$k];\n            $k--;\n\
    \        }\n        if($sum < 0) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\n", "    $pairs = array();\n    $sum = 0;\n    foreach\
    \ ($l as $i => $v) {\n        if ($v < 0) {\n            $pairs[$v] = $i;\n  \
    \      } else {\n            $sum += $v;\n        }\n    }\n    if ($sum == 0)\
    \ {\n        return false;\n    }\n    $pairs[$sum] = count($l);\n    foreach\
    \ ($pairs as $i => $j) {\n        if ($i < $j) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    $sum = 0;\n    foreach ($l as\
    \ $e) {\n        $sum += $e;\n    }\n    return $sum == 0;\n}\n", "    $sum =\
    \ 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n    return $sum\
    \ == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n        $sum +=\
    \ $v;\n        if ($sum < 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "    $sum = 0;\n    foreach ($l as $e) {\n        $sum\
    \ += $e;\n    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l\
    \ as $item) {\n        $sum += $item;\n    }\n    return $sum == 0;\n}\n", " \
    \   $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n", "    $n = count($l);\n    $sum = 0;\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $sum += $l[$i];\n    }\n    return $sum == 0;\n}\n", " \
    \   $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n  \
    \  if ($sum == 0) {\n        return true;\n    }\n    $found = false;\n    foreach\
    \ ($l as $item) {\n        if ($item == 0) {\n            $found = true;\n   \
    \         break;\n        }\n        if ($sum - $item < 0) {\n            $found\
    \ = true;\n            break;\n        }\n    }\n    return $found;\n}\n", " \
    \   $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n  \
    \  return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $item) {\n    \
    \    $sum += $item;\n    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    $n\
    \ = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n \
    \   }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $item)\
    \ {\n        $sum += $item;\n    }\n    return $sum == 0;\n}\n", "    $n = count($l);\n\
    \    if ($n == 0) {\n        return false;\n    }\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n    return ($sum == 0);\n\
    }\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n        $sum += $v;\n  \
    \      if ($sum < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n        if ($v\
    \ > 0) {\n            $sum += $v;\n        }\n    }\n    if ($sum == 0) {\n  \
    \      return true;\n    }\n    $sum2 = 0;\n    foreach ($l as $k => $v) {\n \
    \       if ($v > 0) {\n            $sum2 += $v;\n        }\n    }\n    return\
    \ ($sum == $sum2);\n}\n", "    $n = count($l);\n    $sum = 0;\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        $j = $i + 1;\n        if ($j >= $n || $l[$i] + $l[$j] != 0)\
    \ {\n            return false;\n        }\n        $l[$i] = $l[$j];\n        $l[$j]\
    \ = $sum;\n    }\n    return true;\n}\n", "    $sum = 0;\n    foreach ($l as $e)\
    \ {\n        $sum += $e;\n    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n\
    \    foreach ($l as $item) {\n        $sum += $item;\n    }\n    return $sum ==\
    \ 0;\n}\n", "    $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n\
    \    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $item)\
    \ {\n        $sum += $item;\n    }\n    return $sum == 0;\n}\n", "  $sum = 0;\n\
    \  foreach ($l as $item) {\n    $sum += $item;\n  }\n  return $sum == 0;\n}\n",
  "    $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n  \
    \      $sum += $v;\n        if ($sum < 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n", "    $pairs = array_count_values($l);\n\
    \    foreach ($pairs as $key => $value) {\n        if ($value == 1) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n", "    $pairs =\
    \ array();\n    foreach ($l as $i => $v) {\n        if ($v < 0) {\n          \
    \  $v = -$v;\n        }\n        $pairs[$v][] = $i;\n    }\n    $sum = 0;\n  \
    \  foreach ($pairs as $v) {\n        $sum += $v;\n    }\n    return $sum == 0;\n\
    }\n", "    $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n  \
    \  }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v)\
    \ {\n        $sum += $v;\n    }\n    return $sum == 0;\n}\n", "  $sum = 0;\n \
    \ foreach ($l as $item) {\n    $sum += $item;\n  }\n  return $sum == 0;\n}\n",
  "    $sum = 0;\n    foreach ($l as $i => $v) {\n        $sum += $v;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $sum += $l[$i];\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "    $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n  \
    \  }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    $n = count($l);\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n    return $sum ==\
    \ 0;\n}\n", "    $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n\
    \    }\n    return $sum == 0;\n}\n", "    $pairs = array_count_values($l);\n \
    \   foreach ($pairs as $key => $value) {\n        if ($value == 1) {\n       \
    \     return false;\n        }\n    }\n    return true;\n}\n", "    $sum = 0;\n\
    \    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n\
    \    }\n    if ($sum == 0) {\n        return false;\n    }\n    $m = count($l)\
    \ - 1;\n    for ($i = 0; $i < $m; $i++) {\n        $j = $i + 1;\n        $k =\
    \ $n - 1;\n        while ($j >= 0 && $k >= 0) {\n            if ($l[$j] + $l[$k]\
    \ == 0) {\n                return false;\n            }\n            $j--;\n \
    \           $k--;\n        }\n    }\n    return true;\n}\n", "    $sum = 0;\n\
    \    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n\
    \    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $i =>\
    \ $v) {\n        $sum += $v;\n        if ($sum < 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    $n = count($l);\n    $sum = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    if ($l[$i] + $l[$j] == 0) {\n                return false;\n            }\n\
    \        }\n    }\n    return true;\n}\n", "    $sum = 0;\n    foreach ($l as\
    \ $e) {\n        $sum += $e;\n    }\n    return $sum == 0;\n}\n", "    $n = count($l);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n \
    \   }\n    return $sum == 0;\n}\n", "    $pairs = array();\n    foreach ($l as\
    \ $k => $v) {\n        $pairs[$k] = $v;\n    }\n    $pairs = array_count_values($pairs);\n\
    \    foreach ($pairs as $k => $v) {\n        if ($v > 1) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}", "    $n = count($l);\n    if\
    \ ($n == 0) {\n        return false;\n    }\n    $sum = 0;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        $sum += $l[$i];\n    }\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $j = $i + 1;\n        $k = $n - 1;\n        while ($j < $k) {\n \
    \           if ($l[$i] + $l[$j] == 0) {\n                return false;\n     \
    \       }\n            $j++;\n        }\n    }\n    return true;\n}\n", "    $sum\
    \ = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n    return\
    \ $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $k => $v) {\n        if\
    \ ($v < 0) {\n            $sum -= $v;\n        } else {\n            $sum += $v;\n\
    \        }\n    }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l\
    \ as $item) {\n        $sum += $item;\n    }\n    return $sum == 0;\n}\n", " \
    \   $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n  \
    \  return $sum == 0;\n}\n", "    $sum = 0;\n    foreach ($l as $e) {\n       \
    \ $sum += $e;\n    }\n    return $sum == 0;\n}\n", "    $n = count($l);\n    if\
    \ ($n == 0) {\n        return false;\n    }\n    $sum = 0;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        $sum += $l[$i];\n    }\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $j = $i + 1;\n        if ($j == $n) {\n            continue;\n  \
    \      }\n        $sum -= $l[$i];\n        $sum -= $l[$j];\n        if ($sum ==\
    \ 0) {\n            return true;\n        }\n    }\n    return false;\n}\n", " \
    \   $sum = 0;\n    foreach ($l as $i => $v) {\n        $sum += $v;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n  \
    \  }\n    return $sum == 0;\n}\n", "    $sum = 0;\n    $n = count($l);\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n    if ($sum == 0)\
    \ {\n        return false;\n    }\n    $m = count($l) - 1;\n    for ($i = 0; $i\
    \ < $m; $i++) {\n        $sum -= $l[$i];\n        if ($sum < 0) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}", "    $sum = 0;\n   \
    \ foreach ($l as $e) {\n        $sum += $e;\n    }\n    return ($sum == 0);\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

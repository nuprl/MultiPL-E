language: php
name: HumanEval_25_factorize
results:
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpku7hws8o.php:35\n\
    Stack trace:\n#0 /tmp/tmpku7hws8o.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpku7hws8o.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmptbsyyg7y.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        while($n % $factor == 0) {\n           \
    \ $factors[] = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpsyjgd_op.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $factors[] = $factor;\n            $factor = 1;\n        } else {\n   \
    \         $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n        $factors[]\
    \ = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv8sh8uh.php:33\n\
    Stack trace:\n#0 /tmp/tmpuv8sh8uh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuv8sh8uh.php\
    \ on line 33\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47m7186m.php:29\n\
    Stack trace:\n#0 /tmp/tmp47m7186m.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp47m7186m.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n</code>\n<|/\
    \ a tags=php,primes |>\n<| c |>\nThis doesn't work for factors of 10 or larger.\
    \ For example, factorize(10) returns array(2, 5, 5)\n<|/ c |>\n<| c |>\nYes, I\
    \ noticed that after I posted my answer. I've updated my answer to include a solution\
    \ for factors of 10 and larger. Thanks for pointing that out.\n<|/ c |>\n<| c\
    \ |>\nI added a solution for factors of 10 and larger. Thanks for pointing that\
    \ out.\n<|/ c |>\n<| c |>\nI added a solution for factors of 10 and larger. Thanks\
    \ for pointing that out.\n<|/ c |>\n<| c |>\nI added a solution for factors of\
    \ 10 and larger. Thanks for pointing that out.\n<|/ c |>\n<| a tags=php,primes\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpv8xhf37y.php on line 26

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while ($n != 1) {\n        if ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpgdkyhrkg.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n\
    \            $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvxeox1s.php:35\n\
    Stack trace:\n#0 /tmp/tmphvxeox1s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphvxeox1s.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmptbsyyg7y.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        $n = $n % $factor;\n        $factors[] =\
    \ $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp7wr9761s.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n\
    \            $factors[] = $factor;\n            $factor *= $i;\n        }\n  \
    \  }\n    if($factor != 1) {\n        $factors[] = $factor;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpowtpjl5l.php:31\n\
    Stack trace:\n#0 /tmp/tmpowtpjl5l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpowtpjl5l.php\
    \ on line 31\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzxlnoh7.php:29\n\
    Stack trace:\n#0 /tmp/tmpkzxlnoh7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkzxlnoh7.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n            $i++;\n        }\n    }\n    if($n\
    \ > 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsi020888.php:34\n\
    Stack trace:\n#0 /tmp/tmpsi020888.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsi020888.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $factors[] = $i;\n    }\n    sort($factors);\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkqwol2c.php:25\n\
    Stack trace:\n#0 /tmp/tmpqkqwol2c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqkqwol2c.php\
    \ on line 25\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpku7hws8o.php:35\n\
    Stack trace:\n#0 /tmp/tmpku7hws8o.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpku7hws8o.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4f_nveg.php:32\n\
    Stack trace:\n#0 /tmp/tmpr4f_nveg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpr4f_nveg.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        if($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n = $n / $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpw4uefd9w.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        if($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n = $n / $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpw4uefd9w.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n\
    \            $factors[] = $factor;\n            $factor = 1;\n            $n =\
    \ ($n / $i);\n            $i++;\n        } else {\n            $factor++;\n  \
    \      }\n    }\n    if($n != 1) {\n        $factors[] = $factor;\n    }\n   \
    \ return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6r1m7phs.php:36\n\
    Stack trace:\n#0 /tmp/tmp6r1m7phs.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6r1m7phs.php\
    \ on line 36\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n\
    \            $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppx5sqd5u.php:35\n\
    Stack trace:\n#0 /tmp/tmppx5sqd5u.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppx5sqd5u.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor *= $i;\n            $i++;\n\
    \        }\n        else {\n            $factor++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5aplp47v.php:33\n\
    Stack trace:\n#0 /tmp/tmp5aplp47v.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5aplp47v.php\
    \ on line 33\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i\
    \ = 1; $i <= sqrt($n); $i++) {\n        $factors[] = $i;\n        $n = $n / $i;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnck0j6zd.php:25\n\
    Stack trace:\n#0 /tmp/tmpnck0j6zd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnck0j6zd.php\
    \ on line 25\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    if\
    \ ($n != 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tpcqy40.php:34\n\
    Stack trace:\n#0 /tmp/tmp4tpcqy40.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4tpcqy40.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n            $factor =\
    \ 1;\n        }\n        $factor++;\n    }\n    if($n != 1) {\n        $factors[]\
    \ = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpmwbwuslx.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        if($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpw0lz8lq0.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        $factors[] = $factor;\n        $n = $n %\
    \ $factor;\n        $factor *= $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp3fqf1m8f.php on line 15

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    if\
    \ ($n > 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpna1pnu6w.php:34\n\
    Stack trace:\n#0 /tmp/tmpna1pnu6w.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpna1pnu6w.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphibrq6b_.php:34\n\
    Stack trace:\n#0 /tmp/tmphibrq6b_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphibrq6b_.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphibrq6b_.php:34\n\
    Stack trace:\n#0 /tmp/tmphibrq6b_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphibrq6b_.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if ($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6s7zvh6.php:34\n\
    Stack trace:\n#0 /tmp/tmpb6s7zvh6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb6s7zvh6.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        $n = $n % $factor;\n        $factors[] =\
    \ $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp7wr9761s.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1t82sh6g.php:29\n\
    Stack trace:\n#0 /tmp/tmp1t82sh6g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1t82sh6g.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpku7hws8o.php:35\n\
    Stack trace:\n#0 /tmp/tmpku7hws8o.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpku7hws8o.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $factors[] = $factor;\n            $factor *= $i;\n        }\n    }\n \
    \   return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ebgnwhy.php:28\n\
    Stack trace:\n#0 /tmp/tmp5ebgnwhy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5ebgnwhy.php\
    \ on line 28\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxy2noyjt.php:33\n\
    Stack trace:\n#0 /tmp/tmpxy2noyjt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxy2noyjt.php\
    \ on line 33\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if ($n >\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv_jt47b.php:34\n\
    Stack trace:\n#0 /tmp/tmpdv_jt47b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdv_jt47b.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis code\
    \ does not work for large numbers. I tested it for numbers like `1000000000000`\
    \ and it gave me `array(0)`.\n<|/ c |>\n<| c |>\nIt works for me with numbers\
    \ like `1000000000000`. What is the exact input you used?\n<|/ c |>\n<| c |>\n\
    I used `1000000000000` as input. My PHP version is `5.6.30`.\n<|/ c |>\n<| c |>\n\
    I tested it on `5.6.30` as well. Are you sure you used the exact same code I posted?\
    \ I tested it on `5.6.30` as well. Are you sure you used the exact same code I\
    \ posted? I tested it on `5.6.30` as well. Are you sure you used the exact same\
    \ code I posted? I tested it on `5.6.30` as well. Are you sure you used the exact\
    \ same code I posted? I tested it on `5.6.30` as well. Are you sure you used the\
    \ exact same code I posted? I tested it on `5.6.30` as well. Are you sure you\
    \ used the exact same code I posted? I tested it on `5.6.30` as well. Are you\
    \ sure you used the exact same code I posted? I tested it on `5.6.30` as well.\
    \ Are you sure you used the exact same code I posted? I tested it on `5.6.30`\
    \ as well. Are you sure you used the exact same code I posted? I tested it on\
    \ `5.6.30` as well. Are you sure you used the exact same code I posted? I tested\
    \ it on `5.6.30` as well. Are you sure you used the exact same code I posted?\
    \ I tested it on `5.6.30` as well. Are you sure you used the exact same code I\
    \ posted? I tested it on `5.6.30` as well. Are you sure you used the exact same\
    \ code I posted? I tested it on `5.6.30` as well. Are you sure you used the exact\
    \ same code I posted? I tested it on `5.6.30` as well. Are you sure you used the\
    \ exact same code \nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpla8gckcj.php on line 23

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1t82sh6g.php:29\n\
    Stack trace:\n#0 /tmp/tmp1t82sh6g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1t82sh6g.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpku7hws8o.php:35\n\
    Stack trace:\n#0 /tmp/tmpku7hws8o.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpku7hws8o.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n\
    \            $factors[] = $factor;\n            $factor *= $i;\n        }\n  \
    \  }\n    if($factor != 1) {\n        $factors[] = $factor;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpowtpjl5l.php:31\n\
    Stack trace:\n#0 /tmp/tmpowtpjl5l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpowtpjl5l.php\
    \ on line 31\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $factors[] = $factor;\n            $factor = 1;\n        } else {\n   \
    \         $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n        $factors[]\
    \ = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv8sh8uh.php:33\n\
    Stack trace:\n#0 /tmp/tmpuv8sh8uh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuv8sh8uh.php\
    \ on line 33\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 0; $i < $n; $i++) {\n        while($n % $factor == 0) {\n\
    \            $factors[] = $factor;\n            $n /= $factor;\n        }\n  \
    \      $factor++;\n    }\n    return $factors;\n}\n</code>\n<|/ a tags=php,factorization\
    \ |>\n<| c |>\nThis code does not work for large numbers. For example, factorize(100000000)\
    \ returns an array with only two elements: 100000000 and 1. I believe this happens\
    \ because $n / $factor is evaluated as integer division and returns 1.\n<|/ c\
    \ |>\n<| c |>\nYes, you are right. I've updated my answer with new code which\
    \ should work for large numbers. Thanks for pointing out.\n<|/ c |>\n<| a tags=php,factorization\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4v_uplbx.php on line 23

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i\
    \ = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\
    \nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqulfbh2y.php:27\n\
    Stack trace:\n#0 /tmp/tmpqulfbh2y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqulfbh2y.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        $factors[] = $factor;\n        $n = $n %\
    \ $factor;\n        $factor *= $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp3fqf1m8f.php on line 15

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while ($n != 1) {\n        while ($n % $factor == 0) {\n         \
    \   $factors[] = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp4_d68ejz.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 1;\n    while($n % $i == 0) {\n        $factors[] = $i;\n        $n = $n / $i;\n\
    \        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9lr9m37.php:27\n\
    Stack trace:\n#0 /tmp/tmpv9lr9m37.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv9lr9m37.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47m7186m.php:29\n\
    Stack trace:\n#0 /tmp/tmp47m7186m.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp47m7186m.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $factors[$i] = $factor;\n \
    \       $factor *= $i;\n    }\n    for($i = $n; $i > 1; $i--) {\n        if($n\
    \ % $i == 0) {\n            $factors[$i] = $factor;\n            $factor *= $i;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwbj_1fif.php:32\n\
    Stack trace:\n#0 /tmp/tmpwbj_1fif.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwbj_1fif.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        while($n % $factor == 0) {\n           \
    \ $factors[] = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpku7ybv3y.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        if($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n = $n / $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpw4uefd9w.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        $factors[] = $factor;\n        $n = $n /\
    \ $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb293yi8b.php:27\n\
    Stack trace:\n#0 /tmp/tmpb293yi8b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpb293yi8b.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n\
    \            $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvxeox1s.php:35\n\
    Stack trace:\n#0 /tmp/tmphvxeox1s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphvxeox1s.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $factors[] = $factor;\n   \
    \     $factor *= $i;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgs99i_gs.php:26\n\
    Stack trace:\n#0 /tmp/tmpgs99i_gs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgs99i_gs.php\
    \ on line 26\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        while($n % $factor == 0) {\n           \
    \ $factors[] = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpsyjgd_op.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        if($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpw0lz8lq0.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 2;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8he86y_.php:34\n\
    Stack trace:\n#0 /tmp/tmph8he86y_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmph8he86y_.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $factors[] = $factor;\n            $factor = 1;\n        } else {\n   \
    \         $factor *= $i;\n        }\n    }\n    $factors[] = $factor;\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9l43ql0m.php:31\n\
    Stack trace:\n#0 /tmp/tmp9l43ql0m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9l43ql0m.php\
    \ on line 31\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq7lat1mq.php on line 26

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        $factors[] = $factor;\n        $n = $n %\
    \ $factor;\n        $factor *= $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp3fqf1m8f.php on line 15

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n\
    \            $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvxeox1s.php:35\n\
    Stack trace:\n#0 /tmp/tmphvxeox1s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphvxeox1s.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    if\
    \ ($n != 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tpcqy40.php:34\n\
    Stack trace:\n#0 /tmp/tmp4tpcqy40.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4tpcqy40.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_d7vlbdr.php:30\n\
    Stack trace:\n#0 /tmp/tmp_d7vlbdr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_d7vlbdr.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxrvdeomc.php:32\n\
    Stack trace:\n#0 /tmp/tmpxrvdeomc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxrvdeomc.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 0
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        } else {\n            $i++;\n        }\n\
    \    }\n    if($n > 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor *= $i;\n            $i++;\n\
    \        }\n        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73rtf1yb.php:31\n\
    Stack trace:\n#0 /tmp/tmp73rtf1yb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp73rtf1yb.php\
    \ on line 31\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphibrq6b_.php:34\n\
    Stack trace:\n#0 /tmp/tmphibrq6b_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphibrq6b_.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while ($n >= $factor) {\n        $factors[] = $factor;\n        $n\
    \ = ($n % $factor);\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgr08bo85.php:27\n\
    Stack trace:\n#0 /tmp/tmpgr08bo85.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgr08bo85.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n            $factor =\
    \ 1;\n        }\n        $factor++;\n    }\n    return $factors;\n}\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpqdnkia2g.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsjzxo17.php:34\n\
    Stack trace:\n#0 /tmp/tmphsjzxo17.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphsjzxo17.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    if\
    \ ($n > 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpna1pnu6w.php:34\n\
    Stack trace:\n#0 /tmp/tmpna1pnu6w.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpna1pnu6w.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while ($n != 1) {\n        if ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpgdkyhrkg.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmseonbve.php:30\n\
    Stack trace:\n#0 /tmp/tmpmseonbve.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmseonbve.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxy2noyjt.php:33\n\
    Stack trace:\n#0 /tmp/tmpxy2noyjt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxy2noyjt.php\
    \ on line 33\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmptbsyyg7y.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphibrq6b_.php:34\n\
    Stack trace:\n#0 /tmp/tmphibrq6b_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphibrq6b_.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwg4kiim.php:34\n\
    Stack trace:\n#0 /tmp/tmpwwg4kiim.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwwg4kiim.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i\
    \ = 2; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\
    \nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxv4vwa6.php:27\n\
    Stack trace:\n#0 /tmp/tmpwxv4vwa6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwxv4vwa6.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lvl79oa.php:30\n\
    Stack trace:\n#0 /tmp/tmp6lvl79oa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6lvl79oa.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $factors[$i] = 1;\n        for($j = 2; $j <=\
    \ $i; $j++) {\n            if($i % $j == 0) {\n                $factors[$i] +=\
    \ $j;\n                break;\n            }\n        }\n    }\n    return $factors;\n\
    }\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qyx9j3p.php:29\n\
    Stack trace:\n#0 /tmp/tmp0qyx9j3p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0qyx9j3p.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphibrq6b_.php:34\n\
    Stack trace:\n#0 /tmp/tmphibrq6b_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphibrq6b_.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwg4kiim.php:34\n\
    Stack trace:\n#0 /tmp/tmpwwg4kiim.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwwg4kiim.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4f_nveg.php:32\n\
    Stack trace:\n#0 /tmp/tmpr4f_nveg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpr4f_nveg.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n\
    \            $factors[] = $factor;\n            $factor *= $i;\n        }\n  \
    \  }\n    if($factor != 1) {\n        $factors[] = $factor;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wmqi23d.php:31\n\
    Stack trace:\n#0 /tmp/tmp_wmqi23d.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_wmqi23d.php\
    \ on line 31\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 0; $i < $n; $i++) {\n        while($n % $factor == 0) {\n\
    \            $factors[] = $factor;\n            $n /= $factor;\n        }\n  \
    \      $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpfui1ijue.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_d7vlbdr.php:30\n\
    Stack trace:\n#0 /tmp/tmp_d7vlbdr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_d7vlbdr.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwg4kiim.php:34\n\
    Stack trace:\n#0 /tmp/tmpwwg4kiim.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwwg4kiim.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if ($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6s7zvh6.php:34\n\
    Stack trace:\n#0 /tmp/tmpb6s7zvh6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb6s7zvh6.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphibrq6b_.php:34\n\
    Stack trace:\n#0 /tmp/tmphibrq6b_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphibrq6b_.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $factors[$i] = $factor;\n \
    \       $factor *= $i;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgw2w5uk.php:26\n\
    Stack trace:\n#0 /tmp/tmpjgw2w5uk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjgw2w5uk.php\
    \ on line 26\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        $factors[] = $factor;\n        $n = $n %\
    \ $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpj7iej3wu.php on line 15

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsnbydzhc.php:29\n\
    Stack trace:\n#0 /tmp/tmpsnbydzhc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsnbydzhc.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n            $i++;\n        }\n    }\n    if($n\
    \ > 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsi020888.php:34\n\
    Stack trace:\n#0 /tmp/tmpsi020888.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsi020888.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_d7vlbdr.php:30\n\
    Stack trace:\n#0 /tmp/tmp_d7vlbdr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_d7vlbdr.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 2; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpirk5teuq.php:29\n\
    Stack trace:\n#0 /tmp/tmpirk5teuq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpirk5teuq.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_d7vlbdr.php:30\n\
    Stack trace:\n#0 /tmp/tmp_d7vlbdr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_d7vlbdr.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 1;\n    while($i <= $n) {\n        $j = 1;\n        while($j * $i <= $n) {\n\
    \            $j++;\n        }\n        if($j > 1) {\n            $factors[] =\
    \ $j;\n            $i = $j * $i;\n        }\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7f7cyqy1.php:32\n\
    Stack trace:\n#0 /tmp/tmp7f7cyqy1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7f7cyqy1.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n\
    \            $factors[] = $factor;\n            $factor *= $i;\n        }\n  \
    \  }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgbqlzjnh.php:28\n\
    Stack trace:\n#0 /tmp/tmpgbqlzjnh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgbqlzjnh.php\
    \ on line 28\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while ($n != 1) {\n        if ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n = $n / $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpaq4rdkg4.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lvl79oa.php:30\n\
    Stack trace:\n#0 /tmp/tmp6lvl79oa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6lvl79oa.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_d7vlbdr.php:30\n\
    Stack trace:\n#0 /tmp/tmp_d7vlbdr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_d7vlbdr.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb15xao64.php:28\n\
    Stack trace:\n#0 /tmp/tmpb15xao64.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb15xao64.php\
    \ on line 28\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphibrq6b_.php:34\n\
    Stack trace:\n#0 /tmp/tmphibrq6b_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphibrq6b_.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lvl79oa.php:30\n\
    Stack trace:\n#0 /tmp/tmp6lvl79oa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6lvl79oa.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1t82sh6g.php:29\n\
    Stack trace:\n#0 /tmp/tmp1t82sh6g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1t82sh6g.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n            $factor =\
    \ 1;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpqm59orrj.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmseonbve.php:30\n\
    Stack trace:\n#0 /tmp/tmpmseonbve.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmseonbve.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1t82sh6g.php:29\n\
    Stack trace:\n#0 /tmp/tmp1t82sh6g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1t82sh6g.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsjzxo17.php:34\n\
    Stack trace:\n#0 /tmp/tmphsjzxo17.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphsjzxo17.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while ($n != 1) {\n        while ($n % $factor == 0) {\n         \
    \   $factors[] = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp4_d68ejz.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphibrq6b_.php:34\n\
    Stack trace:\n#0 /tmp/tmphibrq6b_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphibrq6b_.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp12olugau.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i\
    \ = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\
    \nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqulfbh2y.php:27\n\
    Stack trace:\n#0 /tmp/tmpqulfbh2y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqulfbh2y.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwg4kiim.php:34\n\
    Stack trace:\n#0 /tmp/tmpwwg4kiim.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwwg4kiim.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    if\
    \ ($n != 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tpcqy40.php:34\n\
    Stack trace:\n#0 /tmp/tmp4tpcqy40.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4tpcqy40.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $factors[] = $factor;\n            $factor = 1;\n        } else {\n   \
    \         $factor *= $i;\n        }\n    }\n    $factors[] = $factor;\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9l43ql0m.php:31\n\
    Stack trace:\n#0 /tmp/tmp9l43ql0m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9l43ql0m.php\
    \ on line 31\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    if\
    \ ($n > 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpna1pnu6w.php:34\n\
    Stack trace:\n#0 /tmp/tmpna1pnu6w.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpna1pnu6w.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lvl79oa.php:30\n\
    Stack trace:\n#0 /tmp/tmp6lvl79oa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6lvl79oa.php\
    \ on line 30\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    if($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdupra8g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjdupra8g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdupra8g.php\
    \ on line 35\n"
  timestamp: 1659730717
- exit_code: 0
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n    \
    \    }\n    }\n    if ($n != 1) {\n        $factors[] = $n;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n   \
    \         $factors[] = $factor;\n            $n /= $i;\n            $factor =\
    \ 1;\n        }\n        $factor++;\n    }\n    if($n != 1) {\n        $factors[]\
    \ = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpmwbwuslx.php on line 16

    '
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i\
    \ = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\
    \nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqulfbh2y.php:27\n\
    Stack trace:\n#0 /tmp/tmpqulfbh2y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqulfbh2y.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n >= $factor) {\n        $factors[] = $factor;\n        $n\
    \  /= $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfg9ox_v.php:27\n\
    Stack trace:\n#0 /tmp/tmpnfg9ox_v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnfg9ox_v.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n != 1) {\n        $factors[] = $factor;\n        $n = $n /\
    \ $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb293yi8b.php:27\n\
    Stack trace:\n#0 /tmp/tmpb293yi8b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpb293yi8b.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1t82sh6g.php:29\n\
    Stack trace:\n#0 /tmp/tmp1t82sh6g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1t82sh6g.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $factors[] = $factor;\n            $factor = 1;\n        } else {\n   \
    \         $factor *= $i;\n        }\n    }\n    $factors[] = $factor;\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9l43ql0m.php:31\n\
    Stack trace:\n#0 /tmp/tmp9l43ql0m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9l43ql0m.php\
    \ on line 31\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n >= $factor) {\n        $factors[] = $factor;\n        $n\
    \ = $n / $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56nc6xya.php:27\n\
    Stack trace:\n#0 /tmp/tmp56nc6xya.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp56nc6xya.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph894agbo.php:32\n\
    Stack trace:\n#0 /tmp/tmph894agbo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph894agbo.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 0; $i < $n; $i++) {\n        $factors[$i] = $factor;\n  \
    \      $factor *= $i;\n    }\n    for($i = 1; $i < $n; $i++) {\n        $factors[$i]\
    \ /= $i;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n \
    \   return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4d9_wwq.php:29\n\
    Stack trace:\n#0 /tmp/tmpq4d9_wwq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq4d9_wwq.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $factors[] = $i;\n        $factors[] = $n %\
    \ $i;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprz4wn1d3.php:25\n\
    Stack trace:\n#0 /tmp/tmprz4wn1d3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprz4wn1d3.php\
    \ on line 25\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while($n >= $factor) {\n        $factors[] = $factor;\n        $n\
    \  /= $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfg9ox_v.php:27\n\
    Stack trace:\n#0 /tmp/tmpnfg9ox_v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnfg9ox_v.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    if ($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6s7zvh6.php:34\n\
    Stack trace:\n#0 /tmp/tmpb6s7zvh6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb6s7zvh6.php\
    \ on line 34\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    while ($n != 1) {\n        $factors[] = $factor;\n        $n = $n\
    \ / $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9112ma_5.php:27\n\
    Stack trace:\n#0 /tmp/tmp9112ma_5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9112ma_5.php\
    \ on line 27\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $factors[] = $factor;\n            $factor = 1;\n        } else {\n   \
    \         $factor *= $i;\n        }\n    }\n    $factors[] = $factor;\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9l43ql0m.php:31\n\
    Stack trace:\n#0 /tmp/tmp9l43ql0m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9l43ql0m.php\
    \ on line 31\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while($i <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt539pti_.php:29\n\
    Stack trace:\n#0 /tmp/tmpt539pti_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt539pti_.php\
    \ on line 29\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor\
    \ = 1;\n    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n     \
    \       $factors[] = $factor;\n            $factor = 1;\n            $i++;\n \
    \       } else {\n            $factor *= $i;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxrvdeomc.php:32\n\
    Stack trace:\n#0 /tmp/tmpxrvdeomc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxrvdeomc.php\
    \ on line 32\n"
  timestamp: 1659730717
- exit_code: 255
  program: "<?php\n// Return array of prime factors of given integer in the order\
    \ from smallest to largest.\n// Each of the factors should be arrayed number of\
    \ times corresponding to how many times it appeares in factorization.\n// Input\
    \ number should be equal to the product of all factors\n// >>> factorize(8)\n\
    // array(2, 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n\
    // array(2, 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[]\
    \ = $i;\n            $n = $n / $i;\n            $i++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1d4n801.php:29\n\
    Stack trace:\n#0 /tmp/tmpa1d4n801.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa1d4n801.php\
    \ on line 29\n"
  timestamp: 1659730717

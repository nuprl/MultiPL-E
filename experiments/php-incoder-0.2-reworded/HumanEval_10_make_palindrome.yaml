name: HumanEval_10_make_palindrome
language: php
prompt: "<?php\n// Find the shortest palindrome that begins with a supplied string.\n\
  // Algorithm idea is simple:\n// - Find the longest postfix of supplied string that\
  \ is a palindrome.\n// - Append to the end of the string reverse of a string prefix\
  \ that comes before the palindromic suffix.\n// >>> make_palindrome(\"\")\n// \"\
  \"\n// >>> make_palindrome(\"cat\")\n// \"catac\"\n// >>> make_palindrome(\"cata\"\
  )\n// \"catac\"\nfunction make_palindrome($string) {\n"
tests: "function candidate(...$args) {\n    return make_palindrome(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"x\") !== \"x\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"xyz\") !== \"xyzyx\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"xyx\") !== \"xyx\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"jerry\") !== \"jerryrrej\") { throw new\
  \ Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $reversed_string = \"\";\n    $prefix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $reversed_string = $string[strlen($string)-1];\n    $reversed_string\
    \ = strrev($reversed_string);\n    $reversed_string = substr($reversed_string,\
    \ 0, strlen($reversed_string)-1);\n    $reversed_string = strrev($reversed_string);\n\
    \    $postfix_length = $string[strlen($string)-1];\n    $postfix_length = $string[0];\n\
    \    $prefix_length = $string[0];\n    $reversed_string = $string[strlen($string)-1];\n\
    \    $reversed_string = strrev($reversed_string);\n    $reversed_string = substr($reversed_string,\
    \ 0, strlen($reversed_string)-1);\n    $reversed_string = strrev($reversed_string);\n\
    \    $postfix_length = $string[strlen($string)-1];\n    $postfix_length = $string[0];\n\
    \    $prefix_length = $string[0];\n    $reversed_string = $string[strlen($string)-1];\n\
    \    $reversed_string = strrev($reversed_string);\n    $reversed_string = substr($reversed_string,\
    \ 0, strlen($reversed_string)-1);\n    $reversed_string = strrev($reversed_string);\n\
    \    $postfix_length = $string[strlen($string)-1];\n    $postfix_length = $string[0];\n\
    \    $prefix_length = $string[0];\n    $reversed_string = $string[strlen($string)-1];\n\
    \    $reversed_string = strrev($reversed_string);\n    $reversed_string = substr($reversed_string,\
    \ 0, strlen($reversed_string)-1);\n    $reversed_string = strrev($reversed_string);\n\
    \    $postfix_length = $string[strlen($string)-1];\n    $postfix_length = $string[0];\n\
    \    $prefix_length = $string[0];\n    $reversed_string = $string[strlen($string)-1];\n\
    \    $reversed_string = strrev($reversed_string);\n    $reversed_string = substr($reversed_string,\
    \ 0, strlen($reversed_string)-1);\n    $reversed_string = strrev($reversed_string);\n\
    \    $postfix_length = $string[strlen($string)-1];\n    $postfix_length = $string[0];\n\
    \    $prefix_length = $string[0];\n    $reversed_string = $string[strlen($string)-1];\n\
    \    $reversed_string = strrev($reversed_string);\n    $reversed_string = substr($reversed_string,\
    \ 0, strlen($reversed_string)-1);\n    $reversed_string = str", "    $reversed_string\
    \ = \"\";\n    $palindrome = \"\";\n    $length = strlen($string);\n    for ($i\
    \ = 0; $i < $length; $i++) {\n        $reversed_string .= $string[$length - $i\
    \ - 1];\n    }\n    $reversed_string = strrev($reversed_string);\n    $palindrome\
    \ = $string . $reversed_string;\n    return $palindrome;\n}", "    $reversed =\
    \ strrev($string);\n    $reversed_length = strlen($reversed);\n    $reversed_postfix\
    \ = substr($reversed, 0, $reversed_length);\n    $reversed_postfix_length = strlen($reversed_postfix);\n\
    \    $palindrome = $string;\n    $palindrome_length = strlen($palindrome);\n \
    \   $palindrome_postfix = substr($palindrome, 0, $palindrome_length - $reversed_postfix_length);\n\
    \    $palindrome_postfix_length = strlen($palindrome_postfix);\n    while ($reversed_postfix_length\
    \ >= $palindrome_postfix_length) {\n        $palindrome = substr($palindrome,\
    \ 0, $palindrome_postfix_length) . $reversed_postfix . substr($palindrome, $palindrome_postfix_length);\n\
    \        $palindrome_postfix_length = strlen($palindrome);\n        $reversed_postfix\
    \ = substr($reversed, 0, $reversed_postfix_length);\n        $reversed_postfix_length\
    \ = strlen($reversed_postfix);\n    }\n    return $palindrome;\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a dscore=2 |>\n<code>", "    $palindrome = \"\";\n    $len\
    \ = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        $palindrome\
    \ .= $string[$i];\n    }\n    $palindrome = strrev($palindrome);\n    $len = strlen($palindrome);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $string .= $palindrome[$i];\n  \
    \  }\n    return $string;\n}\n", "    $length = strlen($string);\n    $postfix\
    \ = substr($string, $length - 1);\n    $reverse = strrev($postfix);\n    return\
    \ $string . $reverse;\n}\n", "  $postfix = substr($string, -1);\n  $postfix =\
    \ strrev($postfix);\n  $postfix = substr($postfix, 0, -1);\n  return $string .\
    \ $postfix;\n}\n", "    $length = strlen($string);\n    if ($length < 2) {\n \
    \       return $string;\n    }\n    $postfix = substr($string, $length - 1);\n\
    \    $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n \
    \   $postfix = strrev($postfix);\n    return $string . $postfix;\n}\n", "    $length\
    \ = strlen($string);\n    $palindrome = \"\";\n    $prefix_length = 0;\n    $suffix_length\
    \ = 0;\n    $prefix_length = 0;\n    $suffix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = 0;\n    $postfix_length = 0;\n    $postfix_length\
    \ = 0;\n    $", "    $palindrome = \"\";\n    $prefix_length = 0;\n    $suffix_length\
    \ = 0;\n    $reversed_string = \"\";\n    $reversed_string_length = 0;\n    $prefix_length\
    \ = 0;\n    $suffix_length = 0;\n    $reversed_string = \"\";\n    $reversed_string_length\
    \ = 0;\n    $prefix_length = 0;\n    $suffix_length = 0;\n    $reversed_string\
    \ = \"\";\n    $reversed_string_length = 0;\n    $prefix_length = 0;\n    $suffix_length\
    \ = 0;\n    $reversed_string = \"\";\n    $reversed_string_length = 0;\n    $prefix_length\
    \ = 0;\n    $suffix_length = 0;\n    $reversed_string = \"\";\n    $reversed_string_length\
    \ = 0;\n    $prefix_length = 0;\n    $suffix_length = 0;\n    $reversed_string\
    \ = \"\";\n    $reversed_string_length = 0;\n    $prefix_length = 0;\n    $suffix_length\
    \ = 0;\n    $reversed_string = \"\";\n    $reversed_string_length = 0;\n    $prefix_length\
    \ = 0;\n    $suffix_length = 0;\n    $reversed_string = \"\";\n    $reversed_string_length\
    \ = 0;\n    $prefix_length = 0;\n    $suffix_length = 0;\n    $reversed_string\
    \ = \"\";\n    $reversed_string_length = 0;\n    $prefix_length = 0;\n    $suffix_length\
    \ = 0;\n    $reversed_string = \"\";\n    $reversed_string_length = 0;\n    $prefix_length\
    \ = 0;\n    $suffix_length = 0;\n    $reversed_string = \"\";\n    $reversed_string_length\
    \ = 0;\n    $prefix_length = 0;\n    $suffix_length = 0;\n    $reversed_string\
    \ = \"\";\n    $reversed_string_length = 0;\n    $prefix_length = 0;\n    $suffix_length\
    \ = 0;\n    $reversed_string = \"\";\n    $reversed_string_length = 0;\n    $prefix_length\
    \ = 0;\n    $suffix_length = 0;\n    $reversed_string = \"\";\n    $reversed_string_length\
    \ = 0;\n    $prefix_length = 0;\n    $suffix_length = 0;\n    $reversed_string\
    \ = \"\";\n    $reversed_string_length = 0;\n    $prefix_length = 0;\n    $suffix_length\
    \ = 0;\n    $reversed_string = \"\";\n    $reversed_string_length = 0;\n    $prefix_length\
    \ = 0;\n    $suffix_length = 0;\n    $reversed_string = \"\";\n    $reversed_string_length\
    \ = 0;\n    $prefix_length = 0;\n    $suffix_length = 0;\n    $reversed_string\
    \ = \"\";\n    $reversed_string_length = 0;\n    $prefix_length = 0;\n    $suffix_length\
    \ = 0;\n    $reversed_string = \"\";\n    $reversed_string_length = 0;\n    $prefix_length\
    \ = 0;\n    $suffix_length = 0;\n    $reversed_string = \"\";\n    $reversed_string_length\
    \ = 0;\n    $prefix_length = 0;\n    $suffix_length = 0;\n    $reversed_string\
    \ = \"\";\n    $reversed_string_length = 0;\n    $", "    $postfix = substr($string,\
    \ -1);\n    $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n\
    \    return $string . $postfix;\n}", "    $postfix = substr($string, -1);\n  \
    \  $reverse = strrev($postfix);\n    $prefix = substr($string, 0, -1);\n    return\
    \ $prefix . $reverse;\n}\n", "  $length = strlen($string);\n  if ($length < 2)\
    \ {\n    return $string;\n  }\n  $postfix = substr($string, -1);\n  $reverse =\
    \ strrev($string);\n  $prefix = substr($string, 0, $length - 1);\n  return $prefix\
    \ . $reverse . $postfix;\n}", "    $postfix = substr($string, -1);\n    $postfix\
    \ = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix =\
    \ strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n\
    \    $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n \
    \   $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n  \
    \  $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n   \
    \ $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n    $postfix\
    \ = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n    $postfix =\
    \ substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n    $postfix = substr($postfix,\
    \ 0, -1);\n    $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0,\
    \ -1);\n    $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n\
    \    $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n \
    \   $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n  \
    \  $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n   \
    \ $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix\
    \ = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix =\
    \ strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n\
    \    $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n \
    \   $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n  \
    \  $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n   \
    \ $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n    $postfix\
    \ = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n    $postfix =\
    \ substr($postfix, ", "    $palindrome = \"\";\n    $reversed_string = \"\";\n\
    \    $length = strlen($string);\n    $i = 0;\n    $j = 0;\n    while ($i < $length)\
    \ {\n        $reversed_string .= $string[$j];\n        $j++;\n        if ($j >=\
    \ $length) {\n            $j = 0;\n            $i++;\n        }\n    }\n    $palindrome\
    \ = $reversed_string . $string;\n    return $palindrome;\n}", "    $palindrome\
    \ = \"\";\n    $reversed_string = \"\";\n    $prefix_length = 0;\n    $postfix_length\
    \ = 0;\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $string[strlen($string)-1];\n    $prefix_length\
    \ = $string[0];\n    $postfix_length = $", "    $postfix = substr($string, -1);\n\
    \    $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n \
    \   $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n  \
    \  $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n   \
    \ $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix\
    \ = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix =\
    \ strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n\
    \    $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n \
    \   $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n  \
    \  $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n   \
    \ $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n    $postfix\
    \ = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n    $postfix =\
    \ substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n    $postfix = substr($postfix,\
    \ 0, -1);\n    $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0,\
    \ -1);\n    $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n\
    \    $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n \
    \   $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n  \
    \  $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n   \
    \ $postfix = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix\
    \ = strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix =\
    \ strrev($postfix);\n    $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n\
    \    $postfix = substr($postfix, 0, -1);\n    $postfix = strrev($postfix);\n \
    \   $postfix = substr($postfix, ", "    $palindrome = \"\";\n    $postfix = \"\
    \";\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < strlen($string))\
    \ {\n        $postfix = substr($string, $i, 1);\n        $length = strlen($postfix);\n\
    \        $palindrome = substr($palindrome, 0, $length) . $postfix . substr($palindrome,\
    \ $length);\n        $i++;\n    }\n    return $palindrome;\n}\n", "    $palindrome\
    \ = \"\";\n    $suffixes = array();\n    $suffixes[] = $string;\n    $suffixes[]\
    \ = substr($string, 0, -1);\n    $suffixes[] = substr($string, -1);\n    foreach\
    \ ($suffixes as $suffix) {\n        $reversed = strrev($suffix);\n        if ($reversed\
    \ === $suffix) {\n            $palindrome = $reversed . $palindrome;\n       \
    \ }\n    }\n    return $palindrome;\n}\n", "  $length = strlen($string);\n  $postfix\
    \ = \"\";\n  $reverse = \"\";\n  for ($i = 0; $i < $length; $i++) {\n    $postfix\
    \ .= $string[$i];\n  }\n  $reverse = strrev($postfix);\n  $postfix = $reverse\
    \ . $postfix;\n  return $postfix;\n}\n", "    $palindrome = \"\";\n    $reverse_string\
    \ = \"\";\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        $reverse_string .= $string[$length - $i - 1];\n    }\n    $palindrome\
    \ = $string . $reverse_string;\n    return $palindrome;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

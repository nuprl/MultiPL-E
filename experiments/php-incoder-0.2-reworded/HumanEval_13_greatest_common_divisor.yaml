name: HumanEval_13_greatest_common_divisor
language: php
prompt: "<?php\n// Return a greatest common divisor of two integers a and b\n// >>>\
  \ greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n\
  // 5\nfunction greatest_common_divisor($a, $b) {\n"
tests: "function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    if ($a < $b) {\n        $a = $b;\n        $b = $a;\n    }\n   \
    \ $c = $a;\n    while ($b > 0) {\n        $c = $b % $c;\n        $b = (int) ($b\
    \ / $c);\n    }\n    return $c;\n}\n", "    $a = abs($a); $b = abs($b);\n    if\
    \ ($a < $b) {\n        $temp = $a; $a = $b; $b = $temp;\n    }\n    while ($a\
    \ != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n            return $b;\n\
    \        }\n        $b = $b;\n    }\n    return $b;\n}\n", "    $gcd = 0;\n  \
    \  while ($a != 0) {\n        $a = $a % $b;\n        $gcd = $b;\n        $b =\
    \ $gcd;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to be an\
    \ integer\n    $b = abs($b); // force b to be an integer\n    if ($a < $b) { $a\
    \ = $b }\n    $gcd = $a;\n    while ($a != 0) {\n        $a = $a % $gcd;\n   \
    \     $gcd = $gcd;\n    }\n    return $gcd;\n}\n", "    $gcd = 0;\n    while ($a\
    \ && $b) {\n        $a = $a % $b;\n        $gcd = $b ? $gcd : $a;\n        $b\
    \ = $b ? $b : $a;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    $r = $a; $m = $b;\n    while ($m != 0) {\n        $r = $r / $m;\n       \
    \ $m = $a % $m;\n        $a = $b;\n        $b = $m;\n    }\n    return $r;\n}\n",
  "    return $b ? gcd($a, $b) : $a;\n}\n", "    $r = $a % $b;\n    if ($r == 0) {\n\
    \        return $b;\n    }\n    return $r;\n}\n", "    $r = $a % $b;\n    if ($r\
    \ == 0) {\n        return $b;\n    }\n    return $r;\n}\n", "    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n", "    $a\
    \ = abs($a); // force a to be an integer\n    $b = abs($b); // force b to be an\
    \ integer\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n       \
    \ $b = $temp;\n    }\n    $gcd = $b;\n    while ($a != 0) {\n        $a = $a %\
    \ $gcd;\n        $gcd = $gcd;\n    }\n    return $gcd;\n}\n", "    if ($a < $b)\
    \ {\n        $a = $b;\n        $b = $a;\n    }\n    $r = $a % $b;\n    if ($r\
    \ == 0) {\n        return $b;\n    }\n    return $r;\n}\n", "    $a = abs($a);\
    \ // Make sure a is positive\n    $b = abs($b); // Make sure b is positive\n \
    \   if ($a < $b) { $temp = $a; $a = $b; $b = $temp; }\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        if ($a == 0) {\n            return $b;\n     \
    \   }\n        $b = $b;\n    }\n    return $b;\n}\n", "    $gcd = 0;\n    while\
    \ ($a && $b) {\n        if ($a > $b) {\n            $a = $a - $b;\n        } else\
    \ {\n            $b = $b - $a;\n        }\n        $gcd = $gcd > $a ? $gcd : $a;\n\
    \    }\n    return $gcd;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a;\
    \ $d = 1;\n    while ($b > 0) {\n        $t = $b; $b = $a % $t; $a = $t;\n   \
    \     $d = ($d > $r) ? $d : $r;\n    }\n    return $d;\n}\n", "    $a = abs($a);\
    \ $b = abs($b);\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    $gcd = $a; $mod = 1;\n    while ($a && $b) { $mod\
    \ = ($a % $b); $a = $b; $b = $mod; }\n    return $gcd;\n}", "    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n", "    $a\
    \ = abs($a); // force a to be positive\n    $b = abs($b); // force b to be positive\n\
    \    $r = $a; // the result will be here\n    while ($a && $b) { // while both\
    \ a and b are not 0\n        $r = $a % $b; // remainder after division\n     \
    \   $a = $b; // swap a and b\n        $b = $r; // swap b and r\n    }\n    return\
    \ $r; // return r\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your solution,\
    \ but I believe it can be optimized a little more. For example, you can replace\
    \ `if ($a > $b)` with `while ($a > $b)`. Also, you don't need to call `abs()`\
    \ on `$a` and `$b` before comparing them.\n<|/ c |>\n<| c |>\nYes, you are right.\
    \ Thanks for pointing out these optimizations. I edited my answer.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. Your code works perfectly for positive numbers,\
    \ but it fails for negative numbers. For example, if I enter `greatest_common_divisor(-3,\
    \ 5)`, it returns `1`, but should return `-1`. Do you know why is that?\n<|/ c\
    \ |>\n<| c |>\nI edited my answer to include a solution for negative numbers.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Your code works perfectly for positive\
    \ numbers, but it fails for negative numbers. For example, if I enter `greatest_common_divisor(-3,\
    \ 5)`, it returns `1`, but should return `-1`. Do you know why is that?\n<|/ c\
    \ |>\n<| a tags=php,math |>\n<code>\n<?php", "    if ($a < $b) {\n        $a =\
    \ $b;\n        $b = $a;\n    }\n    $remainder = $a % $b;\n    if ($remainder\
    \ === 0) {\n        return $b;\n    }\n    return $a + greatest_common_divisor($b,\
    \ $remainder);\n}\n", "    $a = abs($a); // force a to be an integer\n    $b =\
    \ abs($b); // force b to be an integer\n    if ($a < $b) { // swap so a is always\
    \ bigger\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n  \
    \  while ($a != 0) {\n        $tmp = $b;\n        $b = $a;\n        $a = $tmp\
    \ / $b;\n    }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n    $gcd\
    \ = 0;\n    while ($a && $b) {\n        $t = $a % $b;\n        $a = $b; $b = $t;\n\
    \        $gcd = max($gcd, $b);\n    }\n    return $gcd;\n}\n", "    $a = abs($a);\
    \ $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n        $t = $b;\
    \ $b = ($a % $b);\n        $a = $t; $d = ($d ? $d + 1 : 1);\n    }\n    return\
    \ $r;\n}\n", "    $a = abs($a); // force a to be an integer\n    $b = abs($b);\
    \ // force b to be an integer\n    if ($a < $b) { $temp = $a; $a = $b; $b = $temp;\
    \ }\n    $r = $a; // remainder\n    $n = $b; // divisor\n    while ($n != 0) {\n\
    \        $r = $n % $b;\n        $n = $b;\n        $b = $r;\n    }\n    return\
    \ $r;\n}", "    if ($a < $b) {\n        $a = $b;\n        $b = $a;\n    }\n  \
    \  while ($a != 0) {\n        $a = $a % $b;\n        $b = $b;\n    }\n    return\
    \ $b;\n}\n</code>\n<|/ a tags=php,math |>\n<| c |>\nThis doesn't work if $a is\
    \ negative and $b is positive.\n<|/ c |>\n<| c |>\n: It doesn't work if $a is\
    \ negative and $b is positive. `greatest_common_divisor(-3, 5)` returns `1` instead\
    \ of `3`.\n<|/ c |>\n<| c |>\n: It doesn't work if $a is negative and $b is positive.\
    \ `greatest_common_divisor(-3, 5)` returns `1` instead of `3`.\n<|/ c |>\n<| c\
    \ |>\n: It doesn't work if $a is negative and $b is positive. `greatest_common_divisor(-3,\
    \ 5)` returns `1` instead of `3`.\n<|/ c |>\n<| c |>\n: It doesn't work if $a\
    \ is negative and $b is positive. `greatest_common_divisor(-3, 5)` returns `1`\
    \ instead of `3`.\n<|/ c |>\n<| a tags=php,math |>\n<code>", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) { $a = $b; $b = $a; }\n    $c = $a; // initialize c to the smaller\
    \ value\n    while ($a && $b) { $c = $a; $a = $b; $b = $c%$a; }\n    return $c;\n\
    }\n", "    $r = 1;\n    while ($a && $b) {\n        if ($a > $b) {\n         \
    \   $r = $b;\n            $b = $a % $b;\n            $a = floor($a / $b);\n  \
    \      } else {\n            $r = $a;\n            $a = $b % $a;\n           \
    \ $b = floor($b / $a);\n        }\n    }\n    return $r;\n}\n", "    $a = abs($a);\
    \ $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n        $t = $b;\
    \ $b = $a % $t; $a = $t;\n        $d = $t * $d + $b;\n    }\n    return $r;\n}",
  "    $a = abs($a); // force a to be an integer\n    $b = abs($b); // force b to\
    \ be an integer\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    while ($a != 0) {\n        $a = $a % $b;\n   \
    \     if ($a == 0)\n            break;\n    }\n    return $b;\n}\n", "    $r =\
    \ $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}",
  "    $a = abs($a); $b = abs($b);\n    if ($a < $b) {\n        $tmp = $a; $a = $b;\
    \ $b = $tmp;\n    }\n    while ($a != 0) {\n        $tmp = $b; $b = $a; $a = $tmp;\n\
    \        $tmp = $a; $a = $b; $b = $tmp;\n    }\n    return $b;\n}\n", "    $a\
    \ = abs($a); // force a to be an integer\n    $b = abs($b); // force b to be an\
    \ integer\n    if ($a < $b) { $a = $b }\n    $gcd = $a; // initialize $gcd\n \
    \   while ($a != 0) {\n        $t = $a % $b; // $t will contain the remainder\
    \ of a / b\n        $a = $b; // $a will now contain the quotient of a / b\n  \
    \      $b = $t; // $b will now contain the remainder of b / $t\n        $gcd =\
    \ max($gcd, $b); // $gcd will contain the greatest common divisor of $a and $b\n\
    \    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) { $a = $b; $b\
    \ = $a; }\n    $c = $a; // initialize $c to the smaller of the two numbers\n \
    \   while ($a != 0) {\n        $c = $b % $c; // $c is now the larger of the two\
    \ numbers\n        $a = floor($a / $b); // $a is now the integer quotient of the\
    \ division\n        $b = $c; // $b is now the larger of the two numbers\n    }\n\
    \    return $c;\n}", "    $gcd = 0;\n    while ($a != 0) {\n        $a = $a %\
    \ $b;\n        $gcd = $b;\n        $b = $gcd;\n    }\n    return $gcd;\n}\n",
  "    if ($a < $b) {\n        $a = $b;\n        $b = $a;\n    }\n    while ($a !=\
    \ 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n            return $b;\n\
    \        }\n        $b = $b;\n    }\n    return $b;\n}\n", "    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n", "    $a\
    \ = abs($a); // force a to be an integer\n    $b = abs($b); // force b to be an\
    \ integer\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n       \
    \ $b = $temp;\n    }\n    $gcd = $b;\n    while ($a != 0) {\n        $a = $a %\
    \ $gcd;\n        $gcd = $gcd;\n    }\n    return $gcd;\n}\n", "    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}", "    $a =\
    \ abs($a); // force a to be an integer\n    $b = abs($b); // force b to be an\
    \ integer\n    if ($a < $b) return $a;\n    return $b;\n}", "    $gcd = 0;\n \
    \   for($i = 0; $i < $a; $i++) {\n        $gcd = bcmod($gcd, $b);\n    }\n   \
    \ return $gcd;\n}\n", "    $a = abs($a); // force a to be an integer\n    $b =\
    \ abs($b); // force b to be an integer\n    if ($a < $b) {\n        $temp = $a;\n\
    \        $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n       \
    \ $a = $a % $b;\n        if ($a == 0) {\n            return $b;\n        }\n \
    \       $b = $b;\n    }\n    return $b;\n}\n", "    $gcd = 0;\n    while ($a &&\
    \ $b) {\n        if ($a > $b) {\n            $a = $a % $b;\n        } else {\n\
    \            $b = $b % $a;\n        }\n        $gcd = $a > $b ? $a : $b;\n   \
    \ }\n    return $gcd;\n}\n", "    $r = 1;\n    while ($a && $b) {\n        if\
    \ ($a > $b) {\n            $r = $b;\n            $b = $a % $b;\n            $a\
    \ = $r / $b;\n        } else {\n            $r = $a;\n            $a = $b % $a;\n\
    \            $b = $r / $a;\n        }\n    }\n    return $b;\n}\n", "    $r =\
    \ $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n",
  "    return $b ? gcd($a, $b % $a) : $a;\n}\n", "    $gcd = 0;\n    while ($a !=\
    \ 0) {\n        $t = $a % $b;\n        $a = $b;\n        $b = $t;\n        $gcd\
    \ = $gcd+1;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    if ($a > $b) {\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n\
    \    }\n    while ($a != 0) {\n        $tmp = $b;\n        $b = $a%$b;\n     \
    \   $a = $tmp;\n    }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    if ($a < $b) {\n        $a = $b;\n        $b = $a;\n    }\n    while ($a\
    \ != 0) {\n        $a = $a % $b;\n        if ($a == 0) break;\n        $b = $b;\n\
    \    }\n    return $b;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) { $a = $b; }\n\
    \    while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n      \
    \      return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}\n", " \
    \   $a = abs($a); // force a to be an integer\n    $b = abs($b); // force b to\
    \ be an integer\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    while ($a != 0) {\n        $r = $a % $b;\n   \
    \     $a = $b;\n        $b = $r;\n    }\n    return $b;\n}\n", "    $gcd = 0;\n\
    \    for($i = 1; $i <= abs($a / $b); $i++) {\n        if($a % $i == 0 && $b %\
    \ $i == 0) {\n            $gcd = $i;\n        }\n    }\n    return $gcd;\n}\n",
  "    $gcd = 0;\n    while ($a && $b) {\n        $a = $a % $b;\n        $gcd = $b\
    \ ? $gcd : $a;\n        $b = $a ? $a / $b : 0;\n    }\n    return $gcd;\n}\n",
  "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n\
    }\n</code>\n<|/ a tags=php,math |>\n<| c |>\nThis doesn't work. `greatest_common_divisor(25,\
    \ 15)` returns `5` instead of `1`.\n<|/ c |>\n<| c |>\nIt works, I just tested\
    \ it. `greatest_common_divisor(25, 15)` returns `1`.\n<|/ c |>\n<| c |>\nYes,\
    \ it works. But it returns `1` instead of `5`.\n<|/ c |>\n<| c |>\nYes, it works.\
    \ But it returns `1` instead of `5`.\n<|/ c |>\n<| c |>\nYes, it works. But it\
    \ returns `1` instead of `5`.\n<|/ c |>\n<| a tags=php,math |>\n<code>\n<?php",
  "    $gcd = 0;\n    while ($a && $b) {\n        $a = $a % $b;\n        $gcd = $b\
    \ ? $gcd : $a;\n        $b = $a ? $a / $b : 1;\n    }\n    return $gcd;\n}", " \
    \   if ($a < $b) {\n        $a = $b;\n        $b = $a;\n    }\n    $gcd = 0;\n\
    \    while ($a != 0) {\n        $t = $a % $b;\n        $a = $b;\n        $b =\
    \ $t;\n        $gcd = $gcd ? $gcd : $b;\n    }\n    return $gcd;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,math |>\n<code>", "    $a = abs($a); // force\
    \ a to be positive\n    $b = abs($b); // force b to be positive\n    if ($a <\
    \ $b) { // swap so a is always >= b\n        $tmp = $a;\n        $a = $b;\n  \
    \      $b = $tmp;\n    }\n    while ($a && $b) { // while a and b are not both\
    \ 0\n        $tmp = $a;\n        $a = $b % $a;\n        $b = $tmp;\n    }\n  \
    \  return $b;\n}\n", "    $gcd = 0;\n    while ($a && $b) {\n        if ($a >\
    \ $b) {\n            $a = $a - $b;\n        } else {\n            $b = $b - $a;\n\
    \        }\n        $gcd = $gcd+1;\n    }\n    return $gcd;\n}\n", "    $gcd =\
    \ 0;\n    while ($a && $b) {\n        $a = $a % $b;\n        $gcd = $b ? $gcd\
    \ : $a;\n        $b = $a ? $a / $b : 0;\n    }\n    return $gcd;\n}\n", "    $a\
    \ = abs($a); // force a to be positive\n    $b = abs($b); // force b to be positive\n\
    \    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    $gcd = $a; // the greatest common divisor\n    while ($a && $b) {\
    \ // while a and b are not zero\n        if ($a > $b) {\n            $temp = $a;\n\
    \            $a = $b;\n            $b = $temp;\n        }\n        $gcd = $a %\
    \ $gcd; // find the least common multiple\n    }\n    return $gcd;\n}\n", "  \
    \  $a = abs($a); // force a to be an integer\n    $b = abs($b); // force b to\
    \ be an integer\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    while ($a != 0) {\n        $a = $a % $b;\n   \
    \     if ($a == 0) {\n            return $b;\n        }\n        $b = $b;\n  \
    \  }\n    return $b;\n}", "    $a = abs($a); // force a to be an integer\n   \
    \ $b = abs($b); // force b to be an integer\n    if ($a < $b) { $tmp = $a; $a\
    \ = $b; $b = $tmp; }\n    while ($a != 0) {\n        $tmp = $b;\n        $b =\
    \ $a % $b;\n        $a = $tmp;\n    }\n    return $b;\n}\n", "    $a = abs($a);\
    \ // force a to be positive\n    $b = abs($b); // force b to be positive\n   \
    \ $r = $a; // remainder\n    $n = $b; // divisor\n    while ($r != 0) {\n    \
    \    $r = $n % $b;\n        $n = $b;\n        $b = $r;\n    }\n    return $n;\n\
    }", "    $a = abs($a); $b = abs($b);\n    $r = $a % $b;\n    if ($r == 0) {\n\
    \        return $b;\n    }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    $r = $a; $m = $b;\n    while ($m != 0) {\n        $r = $r / $m;\n       \
    \ $m = $a % $m;\n        $a = $b;\n        $b = $m;\n    }\n    return $r;\n}\n",
  "    $a = abs($a); // force a to be an integer\n    $b = abs($b); // force b to\
    \ be an integer\n    if ($a < $b) $a = $b;\n    if ($b == 0) return $a;\n    $c\
    \ = $a; // c is the common divisor\n    $d = $b; // d is the common divisor of\
    \ the opposite numbers\n    while ($d != 0) {\n        if ($d % $c == 0) $d =\
    \ $c - ($d / $c);\n        else $c = $d;\n    }\n    return $c;\n}\n", "    $a\
    \ = abs($a); // force a to be an integer\n    $b = abs($b); // force b to be an\
    \ integer\n    if ($a < $b) return $a;\n    return $b;\n}\n", "    $a = abs($a);\
    \ $b = abs($b);\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    while ($a != 0) {\n        $a = $a % $b;\n   \
    \     if ($a == 0) {\n            return $b;\n        }\n        $b = $b % $a;\n\
    \    }\n    return $b;\n}\n", "    return $b ? gcd($a, $b) : $a;\n}\n", "    $gcd\
    \ = 0;\n    while ($a && $b) {\n        $a = $a % $b;\n        $gcd = $b ? $gcd\
    \ : $a;\n        $b = $b ? $a : $b;\n    }\n    return $gcd;\n}\n", "    $gcd\
    \ = 0;\n    while ($a && $b) {\n        $t = $a % $b;\n        $a = $b;\n    \
    \    $b = $t;\n        $gcd = $gcd ? $gcd : $b;\n    }\n    return $gcd;\n}\n",
  "    $a = abs($a); $b = abs($b);\n    $r = $a % $b;\n    if ($r == 0) {\n      \
    \  return $b;\n    }\n    return $b;\n}\n", "    $a = abs($a); // force a to be\
    \ positive\n    $b = abs($b); // force b to be positive\n    if ($a < $b) {\n\
    \        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while\
    \ ($a != 0) {\n        $a = $a % $b;\n    }\n    return $b;\n}\n", "    $gcd =\
    \ 0;\n    while ($a && $b) {\n        $t = $a % $b;\n        $a = $b;\n      \
    \  $b = $t;\n        $gcd = $gcd ? gcd($gcd, $b) : $b;\n    }\n    return $gcd;\n\
    }\n", "    $gcd = 0;\n    while ($a != 0) {\n        $t = $b;\n        $b = $a\
    \ % $t;\n        $a = $t;\n        $gcd = $gcd > $b ? $gcd : $b;\n    }\n    return\
    \ $gcd;\n}\n", "    $a = abs($a); // Coerce to integer\n    $b = abs($b); // Coerce\
    \ to integer\n    if ($a < $b) { $a = $b }\n    $gcd = $a; // Initialize greatest\
    \ common divisor\n    while ($a && $b) { $a = $a % $b; $gcd = $b; }\n    return\
    \ $gcd;\n}\n", "    $a = abs($a); $b = abs($b);\n    if ($a < $b) {\n        $temp\
    \ = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($a && $b) {\
    \ $temp = $a; $a = $b; $b = $temp % $b; }\n    return $b;\n}", "    $a = abs($a);\
    \ $b = abs($b);\n    $r = $a; $m = $b;\n    while ($m != 0) {\n        $r = $r\
    \ / $m;\n        $m = $a % $m;\n        $a = $b;\n        $b = $m;\n    }\n  \
    \  return $r;\n}\n", "    if ($a < $b) {\n        $a = $b;\n        $b = $a;\n\
    \    }\n    while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n\
    \            return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n\
    }\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $m = 1;\n    while ($b >\
    \ 0) {\n        $r = $b % $a;\n        $a = $m;\n        $m = $r;\n        $b\
    \ = $b / $a;\n    }\n    return $r;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    $r = $a; $d = 1;\n    while ($b > 0) {\n        $t = $b; $b = ($a % $b);\n\
    \        $a = $t; $d = ($d ? $d + 1 : 1);\n    }\n    return $r;\n}\n", "    $a\
    \ = abs($a); $b = abs($b);\n    $r = $a % $b;\n    if ($r == 0) {\n        return\
    \ $b;\n    }\n    return $b;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work.\
    \ Try it with 5 and 15. You'll get 5 as your answer.\n<|/ c |>\n<| c |>\nIt works,\
    \ try it out. 5 and 15 are both divisible by 5, so 5 is the greatest common divisor\
    \ of those two numbers. If you want it to return 15 as your answer, just change\
    \ `if ($r == 0) {` to `if ($r == 1) {`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ it with 5 and 15. You'll get 5 as your answer.\n<|/ c |>\n<| c |>\nIt works,\
    \ try it out. 5 and 15 are both divisible by 5, so 5 is the greatest common divisor\
    \ of those two numbers. If you want it to return 15 as your answer, just change\
    \ `if ($r == 0) {` to `if ($r == 1) {`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ it with 5 and 15. You'll get 5 as your answer.\n<|/ c |>\n<| a tags=php,math\
    \ |>\n<code>", "    $a = abs($a); // force a to be an integer\n    $b = abs($b);\
    \ // force b to be an integer\n    if ($a < $b) { // swap so a is always >= b\n\
    \        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n    while ($a\
    \ != 0) {\n        $tmp = $b;\n        $b = $a;\n        $a = $tmp % $b;\n   \
    \ }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $b;\n}\n", "    $gcd\
    \ = 0;\n    while ($a && $b) {\n        $a = $a % $b;\n        $gcd = ($gcd >\
    \ $a) ? $gcd : $a;\n        $b = $b / $a;\n    }\n    return $gcd;\n}\n</code>\n\
    <|/ a tags=php,math,algorithm |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ Try `greatest_common_divisor(-3, 5)`.\n<|/ c |>\n<| c |>\n: It works for negative\
    \ numbers. Try `greatest_common_divisor(-3, -5)`.\n<|/ c |>\n<| c |>\n: It works\
    \ for negative numbers. Try `greatest_common_divisor(-3, -5)`.\n<|/ c |>\n<| c\
    \ |>\n: It works for negative numbers. Try `greatest_common_divisor(-3, -5)`.\n\
    <|/ c |>\n<| c |>\n: It works for negative numbers. Try `greatest_common_divisor(-3,\
    \ -5)`.\n<|/ c |>\n<| a dscore=5 |>\n<code>", "    return $b ? gcd($a, $b % $a)\
    \ : $a;\n}\n", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n  \
    \  }\n    return $r;\n}\n", "    $gcd = 0;\n    while ($a && $b) {\n        $a\
    \ = $a % $b;\n        $gcd = $b ? $gcd : $a;\n        $b = $a ? $a / $b : 0;\n\
    \    }\n    return $gcd;\n}\n", "    if ($a < $b) {\n        $a = $b;\n      \
    \  $b = $a;\n    }\n    while ($a != 0) {\n        $a = $a % $b;\n        if ($a\
    \ == 0) {\n            return $b;\n        }\n        $b = $b;\n    }\n    return\
    \ $b;\n}\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b); //\
    \ force b to be positive\n    $r = $a; // initialize result\n    while ($b) {\
    \ // loop while b is not zero\n        $t = $b; // swap b and t\n        $b =\
    \ $a % $b; // a = remainder of a/b\n        $a = $t; // swap t and a\n       \
    \ $r++; // increment result\n    }\n    return $r; // return result\n}\n", " \
    \   $a = abs($a); $b = abs($b);\n    if ($a < $b) {\n        $temp = $a;\n   \
    \     $a = $b;\n        $b = $temp;\n    }\n    while ($a && $b) {\n        $temp\
    \ = $a % $b;\n        $a = $b;\n        $b = $temp;\n    }\n    return $b;\n}\n",
  "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n\
    }\n", "    $gcd = 0;\n    while ($a && $b) {\n        $a = $a % $b;\n        $gcd\
    \ = $b ? $gcd : $a;\n        $b = $a ? $a / $b : 0;\n    }\n    return $gcd;\n\
    }\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b >\
    \ 0) {\n        $t = $b; $b = ($a % $b);\n        $a = $t; $d = ($d ? $d : $b);\n\
    \    }\n    return $r;\n}\n", "    $gcd = 0;\n    for($i = 1; $i <= abs($a / $b);\
    \ $i++) {\n        $gcd = $i;\n    }\n    return $gcd;\n}\n", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) { $temp = $a; $a = $b; $b = $temp; }\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        if ($a == 0) {\n            return $b;\n     \
    \   }\n        $b = $b;\n    }\n    return $b;\n}", "    $a = abs($a); $b = abs($b);\n\
    \    if ($a < $b) { $a = $b;  $b = $a; }\n    while ($a != 0) {\n        $a =\
    \ $a % $b;\n        if ($a == 0) {\n            return $b;\n        }\n      \
    \  $b = $b;\n    }\n    return $b;\n}\n", "    $a = abs($a); // Coerce to integer\n\
    \    $b = abs($b); // Coerce to integer\n    $gcd = 1;\n    while ($a && $b) {\
    \ $a = $a % $b; $gcd = bcmul($gcd, $b); }\n    return $gcd;\n}", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) { $a = $b; $b = $a; }\n    while ($a != 0) {\n        $a = $a\
    \ % $b;\n        if ($a == 0) {\n            return $b;\n        }\n        $b\
    \ = $b;\n    }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n    if\
    \ ($a < $b) {\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n\
    \    while ($a != 0) {\n        $tmp = $b;\n        $b = $a%$b;\n        $a =\
    \ $tmp;\n    }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n    if\
    \ ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n  \
    \  }\n    while ($a && $b) {\n        $temp = $a % $b;\n        $a = $b;\n   \
    \     $b = $temp;\n    }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return\
    \ $b;\n}\n", "    if ($a < $b) {\n        $a = $b;\n        $b = $a;\n    }\n\n\
    \    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n\n    return\
    \ $r;\n}\n", "    $a = abs($a); // force a to be an integer\n    $b = abs($b);\
    \ // force b to be an integer\n    if ($a < $b) {\n        $temp = $a;\n     \
    \   $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n        $a =\
    \ $a % $b;\n    }\n    return $b;\n}\n", "    $gcd = 0;\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        $gcd = $b;\n        $b = $gcd;\n    }\n    return\
    \ $gcd;\n}\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b);\
    \ // force b to be positive\n    $gcd = $a; // initialize gcd\n    while ($a &&\
    \ $b) { // while a and b are not 0\n        if ($a > $b) { // if $a is greater\
    \ than $b\n            $a = $a % $b; // reduce $a by dividing by $b\n        }\
    \ else { // if $b is greater than $a\n            $b = $b % $a; // reduce $b by\
    \ dividing by $a\n        }\n        $gcd = max($gcd, $a); // update gcd\n   \
    \ }\n    return $gcd; // return greatest common divisor\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

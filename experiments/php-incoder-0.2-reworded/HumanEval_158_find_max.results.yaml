language: php
name: HumanEval_158_find_max
results:
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max_count = $word_count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp8qalej68.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp8qalej68.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp8qalej68.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8qalej68.php:30\nStack trace:\n#0 /tmp/tmp8qalej68.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8qalej68.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max = $word;\n        \
    \    $max_count = $word_count;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpcfy3e0ci.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcfy3e0ci.php:30\nStack trace:\n#0 /tmp/tmpcfy3e0ci.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcfy3e0ci.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max = $word;\n            $max_count\
    \ = $count;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp8fryztdc.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp8fryztdc.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp8fryztdc.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8fryztdc.php:30\nStack trace:\n#0 /tmp/tmp8fryztdc.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8fryztdc.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > count($max)) {\n            $max = $word;\n        }\n    }\n    return $max;\n\
    }\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkb7_o8sa.php on line 15\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkb7_o8sa.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkb7_o8sa.php on line 15\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpkb7_o8sa.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkb7_o8sa.php on line 15\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpkb7_o8sa.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkb7_o8sa.php:27\n\
    Stack trace:\n#0 /tmp/tmpkb7_o8sa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkb7_o8sa.php\
    \ on line 27\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $counts = array_count_values($words);\n\
    \  arsort($counts);\n  return key($counts);\n}\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThanks for your answer. Your solution works fine but i want to\
    \ know why my code is not working ?\n<|/ c |>\n<| c |>\nI added a comment to my\
    \ answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. Your solution\
    \ works fine but i want to know why my code is not working ?\n<|/ c |>\n<| c |>\n\
    I added a comment to my answer. Hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = array(\"name\",\"of\",\"string\",\"name\",\"enam\",\"game\",\"\
    aaaaaaa\",\"bb\",\"cc\");\n$max = 0;\n$maxWord = \"\";\nforeach($array as $key\
    \ => $value) {\n    if($value>$max) {\n        $max = $value;\n        $maxWord\
    \ = $key;\n    }\n}\necho $maxWord;\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpo_vqf4p3.php on line 17

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $count = count($chars);\n        if ($count > $max) {\n            $max\
    \ = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliresubj.php:32\n\
    Stack trace:\n#0 /tmp/tmpliresubj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpliresubj.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max = $word;\n        \
    \    $max_count = $word_count;\n        } else if ($word_count == $max_count)\
    \ {\n            if ($word[0] < $max[0]) {\n                $max = $word;\n  \
    \          }\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp14li9yyh.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp14li9yyh.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp14li9yyh.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp14li9yyh.php:34\nStack trace:\n#0 /tmp/tmp14li9yyh.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp14li9yyh.php on line 34\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   foreach ($words as $word) {\n        if (count($word) > count($max)) {\n \
    \           $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp6wqd7njl.php on line 15\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp6wqd7njl.php\
    \ on line 15\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp6wqd7njl.php on line 15\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp6wqd7njl.php\
    \ on line 15\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp6wqd7njl.php on line 15\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp6wqd7njl.php\
    \ on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wqd7njl.php:27\n\
    Stack trace:\n#0 /tmp/tmp6wqd7njl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6wqd7njl.php\
    \ on line 27\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $w) {\n        $chars = str_split($w);\n   \
    \     $chars = array_count_values($chars);\n        $char = max($chars);\n   \
    \     if ($char > $max) {\n            $max = $char;\n            $word = $w;\n\
    \        }\n    }\n    return $word;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n\
    <code>\n<?php\n$string = \"Hello World\";\n$words = explode(\" \", $string);\n\
    $words = array_count_values($words);\narsort($words);\n$word = key($words);\n\
    echo $word;\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbtavlog4.php on line 26

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $chars = array_count_values($chars);\n        $chars = array_filter($chars);\n\
    \        if (count($chars) > $max) {\n            $max = count($chars);\n    \
    \        $word = $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktk2ejg1.php:33\n\
    Stack trace:\n#0 /tmp/tmpktk2ejg1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpktk2ejg1.php\
    \ on line 33\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $count = count($chars);\n        if ($count > $max) {\n            $max\
    \ = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliresubj.php:32\n\
    Stack trace:\n#0 /tmp/tmpliresubj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpliresubj.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = null;\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max = $word;\n    }\n  }\n\
    \  return $max;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpjr8lbjpl.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpjr8lbjpl.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpjr8lbjpl.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpjr8lbjpl.php:30\nStack trace:\n#0 /tmp/tmpjr8lbjpl.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjr8lbjpl.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max_count = $word_count;\n\
    \            $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmplqv6s4hq.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmplqv6s4hq.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmplqv6s4hq.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmplqv6s4hq.php:30\nStack trace:\n#0 /tmp/tmplqv6s4hq.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplqv6s4hq.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $count = 1;\n    foreach ($words as $word) {\n        if (strlen($word) >\
    \ strlen($max)) {\n            $max = $word;\n            $count = 1;\n      \
    \  } elseif (strlen($word) == strlen($max)) {\n            $count++;\n       \
    \ }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec0rpnqr.php:32\n\
    Stack trace:\n#0 /tmp/tmpec0rpnqr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpec0rpnqr.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max_count = $word_count;\n\
    \            $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmplqv6s4hq.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmplqv6s4hq.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmplqv6s4hq.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmplqv6s4hq.php:30\nStack trace:\n#0 /tmp/tmplqv6s4hq.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplqv6s4hq.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp4rzf9c0r.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp4rzf9c0r.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp4rzf9c0r.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp4rzf9c0r.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp4rzf9c0r.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp4rzf9c0r.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rzf9c0r.php:30\n\
    Stack trace:\n#0 /tmp/tmp4rzf9c0r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4rzf9c0r.php\
    \ on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $count = 1;\n    foreach ($words as $word) {\n        if (strlen($word) >\
    \ strlen($max)) {\n            $max = $word;\n            $count = 1;\n      \
    \  } elseif (strlen($word) == strlen($max)) {\n            $count++;\n       \
    \ }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec0rpnqr.php:32\n\
    Stack trace:\n#0 /tmp/tmpec0rpnqr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpec0rpnqr.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $count = count($chars);\n        if ($count > $max) {\n            $max\
    \ = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliresubj.php:32\n\
    Stack trace:\n#0 /tmp/tmpliresubj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpliresubj.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = $words[0];\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max = $word;\n    }\n  }\n\
    \  return $max;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpo_2vh8lv.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpo_2vh8lv.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpo_2vh8lv.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpo_2vh8lv.php:30\nStack trace:\n#0 /tmp/tmpo_2vh8lv.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo_2vh8lv.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $count = count($chars);\n        if ($count > $max) {\n            $max\
    \ = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliresubj.php:32\n\
    Stack trace:\n#0 /tmp/tmpliresubj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpliresubj.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = 1;\n        foreach\
    \ ($words as $word2) {\n            if ($word == $word2) {\n                $count++;\n\
    \            }\n        }\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptogc29ap.php:35\n\
    Stack trace:\n#0 /tmp/tmptogc29ap.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptogc29ap.php\
    \ on line 35\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $count = count($chars);\n        if ($count > $max) {\n            $max\
    \ = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2z6ef5hx.php:31\n\
    Stack trace:\n#0 /tmp/tmp2z6ef5hx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2z6ef5hx.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThanks for your answer. I am not able to understand your code. Can you\
    \ please explain it a bit?\n<|/ c |>\n<| c |>\nI added some comments to my answer.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I am not able to\
    \ understand your code. Can you please explain it a bit?\n<|/ c |>\n<| c |>\n\
    I added some comments to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I am not able to understand your code. Can you please explain\
    \ it a bit?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe5yqn6n_.php on line 24

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = count($word);\n \
    \       if ($chars > $max) {\n            $max = $chars;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpbaxlvnhk.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpbaxlvnhk.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpbaxlvnhk.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpbaxlvnhk.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpbaxlvnhk.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpbaxlvnhk.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbaxlvnhk.php:30\n\
    Stack trace:\n#0 /tmp/tmpbaxlvnhk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbaxlvnhk.php\
    \ on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $counts = array_count_values($words);\n\
    \    $max = max($counts);\n    foreach ($counts as $word => $count) {\n      \
    \  if ($count === $max) {\n            return $word;\n        }\n    }\n}\n</code>\n\
    <|/ a |>\n<| c |>\nI like your solution, however it fails for `find_max(array(\"\
    aaaaaaa\", \"bb\", \"cc\"))` which should return `\"aaaaaaa\"` but returns `\"\
    cc\"`.\n<|/ c |>\n<| c |>\nYes, I missed that case. Thanks for pointing it out.\
    \ I've updated my answer to handle that case too.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$string = \"aaaaaaa\";\n$array = array(\"aaaaaaa\", \"bb\", \"\
    cc\");\n$count = array_count_values($array);\n$max = $count[max($count)];\n$result\
    \ = \"\";\nforeach ($count as $key => $value) {\n    if ($value == $max) {\n \
    \       $result = $key;\n        break;\n    }\n}\necho $result;\n</code>\n<|/\
    \ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = \"aaaaaaa\"\
    ;\n$array = array(\"aaaaaaa\", \"bb\", \"cc\");\n$count = array_count_values($array);\n\
    $max = $count[max($count)];\n$result = \"\";\nforeach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n        $result = $key;\n        break;\n    }\n\
    }\necho $result;\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n\
    <code>\n<?php\n$string = \"aaaaaaa\";\n$array = array(\"aaaaaaa\", \"bb\", \"\
    cc\");\n$count = array_count_values($array);\n$max = $count[max($count)];\n$result\
    \ = \"\";\nforeach ($count as $key => $value) {\n    if ($value == $max) {\n \
    \       $result = $key;\n        break;\n    }\n}\necho $result;\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$string = \"aaaaaaa\";\n$array = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\n$count = array_count_values($array);\n$max = $count[max($count)];\n\
    $result = \"\";\nforeach ($count as $key => $value) {\n    if ($value == $max)\
    \ {\n        $result = $key;\n        break;\n    }\n}\necho $result;\n</code>\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpteww0w3u.php on line 21

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $w) {\n        $len = strlen($w);\n        if\
    \ ($len > $max) {\n            $max = $len;\n            $word = $w;\n       \
    \ }\n    }\n    return $word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8orpcse.php:31\n\
    Stack trace:\n#0 /tmp/tmpc8orpcse.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpc8orpcse.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max = $word;\n            $max_count\
    \ = $count;\n        } else if ($count == $max_count) {\n            $max = str_replace($word,\
    \ '', $max);\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,algorithm |>\n<code>\n<?php\n$string = 'aaabbbccc';\n$array = str_split($string);\n\
    $count = array_count_values($array);\n$max = $array[0];\n$maxCount = 1;\nforeach\
    \ ($count as $key => $value) {\n    if ($value > $maxCount) {\n        $max =\
    \ $key;\n        $maxCount = $value;\n    }\n}\necho $max;\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = 'aaabbbccc';\n$array = str_split($string);\n\
    $count = array_count_values($array);\n$max = $array[0];\n$maxCount = 1;\nforeach\
    \ ($count as $key => $value) {\n    if ($value > $maxCount) {\n        $max =\
    \ $key;\n        $maxCount = $value;\n    }\n}\necho $max;\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| a tags=php,algorithm |>\n<code>\n<?php\n$string = 'aaabbbccc';\n$array\
    \ = str_split($string);\n$count = array_count_values($array);\n$max = $array[0];\n\
    $maxCount = 1;\nforeach ($count as $key => $value) {\n    if ($value > $maxCount)\
    \ {\n        $max = $key;\n        $maxCount = $value;\n    }\n}\necho $max;\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = 'aaabbbccc';\n\
    $array = str_split($string);\n$count = array_count_values($array);\n$max = $array[0];\n\
    $maxCount = 1;\nforeach ($count as $key => $value) {\n    if ($value > $maxCount)\
    \ {\n        $max = $key;\n        $maxCount = $value;\n    }\n}\necho $max;\n\
    </code>\n<|/ a tags=php,algorithm |>\n<| a tags=php,algorithm |>\n<code>\n<?php\n\
    $string = 'aaabbbccc';\n$array = str_split($string);\n$count = array_count_\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp532y0t_2.php on line 26

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = 1;\n        foreach\
    \ (str_split($word) as $char) {\n            $count += substr_count($word, $char);\n\
    \        }\n        if ($count > $max) {\n            $max = $count;\n       \
    \     $word = $word;\n        }\n    }\n    return $word;\n}\n</code>\n<|/ a tags=algorithm,php\
    \ |>\n<| c |>\nThis doesn't work. Try it on `array(\"aaaaaaa\", \"bb\", \"cc\"\
    )`\n<|/ c |>\n<| c |>\nIt works. I tested it on `array(\"aaaaaaa\", \"bb\", \"\
    cc\")`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it on `array(\"aaaaaaa\", \"bb\"\
    , \"cc\")`\n<|/ c |>\n<| c |>\nIt works. I tested it on `array(\"aaaaaaa\", \"\
    bb\", \"cc\")`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it on `array(\"aaaaaaa\"\
    , \"bb\", \"cc\")`\n<|/ c |>\n<| a tags=algorithm,php |>\n<code>\n<?php\n$word\
    \ = \"aaaaaaa\";\n$count = substr_count($word, 'a');\n$count2 = substr_count($word,\
    \ 'b');\n$count3 = substr_count($word, 'c');\n$count4 = substr_count($word, 'd');\n\
    $count5 = substr_count($word, 'e');\n$count6 = substr_count($word, 'f');\n$count7\
    \ = substr_count($word, 'g');\n$count8 = substr_count($word, 'h');\n$count9 =\
    \ substr_count($word, 'i');\n$count10 = substr_count($word, 'j');\n$count11 =\
    \ substr_count($word, 'k');\n$count12 = substr_count($word, 'l');\n$count13 =\
    \ substr_count($word, 'm');\n$count14 = substr_count($word, 'n');\n$count15 =\
    \ substr_count($word, 'o');\n$count16 = substr_count($word, 'p');\n$count17 =\
    \ substr_count($word, 'q');\n$count18 = substr_count($word, 'r');\n$count19 =\
    \ substr_count($word, 's');\n$count20 = substr_count($word, 't');\n$count21 =\
    \ substr_count($word, 'u');\n$\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprwj_5j4f.php on line 27

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $counts = array_count_values($words);\n\
    \  arsort($counts);\n  return key($counts);\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaos76ot_.php:23\n\
    Stack trace:\n#0 /tmp/tmpaos76ot_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaos76ot_.php\
    \ on line 23\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $counts = array_count_values($words);\n\
    \    $max = $words[0];\n    foreach ($counts as $word => $count) {\n        if\
    \ ($count > $max) {\n            $max = $count;\n        }\n    }\n    return\
    \ $max;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't seem to work. `find_max(array(\"\
    aaaaaaa\", \"bb\", \"cc\"))` returns `\"aaaaaaa\"` instead of `\"cc\"`.\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works fine for me. Are you sure you copied it\
    \ correctly?\n<|/ c |>\n<| c |>\nI copied it exactly as you wrote it. I'm running\
    \ PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli) (built: Jul 18 2013 11:16:24).\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli)\
    \ (built: Jul 18 2013 11:16:24). What version are you using?\n<|/ c |>\n<| c |>\n\
    I tested it on PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli) (built: Jul 18\
    \ 2013 11:16:24). What version are you using?\n<|/ c |>\n<| a tags=php,algorithm\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk5kigdou.php on line 22

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = 1;\n        foreach\
    \ (str_split($word) as $char) {\n            $count *= strlen($char);\n      \
    \  }\n        if ($count > $max) {\n            $max = $count;\n            $word\
    \ = $word;\n        }\n    }\n    return $word;\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nI believe this fails for \"aaaaaaa\" and \"bbb\" because they both\
    \ have 4 unique characters. But I could be wrong.\n<|/ c |>\n<| c |>\nYes, you\
    \ are right. My mistake. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI believe\
    \ this fails for \"aaaaaaa\" and \"bbb\" because they both have 4 unique characters.\
    \ But I could be wrong.\n<|/ c |>\n<| c |>\nYes, you are right. My mistake. Thanks\
    \ for pointing it out.\n<|/ c |>\n<| c |>\nI believe this fails for \"aaaaaaa\"\
    \ and \"bbb\" because they both have 4 unique characters. But I could be wrong.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpj9id1_bt.php on line 27

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $word = \"\
    \";\n  foreach ($words as $word) {\n    $count = count($word);\n    if ($count\
    \ > $max) {\n      $max = $count;\n      $word = $word;\n    }\n  }\n  return\
    \ $word;\n}\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpjef2a8yl.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpjef2a8yl.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpjef2a8yl.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpjef2a8yl.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpjef2a8yl.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpjef2a8yl.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjef2a8yl.php:30\n\
    Stack trace:\n#0 /tmp/tmpjef2a8yl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjef2a8yl.php\
    \ on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $counts = array_count_values($words);\n\
    \    $max = $words[0];\n    foreach ($counts as $word => $count) {\n        if\
    \ ($count > $max) {\n            $max = $count;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyniorrp6.php:28\n\
    Stack trace:\n#0 /tmp/tmpyniorrp6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyniorrp6.php\
    \ on line 28\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $count = 1;\n    foreach ($words as $word) {\n        if ($word == $max) {\n\
    \            $count++;\n        } else {\n            $count = 1;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqwhop_t3.php:32\n\
    Stack trace:\n#0 /tmp/tmpqwhop_t3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqwhop_t3.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $length = strlen($word);\n\
    \        if ($length > $max) {\n            $max = $length;\n            $word\
    \ = $word;\n        }\n    }\n    return $word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3a9agcy.php:30\n\
    Stack trace:\n#0 /tmp/tmpl3a9agcy.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpl3a9agcy.php\
    \ on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $chars = array_count_values($chars);\n        $char = max($chars);\n\
    \        if ($char > $max) {\n            $max = $char;\n            $word = $word;\n\
    \        }\n    }\n    return $word;\n}\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0_hj3yx.php:32\n\
    Stack trace:\n#0 /tmp/tmpl0_hj3yx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpl0_hj3yx.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = getUniqueCharCount($word);\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function getUniqueCharCount()\
    \ in /tmp/tmp86h5ttga.php:16\nStack trace:\n#0 /tmp/tmp86h5ttga.php(26): find_max(Array)\n\
    #1 /tmp/tmp86h5ttga.php(30): candidate(Array)\n#2 /tmp/tmp86h5ttga.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp86h5ttga.php on line 16\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max_count = $word_count;\n\
    \            $max = $word;\n        } else if ($word_count == $max_count) {\n\
    \            $max = str_replace($word, $words[$i], $max);\n        }\n    }\n\
    \    return $max;\n}\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp6ex8ljnj.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp6ex8ljnj.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp6ex8ljnj.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp6ex8ljnj.php:31\nStack trace:\n#0 /tmp/tmp6ex8ljnj.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6ex8ljnj.php on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $chars = array_count_values($words);\n\
    \  $max = -1;\n  foreach ($chars as $char => $count) {\n    if ($count > $max)\
    \ {\n      $max = $count;\n    }\n  }\n  foreach ($chars as $char => $count) {\n\
    \    if ($count == $max) {\n      return $char;\n    }\n  }\n  return $words[0];\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI like the idea of using array_count_values()\
    \ to find the most frequent word, but this doesn't really answer the question.\
    \ OP wants to find the word that comes first in lexicographical order.\n<|/ c\
    \ |>\n<| c |>\nYes, I agree with you. I've added a solution that does that.\n\
    <|/ c |>\n<| c |>\nI like your solution, but I wonder if there's a way to do this\
    \ without using array_count_values(). I'm thinking about a solution where I sort\
    \ the array by length and then by lexicographical order. I'll post my solution\
    \ when I get it working.\n<|/ c |>\n<| c |>\nYes, I think your solution is better.\
    \ I've added a solution that does that.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$words = array(\"name\", \"of\", \"string\");\n$words = array_count_values($words);\n\
    $max = max($words);\n$maxKeys = array_keys($words, $max);\n$maxKey = $maxKeys[0];\n\
    echo $maxKey;\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_mx4xjge.php on line 27

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmphb4ofqgw.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmphb4ofqgw.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmphb4ofqgw.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmphb4ofqgw.php:29\nStack trace:\n#0 /tmp/tmphb4ofqgw.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphb4ofqgw.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $w) {\n        $wlen = strlen($w);\n       \
    \ if ($wlen > $max) {\n            $max = $wlen;\n            $word = $w;\n  \
    \      }\n    }\n    return $word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppb4ypkom.php:31\n\
    Stack trace:\n#0 /tmp/tmppb4ypkom.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppb4ypkom.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max = $word;\n        \
    \    $max_count = $word_count;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpcfy3e0ci.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcfy3e0ci.php:30\nStack trace:\n#0 /tmp/tmpcfy3e0ci.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcfy3e0ci.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $length = strlen($word);\n\
    \        if ($length > $max) {\n            $max = $length;\n            $word\
    \ = $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtit2wl0.php:31\n\
    Stack trace:\n#0 /tmp/tmpxtit2wl0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxtit2wl0.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $word = \"\
    \";\n  foreach ($words as $word) {\n    $count = count($word);\n    if ($count\
    \ > $max) {\n      $max = $count;\n      $word = $word;\n    }\n  }\n  return\
    \ $word;\n}\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpjef2a8yl.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpjef2a8yl.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpjef2a8yl.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpjef2a8yl.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpjef2a8yl.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpjef2a8yl.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjef2a8yl.php:30\n\
    Stack trace:\n#0 /tmp/tmpjef2a8yl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjef2a8yl.php\
    \ on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max = $word;\n            $max_count\
    \ = $count;\n        } else if ($count == $max_count) {\n            $max = str_replace($word,\
    \ $words[$i], $max);\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmplx1bp8eu.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmplx1bp8eu.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmplx1bp8eu.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmplx1bp8eu.php:31\nStack trace:\n#0 /tmp/tmplx1bp8eu.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplx1bp8eu.php on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > count($max)) {\n            $max = $word;\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpdx4isgbs.php on line 15\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpdx4isgbs.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpdx4isgbs.php on line 15\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpdx4isgbs.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpdx4isgbs.php on line 15\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpdx4isgbs.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdx4isgbs.php:28\n\
    Stack trace:\n#0 /tmp/tmpdx4isgbs.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdx4isgbs.php\
    \ on line 28\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $count = count($chars);\n        if ($count > $max) {\n            $max\
    \ = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliresubj.php:32\n\
    Stack trace:\n#0 /tmp/tmpliresubj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpliresubj.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max = $word;\n        \
    \    $max_count = $word_count;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpcfy3e0ci.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcfy3e0ci.php:30\nStack trace:\n#0 /tmp/tmpcfy3e0ci.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcfy3e0ci.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nThe question was about a PHP solution, not a Python one.\n<|/ c\
    \ |>\n<| c |>\nI added a PHP solution as well\n<|/ c |>\n<| c |>\nI added a PHP\
    \ solution as well\n<|/ c |>\n<| a |>\n<code>\n$array = array(\"name\", \"of\"\
    , \"string\");\n$result = array_count_values($array);\n$max = $result[0];\n$maxKey\
    \ = null;\nforeach ($result as $key => $value) {\n    if ($value > $max) {\n \
    \       $max = $value;\n        $maxKey = $key;\n    }\n}\necho $maxKey;\n</code>\n\
    <|/ a dscore=1 tags=php,algorithm |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    name\", \"of\", \"string\");\n$result = array_count_values($array);\n$max = $result[0];\n\
    $maxKey = null;\nforeach ($result as $key => $value) {\n    if ($value > $max)\
    \ {\n        $max = $value;\n        $maxKey = $key;\n    }\n}\necho $maxKey;\n\
    </code>\n<|/ a tags=php,algorithm |>\n<| a |>\n<code>\n$array = array(\"name\"\
    , \"of\", \"string\");\n$result = array_count_values($array);\n$max = $result[0];\n\
    $maxKey = null;\nforeach ($result as $key => $value) {\n    if ($value > $max)\
    \ {\n        $max = $value;\n        $maxKey = $key;\n    }\n}\necho $maxKey;\n\
    </code>\n<|/ a dscore=1 tags=php,algorithm |>\n<| a |>\n<code>\n$array = array(\"\
    name\", \"of\", \"string\");\n$result = array_count_values($array);\n$max = $result[0];\n\
    $maxKey = null;\nforeach ($result as $key => $value) {\n    if ($value > $max)\
    \ {\n        $max = $value;\n        $maxKey = $key;\n    }\n}\necho $maxKey;\n\
    </code>\n<|/ a dscore=1 tags=php,algorithm |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(\"name\", \"of\", \"string\");\n$result = array_count_values($array);\n\
    $max = $result[0];\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyw42kbtr.php on line 24

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $word = \"\
    \";\n  foreach ($words as $word) {\n    $count = count($word);\n    if ($count\
    \ > $max) {\n      $max = $count;\n      $word = $word;\n    }\n  }\n  return\
    \ $word;\n}\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpjef2a8yl.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpjef2a8yl.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpjef2a8yl.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpjef2a8yl.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpjef2a8yl.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpjef2a8yl.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjef2a8yl.php:30\n\
    Stack trace:\n#0 /tmp/tmpjef2a8yl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjef2a8yl.php\
    \ on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $count = 1;\n    foreach ($words as $word) {\n        if ($word == $max) {\n\
    \            $count++;\n        } else {\n            if ($count > 1) {\n    \
    \            return $max;\n            }\n            $count = 1;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4rgnft_.php:33\n\
    Stack trace:\n#0 /tmp/tmph4rgnft_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph4rgnft_.php\
    \ on line 33\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = 1;\n        foreach\
    \ ($words as $word2) {\n            if ($word == $word2) {\n                $count++;\n\
    \            }\n        }\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbu2snlu.php:36\n\
    Stack trace:\n#0 /tmp/tmpxbu2snlu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxbu2snlu.php\
    \ on line 36\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = 1;\n        foreach\
    \ ($words as $w) {\n            if ($w == $word) {\n                $count++;\n\
    \            }\n        }\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}\n</code>\n\
    <|/ a tags=php,algorithm |>\n<| c |>\nThis does not answer the question. He wants\
    \ to find the word with the most unique characters, not the number of unique characters.\n\
    <|/ c |>\n<| c |>\nThe question was edited after I posted my answer. Now it answers\
    \ the question as it was originally asked.\n<|/ c |>\n<| c |>\nI edited my answer\
    \ after I posted my answer. Now it answers the question as it was originally asked.\n\
    <|/ c |>\n<| c |>\nI edited my answer after I posted my answer. Now it answers\
    \ the question as it was originally asked.\n<|/ c |>\n<| a tags=php,algorithm\
    \ |>\n<code>\n<?php\n$word = \"name\";\n$wordArray = explode(\" \", $word);\n\
    $uniqueChars = array_count_values($wordArray);\n$maxCount = 0;\n$maxWord = \"\"\
    ;\nforeach ($uniqueChars as $key => $value) {\n    if ($value > $maxCount) {\n\
    \        $maxCount = $value;\n        $maxWord = $key;\n    }\n}\necho $maxWord;\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxgr9ixe7.php on line 29

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max = $word;\n        \
    \    $max_count = $word_count;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpcfy3e0ci.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcfy3e0ci.php:30\nStack trace:\n#0 /tmp/tmpcfy3e0ci.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcfy3e0ci.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $counts = array_count_values($words);\n\
    \    $max = $counts[0];\n    $word = $words[0];\n    foreach ($counts as $count\
    \ => $word) {\n        if ($count > $max) {\n            $max = $count;\n    \
    \        $word = $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsksjtueh.php:30\n\
    Stack trace:\n#0 /tmp/tmpsksjtueh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsksjtueh.php\
    \ on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $counts = array_count_values($words);\n\
    \  arsort($counts);\n  return key($counts);\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaos76ot_.php:23\n\
    Stack trace:\n#0 /tmp/tmpaos76ot_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaos76ot_.php\
    \ on line 23\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpi16f3od8.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpi16f3od8.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpi16f3od8.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi16f3od8.php:30\nStack trace:\n#0 /tmp/tmpi16f3od8.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi16f3od8.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $w) {\n        $chars = str_split($w);\n   \
    \     $chars = array_count_values($chars);\n        $char = max($chars);\n   \
    \     if ($char > $max) {\n            $max = $char;\n            $word = $w;\n\
    \        }\n    }\n    return $word;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(\"name\", \"of\"\
    , \"string\");\n$array = array_count_values($array);\narsort($array);\n$max =\
    \ array_keys($array)[0];\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(\"name\", \"of\", \"string\");\n$array = array_count_values($array);\n\
    arsort($array);\n$max = array_keys($array)[0];\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=php,arrays,sorting |>\n<code>\n$array = array(\"name\", \"of\", \"string\"\
    );\n$array = array_count_values($array);\narsort($array);\n$max = array_keys($array)[0];\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array =\
    \ array(\"name\", \"of\", \"string\");\n$array = array_count_values($array);\n\
    arsort($array);\n$max = array_keys($array)[0];\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=php,arrays,sorting |>\n<code>\n$array = array(\"name\", \"of\", \"string\"\
    );\n$array = array_count_values($array);\narsort($array);\n$max = array_keys($array)[0];\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array =\
    \ array(\"name\", \"of\", \"string\");\n$array = array_count_values($array);\n\
    arsort($array);\n$max = array_keys($array)[0];\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a dscore=1 |>\n<code>\n$array = array(\"name\", \"of\", \"string\");\n$array\
    \ = array_count_values($array);\narsort($array);\n$max = array_keys($array)[0];\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a |>\n<code>\n$array = array(\"\
    name\", \"of\", \"string\");\n$array = array_count_values($array);\nar\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsx62ip71.php on line 26

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $length = strlen($word);\n\
    \        if ($length > $max) {\n            $max = $length;\n            $word\
    \ = $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtit2wl0.php:31\n\
    Stack trace:\n#0 /tmp/tmpxtit2wl0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxtit2wl0.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $counts = array_count_values($words);\n\
    \    $max = $words[0];\n    foreach ($counts as $word => $count) {\n        if\
    \ ($count > $max) {\n            $max = $count;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyniorrp6.php:28\n\
    Stack trace:\n#0 /tmp/tmpyniorrp6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyniorrp6.php\
    \ on line 28\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $count = 1;\n    foreach ($words as $word) {\n        if (count($word) > count($max))\
    \ {\n            $max = $word;\n            $count = 1;\n        } else {\n  \
    \          $count++;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt9wlcxuq.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt9wlcxuq.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt9wlcxuq.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpt9wlcxuq.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt9wlcxuq.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpt9wlcxuq.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9wlcxuq.php:31\n\
    Stack trace:\n#0 /tmp/tmpt9wlcxuq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpt9wlcxuq.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp4rzf9c0r.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp4rzf9c0r.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp4rzf9c0r.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp4rzf9c0r.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp4rzf9c0r.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp4rzf9c0r.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rzf9c0r.php:30\n\
    Stack trace:\n#0 /tmp/tmp4rzf9c0r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4rzf9c0r.php\
    \ on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't seem to work. `find_max(array(\"name\", \"of\", \"\
    string\"))` returns `\"name\"` instead of `\"string\"`.\n<|/ c |>\n<| c |>\nI\
    \ tested it on PHP 5.3.10 and it works. What PHP version are you using?\n<|/ c\
    \ |>\n<| c |>\nPHP 5.3.10. Maybe it's my PHP version?\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.3.10 and it works. What PHP version are you using?\n<|/ c |>\n<|\
    \ c |>\nPHP 5.3.10. Maybe it's my PHP version?\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$array = array(\"name\", \"of\", \"string\");\n$max = $array[0];\n\
    $maxCount = 0;\nforeach ($array as $word) {\n    $count = count($word);\n    if\
    \ ($count > $maxCount) {\n        $maxCount = $count;\n        $max = $word;\n\
    \    }\n}\necho $max;\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbfx1_5vp.php on line 24

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = str_word_count($word);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwven94q.php:31\n\
    Stack trace:\n#0 /tmp/tmpzwven94q.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzwven94q.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $counts = array_count_values($words);\n\
    \    $max = $counts[0];\n    foreach ($counts as $count => $word) {\n        if\
    \ ($count > $max) {\n            $max = $count;\n        }\n    }\n    return\
    \ $words[$max];\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuoic7q9q.php:28\n\
    Stack trace:\n#0 /tmp/tmpuoic7q9q.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuoic7q9q.php\
    \ on line 28\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_chars = array();\n\
    \    $max_chars_length = array();\n    foreach ($words as $word) {\n        $chars\
    \ = str_split($word);\n        $chars_length = count($chars);\n        $max_chars[]\
    \ = $chars;\n        $max_chars_length[] = $chars_length;\n    }\n    $max_chars\
    \ = array_unique($max_chars);\n    $max_chars_length = array_unique($max_chars_length);\n\
    \    $max_chars_length = array_sum($max_chars_length);\n    $max_chars = array_slice($max_chars,\
    \ 0, 1);\n    $max_chars = array_map(function($chars) {\n        return implode($chars);\n\
    \    }, $max_chars);\n    $max_chars = array_map(function($chars) {\n        return\
    \ strlen($chars);\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_char\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp2eo8e5y.php on line 69

    '
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $count = count($chars);\n        if ($count > $max) {\n            $max\
    \ = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliresubj.php:32\n\
    Stack trace:\n#0 /tmp/tmpliresubj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpliresubj.php\
    \ on line 32\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqey3bdk1.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpqey3bdk1.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpqey3bdk1.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqey3bdk1.php:30\nStack trace:\n#0 /tmp/tmpqey3bdk1.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqey3bdk1.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $counts = array_count_values($words);\n\
    \    $max = $words[0];\n    foreach ($counts as $word => $count) {\n        if\
    \ ($count > $max) {\n            $max = $count;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyniorrp6.php:28\n\
    Stack trace:\n#0 /tmp/tmpyniorrp6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyniorrp6.php\
    \ on line 28\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpp7hu2qam.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpp7hu2qam.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7hu2qam.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7hu2qam.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp7hu2qam.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = -1;\n  \
    \  $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzwvj9os2.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpzwvj9os2.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpzwvj9os2.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzwvj9os2.php:30\nStack trace:\n#0 /tmp/tmpzwvj9os2.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwvj9os2.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = 1;\n        foreach\
    \ ($words as $word2) {\n            if ($word == $word2) {\n                continue;\n\
    \            }\n            $count += substr_count($word, $word2);\n        }\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87yiqta6.php:35\n\
    Stack trace:\n#0 /tmp/tmp87yiqta6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp87yiqta6.php\
    \ on line 35\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = get_unique_chars($word);\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_unique_chars()\
    \ in /tmp/tmpv74zna2a.php:16\nStack trace:\n#0 /tmp/tmpv74zna2a.php(26): find_max(Array)\n\
    #1 /tmp/tmpv74zna2a.php(30): candidate(Array)\n#2 /tmp/tmpv74zna2a.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv74zna2a.php on line 16\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $word = \"\
    \";\n  foreach ($words as $word) {\n    $count = count($word);\n    if ($count\
    \ > $max) {\n      $max = $count;\n      $word = $word;\n    }\n  }\n  return\
    \ $word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp_e4ojmrg.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp_e4ojmrg.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp_e4ojmrg.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp_e4ojmrg.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp_e4ojmrg.php on line 16\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp_e4ojmrg.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_e4ojmrg.php:31\n\
    Stack trace:\n#0 /tmp/tmp_e4ojmrg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_e4ojmrg.php\
    \ on line 31\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = $words[0];\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max = $word;\n            $max_count\
    \ = $count;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp8fryztdc.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp8fryztdc.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp8fryztdc.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8fryztdc.php:30\nStack trace:\n#0 /tmp/tmp8fryztdc.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8fryztdc.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max = $word;\n        \
    \    $max_count = $word_count;\n        }\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpcfy3e0ci.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpcfy3e0ci.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcfy3e0ci.php:30\nStack trace:\n#0 /tmp/tmpcfy3e0ci.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcfy3e0ci.php on line 30\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = str_split($word);\n\
    \        $count = array_count_values($count);\n        $count = array_filter($count);\n\
    \        $count = array_keys($count);\n        $count = array_reverse($count);\n\
    \        $count = array_slice($count, 0, 1);\n        $count = array_sum($count);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpptqorvbj.php:36\n\
    Stack trace:\n#0 /tmp/tmpptqorvbj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpptqorvbj.php\
    \ on line 36\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpkcgvzlhb.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpkcgvzlhb.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkcgvzlhb.php:29\nStack trace:\n#0 /tmp/tmpkcgvzlhb.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkcgvzlhb.php on line 29\n"
  timestamp: 1659730766
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt7wqh97j.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpt7wqh97j.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpt7wqh97j.php on line 16\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt7wqh97j.php:30\nStack trace:\n#0 /tmp/tmpt7wqh97j.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt7wqh97j.php on line 30\n"
  timestamp: 1659730766

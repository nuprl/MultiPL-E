name: HumanEval_88_sort_array
language: php
prompt: "<?php\n// Given an array of non-negative integers, return a cophp of the\
  \ given array after sorting,\n// you will sort the given array in ascending order\
  \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n// Note:\n//\
  \ * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n//\
  \ array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
  \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
  \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n"
tests: "function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1, 2,\
  \ 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
  \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11, 0)) !== array(0,\
  \ 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(21,\
  \ 14, 23, 11)) !== array(23, 21, 14, 11)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    $cophp = array();\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($cophp);\n    }\n    return $cophp;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$cophp = array();\nforeach ($array as $value)\
    \ {\n    $sum += $value;\n    $cophp[] = $value;\n}\nif ($sum % 2 != 0) {\n  \
    \  array_reverse($cophp);\n}\nprint_r($cophp);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $sum = 0;\n$cophp = array();\nforeach ($array as $value) {\n    $sum += $value;\n\
    \    $cophp[] = $value;\n}\nif ($sum % 2 != 0) {\n    array_reverse($cophp);\n\
    }\nprint_r($cophp);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$cophp = array();\n\
    foreach ($array as $value) {\n    $sum += $value;\n    $cophp[] = $value;\n}\n\
    if ($sum % 2 != 0) {\n    array_reverse($cophp);\n}\nprint_r($cophp);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$cophp = array();\nforeach ($array as $value)\
    \ {\n    $sum += $value;\n    $cophp[] = $value;\n}\nif ($sum % 2 != 0) {\n  \
    \  array_reverse($cophp);\n}\nprint_r($cophp);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\n$sum = 0;\n$cophp = array();\nforeach ($array as $value) {\n    $sum\
    \ += $value;\n    $cophp[] = $value;\n}\nif ($sum % 2 != 0) {\n    array_reverse($cophp);\n\
    }\nprint_r($cophp);\n</code>\n<|/", "    $sum = array_sum($array);\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php", " \
    \   $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a |>\n<code>", "    $sum = array_sum($array);\n\
    \    if ($sum % 2 == 1) {\n        sort($array, SORT_NUMERIC);\n    } else {\n\
    \        sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 == 0) {\n        sort($array);\n    } else {\n        array_reverse($array);\n\
    \        sort($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    $cophp = array();\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n        $cophp[] = $value;\n    }\n \
    \   if ($sum % 2 != 0) {\n        array_reverse($cophp);\n    }\n    return $cophp;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 == 1) {\n        array_reverse($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach ($array as\
    \ $value) {\n        $sum += $value;\n        $coph[] = $value;\n    }\n    if\
    \ ($sum % 2 != 0) {\n        array_multisort($coph, SORT_DESC, $array);\n    }\
    \ else {\n        array_multisort($coph, SORT_ASC, $array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 === 0) {\n        sort($array);\n    } else\
    \ {\n        arsort($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if the array is\
    \ empty or contains only a single element. Also, `array_reverse` reverses the\
    \ array in place, so it won't work if you call it twice on the same array.\n<|/\
    \ c |>\n<| c |>\nI agree with you, my code doesn't work when array is empty. I've\
    \ updated my answer to handle empty array and single element array.\n<|/ c |>\n\
    <| c |>\nI didn't downvote, but I suspect it's because you didn't actually answer\
    \ the question. Your code doesn't sort the array, it just reverses it. Also, `array_reverse`\
    \ reverses the array in place, so it won't work if you call it twice on the same\
    \ array.\n<|/ c |>\n<| c |>\nI updated my answer to handle empty array and single\
    \ element array. Thanks for your feedback.\n<|/ c |>\n<| c |>\nI didn't downvote\
    \ either, but I think it's because you didn't actually answer the question. Your\
    \ code doesn't sort the array, it just reverses it. Also, `array_reverse` reverses\
    \ the array in place, so it won't work if you call it twice on the same array.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = [1, 5, 3, 6, 2, 4];\n\
    $array = array_reverse($array);\n$array = array_merge($array, array_slice($array,\
    \ 0, -1));\n$array = array_merge($array, array_slice($array, -1));\nprint_r($array);\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if the array is empty or\
    \ contains only a single element. Also, `array_reverse` reverses the array in\
    \ place, so it won't work if you call it twice on the same array.\n<|/ c |>\n\
    <| c |>\nI agree with you, my code doesn't work when array is empty. I've updated\
    \ my answer to handle empty array and single element array.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$array = [1, 5, 3, 6, 2, 4];\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_slice($array, 0, -1));\n$array = array_merge($array,\
    \ array_slice($array, -1));\nprint_r($", "    $sum = 0;\n    $result = array();\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n        $result[]\
    \ = $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($result);\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>", "    $sum = array_sum($array);\n    if ($sum % 2 != 0) {\n        sort($array,\
    \ SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ tags=php,arrays,sorting |>\n<code>", "    $sum = 0;\n    foreach ($array as\
    \ $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 == 0) {\n      \
    \  sort($array);\n    } else {\n        arsort($array);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        return array_reverse($array);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n\
    <code>\n<?php", "    $sum = array_sum($array);\n    $odd = ($sum % 2 === 1);\n\
    \    $array = array_reverse($array);\n    sort($array);\n    return $odd ? array_reverse($array)\
    \ : $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    $coph = array();\n    foreach ($array as $value) {\n        $sum +=\
    \ $value;\n        $coph[$value] = $sum;\n    }\n    asort($coph);\n    return\
    \ $coph;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n\
    $array = [1,2,3,4,5,6,7,8,9,10];\n$sum = 0;\n$coph = array();\nforeach ($array\
    \ as $value) {\n    $sum += $value;\n    $coph[$value] = $sum;\n}\nasort($coph);\n\
    print_r($coph);", "    $sum = 0;\n    foreach ($array as $key => $value) {\n \
    \       $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI like the\
    \ idea of using array_multisort, but this doesn't work if you have a mix of positive\
    \ and negative numbers in the array. For example, `sort_array(array(1,-5,2,-3,4))`\
    \ returns `array(4, -3, -2, -1, 1)` instead of `array(-1, 2, -3, 4, -5)`.\n<|/\
    \ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100);\n\
    \n$array = array_filter($array, function($v){\n    return $v > 0;\n});\n\n$array\
    \ = array_filter($array, function($v){\n    return $v < 0;\n});\n\n$array = array_filter($array,\
    \ function($v){\n    return $v == 0;\n});\n\n$array = array_filter($array, function($v){\n\
    \    return $v == 1;\n});\n\n$array = array_filter($array, function($v){\n   \
    \ return $v == -1;\n});\n\n$array = array_filter($array, function($v){\n    return\
    \ $v == -2;\n});\n\n$array = array_filter($array, function($v){\n    return $v\
    \ == -3;\n});\n\n$array = array_filter($array, function($v){\n    return $v ==\
    \ -4;\n});\n\n$array = array_filter($array, function($v){\n    return $v == -5;\n\
    });\n\n$array = array_filter($array, function($v){\n    return $v == -6;\n});\n\
    \n$array = array_filter($array, function(", "    $sum = 0;\n    $result = [];\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n        $result[]\
    \ = $value;\n    }\n    if ($sum % 2 === 0) {\n        array_reverse($result);\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/17606341)\n\
    <|/ c |>\n<| c |>\nI added some comments into the code so you can understand what\
    \ it does. I hope it helps.\n<|/ c |>\n<| c |>\nI added some comments into the\
    \ code so you can understand what it does. I hope it helps.\n<|/ c |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/17606341)\n\
    <|/ c |>\n<| c |>\nI added some comments into the code so you can understand what\
    \ it does. I hope it helps.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n<?php",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 == 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 == 1) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers in the array.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php", " \
    \   $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2) {\n       \
    \ $array = array_reverse($array);\n    }\n    return $array;\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nThis doesn't work if the array has negative numbers.\
    \ `sort_array(array(2, 4, 3, 0, 1, 5, -1))` returns `array(6, 5, 4, 3, 2, 1, 0,\
    \ -1)`\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it by adding `if ($sum\
    \ < 0) { $sum = 0; }`\n<|/ c |>\n<| c |>\nThis doesn't work if the array has negative\
    \ numbers. `sort_array(array(2, 4, 3, 0, 1, 5, -1))` returns `array(6, 5, 4, 3,\
    \ 2, 1, 0, -1)`\n<|/ c |>\n<| c |>\nI fixed it by adding `if ($sum < 0) { $sum\
    \ = 0; }`\n<|/ c |>\n<| a dscore=4 |>\n<code>", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n   \
    \     array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array\
    \ = [1,2,3,4,5,6,7,8,9,10];\n$sum = 0;\n$newArray = [];\nforeach($array as $key\
    \ => $value){\n    $sum += $value;\n    if($sum % 2 == 0){\n        $newArray[]\
    \ = $value;\n    }\n}\nprint_r($newArray);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n$sum = 0;\n$newArray =\
    \ [];\nforeach($array as $key => $value){\n    $sum += $value;\n    if($sum %\
    \ 2 == 0){\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value){\n    $sum += $value;\n\
    \    if($sum % 2 == 0){\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value){\n    $sum += $value;\n\
    \    if($sum % 2 == 0){\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value){\n    $sum += $value;\n\
    \    if($sum % 2 == 0){\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nPlease add some explanation to your\
    \ answer.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n", "    $sum = 0;\n    $cophp\
    \ = array();\n    foreach ($array as $value) {\n        $sum += $value;\n    \
    \    $cophp[] = $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($cophp);\n\
    \    }\n    return $cophp;\n}\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a\
    \ tags=arrays,php,sorting |>\n<code>", "    $sum = 0;\n    foreach ($array as\
    \ $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n      \
    \  sort($array, SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC,\
    \ SORT_DESC);\n    }\n    return $array;\n}\n</code>\n<|/ a |>\n<| a tags=php,arrays\
    \ |>\n<code>", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$array = array();\n$array[] = array('id'=>1,'name'=>'a');\n$array[]\
    \ = array('id'=>2,'name'=>'b');\n$array[] = array('id'=>3,'name'=>'c');\n$array[]\
    \ = array('id'=>4,'name'=>'d');\n$array[] = array('id'=>5,'name'=>'e');\n$array[]\
    \ = array('id'=>6,'name'=>'f');\n$array[] = array('id'=>7,'name'=>'g');\n$array[]\
    \ = array('id'=>8,'name'=>'h');\n$array[] = array('id'=>9,'name'=>'i');\n$array[]\
    \ = array('id'=>10,'name'=>'j');\n$array[] = array('id'=>11,'name'=>'k');\n$array[]\
    \ = array('id'=>12,'name'=>'l');\n$array[] = array('id'=>13,'name'=>'m');\n$array[]\
    \ = array('id'=>14,'name'=>'n');\n$array[] = array('id'=>15,'name'=>'o');\n$array[]\
    \ = array('id'=>16,'name'=>'p');\n$array[] = array('id'=>17,'name'=>'q');\n$array[]\
    \ = array('id'=>18,'name'=>'r');\n$array[] = array('id'=>19,'name'=>'s');\n$array[]\
    \ = array('id'=>20,'name'=>'t');\n$array[] = array('id'=>21,'name'=>'u');\n$array[]\
    \ = array('id'=>22,'name'=>'v');\n$array[] = array('id'=>23,'name'=>'w');\n$array[]\
    \ = array('id'=>24,'name'=>'x');\n$array[] = array('id'=>25,'name'=>'y');\n$array[]\
    \ = array('id'=>26,'name'=>'z');\n$array[] = array('id'=>27,'name'=>'", "    $sum\
    \ = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 === 0) {\n        return array_reverse($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2 === 0) {\n \
    \       return array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum\
    \ = array_sum($array);\n    $odd = $sum % 2;\n    $even = !$odd;\n    if ($odd)\
    \ {\n        return array_reverse($array);\n    } else {\n        return $array;\n\
    \    }\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 === 0) {\n        sort($array);\n    } else\
    \ {\n        arsort($array);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array();\n$array[] = array('id'\
    \ => 1, 'name' => 'John');\n$array[] = array('id' => 2, 'name' => 'Jane');\n$array[]\
    \ = array('id' => 3, 'name' => 'Jack');\n$array[] = array('id' => 4, 'name' =>\
    \ 'Jill');\n$array[] = array('id' => 5, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 6, 'name' => 'Jill');\n$array[] = array('id' => 7, 'name' => 'Jane');\n$array[]\
    \ = array('id' => 8, 'name' => 'Jack');\n$array[] = array('id' => 9, 'name' =>\
    \ 'Jill');\n$array[] = array('id' => 10, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 11, 'name' => 'Jill');\n$array[] = array('id' => 12, 'name' => 'Jane');\n\
    $array[] = array('id' => 13, 'name' => 'Jack');\n$array[] = array('id' => 14,\
    \ 'name' => 'Jill');\n$array[] = array('id' => 15, 'name' => 'Jack');\n$array[]\
    \ = array('id' => 16, 'name' => 'Jill');\n$array[] = array('id' => 17, 'name'\
    \ => 'Jane');\n$array[] = array('id' => 18, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 19, 'name' => 'Jill');\n$array[] = array('id' => 20, 'name' => 'Jack');\n\
    $array[] = array('id' => 21, 'name' => 'Jill');\n$array[] = array('id' => 22,\
    \ 'name' => 'Jane');\n$array[] = array('id' => 23, 'name' => 'Jack');\n$array[]\
    \ = array('id' => 24, 'name' => 'Jill');\n$array[] = array('id' => 25, 'name'\
    \ => 'Jack');\n$array[] = array('id' => 26, 'name' => 'Jill');\n$array[] = array('id'\
    \ => 27, 'name' => 'Jane');\n$array[] = array('id' => 28, 'name", "    $sum =\
    \ array_sum($array);\n    if ($sum % 2 != 0) {\n        return array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = array_sum($array);\n\
    $odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array, function($v)\
    \ use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = array_sum($array);\n$odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array,\
    \ function($v) use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = array_sum($array);\n$odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array,\
    \ function($v) use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = array_sum($array);\n$odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array,\
    \ function($v) use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = array_sum($array);\n$odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array,\
    \ function($v) use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nPlease add some explanation to your\
    \ answer such that other", "    $sum = 0;\n    $coph = array();\n    foreach ($array\
    \ as $key => $value) {\n        $sum += $value;\n        $coph[$key] = $sum;\n\
    \    }\n    array_multisort($coph, SORT_DESC, $array);\n    return $array;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php", " \
    \   $sum = 0;\n    $coph = array();\n    foreach ($array as $key => $value) {\n\
    \        $sum += $value;\n        $coph[$key] = $sum;\n    }\n    $coph = array_reverse($coph);\n\
    \    asort($coph);\n    return $coph;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    foreach ($array as $value) {\n     \
    \   $sum += $value;\n    }\n    if ($sum % 2 == 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n        $coph[] = $value;\n    }\n  \
    \  if ($sum % 2 != 0) {\n        array_reverse($coph);\n    }\n    return $coph;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>", "    $sum = 0;\n\
    \    $coph = array();\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \        $coph[] = $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($coph,\
    \ SORT_DESC, $array);\n    } else {\n        array_multisort($coph, SORT_ASC,\
    \ $array);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\n    array('id' => 1, 'name'\
    \ => 'John'),\n    array('id' => 2, 'name' => 'Jane'),\n    array('id' => 3, 'name'\
    \ => 'Jack'),\n    array('id' => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name'\
    \ => 'Jack'),\n    array('id' => 6, 'name' => 'Jill'),\n    array('id' => 7, 'name'\
    \ => 'Jane'),\n    array('id' => 8, 'name' => 'Jack'),\n    array('id' => 9, 'name'\
    \ => 'Jill'),\n    array('id' => 10, 'name' => 'Jack'),\n    array('id' => 11,\
    \ 'name' => 'Jill'),\n    array('id' => 12, 'name' => 'Jack'),\n    array('id'\
    \ => 13, 'name' => 'Jill'),\n    array('id' => 14, 'name' => 'Jack'),\n    array('id'\
    \ => 15, 'name' => 'Jill'),\n    array('id' => 16, 'name' => 'Jack'),\n    array('id'\
    \ => 17, 'name' => 'Jill'),\n    array('id' => 18, 'name' => 'Jack'),\n    array('id'\
    \ => 19, 'name' => 'Jill'),\n    array('id' => 20, 'name' => 'Jack'),\n    array('id'\
    \ => 21, 'name' => 'Jill'),\n    array('id' => 22, 'name' => 'Jack'),\n    array('id'\
    \ => 23, 'name' => 'Jill'),\n    array('id' => 24, 'name' => 'Jack'),\n    array('id'\
    \ => 25, 'name' => 'Jill'),\n    array('id' => 26, 'name' => 'Jack'),\n    array('id'\
    \ => 27, 'name' => 'Jill'),\n    array('id' => 28, 'name' => 'Jack'),\n    array('id'\
    \ => 29, 'name' => 'Jill'),\n    array('id' => 30, 'name' => 'Jack'),\n    array('id'\
    \ => 31, 'name' => 'Jill'),\n    array('id' => 32, 'name", "    $sum = array_sum($array);\n\
    \    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$array\
    \ = array(1, 2, 3, 4, 5);\n$sum = 0;\nforeach ($array as $value) {\n    $sum +=\
    \ $value;\n}\nif ($sum % 2 === 0) {\n    array_multisort($array, SORT_DESC);\n\
    } else {\n    array_multisort($array, SORT_ASC);\n}\nprint_r($array);", "    $sum\
    \ = array_sum($array);\n    if ($sum % 2 != 0) {\n        sort($array, SORT_NUMERIC);\n\
    \    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return\
    \ $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 == 1) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 == 0) {\n        sort($array);\n    } else\
    \ {\n        array_reverse($array);\n        sort($array);\n    }\n    return\
    \ $array;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        sort($array);\n    } else {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/10278274)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to sort\
    \ an array in descending order if the sum of the first and last elements is odd,\
    \ or in ascending order if the sum of the first and last elements is even.\n<|/\
    \ c |>\n<| c |>\nThe question was how to sort an array in descending order if\
    \ the sum of the first and last elements is odd, or in ascending order if the\
    \ sum of the first and last elements is even.\n<|/ c |>\n<| c |>\nThe question\
    \ was how to sort an array in descending order if the sum of the first and last\
    \ elements is odd, or in ascending order if the sum of the first and last elements\
    \ is even.\n<|/ c |>\n<| c |>\nThe question was how to sort an array in descending\
    \ order if the sum of the first and last elements is odd, or in ascending order\
    \ if the sum of the first and last elements is even.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = [2,4,3,0,1,5,6];\n$sum = 0;\nforeach($array as $value){\n\
    \    $sum += $value;\n}\nif($sum%2==0){\n    sort($array);\n}else{\n    array_reverse($array);\n\
    }\nprint_r($array);", "    $sum = 0;\n    foreach ($array as $value) {\n     \
    \   $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach\
    \ ($array as $key => $value) {\n        $sum += $value;\n        $coph[$key] =\
    \ $sum;\n    }\n    asort($coph);\n    return $coph;\n}\n", "    $sum = 0;\n \
    \   foreach ($array as $key => $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 == 0) {\n        sort($array);\n    } else {\n        arsort($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a\
    \ dscore=0 |>\n<code>", "    $sum = 0;\n    foreach ($array as $key => $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ work if the array is empty or contains only a single element\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work if the array contains only a single element\n<|/ c |>\n\
    <| c |>\nIt doesn't work if the array contains only a single element\n<|/ c |>\n\
    <| c |>\nIt doesn't work if the array contains only a single element\n<|/ c |>\n\
    <| c |>\nIt doesn't work if the array contains only a single element\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>", "    $sum = 0;\n    $cophp = array();\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n        $cophp[] = $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_multisort($cophp, SORT_DESC, $array);\n\
    \    } else {\n        array_multisort($cophp, SORT_ASC, $array);\n    }\n   \
    \ return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php", "  \
    \  $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\nforeach ($array as $value) {\n  \
    \  $sum += $value;\n}\n$odd = $sum % 2;\n$array = array_reverse($array);\n$array\
    \ = array_merge($array,$odd);\n$array = array_merge($array,$array);\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\nforeach ($array as $value) {\n    $sum += $value;\n}\n$odd = $sum %\
    \ 2;\n$array = array_reverse($array);\n$array = array_merge($array,$odd);\n$array\
    \ = array_merge($array,$array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum =\
    \ 0;\nforeach ($array as $value) {\n    $sum += $value;\n}\n$odd = $sum % 2;\n\
    $array = array_reverse($array);\n$array = array_merge($array,$odd);\n$array =\
    \ array_merge($array,$array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum =\
    \ 0;\nforeach ($array as $value) {\n    $sum += $value;\n}\n$odd = $sum % 2;\n\
    $array = array_reverse($array);\n$array = array_merge($array,$odd);\n$array =\
    \ array_merge($array,$array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\nforeach\
    \ ($array as $value) {\n    $sum += $value;\n}\n$odd = $sum % 2;\n$array = array_reverse($array);\n\
    $array = array_merge($array,$odd);\n$array = array_merge($array,$array);\n", " \
    \   $sum = 0;\n    $coph = array();\n    foreach ($array as $key => $value) {\n\
    \        $sum += $value;\n        $coph[$key] = $sum;\n    }\n    asort($coph);\n\
    \    return $coph;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n \
    \       $sum += $value;\n    }\n    if ($sum % 2 === 1) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ work if the array contains negative numbers. `sort_array(array(1,-2,3,4))` returns\
    \ `array(1,-2, 3, 4)` instead of `array(-2,1,3,4)`.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if the array contains negative numbers. `sort_array(array(1,-2,3,4))` returns\
    \ `array(1,-2, 3, 4)` instead of `array(-2,1,3,4)`.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>", "    $sum = array_sum($array);\n    if ($sum % 2 != 0) {\n    \
    \    $array = array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum\
    \ = array_sum($array);\n    if ($sum % 2 == 0) {\n        sort($array, SORT_NUMERIC);\n\
    \    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return\
    \ $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2 === 0) {\n \
    \       sort($array, SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC,\
    \ SORT_DESC);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>", "    $sum = 0;\n    $coph = array();\n  \
    \  foreach ($array as $key => $value) {\n        $sum += $value;\n        $coph[$key]\
    \ = $sum;\n    }\n    array_multisort($coph, SORT_DESC, $array);\n    return $array;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers in the array\n<|/ c |>\n<| a tags=arrays,php |>\n<code>", "    $sum\
    \ = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 == 0) {\n        sort($array);\n    } else {\n        arsort($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 === 1) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2 !=\
    \ 0) {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php |>\n\
    <| c |>\nThanks for your answer. Your code works fine but i want to know how can\
    \ i do this using php array functions. Can you please help me with that?\n<|/\
    \ c |>\n<| c |>\nI added a solution using php array functions. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Your code works fine but i want to\
    \ know how can i do this using php array functions. Can you please help me with\
    \ that?\n<|/ c |>\n<| c |>\nI added a solution using php array functions. Hope\
    \ it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(2, 4, 3,\
    \ 0, 1, 5);\n$sum = 0;\n$i = 0;\n$len = count($array);\nwhile ($i < $len) {\n\
    \    $sum += $array[$i];\n    $i++;\n}\n$sum = $sum % 2;\nif ($sum == 0) {\n \
    \   $array = array_reverse($array);\n}\nprint_r($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(2, 4, 3, 0, 1, 5);\n$sum\
    \ = 0;\n$i = 0;\n$len = count($array);\nwhile ($i < $len) {\n    $sum += $array[$i];\n\
    \    $i++;\n}\n$sum = $sum % 2;\nif ($sum == 0) {\n    $array = array_reverse($array);\n\
    }\nprint_r($array);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = array(2, 4, 3, 0, 1, 5);\n$sum = 0;\n$i = 0;\n$len = count($array);\n\
    while ($i < $len) {\n    $sum += $array[$i];\n    $i++;\n}\n$sum = $sum % 2;\n\
    if ($sum == 0) {\n    $array = array_reverse($array);\n}\nprint_r($array);\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(2, 4,\
    \ 3, 0, 1, 5);\n$sum = 0;\n$i = 0;\n$len = count($array);\nwhile ($i < $len) {\n\
    \    $", "    $sum = 0;\n    $cophp = array();\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($cophp);\n    }\n    return $cophp;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work for me.\
    \ `sort_array(array(2, 4, 3, 0, 1, 5, 6))` returns `array(6, 5, 4, 3, 2, 1, 0)`\
    \ instead of `array(0, 1, 2, 3, 4, 5)`.\n<|/ c |>\n<| c |>\nIt works. I tested\
    \ it before posting it. What PHP version are you using?\n<|/ c |>\n<| c |>\nPHP\
    \ Version 5.6.30\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6.30 on Windows 7 and\
    \ it works. What OS are you using?\n<|/ c |>\n<| c |>\nWindows 7. PHP Version\
    \ 5.6.30\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    $coph = array();\n    foreach ($array as $value) {\n        $sum +=\
    \ $value;\n        $coph[] = $value;\n    }\n    if ($sum % 2 != 0) {\n      \
    \  array_multisort($coph, SORT_DESC, $array);\n    } else {\n        array_multisort($coph,\
    \ SORT_ASC, $array);\n    }\n    return $array;\n}\n</code>\n<|/ a |>\n<| a |>\n\
    <code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\n$coph = array();\n\
    foreach ($arr as $value) {\n    $sum += $value;\n    $coph[] = $value;\n}\nif\
    \ ($sum % 2 != 0) {\n    array_multisort($coph, SORT_DESC, $arr);\n} else {\n\
    \    array_multisort($coph, SORT_ASC, $arr);\n}\nprint_r($arr);", "    $sum =\
    \ 0;\n    $coph = array();\n    foreach ($array as $key => $value) {\n       \
    \ $sum += $value;\n        $coph[$key] = $sum;\n    }\n    asort($coph);\n   \
    \ return $coph;\n}\n", "    $sum = 0;\n    $result = [];\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n        $result[] = $value;\n    }\n\
    \    if ($sum % 2 === 0) {\n        array_multisort($result, SORT_DESC, $array);\n\
    \    } else {\n        array_multisort($result, SORT_ASC, $array);\n    }\n  \
    \  return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n  \
    \      $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a\
    \ tags=arrays,php,sorting |>\n<code>\n<?php", "    $sum = 0;\n    foreach ($array\
    \ as $key => $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$result\
    \ = array();\nforeach ($array as $key => $value) {\n    $sum += $value;\n    if\
    \ ($sum % 2 == 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$result = array();\nforeach ($array\
    \ as $key => $value) {\n    $sum += $value;\n    if ($sum % 2 == 0) {\n      \
    \  $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $sum = 0;\n$result = array();\nforeach ($array as $key => $value) {\n    $sum\
    \ += $value;\n    if ($sum % 2 == 0) {\n        $result[] = $value;\n    }\n}\n\
    print_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n\
    <code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$result =\
    \ array();\nforeach ($array as $key => $value) {\n    $sum += $value;\n    if\
    \ ($sum % 2 == 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$result = array();\nforeach ($array as $key\
    \ => $value) {\n    $sum += $value;\n    if ($sum % 2 == 0) {\n        $result[]\
    \ = $value;\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum\
    \ = 0;\n$result = array();\nforeach ($array as $key => $value) {\n    $sum +=\
    \ $value;", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 == 0) {\n        sort($array);\n    } else\
    \ {\n        array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum\
    \ = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 == 0) {\n        sort($array);\n    } else {\n        array_reverse($array);\n\
    \        sort($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n        sort($array,\
    \ SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c\
    \ |>\nThis doesn't work if the array is empty or contains only a single element.\
    \ `array_sum()` returns `0` and the `if` statement will never be executed.\n<|/\
    \ c |>\n<| c |>\nYes, you are right. I've updated the code and it works now.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n<?php", "    $sum = array_sum($array);\n \
    \   $odd = $sum % 2;\n    $even = !$odd;\n    if ($odd) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    $coph = array();\n    foreach ($array as $key => $value)\
    \ {\n        $sum += $value;\n        $coph[$key] = $sum;\n    }\n    array_multisort($coph,\
    \ SORT_DESC, $array);\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n  \
    \      sort($array);\n    } else {\n        arsort($array);\n    }\n    return\
    \ $array;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

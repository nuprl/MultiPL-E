name: HumanEval_88_sort_array
language: php
prompt: "<?php\n// Given an array of non-negative integers, return a cophp of the\
  \ given array after sorting,\n// you will sort the given array in ascending order\
  \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n// Note:\n//\
  \ * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n//\
  \ array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
  \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
  \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n"
tests: "function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1, 2,\
  \ 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
  \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11, 0)) !== array(0,\
  \ 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(21,\
  \ 14, 23, 11)) !== array(23, 21, 14, 11)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    $cophp = array();\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($cophp);\n    }\n    return $cophp;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$cophp = array();\nforeach ($array as $value)\
    \ {\n    $sum += $value;\n    $cophp[] = $value;\n}\nif ($sum % 2 != 0) {\n  \
    \  array_reverse($cophp);\n}\nprint_r($cophp);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $sum = 0;\n$cophp = array();\nforeach ($array as $value) {\n    $sum += $value;\n\
    \    $cophp[] = $value;\n}\nif ($sum % 2 != 0) {\n    array_reverse($cophp);\n\
    }\nprint_r($cophp);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$cophp = array();\n\
    foreach ($array as $value) {\n    $sum += $value;\n    $cophp[] = $value;\n}\n\
    if ($sum % 2 != 0) {\n    array_reverse($cophp);\n}\nprint_r($cophp);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$cophp = array();\nforeach ($array as $value)\
    \ {\n    $sum += $value;\n    $cophp[] = $value;\n}\nif ($sum % 2 != 0) {\n  \
    \  array_reverse($cophp);\n}\nprint_r($cophp);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\n$sum = 0;\n$cophp = array();\nforeach ($array as $value) {\n    $sum\
    \ += $value;\n    $cophp[] = $value;\n}\nif ($sum % 2 != 0) {\n    array_reverse($cophp);\n\
    }\nprint_r($cophp);\n</code>\n<|/", "    $sum = array_sum($array);\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php", " \
    \   $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a |>\n<code>", "    $sum = array_sum($array);\n\
    \    if ($sum % 2 == 1) {\n        sort($array, SORT_NUMERIC);\n    } else {\n\
    \        sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 == 0) {\n        sort($array);\n    } else {\n        array_reverse($array);\n\
    \        sort($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    $cophp = array();\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n        $cophp[] = $value;\n    }\n \
    \   if ($sum % 2 != 0) {\n        array_reverse($cophp);\n    }\n    return $cophp;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 == 1) {\n        array_reverse($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach ($array as\
    \ $value) {\n        $sum += $value;\n        $coph[] = $value;\n    }\n    if\
    \ ($sum % 2 != 0) {\n        array_multisort($coph, SORT_DESC, $array);\n    }\
    \ else {\n        array_multisort($coph, SORT_ASC, $array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 === 0) {\n        sort($array);\n    } else\
    \ {\n        arsort($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if the array is\
    \ empty or contains only a single element. Also, `array_reverse` reverses the\
    \ array in place, so it won't work if you call it twice on the same array.\n<|/\
    \ c |>\n<| c |>\nI agree with you, my code doesn't work when array is empty. I've\
    \ updated my answer to handle empty array and single element array.\n<|/ c |>\n\
    <| c |>\nI didn't downvote, but I suspect it's because you didn't actually answer\
    \ the question. Your code doesn't sort the array, it just reverses it. Also, `array_reverse`\
    \ reverses the array in place, so it won't work if you call it twice on the same\
    \ array.\n<|/ c |>\n<| c |>\nI updated my answer to handle empty array and single\
    \ element array. Thanks for your feedback.\n<|/ c |>\n<| c |>\nI didn't downvote\
    \ either, but I think it's because you didn't actually answer the question. Your\
    \ code doesn't sort the array, it just reverses it. Also, `array_reverse` reverses\
    \ the array in place, so it won't work if you call it twice on the same array.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = [1, 5, 3, 6, 2, 4];\n\
    $array = array_reverse($array);\n$array = array_merge($array, array_slice($array,\
    \ 0, -1));\n$array = array_merge($array, array_slice($array, -1));\nprint_r($array);\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if the array is empty or\
    \ contains only a single element. Also, `array_reverse` reverses the array in\
    \ place, so it won't work if you call it twice on the same array.\n<|/ c |>\n\
    <| c |>\nI agree with you, my code doesn't work when array is empty. I've updated\
    \ my answer to handle empty array and single element array.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$array = [1, 5, 3, 6, 2, 4];\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_slice($array, 0, -1));\n$array = array_merge($array,\
    \ array_slice($array, -1));\nprint_r($", "    $sum = 0;\n    $result = array();\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n        $result[]\
    \ = $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($result);\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>", "    $sum = array_sum($array);\n    if ($sum % 2 != 0) {\n        sort($array,\
    \ SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ tags=php,arrays,sorting |>\n<code>", "    $sum = 0;\n    foreach ($array as\
    \ $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 == 0) {\n      \
    \  sort($array);\n    } else {\n        arsort($array);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        return array_reverse($array);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n\
    <code>\n<?php", "    $sum = array_sum($array);\n    $odd = ($sum % 2 === 1);\n\
    \    $array = array_reverse($array);\n    sort($array);\n    return $odd ? array_reverse($array)\
    \ : $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    $coph = array();\n    foreach ($array as $value) {\n        $sum +=\
    \ $value;\n        $coph[$value] = $sum;\n    }\n    asort($coph);\n    return\
    \ $coph;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n\
    $array = [1,2,3,4,5,6,7,8,9,10];\n$sum = 0;\n$coph = array();\nforeach ($array\
    \ as $value) {\n    $sum += $value;\n    $coph[$value] = $sum;\n}\nasort($coph);\n\
    print_r($coph);", "    $sum = 0;\n    foreach ($array as $key => $value) {\n \
    \       $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI like the\
    \ idea of using array_multisort, but this doesn't work if you have a mix of positive\
    \ and negative numbers in the array. For example, `sort_array(array(1,-5,2,-3,4))`\
    \ returns `array(4, -3, -2, -1, 1)` instead of `array(-1, 2, -3, 4, -5)`.\n<|/\
    \ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100);\n\
    \n$array = array_filter($array, function($v){\n    return $v > 0;\n});\n\n$array\
    \ = array_filter($array, function($v){\n    return $v < 0;\n});\n\n$array = array_filter($array,\
    \ function($v){\n    return $v == 0;\n});\n\n$array = array_filter($array, function($v){\n\
    \    return $v == 1;\n});\n\n$array = array_filter($array, function($v){\n   \
    \ return $v == -1;\n});\n\n$array = array_filter($array, function($v){\n    return\
    \ $v == -2;\n});\n\n$array = array_filter($array, function($v){\n    return $v\
    \ == -3;\n});\n\n$array = array_filter($array, function($v){\n    return $v ==\
    \ -4;\n});\n\n$array = array_filter($array, function($v){\n    return $v == -5;\n\
    });\n\n$array = array_filter($array, function($v){\n    return $v == -6;\n});\n\
    \n$array = array_filter($array, function(", "    $sum = 0;\n    $result = [];\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n        $result[]\
    \ = $value;\n    }\n    if ($sum % 2 === 0) {\n        array_reverse($result);\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/17606341)\n\
    <|/ c |>\n<| c |>\nI added some comments into the code so you can understand what\
    \ it does. I hope it helps.\n<|/ c |>\n<| c |>\nI added some comments into the\
    \ code so you can understand what it does. I hope it helps.\n<|/ c |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/17606341)\n\
    <|/ c |>\n<| c |>\nI added some comments into the code so you can understand what\
    \ it does. I hope it helps.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n<?php",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 == 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 == 1) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers in the array.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php", " \
    \   $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2) {\n       \
    \ $array = array_reverse($array);\n    }\n    return $array;\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nThis doesn't work if the array has negative numbers.\
    \ `sort_array(array(2, 4, 3, 0, 1, 5, -1))` returns `array(6, 5, 4, 3, 2, 1, 0,\
    \ -1)`\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it by adding `if ($sum\
    \ < 0) { $sum = 0; }`\n<|/ c |>\n<| c |>\nThis doesn't work if the array has negative\
    \ numbers. `sort_array(array(2, 4, 3, 0, 1, 5, -1))` returns `array(6, 5, 4, 3,\
    \ 2, 1, 0, -1)`\n<|/ c |>\n<| c |>\nI fixed it by adding `if ($sum < 0) { $sum\
    \ = 0; }`\n<|/ c |>\n<| a dscore=4 |>\n<code>", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n   \
    \     array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array\
    \ = [1,2,3,4,5,6,7,8,9,10];\n$sum = 0;\n$newArray = [];\nforeach($array as $key\
    \ => $value){\n    $sum += $value;\n    if($sum % 2 == 0){\n        $newArray[]\
    \ = $value;\n    }\n}\nprint_r($newArray);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n$sum = 0;\n$newArray =\
    \ [];\nforeach($array as $key => $value){\n    $sum += $value;\n    if($sum %\
    \ 2 == 0){\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value){\n    $sum += $value;\n\
    \    if($sum % 2 == 0){\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value){\n    $sum += $value;\n\
    \    if($sum % 2 == 0){\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value){\n    $sum += $value;\n\
    \    if($sum % 2 == 0){\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nPlease add some explanation to your\
    \ answer.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n", "    $sum = 0;\n    $cophp\
    \ = array();\n    foreach ($array as $value) {\n        $sum += $value;\n    \
    \    $cophp[] = $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($cophp);\n\
    \    }\n    return $cophp;\n}\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a\
    \ tags=arrays,php,sorting |>\n<code>", "    $sum = 0;\n    foreach ($array as\
    \ $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n      \
    \  sort($array, SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC,\
    \ SORT_DESC);\n    }\n    return $array;\n}\n</code>\n<|/ a |>\n<| a tags=php,arrays\
    \ |>\n<code>", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$array = array();\n$array[] = array('id'=>1,'name'=>'a');\n$array[]\
    \ = array('id'=>2,'name'=>'b');\n$array[] = array('id'=>3,'name'=>'c');\n$array[]\
    \ = array('id'=>4,'name'=>'d');\n$array[] = array('id'=>5,'name'=>'e');\n$array[]\
    \ = array('id'=>6,'name'=>'f');\n$array[] = array('id'=>7,'name'=>'g');\n$array[]\
    \ = array('id'=>8,'name'=>'h');\n$array[] = array('id'=>9,'name'=>'i');\n$array[]\
    \ = array('id'=>10,'name'=>'j');\n$array[] = array('id'=>11,'name'=>'k');\n$array[]\
    \ = array('id'=>12,'name'=>'l');\n$array[] = array('id'=>13,'name'=>'m');\n$array[]\
    \ = array('id'=>14,'name'=>'n');\n$array[] = array('id'=>15,'name'=>'o');\n$array[]\
    \ = array('id'=>16,'name'=>'p');\n$array[] = array('id'=>17,'name'=>'q');\n$array[]\
    \ = array('id'=>18,'name'=>'r');\n$array[] = array('id'=>19,'name'=>'s');\n$array[]\
    \ = array('id'=>20,'name'=>'t');\n$array[] = array('id'=>21,'name'=>'u');\n$array[]\
    \ = array('id'=>22,'name'=>'v');\n$array[] = array('id'=>23,'name'=>'w');\n$array[]\
    \ = array('id'=>24,'name'=>'x');\n$array[] = array('id'=>25,'name'=>'y');\n$array[]\
    \ = array('id'=>26,'name'=>'z');\n$array[] = array('id'=>27,'name'=>'", "    $sum\
    \ = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 === 0) {\n        return array_reverse($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2 === 0) {\n \
    \       return array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum\
    \ = array_sum($array);\n    $odd = $sum % 2;\n    $even = !$odd;\n    if ($odd)\
    \ {\n        return array_reverse($array);\n    } else {\n        return $array;\n\
    \    }\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 === 0) {\n        sort($array);\n    } else\
    \ {\n        arsort($array);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array();\n$array[] = array('id'\
    \ => 1, 'name' => 'John');\n$array[] = array('id' => 2, 'name' => 'Jane');\n$array[]\
    \ = array('id' => 3, 'name' => 'Jack');\n$array[] = array('id' => 4, 'name' =>\
    \ 'Jill');\n$array[] = array('id' => 5, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 6, 'name' => 'Jill');\n$array[] = array('id' => 7, 'name' => 'Jane');\n$array[]\
    \ = array('id' => 8, 'name' => 'Jack');\n$array[] = array('id' => 9, 'name' =>\
    \ 'Jill');\n$array[] = array('id' => 10, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 11, 'name' => 'Jill');\n$array[] = array('id' => 12, 'name' => 'Jane');\n\
    $array[] = array('id' => 13, 'name' => 'Jack');\n$array[] = array('id' => 14,\
    \ 'name' => 'Jill');\n$array[] = array('id' => 15, 'name' => 'Jack');\n$array[]\
    \ = array('id' => 16, 'name' => 'Jill');\n$array[] = array('id' => 17, 'name'\
    \ => 'Jane');\n$array[] = array('id' => 18, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 19, 'name' => 'Jill');\n$array[] = array('id' => 20, 'name' => 'Jack');\n\
    $array[] = array('id' => 21, 'name' => 'Jill');\n$array[] = array('id' => 22,\
    \ 'name' => 'Jane');\n$array[] = array('id' => 23, 'name' => 'Jack');\n$array[]\
    \ = array('id' => 24, 'name' => 'Jill');\n$array[] = array('id' => 25, 'name'\
    \ => 'Jack');\n$array[] = array('id' => 26, 'name' => 'Jill');\n$array[] = array('id'\
    \ => 27, 'name' => 'Jane');\n$array[] = array('id' => 28, 'name", "    $sum =\
    \ array_sum($array);\n    if ($sum % 2 != 0) {\n        return array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = array_sum($array);\n\
    $odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array, function($v)\
    \ use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = array_sum($array);\n$odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array,\
    \ function($v) use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = array_sum($array);\n$odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array,\
    \ function($v) use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = array_sum($array);\n$odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array,\
    \ function($v) use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = array_sum($array);\n$odd = $sum % 2;\n$even = $sum - $odd;\n$array = array_filter($array,\
    \ function($v) use ($even) {\n    return $v % 2 == $even;\n});\nprint_r($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nPlease add some explanation to your\
    \ answer such that other", "    $sum = 0;\n    $coph = array();\n    foreach ($array\
    \ as $key => $value) {\n        $sum += $value;\n        $coph[$key] = $sum;\n\
    \    }\n    array_multisort($coph, SORT_DESC, $array);\n    return $array;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php", " \
    \   $sum = 0;\n    $coph = array();\n    foreach ($array as $key => $value) {\n\
    \        $sum += $value;\n        $coph[$key] = $sum;\n    }\n    $coph = array_reverse($coph);\n\
    \    asort($coph);\n    return $coph;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    foreach ($array as $value) {\n     \
    \   $sum += $value;\n    }\n    if ($sum % 2 == 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n        $coph[] = $value;\n    }\n  \
    \  if ($sum % 2 != 0) {\n        array_reverse($coph);\n    }\n    return $coph;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>", "    $sum = 0;\n\
    \    $coph = array();\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \        $coph[] = $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($coph,\
    \ SORT_DESC, $array);\n    } else {\n        array_multisort($coph, SORT_ASC,\
    \ $array);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\n    array('id' => 1, 'name'\
    \ => 'John'),\n    array('id' => 2, 'name' => 'Jane'),\n    array('id' => 3, 'name'\
    \ => 'Jack'),\n    array('id' => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name'\
    \ => 'Jack'),\n    array('id' => 6, 'name' => 'Jill'),\n    array('id' => 7, 'name'\
    \ => 'Jane'),\n    array('id' => 8, 'name' => 'Jack'),\n    array('id' => 9, 'name'\
    \ => 'Jill'),\n    array('id' => 10, 'name' => 'Jack'),\n    array('id' => 11,\
    \ 'name' => 'Jill'),\n    array('id' => 12, 'name' => 'Jack'),\n    array('id'\
    \ => 13, 'name' => 'Jill'),\n    array('id' => 14, 'name' => 'Jack'),\n    array('id'\
    \ => 15, 'name' => 'Jill'),\n    array('id' => 16, 'name' => 'Jack'),\n    array('id'\
    \ => 17, 'name' => 'Jill'),\n    array('id' => 18, 'name' => 'Jack'),\n    array('id'\
    \ => 19, 'name' => 'Jill'),\n    array('id' => 20, 'name' => 'Jack'),\n    array('id'\
    \ => 21, 'name' => 'Jill'),\n    array('id' => 22, 'name' => 'Jack'),\n    array('id'\
    \ => 23, 'name' => 'Jill'),\n    array('id' => 24, 'name' => 'Jack'),\n    array('id'\
    \ => 25, 'name' => 'Jill'),\n    array('id' => 26, 'name' => 'Jack'),\n    array('id'\
    \ => 27, 'name' => 'Jill'),\n    array('id' => 28, 'name' => 'Jack'),\n    array('id'\
    \ => 29, 'name' => 'Jill'),\n    array('id' => 30, 'name' => 'Jack'),\n    array('id'\
    \ => 31, 'name' => 'Jill'),\n    array('id' => 32, 'name", "    $sum = array_sum($array);\n\
    \    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$array\
    \ = array(1, 2, 3, 4, 5);\n$sum = 0;\nforeach ($array as $value) {\n    $sum +=\
    \ $value;\n}\nif ($sum % 2 === 0) {\n    array_multisort($array, SORT_DESC);\n\
    } else {\n    array_multisort($array, SORT_ASC);\n}\nprint_r($array);", "    $sum\
    \ = array_sum($array);\n    if ($sum % 2 != 0) {\n        sort($array, SORT_NUMERIC);\n\
    \    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return\
    \ $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 == 1) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 == 0) {\n        sort($array);\n    } else\
    \ {\n        array_reverse($array);\n        sort($array);\n    }\n    return\
    \ $array;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        sort($array);\n    } else {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/10278274)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to sort\
    \ an array in descending order if the sum of the first and last elements is odd,\
    \ or in ascending order if the sum of the first and last elements is even.\n<|/\
    \ c |>\n<| c |>\nThe question was how to sort an array in descending order if\
    \ the sum of the first and last elements is odd, or in ascending order if the\
    \ sum of the first and last elements is even.\n<|/ c |>\n<| c |>\nThe question\
    \ was how to sort an array in descending order if the sum of the first and last\
    \ elements is odd, or in ascending order if the sum of the first and last elements\
    \ is even.\n<|/ c |>\n<| c |>\nThe question was how to sort an array in descending\
    \ order if the sum of the first and last elements is odd, or in ascending order\
    \ if the sum of the first and last elements is even.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = [2,4,3,0,1,5,6];\n$sum = 0;\nforeach($array as $value){\n\
    \    $sum += $value;\n}\nif($sum%2==0){\n    sort($array);\n}else{\n    array_reverse($array);\n\
    }\nprint_r($array);", "    $sum = 0;\n    foreach ($array as $value) {\n     \
    \   $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach\
    \ ($array as $key => $value) {\n        $sum += $value;\n        $coph[$key] =\
    \ $sum;\n    }\n    asort($coph);\n    return $coph;\n}\n", "    $sum = 0;\n \
    \   foreach ($array as $key => $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 == 0) {\n        sort($array);\n    } else {\n        arsort($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a\
    \ dscore=0 |>\n<code>", "    $sum = 0;\n    foreach ($array as $key => $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ work if the array is empty or contains only a single element\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work if the array contains only a single element\n<|/ c |>\n\
    <| c |>\nIt doesn't work if the array contains only a single element\n<|/ c |>\n\
    <| c |>\nIt doesn't work if the array contains only a single element\n<|/ c |>\n\
    <| c |>\nIt doesn't work if the array contains only a single element\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>", "    $sum = 0;\n    $cophp = array();\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n        $cophp[] = $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_multisort($cophp, SORT_DESC, $array);\n\
    \    } else {\n        array_multisort($cophp, SORT_ASC, $array);\n    }\n   \
    \ return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php", "  \
    \  $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\nforeach ($array as $value) {\n  \
    \  $sum += $value;\n}\n$odd = $sum % 2;\n$array = array_reverse($array);\n$array\
    \ = array_merge($array,$odd);\n$array = array_merge($array,$array);\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\nforeach ($array as $value) {\n    $sum += $value;\n}\n$odd = $sum %\
    \ 2;\n$array = array_reverse($array);\n$array = array_merge($array,$odd);\n$array\
    \ = array_merge($array,$array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum =\
    \ 0;\nforeach ($array as $value) {\n    $sum += $value;\n}\n$odd = $sum % 2;\n\
    $array = array_reverse($array);\n$array = array_merge($array,$odd);\n$array =\
    \ array_merge($array,$array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum =\
    \ 0;\nforeach ($array as $value) {\n    $sum += $value;\n}\n$odd = $sum % 2;\n\
    $array = array_reverse($array);\n$array = array_merge($array,$odd);\n$array =\
    \ array_merge($array,$array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\nforeach\
    \ ($array as $value) {\n    $sum += $value;\n}\n$odd = $sum % 2;\n$array = array_reverse($array);\n\
    $array = array_merge($array,$odd);\n$array = array_merge($array,$array);\n", " \
    \   $sum = 0;\n    $coph = array();\n    foreach ($array as $key => $value) {\n\
    \        $sum += $value;\n        $coph[$key] = $sum;\n    }\n    asort($coph);\n\
    \    return $coph;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n \
    \       $sum += $value;\n    }\n    if ($sum % 2 === 1) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ work if the array contains negative numbers. `sort_array(array(1,-2,3,4))` returns\
    \ `array(1,-2, 3, 4)` instead of `array(-2,1,3,4)`.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if the array contains negative numbers. `sort_array(array(1,-2,3,4))` returns\
    \ `array(1,-2, 3, 4)` instead of `array(-2,1,3,4)`.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>", "    $sum = array_sum($array);\n    if ($sum % 2 != 0) {\n    \
    \    $array = array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum\
    \ = array_sum($array);\n    if ($sum % 2 == 0) {\n        sort($array, SORT_NUMERIC);\n\
    \    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return\
    \ $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2 === 0) {\n \
    \       sort($array, SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC,\
    \ SORT_DESC);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `sort_array(array(1,-2,3,4))`\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>", "    $sum = 0;\n    $coph = array();\n  \
    \  foreach ($array as $key => $value) {\n        $sum += $value;\n        $coph[$key]\
    \ = $sum;\n    }\n    array_multisort($coph, SORT_DESC, $array);\n    return $array;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers in the array\n<|/ c |>\n<| a tags=arrays,php |>\n<code>", "    $sum\
    \ = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 == 0) {\n        sort($array);\n    } else {\n        arsort($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 === 1) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2 !=\
    \ 0) {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php |>\n\
    <| c |>\nThanks for your answer. Your code works fine but i want to know how can\
    \ i do this using php array functions. Can you please help me with that?\n<|/\
    \ c |>\n<| c |>\nI added a solution using php array functions. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Your code works fine but i want to\
    \ know how can i do this using php array functions. Can you please help me with\
    \ that?\n<|/ c |>\n<| c |>\nI added a solution using php array functions. Hope\
    \ it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(2, 4, 3,\
    \ 0, 1, 5);\n$sum = 0;\n$i = 0;\n$len = count($array);\nwhile ($i < $len) {\n\
    \    $sum += $array[$i];\n    $i++;\n}\n$sum = $sum % 2;\nif ($sum == 0) {\n \
    \   $array = array_reverse($array);\n}\nprint_r($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(2, 4, 3, 0, 1, 5);\n$sum\
    \ = 0;\n$i = 0;\n$len = count($array);\nwhile ($i < $len) {\n    $sum += $array[$i];\n\
    \    $i++;\n}\n$sum = $sum % 2;\nif ($sum == 0) {\n    $array = array_reverse($array);\n\
    }\nprint_r($array);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = array(2, 4, 3, 0, 1, 5);\n$sum = 0;\n$i = 0;\n$len = count($array);\n\
    while ($i < $len) {\n    $sum += $array[$i];\n    $i++;\n}\n$sum = $sum % 2;\n\
    if ($sum == 0) {\n    $array = array_reverse($array);\n}\nprint_r($array);\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(2, 4,\
    \ 3, 0, 1, 5);\n$sum = 0;\n$i = 0;\n$len = count($array);\nwhile ($i < $len) {\n\
    \    $", "    $sum = 0;\n    $cophp = array();\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($cophp);\n    }\n    return $cophp;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work for me.\
    \ `sort_array(array(2, 4, 3, 0, 1, 5, 6))` returns `array(6, 5, 4, 3, 2, 1, 0)`\
    \ instead of `array(0, 1, 2, 3, 4, 5)`.\n<|/ c |>\n<| c |>\nIt works. I tested\
    \ it before posting it. What PHP version are you using?\n<|/ c |>\n<| c |>\nPHP\
    \ Version 5.6.30\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6.30 on Windows 7 and\
    \ it works. What OS are you using?\n<|/ c |>\n<| c |>\nWindows 7. PHP Version\
    \ 5.6.30\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    $coph = array();\n    foreach ($array as $value) {\n        $sum +=\
    \ $value;\n        $coph[] = $value;\n    }\n    if ($sum % 2 != 0) {\n      \
    \  array_multisort($coph, SORT_DESC, $array);\n    } else {\n        array_multisort($coph,\
    \ SORT_ASC, $array);\n    }\n    return $array;\n}\n</code>\n<|/ a |>\n<| a |>\n\
    <code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\n$coph = array();\n\
    foreach ($arr as $value) {\n    $sum += $value;\n    $coph[] = $value;\n}\nif\
    \ ($sum % 2 != 0) {\n    array_multisort($coph, SORT_DESC, $arr);\n} else {\n\
    \    array_multisort($coph, SORT_ASC, $arr);\n}\nprint_r($arr);", "    $sum =\
    \ 0;\n    $coph = array();\n    foreach ($array as $key => $value) {\n       \
    \ $sum += $value;\n        $coph[$key] = $sum;\n    }\n    asort($coph);\n   \
    \ return $coph;\n}\n", "    $sum = 0;\n    $result = [];\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n        $result[] = $value;\n    }\n\
    \    if ($sum % 2 === 0) {\n        array_multisort($result, SORT_DESC, $array);\n\
    \    } else {\n        array_multisort($result, SORT_ASC, $array);\n    }\n  \
    \  return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n  \
    \      $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a\
    \ tags=arrays,php,sorting |>\n<code>\n<?php", "    $sum = 0;\n    foreach ($array\
    \ as $key => $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$result\
    \ = array();\nforeach ($array as $key => $value) {\n    $sum += $value;\n    if\
    \ ($sum % 2 == 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$result = array();\nforeach ($array\
    \ as $key => $value) {\n    $sum += $value;\n    if ($sum % 2 == 0) {\n      \
    \  $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $sum = 0;\n$result = array();\nforeach ($array as $key => $value) {\n    $sum\
    \ += $value;\n    if ($sum % 2 == 0) {\n        $result[] = $value;\n    }\n}\n\
    print_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n\
    <code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$result =\
    \ array();\nforeach ($array as $key => $value) {\n    $sum += $value;\n    if\
    \ ($sum % 2 == 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$result = array();\nforeach ($array as $key\
    \ => $value) {\n    $sum += $value;\n    if ($sum % 2 == 0) {\n        $result[]\
    \ = $value;\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum\
    \ = 0;\n$result = array();\nforeach ($array as $key => $value) {\n    $sum +=\
    \ $value;", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 == 0) {\n        sort($array);\n    } else\
    \ {\n        array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum\
    \ = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 == 0) {\n        sort($array);\n    } else {\n        array_reverse($array);\n\
    \        sort($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n        sort($array,\
    \ SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c\
    \ |>\nThis doesn't work if the array is empty or contains only a single element.\
    \ `array_sum()` returns `0` and the `if` statement will never be executed.\n<|/\
    \ c |>\n<| c |>\nYes, you are right. I've updated the code and it works now.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n<?php", "    $sum = array_sum($array);\n \
    \   $odd = $sum % 2;\n    $even = !$odd;\n    if ($odd) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    $coph = array();\n    foreach ($array as $key => $value)\
    \ {\n        $sum += $value;\n        $coph[$key] = $sum;\n    }\n    array_multisort($coph,\
    \ SORT_DESC, $array);\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n  \
    \      sort($array);\n    } else {\n        arsort($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach ($array as\
    \ $key => $value) {\n        $sum += $value;\n        $coph[$key] = $sum;\n  \
    \  }\n    array_multisort($coph, SORT_DESC, $array);\n    return $array;\n}\n",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 === 1) {\n        array_reverse($array);\n    }\n   \
    \ return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\n$sum2 = 0;\n$sum3 = 0;\n$sum4\
    \ = 0;\n$sum5 = 0;\n$sum6 = 0;\n$sum7 = 0;\n$sum8 = 0;\n$sum9 = 0;\n$sum10 = 0;\n\
    $sum11 = 0;\n$sum12 = 0;\n$sum13 = 0;\n$sum14 = 0;\n$sum15 = 0;\n$sum16 = 0;\n\
    $sum17 = 0;\n$sum18 = 0;\n$sum19 = 0;\n$sum20 = 0;\n$sum21 = 0;\n$sum22 = 0;\n\
    $sum23 = 0;\n$sum24 = 0;\n$sum25 = 0;\n$sum26 = 0;\n$sum27 = 0;\n$sum28 = 0;\n\
    $sum29 = 0;\n$sum30 = 0;\n$sum31 = 0;\n$sum32 = 0;\n$sum33 = 0;\n$sum34 = 0;\n\
    $sum35 = 0;\n$sum36 = 0;\n$sum37 = 0;\n$sum38 = 0;\n$sum39 = 0;\n$sum40 = 0;\n\
    $sum41 = 0;\n$sum42 = 0;\n$sum43 = 0;\n$sum44 = 0;\n$sum45 = 0;\n$sum46 = 0;\n\
    $sum47 = 0;\n$sum48 = 0;\n$sum49 = 0;\n$sum50 = 0;\n$sum51 = 0;\n$sum52 = 0;\n\
    $sum53 = 0;\n$sum54 = 0;\n$sum55 = 0;\n$sum56 = 0;\n$sum57 = 0;\n$sum58 = 0;\n\
    $sum59 = 0;\n$sum60 = 0;\n$sum61 = 0;\n$sum62 = 0;\n$sum63 = 0;\n$sum64 = 0;\n\
    $sum65 = 0;\n$sum66 = 0;\n$sum67 = 0;\n$sum68 = 0;\n$sum69 = 0;\n$sum70 = 0;\n\
    $sum71 = 0;\n$sum72 = 0;\n$sum73 = 0;\n$sum74 = 0;\n$sum75 = 0;\n$sum76 = 0;\n\
    $sum77 = 0;\n$sum78 = 0;\n$sum79 = 0;\n$sum80 = 0;\n$sum81 = 0;\n$sum82 = 0;\n\
    $sum83 = 0;\n$sum84 = 0;\n$sum85 = 0;\n$sum86 = 0;\n$sum87 = 0;\n$sum88 = 0;\n",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach ($array as $value) {\n    $sum += $value;\n\
    }\nif ($sum % 2 === 0) {\n    array_multisort($array, SORT_DESC);\n} else {\n\
    \    array_multisort($array, SORT_ASC);\n}\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n$sum\
    \ = 0;\n$newArray = [];\nforeach ($array as $value) {\n    $sum += $value;\n}\n\
    if ($sum % 2 === 0) {\n    array_multisort($array, SORT_DESC);\n} else {\n   \
    \ array_multisort($array, SORT_ASC);\n}\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach ($array as $value) {\n    $sum += $value;\n\
    }\nif ($sum % 2 === 0) {\n    array_multisort($array, SORT_DESC);\n} else {\n\
    \    array_multisort($array, SORT_ASC);\n}\nprint_r($array);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach ($array as $value) {\n    $sum += $value;\n\
    }\nif ($sum % 2 === 0) {\n    array_multisort($array, SORT_DESC);\n} else {\n\
    \    array_multisort($array, SORT_ASC);\n}\nprint_r($array);\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$array\
    \ = [1,2,", "    $sum = 0;\n    $result = array();\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n        $result[] = $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_multisort($result, SORT_DESC);\n    } else {\n  \
    \      array_multisort($result, SORT_ASC);\n    }\n    return $result;\n}\n",
  "    $sum = array_sum($array);\n    if ($sum % 2 != 0) {\n        $array = array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = array_sum($array);\n    $odd = $sum\
    \ % 2;\n    $even = !$odd;\n    if ($odd) {\n        $array = array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $sum = 0;\n    $cophp = array();\n    foreach ($array as\
    \ $value) {\n        $sum += $value;\n        $cophp[] = $value;\n    }\n    if\
    \ ($sum % 2 == 1) {\n        array_reverse($cophp);\n    }\n    return $cophp;\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\n$cophp = array();\nforeach($array as $value){\n    $sum += $value;\n\
    \    $cophp[] = $value;\n}\nif($sum%2==1){\n    array_reverse($cophp);\n}\nprint_r($cophp);",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 == 1) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work for me.\
    \ `sort_array(array(2, 4, 3, 0, 1, 5, 6))` returns `array(6, 5, 4, 3, 2, 1, 0)`\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 7.0.13 and it works. What PHP version are\
    \ you using?\n<|/ c |>\n<| c |>\nPHP 5.6.30, but I'm on 7.0.13\n<|/ c |>\n<| c\
    \ |>\nI tested it on PHP 5.6.30 on PHP 7.0.13 and it works. What PHP version are\
    \ you using?\n<|/ c |>\n<| c |>\nPHP 5.6.30 on PHP 7.0.13\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    $len = count($array);\n    for ($i =\
    \ 0; $i < $len; $i++) {\n        $sum += $array[$i];\n    }\n    if ($sum % 2\
    \ != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n", " \
    \   $sum = array_sum($array);\n    if ($sum % 2) {\n        return array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach\
    \ ($array as $key => $value) {\n        $sum += $value;\n        $coph[$key] =\
    \ $sum;\n    }\n    asort($coph);\n    return $coph;\n}\n", "    $sum = 0;\n \
    \   foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        sort($array, SORT_NUMERIC);\n    } else {\n        sort($array,\
    \ SORT_NUMERIC, SORT_DESC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n    $result = [];\n  \
    \  foreach ($array as $value) {\n        $sum += $value;\n        $result[] =\
    \ $value;\n    }\n    if ($sum % 2 === 1) {\n        array_reverse($result);\n\
    \    }\n    return $result;\n}\n", "    $sum = 0;\n    $cophp = array();\n   \
    \ foreach ($array as $key => $value) {\n        $sum += $value;\n        $cophp[$key]\
    \ = $sum;\n    }\n    if ($sum % 2 != 0) {\n        arsort($cophp);\n    } else\
    \ {\n        rsort($cophp);\n    }\n    return $cophp;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>", "    $sum = 0;\n    foreach ($array\
    \ as $key => $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0)\
    \ {\n        $array = array_reverse($array);\n    }\n    return $array;\n}\n",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work if there are negative\
    \ numbers in the array\n<|/ c |>\n<| c |>\nIt works fine for me. Can you give\
    \ an example where it doesn't work?\n<|/ c |>\n<| c |>\nIt doesn't work for me\
    \ with negative numbers. Try it with `[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]`\n\
    <|/ c |>\n<| c |>\nIt works for me with negative numbers. Try it with `[-5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5]`\n<|/ c |>\n<| c |>\nIt doesn't work for me with\
    \ negative numbers. Try it with `[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]`\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = array_sum($array);\n   \
    \ if ($sum % 2 === 0) {\n        sort($array, SORT_NUMERIC);\n    } else {\n \
    \       sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\n$newArray = array();\nforeach($array as $value){\n    $sum += $value;\n\
    \    $newArray[] = $value;\n}\n$newArray = array_filter($newArray);\n$newArray\
    \ = array_unique($newArray);\n$newArray = array_values($newArray);\n$newArray\
    \ = array_slice($newArray, 0, -1);\n$newArray = array_merge($newArray, $array);\n\
    $newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);\n$newArray = array_merge($newArray, $sum);\n$newArray = array_merge($newArray,\
    \ $array);", "    $sum = 0;\n    $coph = array();\n    foreach ($array as $key\
    \ => $value) {\n        $sum += $value;\n        $coph[$key] = $sum;\n    }\n\
    \    asort($coph);\n    return $coph;\n}\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a tags=arrays,php |>\n<code>", "    $sum = 0;\n    $coph = array();\n    foreach\
    \ ($array as $key => $value) {\n        $coph[$key] = $value;\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 != 0) {\n        $coph = array_reverse($coph);\n\
    \    }\n    return $coph;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = array(1, 2, 3, 4, 5);\n$sum = 0;\n$coph = array();\nforeach ($array\
    \ as $key => $value) {\n    $coph[$key] = $value;\n    $sum += $value;\n}\nif\
    \ ($sum % 2 != 0) {\n    $coph = array_reverse($coph);\n}\nprint_r($coph);", " \
    \   $sum = 0;\n    $result = [];\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n        $result[] = $value;\n    }\n    if ($sum % 2 === 0) {\n\
    \        array_multisort($result, SORT_DESC, $array);\n    } else {\n        array_multisort($result,\
    \ SORT_ASC, $array);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\n<?php", "    $sum = array_sum($array);\n\
    \    if ($sum % 2 == 1) {\n        array_reverse($array);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    $cophp = array();\n    foreach ($array as $value) {\n\
    \        $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum % 2\
    \ != 0) {\n        array_reverse($cophp);\n    }\n    return $cophp;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php", "    $sum = 0;\n \
    \   foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    foreach ($array as $key => $value) {\n        $sum += $value;\n  \
    \  }\n    if ($sum % 2 == 1) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>", "   \
    \ $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 == 1) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    $result = [];\n    foreach ($array as $value) {\n  \
    \      $sum += $value;\n        $result[] = $value;\n    }\n    if ($sum % 2 ===\
    \ 0) {\n        array_multisort($result, SORT_DESC, $array);\n    } else {\n \
    \       array_multisort($result, SORT_ASC, $array);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 == 1) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if the array is\
    \ empty or has only one element\n<|/ c |>\n<| c |>\nIt doesn't work if the array\
    \ is empty or has only one element\n<|/ c |>\n<| c |>\nIt doesn't work if the\
    \ array is empty or has only one element\n<|/ c |>\n<| c |>\nIt doesn't work if\
    \ the array is empty or has only one element\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ if the array is empty or has only one element\n<|/ c |>\n<| a |>\n<code>\n<?php",
  "    $sum = 0;\n    $cophp = array();\n    foreach ($array as $value) {\n      \
    \  $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum % 2 == 1)\
    \ {\n        array_reverse($cophp);\n    }\n    return $cophp;\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\n$cophp = array();\nforeach ($array as $value) {\n    $sum += $value;\n\
    \    $cophp[] = $value;\n}\nif ($sum % 2 == 1) {\n    array_reverse($cophp);\n\
    }\nprint_r($cophp);", "    $sum = 0;\n    foreach ($array as $value) {\n     \
    \   $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$array = array(2, 4, 3, 0, 1, 5, 6);\n$sum = 0;\nforeach\
    \ ($array as $value) {\n    $sum += $value;\n}\nif ($sum % 2 === 0) {\n    array_multisort($array,\
    \ SORT_DESC);\n} else {\n    array_multisort($array, SORT_ASC);\n}\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(2,\
    \ 4, 3, 0, 1, 5, 6);\n$sum = 0;\nforeach ($array as $value) {\n    $sum += $value;\n\
    }\nif ($sum % 2 === 0) {\n    array_multisort($array, SORT_DESC);\n} else {\n\
    \    array_multisort($array, SORT_ASC);\n}\nprint_r($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(2, 4, 3, 0, 1, 5, 6);\n\
    $sum = 0;\nforeach ($array as $value) {\n    $sum += $value;\n}\nif ($sum % 2\
    \ === 0) {\n    array_multisort($array, SORT_DESC);\n} else {\n    array_multisort($array,\
    \ SORT_ASC);\n}\nprint_r($array);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = array(2, 4, 3, 0, 1, 5, 6);\n$sum = 0;\nforeach\
    \ ($array as $value) {\n    $sum += $value;\n}\nif ($sum % 2 === 0) {\n    array_multisort($array,\
    \ SORT_DESC);\n} else {\n    array_multisort($array, SORT_ASC);\n}\nprint_r($array);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$array\
    \ = array(2, 4, 3, 0, 1, 5, 6);\n$sum = 0;\nforeach ($array as $value) {\n   \
    \ $sum += $value;\n}\nif ($sum % 2 === 0) {\n    array_multisort($array, SORT_DESC);\n\
    } else {\n    array_multisort($array, SORT_ASC);\n}\nprint_r($array);\n</code>\n\
    <|/ a dscore=", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 == 1) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $key\
    \ => $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n   \
    \     array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 == 0) {\n   \
    \     sort($array);\n    } else {\n        arsort($array);\n    }\n    return\
    \ $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with\
    \ `sort_array(array(1,3,5,2,4))`\n<|/ c |>\n<| c |>\nYes, it does. Try it with\
    \ `sort_array(array(1,3,5,2,4,6,7))`\n<|/ c |>\n<| c |>\nNo, it doesn't. Try it\
    \ with `sort_array(array(1,3,5,2,4,6,7,8,9,10))`\n<|/ c |>\n<| c |>\nIt does.\
    \ Try it with `sort_array(array(1,3,5,2,4,6,7,8,9,10,11,12))`\n<|/ c |>\n<| c\
    \ |>\nNo, it doesn't. Try it with `sort_array(array(1,3,5,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,",
  "    $sum = 0;\n    $coph = array();\n    foreach ($array as $key => $value) {\n\
    \        $sum += $value;\n        $coph[$key] = $sum;\n    }\n    array_multisort($coph,\
    \ SORT_DESC, $array);\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=php,arrays |>\n<code>\n<?php\n$array = array(\n    array(\n        'id'\
    \ => 1,\n        'name' => 'John',\n        'age' => 30,\n        'city' => 'New\
    \ York'\n    ),\n    array(\n        'id' => 2,\n        'name' => 'Jane',\n \
    \       'age' => 25,\n        'city' => 'London'\n    ),\n    array(\n       \
    \ 'id' => 3,\n        'name' => 'Jack',\n        'age' => 22,\n        'city'\
    \ => 'Paris'\n    ),\n    array(\n        'id' => 4,\n        'name' => 'Jill',\n\
    \        'age' => 25,\n        'city' => 'London'\n    ),\n    array(\n      \
    \  'id' => 5,\n        'name' => 'Jack',\n        'age' => 22,\n        'city'\
    \ => 'Paris'\n    ),\n    array(\n        'id' => 6,\n        'name' => 'Jill',\n\
    \        'age' => 25,\n        'city' => 'London'\n    ),\n    array(\n      \
    \  'id' => 7,\n        'name' => 'Jane',\n        'age' => 25,\n        'city'\
    \ => 'London'\n    ),\n    array(\n        'id' => 8,\n        'name' => 'Jack',\n\
    \        'age' => 22,\n        'city' => 'Paris'\n    ),\n    array(\n       \
    \ 'id' => 9,\n        'name' => 'Jill',\n        'age' => 25,\n        'city'\
    \ => 'London'\n    ),\n    array(\n        'id' => 10,\n        'name' => 'Jane',\n\
    \        'age' => 25,\n        'city' => 'London'\n    ),\n    array(\n      \
    \  'id' => 11,\n        'name' => 'Jack',\n        'age' => 22,\n        'city'\
    \ => 'Paris'\n    ),\n    array(\n        'id' => 12,\n        'name' => 'Jill',\n\
    \        'age' => 25,\n        'city' => 'London'\n    ),\n    array(\n      \
    \  'id' => 13,\n        'name' => 'Jane',\n        'age' => 25,\n        'city'\
    \ => 'London'\n    ),\n    array(\n        'id' => 14,\n        'name' => 'Jack',\n\
    \        'age' => 22,\n        'city' => 'Paris'\n    ),\n    array(\n       \
    \ 'id' => 15,\n        'name' => 'Jill',\n        'age' => ", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n    } else {\n   \
    \     array_multisort($array, SORT_ASC);\n    }\n    return $array;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\nforeach($array as $value){\n    $sum += $value;\n}\n$odd = $sum % 2;\n\
    if($odd == 0){\n    array_multisort($array, SORT_DESC);\n}else{\n    array_multisort($array,\
    \ SORT_ASC);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n\
    <?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\nforeach($array as $value){\n\
    \    $sum += $value;\n}\n$odd = $sum % 2;\nif($odd == 0){\n    array_multisort($array,\
    \ SORT_DESC);\n}else{\n    array_multisort($array, SORT_ASC);\n}\nprint_r($array);",
  "    $sum = 0;\n    $cophp = array();\n    foreach ($array as $value) {\n      \
    \  $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum % 2 === 0)\
    \ {\n        array_multisort($cophp, SORT_DESC, $array);\n    } else {\n     \
    \   array_multisort($cophp, SORT_ASC, $array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$sum = 0;\n$cophp = array();\nforeach ($array\
    \ as $value) {\n    $sum += $value;\n    $cophp[] = $value;\n}\nif ($sum % 2 ===\
    \ 0) {\n    array_multisort($cophp, SORT_DESC, $array);\n} else {\n    array_multisort($cophp,\
    \ SORT_ASC, $array);\n}\nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nPlease add some explanation to your answer.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$array = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$sum = 0;\n\
    $cophp = array();\nforeach ($array as $value) {\n    $sum += $value;\n    $cophp[]\
    \ = $value;\n}\nif ($sum % 2 === 0) {\n    array_multisort($cophp, SORT_DESC,\
    \ $array);\n} else {\n    array_multisort($cophp, SORT_ASC, $array);\n}\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10);\n$sum = 0;\n$cophp = array();\nforeach ($array as $value) {\n\
    \    $sum += $value;\n    $cophp[] = $value;\n}\nif ($sum % 2 === 0) {\n    array_multisort($cophp,\
    \ SORT_DESC, $array);\n} else {\n    array_multisort($cophp, SORT_ASC, $array);\n\
    }\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation\
    \ to your answer.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array =\
    \ array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$sum = 0;\n$cophp = array();\nforeach\
    \ ($array as $value) {\n    $", "    $sum = 0;\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n        sort($array,\
    \ SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    $len = count($array);\n    for ($i =\
    \ 0; $i < $len; $i++) {\n        $sum += $array[$i];\n    }\n    if ($sum % 2\
    \ != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php", "    $sum = 0;\n \
    \   $coph = array();\n    foreach ($array as $key => $value) {\n        $sum +=\
    \ $value;\n        $coph[$key] = $sum;\n    }\n    if ($sum % 2 == 0) {\n    \
    \    arsort($coph);\n    } else {\n        arsort($coph, 1);\n    }\n    return\
    \ $coph;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't\
    \ work. `arsort()` sorts the array in ascending order. `arsort($coph, 1);` sorts\
    \ the array in descending order. `arsort($coph);` sorts the array in ascending\
    \ order if the sum of the first and last elements is odd, or in descending order\
    \ if the sum of the first and last elements is even.\n<|/ c |>\n<| c |>\nYes,\
    \ I tested it and it works. I tested it on PHP 5.6.\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.6 and it works. I tested it on PHP 5.5 and it works. I tested it\
    \ on PHP 5.4 and it works. I tested it on PHP 5.3 and it works. I tested it on\
    \ PHP 5.2 and it works. I tested it on PHP 5.1 and it works. I tested it on PHP\
    \ 5.0 and it works. I tested it on PHP 4.4 and it works. I tested it on PHP 4.3\
    \ and it works. I tested it on PHP 4.2 and it works. I tested it on PHP 4.1 and\
    \ it works. I tested it on PHP 4.0 and it works. I tested it on PHP 3.4 and it\
    \ works. I tested it on PHP 3.3 and it works. I tested it on PHP 3.2 and it works.\
    \ I tested it on PHP 3.1 and it works. I tested it on PHP 3.0 and it works. I\
    \ tested it on PHP 2.6 and it works. I tested it on PHP 2.5 and it works. I tested\
    \ it on PHP 2.4 and it works. I tested it on PHP 2.3 and it works. I tested it\
    \ on PHP 2.2 and it works. I tested it on PHP 2.1 and it works. I tested it on\
    \ PHP 2.0 and it works.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and it works.\
    \ I tested it on PHP 5.5 and it works. I tested it on PHP 5.4 and it works. I\
    \ tested it on PHP 5.3 and it works. I tested it on PHP 5.2 and it work", "  \
    \  $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        sort($array);\n    } else {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 === 1) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ tags=php,arrays,sorting |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_reverse($array);\n$array = array_merge($array,$array);\n$array\
    \ = array_unique($array);\n$array = array_slice($array,0,5);\nprint_r($array);",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php",
  "    $sum = 0;\n    $coph = array();\n    foreach ($array as $key => $value) {\n\
    \        $sum += $value;\n        $coph[$key] = $sum;\n    }\n    asort($coph);\n\
    \    return $coph;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$array = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n\
    print_r($array);", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 === 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ seem to work. `sort_array(array(2, 4, 3, 0, 1, 5, 6))` returns `array(6, 5,\
    \ 4, 3, 2, 1, 0)` instead of `array(0, 1, 2, 3, 4, 5)`.\n<|/ c |>\n<| c |>\nI\
    \ tested it on PHP 5.6.20 and it works. I guess you have a different PHP version?\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.6.20 and it works. I guess you have a\
    \ different PHP version?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6.20 and it\
    \ works. I guess you have a different PHP version?\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.6.20 and it works. I guess you have a different PHP version?\n<|/\
    \ c |>\n<| a dscore=2 |>\n<code>\n<?php", "    $sum = array_sum($array);\n   \
    \ if ($sum % 2 == 0) {\n        sort($array, SORT_NUMERIC);\n    } else {\n  \
    \      sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return $array;\n}\n",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    $cophp = array();\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n        $cophp[] = $value;\n    }\n    if ($sum % 2 != 0) {\n  \
    \      array_reverse($cophp);\n    }\n    return $cophp;\n}\n", "    $sum = 0;\n\
    \    $coph = array();\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \        $coph[] = $value;\n    }\n    if ($sum % 2 == 1) {\n        array_reverse($coph);\n\
    \    }\n    return $coph;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$array = array(\n    array(1,2,3),\n    array(4,5,6),\n \
    \   array(7,8,9),\n);\n$sum = 0;\n$coph = array();\nforeach ($array as $value)\
    \ {\n    $sum += $value[0];\n    $coph[] = $value[0];\n}\nif ($sum % 2 == 1) {\n\
    \    array_reverse($coph);\n}\nprint_r($coph);\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a |>\n<code>\n<?php\n$array = array(\n    array(1,2,3),\n    array(4,5,6),\n\
    \    array(7,8,9),\n);\n$sum = 0;\n$coph = array();\nforeach ($array as $value)\
    \ {\n    $sum += $value[0];\n    $coph[] = $value[0];\n}\nif ($sum % 2 == 1) {\n\
    \    array_reverse($coph);\n}\nprint_r($coph);\n</code>\n<|/ a tags=arrays,php\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\n    array(1,2,3),\n\
    \    array(4,5,6),\n    array(7,8,9),\n);\n$sum = 0;\n$coph = array();\nforeach\
    \ ($array as $value) {\n    $sum += $value[0];\n    $coph[] = $value[0];\n}\n\
    if ($sum % 2 == 1) {\n    array_reverse($coph);\n}\nprint_r($coph);\n</code>\n\
    <|/ a tags=arrays,php |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n\
    <?php\n$array = array(\n    array(1,2,3),\n    array(4,5,6),\n    array(7,8,9),\n\
    );\n$sum = 0;\n$coph = array();\nforeach ($array as $value) {\n    $sum += $value[0];\n\
    \    $coph[] = $value[0];\n}\nif ($sum % 2 == 1) {\n    array_reverse($coph);\n\
    }\nprint_r($coph);\n</code>\n<|/ a dscore=0 |>\n", "    $sum = 0;\n    $cophp\
    \ = array();\n    foreach ($array as $value) {\n        $sum += $value;\n    \
    \    $cophp[] = $value;\n    }\n    if ($sum % 2 == 1) {\n        array_reverse($cophp);\n\
    \    }\n    return $cophp;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>", "    $sum = 0;\n    $cophp = array();\n    foreach ($array as $key\
    \ => $value) {\n        $sum += $value;\n        $cophp[$key] = $sum;\n    }\n\
    \    array_multisort($cophp, SORT_DESC, $array);\n    return $array;\n}\n", " \
    \   $sum = 0;\n    $len = count($array);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        $sum += $array[$i];\n    }\n    if ($sum % 2 === 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n<?php", " \
    \   $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n   \
    \ }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n    }\n    return\
    \ $array;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    <?php", "    $sum = 0;\n    $cophp = array();\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum\
    \ % 2 == 1) {\n        array_reverse($cophp);\n    }\n    return $cophp;\n}\n",
  "    $sum = 0;\n    $result = array();\n    foreach ($array as $key => $value) {\n\
    \        $sum += $value;\n        $result[$key] = $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_multisort($result, SORT_DESC);\n    } else {\n  \
    \      array_multisort($result, SORT_ASC);\n    }\n    return $result;\n}\n",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 == 1) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 != 0) {\n        $array = array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n        $coph[] = $value;\n \
    \   }\n    if ($sum % 2 != 0) {\n        array_reverse($coph);\n    }\n    return\
    \ $coph;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 != 0) {\n        return array_reverse($array);\n\
    \    } else {\n        return $array;\n    }\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays |>\n<code>\n<?php", "    $sum = 0;\n    foreach ($array as\
    \ $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n      \
    \  return array_reverse($array);\n    } else {\n        return $array;\n    }\n\
    }\n", "    $sum = 0;\n    $coph = array();\n    foreach ($array as $value) {\n\
    \        $sum += $value;\n        $coph[$value] = $sum;\n    }\n    if ($sum %\
    \ 2 != 0) {\n        ksort($coph);\n    } else {\n        arsort($coph);\n   \
    \ }\n    return $coph;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$array = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n\
    \    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n\
    \    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n    13 => 14,\n  \
    \  14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n    18 => 19,\n   \
    \ 19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n    24\
    \ => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n    29 =>\
    \ 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n\
    \    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n \
    \   40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n    44 => 45,\n  \
    \  45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n    49 => 50,\n   \
    \ 50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n    55\
    \ => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n    60 =>\
    \ 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n\
    \    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n \
    \   71 ", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        $array = array_reverse($array);\n  \
    \  }\n    return $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum %\
    \ 2 != 0) {\n        array_multisort($array, SORT_DESC);\n    } else {\n     \
    \   array_multisort($array, SORT_ASC);\n    }\n    return $array;\n}\n", "   \
    \ $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 === 0) {\n        sort($array);\n    } else {\n        arsort($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $sum = 0;\n    $result = array();\n    foreach ($array as\
    \ $key => $value) {\n        $sum += $value;\n        $result[$key] = $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_multisort($result, SORT_DESC,\
    \ $array);\n    } else {\n        array_multisort($result, SORT_ASC,$array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $key\
    \ => $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n   \
    \     array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n   \
    \     sort($array, SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC,\
    \ SORT_DESC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n$sum = 0;\n$newArray\
    \ = [];\nforeach($array as $key => $value) {\n    $sum += $value;\n    if($sum\
    \ % 2 != 0) {\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value) {\n    $sum += $value;\n\
    \    if($sum % 2 != 0) {\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value) {\n    $sum += $value;\n\
    \    if($sum % 2 != 0) {\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value) {\n    $sum += $value;\n\
    \    if($sum % 2 != 0) {\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\n$newArray = [];\nforeach($array as $key => $value) {\n    $sum += $value;\n\
    \    if($sum % 2 != 0) {\n        $newArray[] = $value;\n    }\n}\nprint_r($newArray);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    foreach ($array as $key => $value) {\n        $sum += $value;\n  \
    \  }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array();\n$array[]\
    \ = array('id' => 1, 'name' => 'John');\n$array[] = array('id' => 2, 'name' =>\
    \ 'Jane');\n$array[] = array('id' => 3, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 4, 'name' => 'Jill');\n$array[] = array('id' => 5, 'name' => 'Jack');\n$array[]\
    \ = array('id' => 6, 'name' => 'Jill');\n$array[] = array('id' => 7, 'name' =>\
    \ 'Jane');\n$array[] = array('id' => 8, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 9, 'name' => 'Jill');\n$array[] = array('id' => 10, 'name' => 'Jack');\n\
    $array[] = array('id' => 11, 'name' => 'Jill');\n$array[] = array('id' => 12,\
    \ 'name' => 'Jane');\n$array[] = array('id' => 13, 'name' => 'Jack');\n$array[]\
    \ = array('id' => 14, 'name' => 'Jill');\n$array[] = array('id' => 15, 'name'\
    \ => 'Jack');\n$array[] = array('id' => 16, 'name' => 'Jill');\n$array[] = array('id'\
    \ => 17, 'name' => 'Jane');\n$array[] = array('id' => 18, 'name' => 'Jack');\n\
    $array[] = array('id' => 19, 'name' => 'Jill');\n$array[] = array('id' => 20,\
    \ 'name' => 'Jack');\n$array[] = array('id' => 21, 'name' => 'Jill');\n$array[]\
    \ = array('id' => 22, 'name' => 'Jane');\n$array[] = array('id' => 23, 'name'\
    \ => 'Jack');\n$array[] = array('id' => 24, 'name' => 'Jill');\n$array[] = array('id'\
    \ => 25, 'name' => 'Jack');\n$array[] = array('id' => 26, 'name' => 'Jill');\n\
    $array[] = array('id' => 27, 'name' => 'Jane');\n$array[] = array", "    $sum\
    \ = array_sum($array);\n    if ($sum % 2 == 1) {\n        array_reverse($array);\n\
    \    }\n    sort($array);\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>", "    $sum = 0;\n    $cophp = array();\n\
    \    foreach ($array as $key => $value) {\n        $sum += $value;\n        $cophp[$key]\
    \ = $sum;\n    }\n    array_multisort($cophp, SORT_DESC, $array);\n    return\
    \ $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 === 0) {\n        return $array;\n    }\n\
    \    return array_reverse($array);\n}\n", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n   \
    \     $array = array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum\
    \ = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n    } else\
    \ {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php", " \
    \   $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n   \
    \ }\n    if ($sum % 2 === 0) {\n        return array_reverse($array);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work\
    \ if there are negative numbers in the array.\n<|/ c |>\n<| c |>\nI added a note\
    \ to the question to clarify that negative numbers are not allowed.\n<|/ c |>\n\
    <| c |>\nI added a note to the question to clarify that negative numbers are not\
    \ allowed.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$array =\
    \ array(5,2,4,3,0,1,5,6);\n$sum = 0;\nforeach ($array as $value) {\n    $sum +=\
    \ $value;\n}\nif ($sum % 2 === 0) {\n    sort($array);\n} else {\n    sort($array,\
    \ SORT_NUMERIC);\n}\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't work if there are negative numbers in the array.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = array(5,2,4,3,0,1,5,6);\n$sum = 0;\nforeach ($array\
    \ as $value) {\n    $sum += $value;\n}\nif ($sum % 2 === 0) {\n    sort($array);\n\
    } else {\n    sort($array, SORT_NUMERIC);\n}\nprint_r($array);\n</code>\n<|/ a\
    \ tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work if there are negative\
    \ numbers in the array.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n\
    $array = array(5,2,4,3,0,1,5,6);\n$sum = 0;\nforeach ($array as $value) {\n  \
    \  $sum += $value;\n}\nif ($sum % 2 === 0) {\n    sort($array);\n} else {\n  \
    \  sort($array, SORT_NUMERIC);\n}\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\n<?php\n$array = array(5,2,4,3,0,1,5,6);\n\
    $sum = 0;\nforeach ($array as $value) {\n    $sum += $value;\n}\nif ($sum % 2\
    \ === 0) {\n    sort($array);\n} else {\n    sort($array, SORT_NUMERIC);\n}\n\
    print_r($array);\n</code>\n<|/ a dscore=0 |>\n<| ", "    $sum = array_sum($array);\n\
    \    $odd = ($sum % 2 == 1);\n    $even = ($sum % 2 == 0);\n    if ($odd) {\n\
    \        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=arrays,php,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = array_sum($array);\n    if\
    \ ($sum % 2 == 1) {\n        sort($array, SORT_NUMERIC);\n    } else {\n     \
    \   sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return $array;\n}\n", " \
    \   $sum = 0;\n    $coph = array();\n    foreach ($array as $value) {\n      \
    \  $sum += $value;\n        $coph[] = $value;\n    }\n    if ($sum % 2 != 0) {\n\
    \        array_reverse($coph);\n    }\n    return $coph;\n}\n", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n\
    \    $cophp = array();\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \        $cophp[] = $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($cophp,\
    \ SORT_DESC, $array);\n    } else {\n        array_multisort($cophp, SORT_ASC,\
    \ $array);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum\
    \ = 0;\n$cophp = array();\nforeach ($array as $value) {\n    $sum += $value;\n\
    \    $cophp[] = $value;\n}\nif ($sum % 2 != 0) {\n    array_multisort($cophp,\
    \ SORT_DESC, $array);\n} else {\n    array_multisort($cophp, SORT_ASC, $array);\n\
    }\nprint_r($array);", "    $sum = 0;\n    foreach ($array as $value) {\n     \
    \   $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2 ===\
    \ 0) {\n        sort($array);\n    } else {\n        array_reverse($array);\n\
    \        sort($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0)\
    \ {\n        sort($array);\n    } else {\n        arsort($array);\n    }\n   \
    \ return $array;\n}\n", "    $sum = 0;\n    $cophp = array();\n    foreach ($array\
    \ as $key => $value) {\n        $cophp[$key] = $value;\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_multisort($cophp, SORT_DESC, $array);\n\
    \    } else {\n        array_multisort($cophp, SORT_ASC, $array);\n    }\n   \
    \ return $array;\n}\n", "    $sum = 0;\n    $coph = array();\n    foreach ($array\
    \ as $key => $value) {\n        $sum += $value;\n        $coph[$key] = $sum;\n\
    \    }\n    if ($sum % 2 != 0) {\n        ksort($coph);\n    } else {\n      \
    \  arsort($coph);\n    }\n    return $coph;\n}\n", "    $sum = 0;\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0)\
    \ {\n        array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum\
    \ = array_sum($array);\n    if ($sum % 2 == 1) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php", " \
    \   $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n   \
    \ }\n    if ($sum % 2 != 0) {\n        array_reverse($array);\n    }\n    return\
    \ $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 === 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php", "    $sum = array_sum($array);\n    if ($sum % 2 != 0) {\n\
    \        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$newArr\
    \ = array();\nforeach ($arr as $key => $value) {\n    $sum += $value;\n    if\
    \ ($sum % 2 == 0) {\n        $newArr[] = $value;\n    }\n}\nprint_r($newArr);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$newArr = array();\nforeach ($arr as\
    \ $key => $value) {\n    $sum += $value;\n    if ($sum % 2 == 0) {\n        $newArr[]\
    \ = $value;\n    }\n}\nprint_r($newArr);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$newArr\
    \ = array();\nforeach ($arr as $key => $value) {\n    $sum += $value;\n    if\
    \ ($sum % 2 == 0) {\n        $newArr[] = $value;\n    }\n}\nprint_r($newArr);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nPlease add some explanation to your\
    \ answer such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$newArr = array();\n\
    foreach ($arr as $key => $value) {\n    $sum += $value;\n    if ($sum % 2 == 0)\
    \ {\n        $newArr[] = $value;\n    }\n}\nprint_r($newArr);\n</code>\n<|/ a\
    \ tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$newArr = array();\nforeach ($arr as $key\
    \ => $value) {\n    $sum += $value;\n    if ($sum % 2 == 0) {\n        $newArr[]\
    \ = $value;\n    }\n}\nprint_r($newArr);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    $sum = 0;\n    $cophp = array();\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum\
    \ % 2 == 1) {\n        array_multisort($cophp, SORT_DESC, $array);\n    } else\
    \ {\n        array_multisort($cophp, SORT_ASC, $array);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $array = array(\n    array(\n        'id' => 1,\n        'name' => 'John',\n \
    \       'age' => 30,\n    ),\n    array(\n        'id' => 2,\n        'name' =>\
    \ 'Jane',\n        'age' => 25,\n    ),\n    array(\n        'id' => 3,\n    \
    \    'name' => 'Jack',\n        'age' => 22,\n    ),\n    array(\n        'id'\
    \ => 4,\n        'name' => 'Jill',\n        'age' => 25,\n    ),\n    array(\n\
    \        'id' => 5,\n        'name' => 'Jack',\n        'age' => 25,\n    ),\n\
    \    array(\n        'id' => 6,\n        'name' => 'Jill',\n        'age' => 25,\n\
    \    ),\n    array(\n        'id' => 7,\n        'name' => 'Jack',\n        'age'\
    \ => 25,\n    ),\n    array(\n        'id' => 8,\n        'name' => 'Jill',\n\
    \        'age' => 25,\n    ),\n    array(\n        'id' => 9,\n        'name'\
    \ => 'Jack',\n        'age' => 25,\n    ),\n    array(\n        'id' => 10,\n\
    \        'name' => 'Jill',\n        'age' => 25,\n    ),\n    array(\n       \
    \ 'id' => 11,\n        'name' => 'Jack',\n        'age' => 25,\n    ),\n    array(\n\
    \        'id' => 12,\n        'name' => 'Jill',\n        'age' => 25,\n    ),\n\
    \    array(\n        'id' => 13,\n        'name' => 'Jack',\n        'age' =>\
    \ 25,\n    ),\n    array(\n        'id' => 14,\n        'name' => 'Jill',\n  \
    \      'age' => 25,\n    ),\n    array(\n        'id' => 15,\n        'name' =>\
    \ 'Jack',\n        'age' => 25,\n    ),\n    array(\n        'id' => 16,\n   \
    \     'name' => 'Jill',\n        'age' => 25,\n    ),\n    array(\n        'id'\
    \ => 17,\n        'name' => 'Jack',\n        'age' => 25,\n    ),\n    array(\n\
    \        'id' => 18,\n        'name' => 'Jill',\n        'age' => 25,\n    ),\n\
    \    array(\n        'id' => 19,\n        '", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n   \
    \     array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = 0;\n$newArr\
    \ = array();\nforeach ($arr as $key => $value) {\n    $sum += $value;\n    $newArr[$key]\
    \ = $value;\n}\nif ($sum % 2 != 0) {\n    array_multisort($newArr, SORT_DESC);\n\
    } else {\n    array_multisort($newArr, SORT_ASC);\n}\nprint_r($newArr);", "  \
    \  $sum = 0;\n    $cophp = array();\n    foreach ($array as $key => $value) {\n\
    \        $sum += $value;\n        $cophp[$key] = $sum;\n    }\n    if ($sum %\
    \ 2 != 0) {\n        ksort($cophp);\n    } else {\n        arsort($cophp);\n \
    \   }\n    return $cophp;\n}\n", "    $sum = 0;\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $key => $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        return\
    \ array_reverse($array);\n    }\n    return $array;\n}\n", "    $sum = 0;\n  \
    \  foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 != 0) {\n        array_reverse($array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    $result = array();\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n        $result[] = $value;\n    }\n    if ($sum % 2 != 0) {\n \
    \       array_reverse($result);\n    }\n    return $result;\n}\n</code>\n<|/ a\
    \ tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = array_sum($array);\n\
    \    if ($sum % 2 != 0) {\n        return array_reverse($array);\n    } else {\n\
    \        return $array;\n    }\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum\
    \ = 0;\nforeach ($array as $key => $value) {\n    $sum += $value;\n}\n$sum = $sum\
    \ % 2;\n$array = array_reverse($array);\n$array = array_merge($array, [$sum]);\n\
    $array = array_chunk($array, 2);\n$array = array_map(function($value) {\n    return\
    \ $value[0];\n}, $array);\n$array = array_map(function($value) {\n    return $value[1];\n\
    }, $array);\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum\
    \ = 0;\nforeach ($array as $key => $value) {\n    $sum += $value;\n}\n$sum = $sum\
    \ % 2;\n$array = array_reverse($array);\n$array = array_merge($array, [$sum]);\n\
    $array = array_chunk($array, 2);\n$array = array_map(function($value) {\n    return\
    \ $value[0];\n}, $array);\n$array = array_map(function($value) {\n    return $value[1];\n\
    }, $array);\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ tags=php,arrays,sorting |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\n$sum = 0;\nforeach ($array as $key => $value) {\n    $sum += $value;\n\
    }\n$sum = $sum % 2;\n$array = array_reverse($array);\n$array = array_merge($array,\
    \ [$sum]);\n$array = array_chunk($array, 2);\n$array = array_map(function($value)\
    \ {\n    return $value[0];\n}, $array);\n$array = array_map(function($value) {\n\
    \    return $value[1];\n}, $array);\nprint_r($array);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $sum = 0;\nforeach ($array as $key => $value) {\n    $sum += $value;\n}\n$sum\
    \ = $sum % 2;\n$array = array_reverse($array);\n$array = array_merge($array, [$sum]);\n",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 === 1) {\n        array_reverse($array);\n    }\n    return\
    \ $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>",
  "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n\
    \    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n    }\
    \ else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/11187752)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question, albeit not in the\
    \ way the OP intended. He wants to sort the array in descending order if the sum\
    \ of the first and last elements is even, and in ascending order if the sum of\
    \ the first and last elements is odd. He also wants to sort the array in ascending\
    \ order if the sum of the first and last elements is odd, and in descending order\
    \ if the sum of the first and last elements is even.\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11187752)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/11187752)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11187752)\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array();\n$array[] = array(1,2,3);\n\
    $array[] = array(4,5,6);\n$array[] = array(7,8,9);\n$array[] = array(10,11,12);\n\
    $array[] = array(13,14,15);\n\n$sum = 0;\n$sum2 = 0;\n$sum3 = 0;\n$sum4 = 0;\n\
    $sum5 = 0;\n$sum6 = 0;\n$sum7 = 0;\n$sum8 = 0;\n$sum9 = 0;\n$sum10 = 0;\n$sum11\
    \ = 0;\n$sum", "    $sum = array_sum($array);\n    if ($sum % 2 === 0) {\n   \
    \     sort($array, SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC,\
    \ SORT_DESC);\n    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n  \
    \      $array = array_reverse($array);\n    }\n    return $array;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\n$sum2 =\
    \ $array[0];\n$sum3 = $array[1];\n$sum4 = $array[2];\n$sum5 = $array[3];\n$sum6\
    \ = $array[4];\n$sum7 = $array[5];\n$sum8 = $array[6];\n$sum9 = $array[7];\n$sum10\
    \ = $array[8];\n$sum11 = $array[9];\n$sum12 = $array[10];\n$sum13 = $array[11];\n\
    $sum14 = $array[12];\n$sum15 = $array[13];\n$sum16 = $array[14];\n$sum17 = $array[15];\n\
    $sum18 = $array[16];\n$sum19 = $array[17];\n$sum20 = $array[18];\n$sum21 = $array[19];\n\
    $sum22 = $array[20];\n$sum23 = $array[21];\n$sum24 = $array[22];\n$sum25 = $array[23];\n\
    $sum26 = $array[24];\n$sum27 = $array[25];\n$sum28 = $array[26];\n$sum29 = $array[27];\n\
    $sum30 = $array[28];\n$sum31 = $array[29];\n$sum32 = $array[30];\n$sum33 = $array[31];\n\
    $sum34 = $array[32];\n$sum35 = $array[33];\n$sum36 = $array[34];\n$sum37 = $array[35];\n\
    $sum38 = $array[36];\n$sum39 = $array[37];\n$sum40 = $array[38];\n$sum41 = $array[39];\n\
    $sum42 = $array[40];\n$sum43 = $array[41];\n$sum44 = $array[42];\n$sum45 = $array[43];\n\
    $sum46 = $array[44];\n$sum47 = $array[45];\n$sum48 = $array[46];\n$sum49 = $array[47];\n\
    $sum50 = $array[48];\n$sum51 = $array[49];\n$sum52 = $array[50]", "    $sum =\
    \ 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if\
    \ ($sum % 2 === 0) {\n        sort($array);\n    } else {\n        array_reverse($array);\n\
    \    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ doesn't work if there are negative numbers in the array.\n<|/ c |>\n<| c |>\n\
    This doesn't work if there are negative numbers in the array.\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work if there are negative numbers in the array.\n<|/ c |>\n\
    <| c |>\nThis doesn't work if there are negative numbers in the array.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work if there are negative numbers in the array.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>", "    $sum = 0;\n    foreach ($array\
    \ as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n   \
    \     sort($array);\n    } else {\n        array_reverse($array);\n    }\n   \
    \ return $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2 === 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum = 0;\n$sum =\
    \ 0;\n$sum", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum +=\
    \ $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 == 1) {\n        array_reverse($array);\n    }\n    return\
    \ $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n\
    $array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\n$result = [];\nforeach($array\
    \ as $val){\n    $sum += $val;\n}\nif($sum % 2 == 0){\n    array_reverse($array);\n\
    }\nforeach($array as $val){\n    $result[] = $val;\n}\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\n$result = [];\nforeach($array as $val){\n    $sum += $val;\n}\nif($sum\
    \ % 2 == 0){\n    array_reverse($array);\n}\nforeach($array as $val){\n    $result[]\
    \ = $val;\n}\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\n$result\
    \ = [];\nforeach($array as $val){\n    $sum += $val;\n}\nif($sum % 2 == 0){\n\
    \    array_reverse($array);\n}\nforeach($array as $val){\n    $result[] = $val;\n\
    }\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$sum = 0;\n$result = [];\nforeach($array\
    \ as $val){\n    $sum += $val;\n}\nif($sum % 2 == 0){\n    array_reverse($array);\n\
    }\nforeach($array as $val){\n    $result[] = $val;\n}\nprint_r($result);\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\n$result = [];\nforeach($array as $val){\n    $sum += $val;\n}\nif($sum\
    \ % 2 == 0){\n    array_reverse($array);\n}\nforeach($array as $val){\n    $result[]\
    \ = $", "    $sum = array_sum($array);\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n\
    <code>", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 === 1) {\n        array_reverse($array);\n    }\n   \
    \ return $array;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n$arr1 = array_filter($arr);\n\
    $arr2 = array_filter($arr1);\n$arr3 = array_filter($arr2);\n$arr4 = array_filter($arr3);\n\
    $arr5 = array_filter($arr4);\n$arr6 = array_filter($arr5);\n$arr7 = array_filter($arr6);\n\
    $arr8 = array_filter($arr7);\n$arr9 = array_filter($arr8);\n$arr10 = array_filter($arr9);\n\
    $arr11 = array_filter($arr10);\n$arr12 = array_filter($arr11);\n$arr13 = array_filter($arr12);\n\
    $arr14 = array_filter($arr13);\n$arr15 = array_filter($arr14);\n$arr16 = array_filter($arr15);\n\
    $arr17 = array_filter($arr16);\n$arr18 = array_filter($arr17);\n$arr19 = array_filter($arr18);\n\
    $arr20 = array_filter($arr19);\n$arr21 = array_filter($arr20);\n$arr22 = array_filter($arr21);\n\
    $arr23 = array_filter($arr22);\n$arr24 = array_filter($arr23);\n$arr25 = array_filter($arr24);\n\
    $arr26 = array_filter($arr25);\n$arr27 = array_filter($arr26);\n$arr28 = array_filter($arr27);\n\
    $arr29 = array_filter($arr28);\n$arr30 = array_filter($arr29);\n$arr31 = array_filter($arr30);\n\
    $arr32 = array_filter($arr31);\n$arr33 = array_filter($arr32);\n$arr34 = array_filter($arr33);\n\
    $arr35 = array_filter($arr34);\n$arr36 = array_filter($arr35);\n$arr37 = array_filter($arr36);\n\
    $arr38 = array_filter($arr37);\n$arr39 = array_filter($arr38);\n$arr40 = array_filter($arr39);\n\
    $arr41 = array_filter($arr40);\n$arr42 = array_filter($arr41);\n$", "    $sum\
    \ = array_sum($array);\n    if ($sum % 2) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = array_sum($array);\n    if ($sum % 2 === 0) {\n        sort($array);\n\
    \    } else {\n        arsort($array);\n    }\n    return $array;\n}\n", "   \
    \ $sum = 0;\n    $cophp = array();\n    foreach ($array as $value) {\n       \
    \ $sum += $value;\n        $cophp[] = $value;\n    }\n    if ($sum % 2 === 0)\
    \ {\n        array_multisort($cophp, SORT_DESC, $array);\n    } else {\n     \
    \   array_multisort($cophp, SORT_ASC,$array);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    $sum = 0;\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 == 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$array = [\n    0 => 1,\n\
    \    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n\
    \    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12\
    \ => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 =>\
    \ 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n\
    \    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n \
    \   28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n  \
    \  33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n   \
    \ 38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43\
    \ => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 =>\
    \ 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n\
    \    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n \
    \   59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n  \
    \  64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n   \
    \ 69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    ", "    $sum = 0;\n\
    \    foreach ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n    } else {\n  \
    \      array_multisort($array, SORT_ASC);\n    }\n    return $array;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a |>\n<code>", "    $sum = 0;\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array\
    \ as $key => $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

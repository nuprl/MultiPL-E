language: php
name: HumanEval_57_monotonic
results:
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $n = array_shift($l);\n  foreach\
    \ ($l as $i => $v) {\n    if ($v < $n) {\n      return false;\n    }\n    if ($v\
    \ > $n) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7qygcaq.php:28\n\
    Stack trace:\n#0 /tmp/tmpg7qygcaq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg7qygcaq.php\
    \ on line 28\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $n = count($l);\n  for ($i = 0;\
    \ $i < $n; ++$i) {\n    if ($l[$i] < $l[$i - 1]) {\n      return true;\n    }\n\
    \  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchumggc8.php:27\n\
    Stack trace:\n#0 /tmp/tmpchumggc8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpchumggc8.php\
    \ on line 27\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? 1\
    \ : -1;\n    $l[1] = $l[1] > $l[2] ? 1 : -1;\n    $l[2] = $l[2] > $l[3] ? 1 :\
    \ -1;\n    $l[3] = $l[3] > $l[0] ? 1 : -1;\n    return $l[0] === $l[1] && $l[1]\
    \ === $l[2] && $l[2] === $l[3] && $l[3] === $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqguj36l9.php:23\n\
    Stack trace:\n#0 /tmp/tmpqguj36l9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqguj36l9.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l[0]);\n    for ($i = 0; $i < $n; ++$i) {\n        for ($j = 0; $j <\
    \ $m; ++$j) {\n            if ($l[$i][$j] !== $l[$i][$j + 1]) {\n            \
    \    return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp0juklsjl.php on line 12\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp0juklsjl.php\
    \ on line 12\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp0juklsjl.php on line 12\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp0juklsjl.php:30\nStack trace:\n#0 /tmp/tmp0juklsjl.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0juklsjl.php on line 30\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, count($l)\
    \ - 1);\n    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2h5ys3_j.php:23\n\
    Stack trace:\n#0 /tmp/tmp2h5ys3_j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2h5ys3_j.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznbdf5ho.php:21\n\
    Stack trace:\n#0 /tmp/tmpznbdf5ho.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpznbdf5ho.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 && count($l) === count(array_reverse($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgpajf1h.php:20\n\
    Stack trace:\n#0 /tmp/tmpvgpajf1h.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvgpajf1h.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    $l[1]\
    \ = -$l[1];\n    $l[2] = -$l[2];\n    $l[3] = -$l[3];\n    $l[4] = -$l[4];\n \
    \   $l[5] = -$l[5];\n    $l[6] = -$l[6];\n    $l[7] = -$l[7];\n    $l[8] = -$l[8];\n\
    \    $l[9] = -$l[9];\n    $l[10] = -$l[10];\n    $l[11] = -$l[11];\n    $l[12]\
    \ = -$l[12];\n    $l[13] = -$l[13];\n    $l[14] = -$l[14];\n    $l[15] = -$l[15];\n\
    \    $l[16] = -$l[16];\n    $l[17] = -$l[17];\n    $l[18] = -$l[18];\n    $l[19]\
    \ = -$l[19];\n    $l[20] = -$l[20];\n    $l[21] = -$l[21];\n    $l[22] = -$l[22];\n\
    \    $l[23] = -$l[23];\n    $l[24] = -$l[24];\n    $l[25] = -$l[25];\n    $l[26]\
    \ = -$l[26];\n    $l[27] = -$l[27];\n    $l[28] = -$l[28];\n    $l[29] = -$l[29];\n\
    \    $l[30] = -$l[30];\n    $l[31] = -$l[31];\n    $l[32] = -$l[32];\n    $l[33]\
    \ = -$l[33];\n    $l[34] = -$l[34];\n    $l[35] = -$l[35];\n    $l[36] = -$l[36];\n\
    \    $l[37] = -$l[37];\n    $l[38] = -$l[38];\n    $l[39] = -$l[39];\n    $l[40]\
    \ = -$l[40];\n    $l[41] = -$l[41];\n    $l[42] = -$l[42];\n    $l[43] = -$l[43];\n\
    \    $l[44] = -$l[44];\n    $l[45] = \nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk4utnv7f.php on line 57

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = reset($l);\n  $l[1] =\
    \ end($l);\n  return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdqlqxzt.php:23\n\
    Stack trace:\n#0 /tmp/tmpqdqlqxzt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqdqlqxzt.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeor3g44.php:23\n\
    Stack trace:\n#0 /tmp/tmpaeor3g44.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaeor3g44.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, count($l)\
    \ - 1);\n    $l = array_reverse($l);\n    return $l[0] > $l[count($l) - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1sfvgqv.php:21\n\
    Stack trace:\n#0 /tmp/tmpq1sfvgqv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq1sfvgqv.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32_291t8.php:20\n\
    Stack trace:\n#0 /tmp/tmp32_291t8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp32_291t8.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm42_rzw5.php:21\n\
    Stack trace:\n#0 /tmp/tmpm42_rzw5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpm42_rzw5.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyrl6zd8.php:22\n\
    Stack trace:\n#0 /tmp/tmphyrl6zd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphyrl6zd8.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 && count($l) === count($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ukrsu9j.php:20\n\
    Stack trace:\n#0 /tmp/tmp8ukrsu9j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8ukrsu9j.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeor3g44.php:23\n\
    Stack trace:\n#0 /tmp/tmpaeor3g44.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaeor3g44.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvk6m2xh.php:22\n\
    Stack trace:\n#0 /tmp/tmplvk6m2xh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplvk6m2xh.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, count($l)\
    \ - 1);\n    $l[] = $l[0];\n    return $l[0] > $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3fdv6jgz.php:21\n\
    Stack trace:\n#0 /tmp/tmp3fdv6jgz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3fdv6jgz.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    foreach ($l as $v) {\n        if ($v !== $i) {\n    \
    \        return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hh2d8m1.php:27\n\
    Stack trace:\n#0 /tmp/tmp7hh2d8m1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7hh2d8m1.php\
    \ on line 27\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0wja2nj.php:29\n\
    Stack trace:\n#0 /tmp/tmph0wja2nj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph0wja2nj.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeor3g44.php:23\n\
    Stack trace:\n#0 /tmp/tmpaeor3g44.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaeor3g44.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyrl6zd8.php:22\n\
    Stack trace:\n#0 /tmp/tmphyrl6zd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphyrl6zd8.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyrl6zd8.php:22\n\
    Stack trace:\n#0 /tmp/tmphyrl6zd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphyrl6zd8.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n\
    <code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpoqekkqkb.php on line 14

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    foreach ($l as $i => $v)\
    \ {\n        if ($v) $l[$i] = true;\n    }\n    return $l[0] || $l[1] || $l[2]\
    \ || $l[3];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpispsp6p0.php:26\n\
    Stack trace:\n#0 /tmp/tmpispsp6p0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpispsp6p0.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v != $s) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptoz0l1vl.php:25\n\
    Stack trace:\n#0 /tmp/tmptoz0l1vl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptoz0l1vl.php\
    \ on line 25\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_wyq3t5.php:22\n\
    Stack trace:\n#0 /tmp/tmpo_wyq3t5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo_wyq3t5.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 && count($l) === count(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptg3hhczp.php:20\n\
    Stack trace:\n#0 /tmp/tmptg3hhczp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptg3hhczp.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznbdf5ho.php:21\n\
    Stack trace:\n#0 /tmp/tmpznbdf5ho.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpznbdf5ho.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis doesn't work for me. `monotonic(array(1, 20, 4, 10))` returns `true`\
    \ but `monotonic(array(4, 1, 0, -10))` returns `false`\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.3.10 and it works fine. Are you sure you copied the code correctly?\n\
    <|/ c |>\n<| c |>\nYes, I copied it exactly. I'm running PHP 5.3.10\n<|/ c |>\n\
    <| c |>\nI tested it on PHP 5.3.10 and it works fine. Are you sure you copied\
    \ the code correctly?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10 and it works\
    \ fine. Are you sure you copied the code correctly?\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp287g9nmc.php on line 23

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_values($l);\n \
    \   $l = array_filter($l);\n    $l = array_map(function($x) {\n        return\
    \ $x < 0 ? -$x : $x;\n    }, $l);\n    return $l == array_reverse($l);\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5ybczkq.php:24\n\
    Stack trace:\n#0 /tmp/tmpd5ybczkq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpd5ybczkq.php\
    \ on line 24\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = reset($l);\n    return\
    \ $l[0] > $l[count($l) - 1];\n}\n</code>\n<|/ a |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/10305278)\n\
    <|/ c |>\n<| c |>\nI added a comment to the question asking for clarification.\n\
    <|/ c |>\n<| c |>\nI added a comment to the question asking for clarification.\n\
    <|/ c |>\n<| c |>\nI added a comment to the question asking for clarification.\n\
    <|/ c |>\n<| c |>\nI added a comment to the question asking for clarification.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 4, 20);\n$array\
    \ = array_reverse($array);\n$array[0] = reset($array);\n$array[1] > $array[0];\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/10305278)\n<|/ c |>\n<| c |>\n\
    I added a comment to the question asking for clarification.\n<|/ c |>\n<| c |>\n\
    I added a comment to the question asking for clarification.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpl0gopg8r.php on line 14

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj9gyh6c.php:29\n\
    Stack trace:\n#0 /tmp/tmpgj9gyh6c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgj9gyh6c.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo6jvcvpn.php:21\n\
    Stack trace:\n#0 /tmp/tmpo6jvcvpn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo6jvcvpn.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshiv7cmb.php:23\n\
    Stack trace:\n#0 /tmp/tmpshiv7cmb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshiv7cmb.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 || $l === -INF || $l === INF;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo7j1qtd.php:20\n\
    Stack trace:\n#0 /tmp/tmpbo7j1qtd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbo7j1qtd.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k16lmes.php:22\n\
    Stack trace:\n#0 /tmp/tmp2k16lmes.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2k16lmes.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, array(0));\n\
    \    $l = array_unique($l);\n    return count($l) > 1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvfgrtuu.php:23\n\
    Stack trace:\n#0 /tmp/tmpmvfgrtuu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmvfgrtuu.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshp2ojnu.php:22\n\
    Stack trace:\n#0 /tmp/tmpshp2ojnu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshp2ojnu.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l[0]);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            if ($l[$i][$j] > $l[$i][$j + 1]) {\n              \
    \  return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpu46nt44j.php on line 12\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpu46nt44j.php\
    \ on line 12\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpu46nt44j.php on line 12\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpu46nt44j.php:30\nStack trace:\n#0 /tmp/tmpu46nt44j.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpu46nt44j.php on line 30\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k16lmes.php:22\n\
    Stack trace:\n#0 /tmp/tmp2k16lmes.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2k16lmes.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v != $s) {\n            return false;\n\
    \        }\n        if ($i == 0) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzbo85ahi.php:28\n\
    Stack trace:\n#0 /tmp/tmpzbo85ahi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzbo85ahi.php\
    \ on line 28\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxpet5jc.php:28\n\
    Stack trace:\n#0 /tmp/tmpxxpet5jc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxxpet5jc.php\
    \ on line 28\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $i = null;\n    foreach ($l\
    \ as $k => $v) {\n        if ($i !== null) {\n            if ($v < $i) {\n   \
    \             return false;\n            }\n            if ($v > $i) {\n     \
    \           return true;\n            }\n        }\n        $i = $v;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4g1a8jw4.php:31\n\
    Stack trace:\n#0 /tmp/tmp4g1a8jw4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4g1a8jw4.php\
    \ on line 31\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k16lmes.php:22\n\
    Stack trace:\n#0 /tmp/tmp2k16lmes.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2k16lmes.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    foreach ($l as $n) {\n        if ($n < 0) {\n       \
    \     $n = $n * -1;\n            $l[$i] = -$n;\n            $i++;\n        }\n\
    \        if ($n > 0) {\n            $l[$i] = $n;\n            $i++;\n        }\n\
    \    }\n    return $l[0] > 0 && $l[0] === $l[$i];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09wnhzl9.php:32\n\
    Stack trace:\n#0 /tmp/tmp09wnhzl9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp09wnhzl9.php\
    \ on line 32\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    foreach ($l as $i => $v)\
    \ {\n        if ($v === false) {\n            $l[$i] = true;\n        } else {\n\
    \            if ($v > $l[$i]) {\n                $l[$i] = $v;\n            }\n\
    \        }\n    }\n    return $l[0] === false && $l[1] === false && $l[2] ===\
    \ false && $l[3] === false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdqyg2eyy.php:32\n\
    Stack trace:\n#0 /tmp/tmpdqyg2eyy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdqyg2eyy.php\
    \ on line 32\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshiv7cmb.php:23\n\
    Stack trace:\n#0 /tmp/tmpshiv7cmb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshiv7cmb.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 && count($l) === count($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ukrsu9j.php:20\n\
    Stack trace:\n#0 /tmp/tmp8ukrsu9j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8ukrsu9j.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshiv7cmb.php:23\n\
    Stack trace:\n#0 /tmp/tmpshiv7cmb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshiv7cmb.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    foreach ($l as $v) {\n        if ($v < $l[0]) {\n            $l[0]\
    \ = $v;\n        } elseif ($v > $l[3]) {\n            $l[3] = $v;\n        }\n\
    \    }\n    return $l[0] > $l[3];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8d2_fy3.php:27\n\
    Stack trace:\n#0 /tmp/tmpf8d2_fy3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf8d2_fy3.php\
    \ on line 27\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n\
    \    $l = array_unique($l);\n    $l = array_map('current', $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: current() expects parameter 1 to be array, int given in /tmp/tmpibl23ufi.php\
    \ on line 13\n\nWarning: current() expects parameter 1 to be array, int given\
    \ in /tmp/tmpibl23ufi.php on line 13\n\nWarning: current() expects parameter 1\
    \ to be array, int given in /tmp/tmpibl23ufi.php on line 13\n\nWarning: current()\
    \ expects parameter 1 to be array, int given in /tmp/tmpibl23ufi.php on line 13\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibl23ufi.php:22\nStack\
    \ trace:\n#0 /tmp/tmpibl23ufi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpibl23ufi.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    $l[4] = false;\n    $l[5]\
    \ = false;\n    $l[6] = false;\n    $l[7] = false;\n    $l[8] = false;\n    $l[9]\
    \ = false;\n    $l[10] = false;\n    $l[11] = false;\n    $l[12] = false;\n  \
    \  $l[13] = false;\n    $l[14] = false;\n    $l[15] = false;\n    $l[16] = false;\n\
    \    $l[17] = false;\n    $l[18] = false;\n    $l[19] = false;\n    $l[20] = false;\n\
    \    $l[21] = false;\n    $l[22] = false;\n    $l[23] = false;\n    $l[24] = false;\n\
    \    $l[25] = false;\n    $l[26] = false;\n    $l[27] = false;\n    $l[28] = false;\n\
    \    $l[29] = false;\n    $l[30] = false;\n    $l[31] = false;\n    $l[32] = false;\n\
    \    $l[33] = false;\n    $l[34] = false;\n    $l[35] = false;\n    $l[36] = false;\n\
    \    $l[37] = false;\n    $l[38] = false;\n    $l[39] = false;\n    $l[40] = false;\n\
    \    $l[41] = false;\n    $l[42] = false;\n    $l[43] = false;\n    $l[44] = false;\n\
    \    $l[45] = false;\n    $l[46] = false;\n    $l[47] = false;\n    $l[48] = false;\n\
    \    $l[49] = false;\n    $l[50] = false;\n    $l[51] = false;\n    $l[52] = false;\n\
    \    $l[53] = false;\n    $l[54] = false;\n    $l[55] = false;\n    $l[56] = false;\n\
    \    $l[57] = false;\n    $l[58] = false;\n    $l[59] = false;\n    $l[60] = false;\n\
    \    $l[61] = false;\n    $l[62] = false;\n    $l[63] = false;\n    $l[64] = false;\n\
    \    $l[65] = false;\n    $l[66] = false;\n    $l[67] = false;\n    $l[68] = false;\n\
    \    $l[69] = false;\n    $l[70] = false;\n    $l[71] = false;\n    $l[72] = false;\n\
    \    $l[73] = false;\n    $l[74] = false;\n    $l[75] = false;\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe1demv03.php on line 103

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $i = null;\n    foreach ($l\
    \ as $k => $v) {\n        if ($i !== null) {\n            if ($v < $i) {\n   \
    \             return false;\n            }\n            if ($v > $i) {\n     \
    \           return true;\n            }\n        }\n        $i = $v;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4g1a8jw4.php:31\n\
    Stack trace:\n#0 /tmp/tmp4g1a8jw4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4g1a8jw4.php\
    \ on line 31\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeor3g44.php:23\n\
    Stack trace:\n#0 /tmp/tmpaeor3g44.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaeor3g44.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    $l[4] = false;\n    $l[5]\
    \ = false;\n    $l[6] = false;\n    $l[7] = false;\n    $l[8] = false;\n    $l[9]\
    \ = false;\n    $l[10] = false;\n    $l[11] = false;\n    $l[12] = false;\n  \
    \  $l[13] = false;\n    $l[14] = false;\n    $l[15] = false;\n    $l[16] = false;\n\
    \    $l[17] = false;\n    $l[18] = false;\n    $l[19] = false;\n    $l[20] = false;\n\
    \    $l[21] = false;\n    $l[22] = false;\n    $l[23] = false;\n    $l[24] = false;\n\
    \    $l[25] = false;\n    $l[26] = false;\n    $l[27] = false;\n    $l[28] = false;\n\
    \    $l[29] = false;\n    $l[30] = false;\n    $l[31] = false;\n    $l[32] = false;\n\
    \    $l[33] = false;\n    $l[34] = false;\n    $l[35] = false;\n    $l[36] = false;\n\
    \    $l[37] = false;\n    $l[38] = false;\n    $l[39] = false;\n    $l[40] = false;\n\
    \    $l[41] = false;\n    $l[42] = false;\n    $l[43] = false;\n    $l[44] = false;\n\
    \    $l[45] = false;\n    $l[46] = false;\n    $l[47] = false;\n    $l[48] = false;\n\
    \    $l[49] = false;\n    $l[50] = false;\n    $l[51] = false;\n    $l[52] = false;\n\
    \    $l[53] = false;\n    $l[54] = false;\n    $l[55] = false;\n    $l[56] = false;\n\
    \    $l[57] = false;\n    $l[58] = false;\n    $l[59] = false;\n    $l[60] = false;\n\
    \    $l[61] = false;\n    $l[62] = false;\n    $l[63] = false;\n    $l[64] = false;\n\
    \    $l[65] = false;\n    $l[66] = false;\n    $l[67] = false;\n    $l[68] = false;\n\
    \    $l[69] = false;\n    $l[70] = false;\n    $l[71] = false;\n    $l[72] = false;\n\
    \    $l[73] = false;\n    $l[74] = false;\n    $l[75] = false;\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe1demv03.php on line 103

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = $l[0];\n    foreach ($l\
    \ as $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpya6cy9vn.php:29\n\
    Stack trace:\n#0 /tmp/tmpya6cy9vn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpya6cy9vn.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    foreach ($l as $v) {\n        if ($v < $l[0]) {\n            return\
    \ false;\n        } elseif ($v > $l[3]) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqt_t4ajf.php:27\n\
    Stack trace:\n#0 /tmp/tmpqt_t4ajf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqt_t4ajf.php\
    \ on line 27\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeor3g44.php:23\n\
    Stack trace:\n#0 /tmp/tmpaeor3g44.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaeor3g44.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = reset($l);\n    return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1o24nun.php:22\n\
    Stack trace:\n#0 /tmp/tmpk1o24nun.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk1o24nun.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshiv7cmb.php:23\n\
    Stack trace:\n#0 /tmp/tmpshiv7cmb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshiv7cmb.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0wja2nj.php:29\n\
    Stack trace:\n#0 /tmp/tmph0wja2nj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph0wja2nj.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $i = null;\n    foreach ($l\
    \ as $k => $v) {\n        if ($i === null) {\n            $i = $k;\n        }\
    \ elseif ($v < $l[$i]) {\n            $i = $k;\n        }\n    }\n    return $i\
    \ === null;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hmjrmnl.php:27\n\
    Stack trace:\n#0 /tmp/tmp1hmjrmnl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1hmjrmnl.php\
    \ on line 27\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $i = null;\n    foreach ($l\
    \ as $k => $v) {\n        if ($i === null) {\n            $i = $k;\n        }\n\
    \        if ($v != $l[$i]) {\n            return false;\n        }\n        $i++;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppd5j2ar2.php:31\n\
    Stack trace:\n#0 /tmp/tmppd5j2ar2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppd5j2ar2.php\
    \ on line 31\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l)-1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work for me. `monotonic(array(1, 2, 4, 20))` returns `true`\
    \ but `monotonic(array(1, 20, 4, 10))` returns `false`\n<|/ c |>\n<| c |>\n: It\
    \ works for me. `monotonic(array(1, 2, 4, 20))` returns `true` and `monotonic(array(1,\
    \ 20, 4, 10))` returns `false`\n<|/ c |>\n<| c |>\n: It works for me too. `monotonic(array(1,\
    \ 2, 4, 20))` returns `true` and `monotonic(array(1, 20, 4, 10))` returns `false`\n\
    <|/ c |>\n<| c |>\n: It works for me too. `monotonic(array(1, 2, 4, 20))` returns\
    \ `true` and `monotonic(array(1, 20, 4, 10))` returns `false`\n<|/ c |>\n<| c\
    \ |>\n: It works for me too. `monotonic(array(1, 2, 4, 20))` returns `true` and\
    \ `monotonic(array(1, 20, 4, 10))` returns `false`\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyf5oeobj.php on line 14

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n  $i = 1;\n  foreach ($l as $v) {\n    if ($v < $l[i - 1]) {\n      return\
    \ false;\n    }\n    if ($v > $l[i - 1]) {\n      return true;\n    }\n    if\
    \ ($v == $l[i - 1]) {\n      $i++;\n    }\n  }\n  return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpu0l65d5g.php on line 14


    Warning: A non-numeric value encountered in /tmp/tmpu0l65d5g.php on line 14


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpu0l65d5g.php on line 17


    Warning: A non-numeric value encountered in /tmp/tmpu0l65d5g.php on line 17


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpu0l65d5g.php on line 20


    Warning: A non-numeric value encountered in /tmp/tmpu0l65d5g.php on line 20


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpu0l65d5g.php on line 14


    Warning: A non-numeric value encountered in /tmp/tmpu0l65d5g.php on line 14


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpu0l65d5g.php on line 17


    Warning: A non-numeric value encountered in /tmp/tmpu0l65d5g.php on line 17


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpu0l65d5g.php on line 20


    Warning: A non-numeric value encountered in /tmp/tmpu0l65d5g.php on line 20


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpu0l65d5g.php on line 14


    Warning: A non-numeric value encountered in /tmp/tmpu0l65d5g.php on line 14


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpu0l65d5g.php on line 17


    Warning: A non-numeric value encountered in /tmp/tmpu0l65d5g.php on line 17


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpu0l65d5g.php on line 20


    Warning: A non-numeric value encountered in /tmp/tmpu0l65d5g.php on line 20


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a fut'
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeor3g44.php:23\n\
    Stack trace:\n#0 /tmp/tmpaeor3g44.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaeor3g44.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshiv7cmb.php:23\n\
    Stack trace:\n#0 /tmp/tmpshiv7cmb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshiv7cmb.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeor3g44.php:23\n\
    Stack trace:\n#0 /tmp/tmpaeor3g44.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaeor3g44.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === $l[0];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbccy414u.php:20\n\
    Stack trace:\n#0 /tmp/tmpbccy414u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbccy414u.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj9gyh6c.php:29\n\
    Stack trace:\n#0 /tmp/tmpgj9gyh6c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgj9gyh6c.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyrl6zd8.php:22\n\
    Stack trace:\n#0 /tmp/tmphyrl6zd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphyrl6zd8.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst_nljxv.php:26\n\
    Stack trace:\n#0 /tmp/tmpst_nljxv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpst_nljxv.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo6jvcvpn.php:21\n\
    Stack trace:\n#0 /tmp/tmpo6jvcvpn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo6jvcvpn.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    foreach ($l as $i => $v)\
    \ {\n        if ($v) $l[$i] = true;\n        else $l[$i] = false;\n    }\n   \
    \ return $l[0];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvw4ydbkd.php:27\n\
    Stack trace:\n#0 /tmp/tmpvw4ydbkd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvw4ydbkd.php\
    \ on line 27\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    $j = 0;\n    $k = 0;\n    while ($i < count($l)) {\n\
    \        if ($l[$i] < $l[$j]) {\n            $k = $i;\n        } else if ($l[$i]\
    \ > $l[$j]) {\n            $k = $j;\n        } else {\n            $k = $i;\n\
    \        }\n        $i = $j + 1;\n        $j = $k;\n    }\n    return $l[$i] ===\
    \ $l[$j];\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jgjn83d.php:33\n\
    Stack trace:\n#0 /tmp/tmp8jgjn83d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8jgjn83d.php\
    \ on line 33\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    foreach ($l as $n) {\n        if ($n < 0) {\n       \
    \     return false;\n        }\n        if ($n <= $i-1) {\n            return\
    \ true;\n        }\n        $i++;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1brr60vb.php:32\n\
    Stack trace:\n#0 /tmp/tmp1brr60vb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1brr60vb.php\
    \ on line 32\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0wja2nj.php:29\n\
    Stack trace:\n#0 /tmp/tmph0wja2nj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph0wja2nj.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    foreach ($l as $i => $v)\
    \ {\n        if ($v) $l[$i] = true;\n    }\n    return $l[0] || $l[1] || $l[2]\
    \ || $l[3];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpispsp6p0.php:26\n\
    Stack trace:\n#0 /tmp/tmpispsp6p0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpispsp6p0.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k16lmes.php:22\n\
    Stack trace:\n#0 /tmp/tmp2k16lmes.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2k16lmes.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyrl6zd8.php:22\n\
    Stack trace:\n#0 /tmp/tmphyrl6zd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphyrl6zd8.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k16lmes.php:22\n\
    Stack trace:\n#0 /tmp/tmp2k16lmes.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2k16lmes.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2l5d6edm.php:22\n\
    Stack trace:\n#0 /tmp/tmp2l5d6edm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2l5d6edm.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $i = null;\n    foreach ($l\
    \ as $k => $v) {\n        if ($v < $i) {\n            $i = $v;\n        }\n  \
    \  }\n    return $i === null;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv776g7no.php:27\n\
    Stack trace:\n#0 /tmp/tmpv776g7no.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv776g7no.php\
    \ on line 27\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nI like this solution, however it fails for arrays with more than\
    \ two elements. I modified it a little to make it work for arrays with more than\
    \ two elements. I added a third parameter to the function which determines the\
    \ number of elements in the array. Thanks for your help!\n<|/ c |>\n<| c |>\n\
    I added a version that works for arrays with more than two elements. Thanks for\
    \ your help!\n<|/ c |>\n<| a dscore=1 |>\nI modified the code from to work for\
    \ arrays with more than two elements. Thanks for your help!\n<code>\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpl944j19p.php on line 15

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    foreach ($l as $i => $v)\
    \ {\n        if ($v === false) {\n            $l[$i] = true;\n        } else {\n\
    \            if ($v < $l[$i - 1]) {\n                $l[$i] = true;\n        \
    \    }\n        }\n    }\n    return !$l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16aklf1a.php:32\n\
    Stack trace:\n#0 /tmp/tmp16aklf1a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp16aklf1a.php\
    \ on line 32\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm42_rzw5.php:21\n\
    Stack trace:\n#0 /tmp/tmpm42_rzw5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpm42_rzw5.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 && count($l) === count(array_reverse($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgpajf1h.php:20\n\
    Stack trace:\n#0 /tmp/tmpvgpajf1h.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvgpajf1h.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l) - 1;\n    if ($m == 0) return true;\n    if ($l[$m] == $l[$n]) {\n\
    \        for ($i = $m; $i >= 0; --$i) {\n            if ($l[$i] > $l[$m]) {\n\
    \                $l[$i] = $l[$m];\n            }\n        }\n    } else {\n  \
    \      for ($i = $m; $i >= 0; --$i) {\n            if ($l[$i] < $l[$m]) {\n  \
    \              $l[$i] = $l[$m];\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ecuuouv.php:35\n\
    Stack trace:\n#0 /tmp/tmp1ecuuouv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1ecuuouv.php\
    \ on line 35\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92lgf_rb.php:22\n\
    Stack trace:\n#0 /tmp/tmp92lgf_rb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp92lgf_rb.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 && count($l) === count($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ukrsu9j.php:20\n\
    Stack trace:\n#0 /tmp/tmp8ukrsu9j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8ukrsu9j.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshiv7cmb.php:23\n\
    Stack trace:\n#0 /tmp/tmpshiv7cmb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshiv7cmb.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznbdf5ho.php:21\n\
    Stack trace:\n#0 /tmp/tmpznbdf5ho.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpznbdf5ho.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k16lmes.php:22\n\
    Stack trace:\n#0 /tmp/tmp2k16lmes.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2k16lmes.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    foreach ($l as $i => $v) {\n        if ($v === false) {\n    \
    \        $l[$i] = $v;\n        }\n    }\n    return $l[0] === false && $l[1] ===\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mjw_sel.php:28\n\
    Stack trace:\n#0 /tmp/tmp8mjw_sel.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8mjw_sel.php\
    \ on line 28\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_wyq3t5.php:22\n\
    Stack trace:\n#0 /tmp/tmpo_wyq3t5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo_wyq3t5.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, count($l)\
    \ - 1);\n    $l[] = $l[count($l) - 1];\n    return $l[0] > $l[count($l) - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0krym9t6.php:24\n\
    Stack trace:\n#0 /tmp/tmp0krym9t6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0krym9t6.php\
    \ on line 24\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n\
    \ <= 1) {\n        return true;\n    }\n    $m = $l[0];\n    for ($i = 1; $i <\
    \ $n; ++$i) {\n        if ($l[$i] < $m) {\n            $m = $l[$i];\n        }\n\
    \    }\n    return $m >= $l[$n - 1];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk70xnn7n.php:31\n\
    Stack trace:\n#0 /tmp/tmpk70xnn7n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk70xnn7n.php\
    \ on line 31\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; ++$i) {\n        if ($l[$i]\
    \ <= $l[$i + 1]) {\n            $l[$i + 1] = $l[$i];\n        }\n    }\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3faua34y.php:26\n\
    Stack trace:\n#0 /tmp/tmp3faua34y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3faua34y.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshiv7cmb.php:23\n\
    Stack trace:\n#0 /tmp/tmpshiv7cmb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshiv7cmb.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; ++$i) {\n        if ($l[$i]\
    \ <= $l[$i + 1]) {\n            $l[$i + 1] = $l[$i];\n        }\n    }\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3faua34y.php:26\n\
    Stack trace:\n#0 /tmp/tmp3faua34y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3faua34y.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_values($l);\n \
    \   $l = array_filter($l);\n    return $l !== array_reverse($l);\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfp300pp0.php:23\n\
    Stack trace:\n#0 /tmp/tmpfp300pp0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfp300pp0.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst_nljxv.php:26\n\
    Stack trace:\n#0 /tmp/tmpst_nljxv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpst_nljxv.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph1wig96v.php on line 84

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $v) {\n        if ($v < $s) {\n            return false;\n \
    \       }\n        $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqcion664.php:26\n\
    Stack trace:\n#0 /tmp/tmpqcion664.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqcion664.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshiv7cmb.php:23\n\
    Stack trace:\n#0 /tmp/tmpshiv7cmb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshiv7cmb.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = reset($l);\n    return\
    \ $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphy5xmmr9.php:22\n\
    Stack trace:\n#0 /tmp/tmphy5xmmr9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphy5xmmr9.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    foreach ($l as $v) {\n        if ($v < $l[i - 1]) {\n\
    \            return false;\n        }\n        if ($v > $l[i - 1]) {\n       \
    \     return true;\n        }\n        $i++;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpw2jzofq_.php on line 14


    Warning: A non-numeric value encountered in /tmp/tmpw2jzofq_.php on line 14


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpw2jzofq_.php on line 17


    Warning: A non-numeric value encountered in /tmp/tmpw2jzofq_.php on line 17


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpw2jzofq_.php on line 14


    Warning: A non-numeric value encountered in /tmp/tmpw2jzofq_.php on line 14


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpw2jzofq_.php on line 17


    Warning: A non-numeric value encountered in /tmp/tmpw2jzofq_.php on line 17


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpw2jzofq_.php on line 14


    Warning: A non-numeric value encountered in /tmp/tmpw2jzofq_.php on line 14


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpw2jzofq_.php on line 17


    Warning: A non-numeric value encountered in /tmp/tmpw2jzofq_.php on line 17


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpw2jzofq_.php on line 14


    Warning: A non-numeric value encountered in /tmp/tmpw2jzofq_.php on line 14


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpw2jzofq_.php on line 17


    Warning: A non-numeric value encountered in /tmp/tmpw2jzofq_.php on line 17


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a future version of PHP) in /tmp/tmpw2jzofq_.php on line 14


    Warning: A non-numeric value encountered in /tmp/tmpw2jzofq_.php on line 14


    Warning: Use of undefined constant i - assumed ''i'' (this will throw an Error
    in a fut'
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n\
    \    $l = array_unique($l);\n    $l = array_map('current', $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: current() expects parameter 1 to be array, int given in /tmp/tmpibl23ufi.php\
    \ on line 13\n\nWarning: current() expects parameter 1 to be array, int given\
    \ in /tmp/tmpibl23ufi.php on line 13\n\nWarning: current() expects parameter 1\
    \ to be array, int given in /tmp/tmpibl23ufi.php on line 13\n\nWarning: current()\
    \ expects parameter 1 to be array, int given in /tmp/tmpibl23ufi.php on line 13\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibl23ufi.php:22\nStack\
    \ trace:\n#0 /tmp/tmpibl23ufi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpibl23ufi.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyrl6zd8.php:22\n\
    Stack trace:\n#0 /tmp/tmphyrl6zd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphyrl6zd8.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $v) {\n        if ($v < $s) {\n            return false;\n \
    \       }\n        if ($v > $s) {\n            return true;\n        }\n     \
    \   $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpracs02i9.php:29\n\
    Stack trace:\n#0 /tmp/tmpracs02i9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpracs02i9.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyrl6zd8.php:22\n\
    Stack trace:\n#0 /tmp/tmphyrl6zd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphyrl6zd8.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvk6m2xh.php:22\n\
    Stack trace:\n#0 /tmp/tmplvk6m2xh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplvk6m2xh.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst_nljxv.php:26\n\
    Stack trace:\n#0 /tmp/tmpst_nljxv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpst_nljxv.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    $l[4] = false;\n    $l[5]\
    \ = false;\n    $l[6] = false;\n    $l[7] = false;\n    $l[8] = false;\n    $l[9]\
    \ = false;\n    $l[10] = false;\n    $l[11] = false;\n    $l[12] = false;\n  \
    \  $l[13] = false;\n    $l[14] = false;\n    $l[15] = false;\n    $l[16] = false;\n\
    \    $l[17] = false;\n    $l[18] = false;\n    $l[19] = false;\n    $l[20] = false;\n\
    \    $l[21] = false;\n    $l[22] = false;\n    $l[23] = false;\n    $l[24] = false;\n\
    \    $l[25] = false;\n    $l[26] = false;\n    $l[27] = false;\n    $l[28] = false;\n\
    \    $l[29] = false;\n    $l[30] = false;\n    $l[31] = false;\n    $l[32] = false;\n\
    \    $l[33] = false;\n    $l[34] = false;\n    $l[35] = false;\n    $l[36] = false;\n\
    \    $l[37] = false;\n    $l[38] = false;\n    $l[39] = false;\n    $l[40] = false;\n\
    \    $l[41] = false;\n    $l[42] = false;\n    $l[43] = false;\n    $l[44] = false;\n\
    \    $l[45] = false;\n    $l[46] = false;\n    $l[47] = false;\n    $l[48] = false;\n\
    \    $l[49] = false;\n    $l[50] = false;\n    $l[51] = false;\n    $l[52] = false;\n\
    \    $l[53] = false;\n    $l[54] = false;\n    $l[55] = false;\n    $l[56] = false;\n\
    \    $l[57] = false;\n    $l[58] = false;\n    $l[59] = false;\n    $l[60] = false;\n\
    \    $l[61] = false;\n    $l[62] = false;\n    $l[63] = false;\n    $l[64] = false;\n\
    \    $l[65] = false;\n    $l[66] = false;\n    $l[67] = false;\n    $l[68] = false;\n\
    \    $l[69] = false;\n    $l[70] = false;\n    $l[71] = false;\n    $l[72] = false;\n\
    \    $l[73] = false;\n    $l[74] = false;\n    $l[75] = false;\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe1demv03.php on line 103

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0wja2nj.php:29\n\
    Stack trace:\n#0 /tmp/tmph0wja2nj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph0wja2nj.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $i = null;\n    foreach ($l\
    \ as $k => $v) {\n        if ($i === null) {\n            $i = $k;\n        }\
    \ elseif ($v < $l[$i]) {\n            $i = $k;\n        }\n    }\n    return $i\
    \ === null;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hmjrmnl.php:27\n\
    Stack trace:\n#0 /tmp/tmp1hmjrmnl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1hmjrmnl.php\
    \ on line 27\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = reset($l);\n    return\
    \ $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphy5xmmr9.php:22\n\
    Stack trace:\n#0 /tmp/tmphy5xmmr9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphy5xmmr9.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? 1\
    \ : -1;\n    $l[1] = $l[1] > $l[2] ? 1 : -1;\n    $l[2] = $l[2] > $l[3] ? 1 :\
    \ -1;\n    $l[3] = $l[3] > $l[0] ? 1 : -1;\n    return $l[0] === 1 && $l[1] ===\
    \ 1 && $l[2] === 1 && $l[3] === 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg8vk9o0s.php:23\n\
    Stack trace:\n#0 /tmp/tmpg8vk9o0s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg8vk9o0s.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = $l[0];\n    $e = $l[count($l)-1];\n\
    \    return ($e < $s) || ($s == $e && $l[0] > $l[count($l)-1]);\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ao3bai5.php:23\n\
    Stack trace:\n#0 /tmp/tmp4ao3bai5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4ao3bai5.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst_nljxv.php:26\n\
    Stack trace:\n#0 /tmp/tmpst_nljxv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpst_nljxv.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyrl6zd8.php:22\n\
    Stack trace:\n#0 /tmp/tmphyrl6zd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphyrl6zd8.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l[0] = $l[0] - 1;\n    return $l[0] > 0 && $l[0] < count($l) - 1;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwo3x2ggi.php:21\n\
    Stack trace:\n#0 /tmp/tmpwo3x2ggi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwo3x2ggi.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshp2ojnu.php:22\n\
    Stack trace:\n#0 /tmp/tmpshp2ojnu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshp2ojnu.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k16lmes.php:22\n\
    Stack trace:\n#0 /tmp/tmp2k16lmes.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2k16lmes.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $i = null;\n    foreach ($l\
    \ as $v) {\n        if ($i === null) {\n            $i = $v;\n        } elseif\
    \ ($v < $i) {\n            return false;\n        } elseif ($v > $i) {\n     \
    \       return true;\n        }\n    }\n    return $i === null;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpti8uvtof.php:29\n\
    Stack trace:\n#0 /tmp/tmpti8uvtof.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpti8uvtof.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_filter($l);\n \
    \   return $l !== $l;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hqnlsox.php:20\n\
    Stack trace:\n#0 /tmp/tmp7hqnlsox.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7hqnlsox.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $e) {\n        if ($e < $s) {\n            return false;\n\
    \        }\n        if ($e > $s) {\n            return true;\n        }\n    \
    \    $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1upg1jic.php:29\n\
    Stack trace:\n#0 /tmp/tmp1upg1jic.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1upg1jic.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($l[$i] - $l[$i - 1] < 1) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18avdsz8.php:25\n\
    Stack trace:\n#0 /tmp/tmp18avdsz8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp18avdsz8.php\
    \ on line 25\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k16lmes.php:22\n\
    Stack trace:\n#0 /tmp/tmp2k16lmes.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2k16lmes.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyrl6zd8.php:22\n\
    Stack trace:\n#0 /tmp/tmphyrl6zd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphyrl6zd8.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst_nljxv.php:26\n\
    Stack trace:\n#0 /tmp/tmpst_nljxv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpst_nljxv.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = false;\n  $l[1] = false;\n\
    \  foreach ($l as $i => $v) {\n    if ($v) break;\n  }\n  return $i === 0;\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7ez8nhl.php:24\n\
    Stack trace:\n#0 /tmp/tmpe7ez8nhl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe7ez8nhl.php\
    \ on line 24\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = false;\n  $l[1] = false;\n\
    \  $l[2] = false;\n  $l[3] = false;\n  $l[4] = false;\n  $l[5] = false;\n  $l[6]\
    \ = false;\n  $l[7] = false;\n  $l[8] = false;\n  $l[9] = false;\n  $l[10] = false;\n\
    \  $l[11] = false;\n  $l[12] = false;\n  $l[13] = false;\n  $l[14] = false;\n\
    \  $l[15] = false;\n  $l[16] = false;\n  $l[17] = false;\n  $l[18] = false;\n\
    \  $l[19] = false;\n  $l[20] = false;\n  $l[21] = false;\n  $l[22] = false;\n\
    \  $l[23] = false;\n  $l[24] = false;\n  $l[25] = false;\n  $l[26] = false;\n\
    \  $l[27] = false;\n  $l[28] = false;\n  $l[29] = false;\n  $l[30] = false;\n\
    \  $l[31] = false;\n  $l[32] = false;\n  $l[33] = false;\n  $l[34] = false;\n\
    \  $l[35] = false;\n  $l[36] = false;\n  $l[37] = false;\n  $l[38] = false;\n\
    \  $l[39] = false;\n  $l[40] = false;\n  $l[41] = false;\n  $l[42] = false;\n\
    \  $l[43] = false;\n  $l[44] = false;\n  $l[45] = false;\n  $l[46] = false;\n\
    \  $l[47] = false;\n  $l[48] = false;\n  $l[49] = false;\n  $l[50] = false;\n\
    \  $l[51] = false;\n  $l[52] = false;\n  $l[53] = false;\n  $l[54] = false;\n\
    \  $l[55] = false;\n  $l[56] = false;\n  $l[57] = false;\n  $l[58] = false;\n\
    \  $l[59] = false;\n  $l[60] = false;\n  $l[61] = false;\n  $l[62] = false;\n\
    \  $l[63] = false;\n  $l[64] = false;\n  $l[65] = false;\n  $l[66] = false;\n\
    \  $l[67] = false;\n  $l[68] = false;\n  $l[69] = false;\n  $l[70] = false;\n\
    \  $l[71] = false;\n  $l[72] = false;\n  $l[73] = false;\n  $l[74] = false;\n\
    \  $l[75] = false;\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp952nn36z.php on line 103

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_values($l);\n \
    \   $l = array_filter($l);\n    return $l !== $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_evpbld.php:21\n\
    Stack trace:\n#0 /tmp/tmpp_evpbld.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp_evpbld.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbvpeg4xe.php on line 14

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    $l[4] = false;\n    $l[5]\
    \ = false;\n    $l[6] = false;\n    $l[7] = false;\n    $l[8] = false;\n    $l[9]\
    \ = false;\n    $l[10] = false;\n    $l[11] = false;\n    $l[12] = false;\n  \
    \  $l[13] = false;\n    $l[14] = false;\n    $l[15] = false;\n    $l[16] = false;\n\
    \    $l[17] = false;\n    $l[18] = false;\n    $l[19] = false;\n    $l[20] = false;\n\
    \    $l[21] = false;\n    $l[22] = false;\n    $l[23] = false;\n    $l[24] = false;\n\
    \    $l[25] = false;\n    $l[26] = false;\n    $l[27] = false;\n    $l[28] = false;\n\
    \    $l[29] = false;\n    $l[30] = false;\n    $l[31] = false;\n    $l[32] = false;\n\
    \    $l[33] = false;\n    $l[34] = false;\n    $l[35] = false;\n    $l[36] = false;\n\
    \    $l[37] = false;\n    $l[38] = false;\n    $l[39] = false;\n    $l[40] = false;\n\
    \    $l[41] = false;\n    $l[42] = false;\n    $l[43] = false;\n    $l[44] = false;\n\
    \    $l[45] = false;\n    $l[46] = false;\n    $l[47] = false;\n    $l[48] = false;\n\
    \    $l[49] = false;\n    $l[50] = false;\n    $l[51] = false;\n    $l[52] = false;\n\
    \    $l[53] = false;\n    $l[54] = false;\n    $l[55] = false;\n    $l[56] = false;\n\
    \    $l[57] = false;\n    $l[58] = false;\n    $l[59] = false;\n    $l[60] = false;\n\
    \    $l[61] = false;\n    $l[62] = false;\n    $l[63] = false;\n    $l[64] = false;\n\
    \    $l[65] = false;\n    $l[66] = false;\n    $l[67] = false;\n    $l[68] = false;\n\
    \    $l[69] = false;\n    $l[70] = false;\n    $l[71] = false;\n    $l[72] = false;\n\
    \    $l[73] = false;\n    $l[74] = false;\n    $l[75] = false;\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe1demv03.php on line 103

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = reset($l);\n    return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1o24nun.php:22\n\
    Stack trace:\n#0 /tmp/tmpk1o24nun.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk1o24nun.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    $l[4] = false;\n    $l[5]\
    \ = false;\n    $l[6] = false;\n    $l[7] = false;\n    $l[8] = false;\n    $l[9]\
    \ = false;\n    $l[10] = false;\n    $l[11] = false;\n    $l[12] = false;\n  \
    \  $l[13] = false;\n    $l[14] = false;\n    $l[15] = false;\n    $l[16] = false;\n\
    \    $l[17] = false;\n    $l[18] = false;\n    $l[19] = false;\n    $l[20] = false;\n\
    \    $l[21] = false;\n    $l[22] = false;\n    $l[23] = false;\n    $l[24] = false;\n\
    \    $l[25] = false;\n    $l[26] = false;\n    $l[27] = false;\n    $l[28] = false;\n\
    \    $l[29] = false;\n    $l[30] = false;\n    $l[31] = false;\n    $l[32] = false;\n\
    \    $l[33] = false;\n    $l[34] = false;\n    $l[35] = false;\n    $l[36] = false;\n\
    \    $l[37] = false;\n    $l[38] = false;\n    $l[39] = false;\n    $l[40] = false;\n\
    \    $l[41] = false;\n    $l[42] = false;\n    $l[43] = false;\n    $l[44] = false;\n\
    \    $l[45] = false;\n    $l[46] = false;\n    $l[47] = false;\n    $l[48] = false;\n\
    \    $l[49] = false;\n    $l[50] = false;\n    $l[51] = false;\n    $l[52] = false;\n\
    \    $l[53] = false;\n    $l[54] = false;\n    $l[55] = false;\n    $l[56] = false;\n\
    \    $l[57] = false;\n    $l[58] = false;\n    $l[59] = false;\n    $l[60] = false;\n\
    \    $l[61] = false;\n    $l[62] = false;\n    $l[63] = false;\n    $l[64] = false;\n\
    \    $l[65] = false;\n    $l[66] = false;\n    $l[67] = false;\n    $l[68] = false;\n\
    \    $l[69] = false;\n    $l[70] = false;\n    $l[71] = false;\n    $l[72] = false;\n\
    \    $l[73] = false;\n    $l[74] = false;\n    $l[75] = false;\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe1demv03.php on line 103

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v != $s) {\n            return false;\n\
    \        }\n        $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_apnuksj.php:26\n\
    Stack trace:\n#0 /tmp/tmp_apnuksj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_apnuksj.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj9gyh6c.php:29\n\
    Stack trace:\n#0 /tmp/tmpgj9gyh6c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgj9gyh6c.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; ++$i) {\n        if ($l[$i]\
    \ <= $l[$i + 1]) {\n            $l[$i + 1] = $l[$i];\n        }\n    }\n    return\
    \ $l[0] <= $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8p63_6z.php:28\n\
    Stack trace:\n#0 /tmp/tmpq8p63_6z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq8p63_6z.php\
    \ on line 28\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznbdf5ho.php:21\n\
    Stack trace:\n#0 /tmp/tmpznbdf5ho.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpznbdf5ho.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $v) {\n        if ($v < $s) {\n            return false;\n \
    \       }\n        if ($v > $s) {\n            return true;\n        }\n     \
    \   $s = $v;\n    }\n    return true;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    I like this solution, but I wonder if there is a way to make it work for multidimensional\
    \ arrays?\n<|/ c |>\n<| c |>\n: Sure, just add another loop. `foreach($l as $key\
    \ => $value) { foreach($value as $subkey => $subvalue) { /* ... */ } }`\n<|/ c\
    \ |>\n<| c |>\n: I added a version that works for multidimensional arrays.\n<|/\
    \ c |>\n<| c |>\n: I added a version that works for multidimensional arrays.\n\
    <|/ c |>\n<| c |>\n: I added a version that works for multidimensional arrays.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9uemimfl.php on line 23

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    $l[4] = false;\n    $l[5]\
    \ = false;\n    $l[6] = false;\n    $l[7] = false;\n    $l[8] = false;\n    $l[9]\
    \ = false;\n    $l[10] = false;\n    $l[11] = false;\n    $l[12] = false;\n  \
    \  $l[13] = false;\n    $l[14] = false;\n    $l[15] = false;\n    $l[16] = false;\n\
    \    $l[17] = false;\n    $l[18] = false;\n    $l[19] = false;\n    $l[20] = false;\n\
    \    $l[21] = false;\n    $l[22] = false;\n    $l[23] = false;\n    $l[24] = false;\n\
    \    $l[25] = false;\n    $l[26] = false;\n    $l[27] = false;\n    $l[28] = false;\n\
    \    $l[29] = false;\n    $l[30] = false;\n    $l[31] = false;\n    $l[32] = false;\n\
    \    $l[33] = false;\n    $l[34] = false;\n    $l[35] = false;\n    $l[36] = false;\n\
    \    $l[37] = false;\n    $l[38] = false;\n    $l[39] = false;\n    $l[40] = false;\n\
    \    $l[41] = false;\n    $l[42] = false;\n    $l[43] = false;\n    $l[44] = false;\n\
    \    $l[45] = false;\n    $l[46] = false;\n    $l[47] = false;\n    $l[48] = false;\n\
    \    $l[49] = false;\n    $l[50] = false;\n    $l[51] = false;\n    $l[52] = false;\n\
    \    $l[53] = false;\n    $l[54] = false;\n    $l[55] = false;\n    $l[56] = false;\n\
    \    $l[57] = false;\n    $l[58] = false;\n    $l[59] = false;\n    $l[60] = false;\n\
    \    $l[61] = false;\n    $l[62] = false;\n    $l[63] = false;\n    $l[64] = false;\n\
    \    $l[65] = false;\n    $l[66] = false;\n    $l[67] = false;\n    $l[68] = false;\n\
    \    $l[69] = false;\n    $l[70] = false;\n    $l[71] = false;\n    $l[72] = false;\n\
    \    $l[73] = false;\n    $l[74] = false;\n    $l[75] = false;\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe1demv03.php on line 103

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj9gyh6c.php:29\n\
    Stack trace:\n#0 /tmp/tmpgj9gyh6c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgj9gyh6c.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshp2ojnu.php:22\n\
    Stack trace:\n#0 /tmp/tmpshp2ojnu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpshp2ojnu.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32_291t8.php:20\n\
    Stack trace:\n#0 /tmp/tmp32_291t8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp32_291t8.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxpet5jc.php:28\n\
    Stack trace:\n#0 /tmp/tmpxxpet5jc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxxpet5jc.php\
    \ on line 28\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $v) {\n        if ($v < $s) {\n            return false;\n \
    \       }\n        $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqcion664.php:26\n\
    Stack trace:\n#0 /tmp/tmpqcion664.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqcion664.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeor3g44.php:23\n\
    Stack trace:\n#0 /tmp/tmpaeor3g44.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaeor3g44.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $v) {\n        if ($v < $s) {\n            return false;\n \
    \       }\n        $s = max($s, $v);\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6xfir95.php:26\n\
    Stack trace:\n#0 /tmp/tmpb6xfir95.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb6xfir95.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0wja2nj.php:29\n\
    Stack trace:\n#0 /tmp/tmph0wja2nj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph0wja2nj.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l[0]);\n    if ($m === 0) {\n        return true;\n    }\n    if ($n\
    \ === 0) {\n        return false;\n    }\n    for ($i = 0; $i < $m; $i++) {\n\
    \        for ($j = 0; $j < $n; $j++) {\n            if ($l[$i][$j] > $l[$i][$j\
    \ + 1]) {\n                return false;\n            }\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpdraa5vt0.php on line 12\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpdraa5vt0.php\
    \ on line 12\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpdraa5vt0.php on line 12\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpdraa5vt0.php:36\nStack trace:\n#0 /tmp/tmpdraa5vt0.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdraa5vt0.php on line 36\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = reset($l);\n    return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1o24nun.php:22\n\
    Stack trace:\n#0 /tmp/tmpk1o24nun.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk1o24nun.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[1] > $l[2] ? $l[2] : $l[1];\n    $l[2] = $l[2] > $l[3]\
    \ ? $l[3] : $l[2];\n    $l[3] = $l[3] > $l[0] ? $l[0] : $l[3];\n    return $l[0]\
    \ > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpthjhb2g5.php:23\n\
    Stack trace:\n#0 /tmp/tmpthjhb2g5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpthjhb2g5.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    $l[4] = false;\n    $l[5]\
    \ = false;\n    $l[6] = false;\n    $l[7] = false;\n    $l[8] = false;\n    $l[9]\
    \ = false;\n    $l[10] = false;\n    $l[11] = false;\n    $l[12] = false;\n  \
    \  $l[13] = false;\n    $l[14] = false;\n    $l[15] = false;\n    $l[16] = false;\n\
    \    $l[17] = false;\n    $l[18] = false;\n    $l[19] = false;\n    $l[20] = false;\n\
    \    $l[21] = false;\n    $l[22] = false;\n    $l[23] = false;\n    $l[24] = false;\n\
    \    $l[25] = false;\n    $l[26] = false;\n    $l[27] = false;\n    $l[28] = false;\n\
    \    $l[29] = false;\n    $l[30] = false;\n    $l[31] = false;\n    $l[32] = false;\n\
    \    $l[33] = false;\n    $l[34] = false;\n    $l[35] = false;\n    $l[36] = false;\n\
    \    $l[37] = false;\n    $l[38] = false;\n    $l[39] = false;\n    $l[40] = false;\n\
    \    $l[41] = false;\n    $l[42] = false;\n    $l[43] = false;\n    $l[44] = false;\n\
    \    $l[45] = false;\n    $l[46] = false;\n    $l[47] = false;\n    $l[48] = false;\n\
    \    $l[49] = false;\n    $l[50] = false;\n    $l[51] = false;\n    $l[52] = false;\n\
    \    $l[53] = false;\n    $l[54] = false;\n    $l[55] = false;\n    $l[56] = false;\n\
    \    $l[57] = false;\n    $l[58] = false;\n    $l[59] = false;\n    $l[60] = false;\n\
    \    $l[61] = false;\n    $l[62] = false;\n    $l[63] = false;\n    $l[64] = false;\n\
    \    $l[65] = false;\n    $l[66] = false;\n    $l[67] = false;\n    $l[68] = false;\n\
    \    $l[69] = false;\n    $l[70] = false;\n    $l[71] = false;\n    $l[72] = false;\n\
    \    $l[73] = false;\n    $l[74] = false;\n    $l[75] = false;\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe1demv03.php on line 103

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k16lmes.php:22\n\
    Stack trace:\n#0 /tmp/tmp2k16lmes.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2k16lmes.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps2aubrzc.php:23\n\
    Stack trace:\n#0 /tmp/tmps2aubrzc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmps2aubrzc.php\
    \ on line 23\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph1wig96v.php on line 84

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph1wig96v.php on line 84

    '
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $v) {\n        if ($s < $v) {\n            $s = $v;\n      \
    \  }\n    }\n    return $s < 0;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbrc5g8n.php:25\n\
    Stack trace:\n#0 /tmp/tmppbrc5g8n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppbrc5g8n.php\
    \ on line 25\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 || $l === -INF || $l === INF;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo7j1qtd.php:20\n\
    Stack trace:\n#0 /tmp/tmpbo7j1qtd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbo7j1qtd.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = reset($l);\n  return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1klybhy.php:22\n\
    Stack trace:\n#0 /tmp/tmp_1klybhy.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_1klybhy.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_values($l);\n \
    \   $l = array_filter($l);\n    return $l !== $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_evpbld.php:21\n\
    Stack trace:\n#0 /tmp/tmpp_evpbld.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp_evpbld.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    foreach ($l as $i => $v) {\n        if ($v) $l[$i] = $v > $l[$i];\n\
    \    }\n    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgtppl6r.php:24\n\
    Stack trace:\n#0 /tmp/tmpsgtppl6r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsgtppl6r.php\
    \ on line 24\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hf7omxz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8hf7omxz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8hf7omxz.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznbdf5ho.php:21\n\
    Stack trace:\n#0 /tmp/tmpznbdf5ho.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpznbdf5ho.php\
    \ on line 21\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ll6xtc.php:29\n\
    Stack trace:\n#0 /tmp/tmp30ll6xtc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30ll6xtc.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_wyq3t5.php:22\n\
    Stack trace:\n#0 /tmp/tmpo_wyq3t5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo_wyq3t5.php\
    \ on line 22\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $n = count($l);\n  for ($i = 0;\
    \ $i < $n; ++$i) {\n    if ($l[$i] < $l[$i - 1]) {\n      return true;\n    }\n\
    \  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchumggc8.php:27\n\
    Stack trace:\n#0 /tmp/tmpchumggc8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpchumggc8.php\
    \ on line 27\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = false;\n    $l[1]\
    \ = false;\n    $l[2] = false;\n    $l[3] = false;\n    foreach ($l as $i => $v)\
    \ {\n        if ($v) $l[$i] = true;\n    }\n    return $l[0] || $l[1] || $l[2]\
    \ || $l[3];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpispsp6p0.php:26\n\
    Stack trace:\n#0 /tmp/tmpispsp6p0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpispsp6p0.php\
    \ on line 26\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $i = null;\n    foreach ($l\
    \ as $k => $v) {\n        if ($v === $i) {\n            $l[$k] = $k;\n       \
    \ }\n        $i = $v;\n    }\n    return $l === $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpef1z1xtr.php:28\n\
    Stack trace:\n#0 /tmp/tmpef1z1xtr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpef1z1xtr.php\
    \ on line 28\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 || $l === -INF || $l === INF;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo7j1qtd.php:20\n\
    Stack trace:\n#0 /tmp/tmpbo7j1qtd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbo7j1qtd.php\
    \ on line 20\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj9gyh6c.php:29\n\
    Stack trace:\n#0 /tmp/tmpgj9gyh6c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgj9gyh6c.php\
    \ on line 29\n"
  timestamp: 1659730837
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst_nljxv.php:26\n\
    Stack trace:\n#0 /tmp/tmpst_nljxv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpst_nljxv.php\
    \ on line 26\n"
  timestamp: 1659730837

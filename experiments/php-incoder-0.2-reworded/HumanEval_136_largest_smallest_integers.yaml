name: HumanEval_136_largest_smallest_integers
language: php
prompt: "<?php\n// Create a function that returns an array (a, b), where 'a' is\n\
  // the largest of negative integers, and 'b' is the smallest\n// of positive integers\
  \ in an array.\n// If there is no negative or positive integers, return them as\
  \ null.\n// Examples:\n// >>> largest_smallest_integers(array(2, 4, 1, 3, 5, 7))\n\
  // array(null, 1)\n// >>> largest_smallest_integers(array())\n// array(null, null)\n\
  // >>> largest_smallest_integers(array(0))\n// array(null, null)\nfunction largest_smallest_integers($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return largest_smallest_integers(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4,\
  \ 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7,\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 3,\
  \ 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array()) !== array(null, null)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0)) !== array(null, null)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -3, -5, -6)) !== array(-1,\
  \ null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item)\
    \ {\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $smallest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $largest) {\n      $smallest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $item) {\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest_negative\
    \ = null;\n  $smallest_positive = null;\n  foreach ($lst as $value) {\n    if\
    \ ($value < 0 && $largest_negative === null) {\n      $largest_negative = $value;\n\
    \    } else if ($value > 0 && $smallest_positive === null) {\n      $smallest_positive\
    \ = $value;\n    }\n  }\n  return array($largest_negative, $smallest_positive);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = null;\n\
    \  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest === null ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $smallest[] = $item;\n    } else\
    \ {\n      $largest[] = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $item)\
    \ {\n    if (is_null($item)) {\n      $smallest = null;\n      $largest = null;\n\
    \      break;\n    }\n    if (is_null($smallest)) {\n      $smallest = $item;\n\
    \      $largest = $item;\n    } else if ($item < $smallest) {\n      $smallest\
    \ = $item;\n    } else if ($item > $largest) {\n      $largest = $item;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $value) {\n    if ($largest === null || $value <\
    \ $largest) {\n      $largest = $value;\n    }\n    if ($smallest === null ||\
    \ $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $result = array();\n  foreach ($lst as $item) {\n    if\
    \ (is_int($item)) {\n      $result[] = $item;\n    }\n  }\n  if (count($result)\
    \ == 0) {\n    return array();\n  }\n  sort($result);\n  $result[0] = null;\n\
    \  $result[1] = -$result[0];\n  return $result;\n}\n", "  $largest = array();\n\
    \  $smallest = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n \
    \     $largest[] = $item;\n    } else {\n      $smallest[] = $item;\n    }\n \
    \ }\n  if (count($largest) > count($smallest)) {\n    return $largest;\n  } else\
    \ {\n    return $smallest;\n  }\n}\n", "  $largest = array();\n  $smallest = array();\n\
    \  foreach ($lst as $value) {\n    if ($value < 0 && $largest == array()) {\n\
    \      $largest = $value;\n    } else if ($value > 0 && $smallest == array())\
    \ {\n      $smallest = $value;\n    } else if ($value < 0 && $smallest == array())\
    \ {\n      $smallest = $value;\n    } else if ($value > 0 && $largest == array())\
    \ {\n      $largest = $value;\n    }\n  }\n  return array($largest, $smallest);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      if ($a === null) {\n        $a = $item;\n      } else {\n    \
    \    $b = $item;\n      }\n    } else if ($item > 0) {\n      if ($a === null)\
    \ {\n        $a = $item;\n      } else if ($b === null) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $smallest = array();\n\
    \  $largest = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      if ($item < 0) {\n        $smallest[] = $item;\n      } else {\n      \
    \  $largest[] = $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $value)\
    \ {\n    if ($value < 0 || $value > 0) {\n      $smallest[] = $value;\n      $largest[]\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n\
    \  foreach ($lst as $item) {\n    if (is_null($smallest)) {\n      $smallest =\
    \ $item;\n      $largest = $item;\n    } elseif ($item < $smallest) {\n      $smallest\
    \ = $item;\n    } elseif ($item > $largest) {\n      $largest = $item;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $smallest[] = null;\n    } else {\n      $largest[]\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $largest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n \
    \ return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest =\
    \ NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === NULL || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $value) {\n\
    \    if ($smallest === null || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === null || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $result = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $result[0] = max($result[0],\
    \ $item);\n    } else if ($item > 0) {\n      $result[1] = min($result[1], $item);\n\
    \    }\n  }\n  return $result;\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $value) {\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $smallest[] = null;\n    } else {\n      $largest[]\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest\
    \ = NULL;\n  $largest = NULL;\n  foreach ($lst as $value) {\n    if ($smallest\
    \ === NULL || $value < $smallest) {\n      $smallest = $value;\n    }\n    if\
    \ ($largest === NULL || $value > $largest) {\n      $largest = $value;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $max = -PHP_INT_MAX;\n  $min\
    \ = PHP_INT_MAX;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $max\
    \ = -$item;\n    } else if ($item > 0) {\n      $min = $item;\n    }\n  }\n  return\
    \ array($max, $min);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $result\
    \ = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      $result[]\
    \ = $item;\n    } elseif (is_null($item)) {\n      $result[] = null;\n    } else\
    \ {\n      $result[] = min($item);\n      $result[] = max($item);\n    }\n  }\n\
    \  return $result;\n}\n", "  $result = array();\n  $largest = array();\n  $smallest\
    \ = array();\n  foreach ($lst as $value) {\n    if ($value < 0 || $value > 0)\
    \ {\n      $result[] = $value;\n      if ($value < $largest) {\n        $largest\
    \ = $value;\n      }\n      if ($value > $smallest) {\n        $smallest = $value;\n\
    \      }\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest\
    \ = NULL;\n  $largest = NULL;\n  foreach ($lst as $value) {\n    if ($smallest\
    \ === NULL || $value < $smallest) {\n      $smallest = $value;\n    }\n    if\
    \ ($largest === NULL || $value > $largest) {\n      $largest = $value;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $max = -PHP_INT_MAX;\n  $min\
    \ = PHP_INT_MAX;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $max\
    \ = -$item;\n    } else if ($item > 0) {\n      $min = $item;\n    }\n  }\n  return\
    \ array($max, $min);\n}\n", "  $largest_negative = null;\n  $smallest_positive\
    \ = null;\n  foreach ($lst as $value) {\n    if ($value < 0 && $largest_negative\
    \ === null) {\n      $largest_negative = $value;\n    } else if ($value > 0 &&\
    \ $smallest_positive === null) {\n      $smallest_positive = $value;\n    }\n\
    \  }\n  return array($largest_negative, $smallest_positive);\n}\n", "  $result\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $result[0]\
    \ = max($result[0], $item);\n    } else {\n      $result[1] = min($result[1],\
    \ $item);\n    }\n  }\n  return $result;\n}\n", "  $smallest = array();\n  $largest\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $smallest[]\
    \ = $item;\n    } else {\n      $largest[] = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $result = array();\n  foreach ($lst as $item) {\n    if\
    \ (is_null($item)) {\n      $result[] = null;\n      continue;\n    }\n    $result[]\
    \ = max(-$item, $item);\n  }\n  return $result;\n}\n", "  $largest = null;\n \
    \ $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($largest === null || $value < $largest) {\n      $largest\
    \ = $value;\n    }\n    if ($smallest === null || $value > $smallest) {\n    \
    \  $smallest = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n",
  "  $result = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n     \
    \ $result[0] = max($result[0], $item);\n    } else {\n      $result[1] = min($result[1],\
    \ $item);\n    }\n  }\n  return $result;\n}\n", "  $smallest = null;\n  $largest\
    \ = null;\n  foreach ($lst as $item) {\n    if ($smallest === null || $item <\
    \ $smallest) {\n      $smallest = $item;\n    }\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $min =\
    \ PHP_INT_MAX;\n  $max = -PHP_INT_MAX;\n  foreach ($lst as $val) {\n    if ($val\
    \ < $min) {\n      $min = $val;\n    }\n    if ($val > $max) {\n      $max = $val;\n\
    \    }\n  }\n  return array($min, $max);\n}\n", "  $smallest = PHP_INT_MAX;\n\
    \  $largest = PHP_INT_MIN;\n  foreach ($lst as $item) {\n    if ($item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest\
    \ = null;\n  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $max = -PHP_INT_MAX;\n  $min = PHP_INT_MAX;\n\
    \  foreach ($lst as $item) {\n    if ($item < $min) {\n      $min = $item;\n \
    \   }\n    if ($item > $max) {\n      $max = $item;\n    }\n  }\n  return array($max,\
    \ $min);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item)\
    \ {\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest =\
    \ $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $min = PHP_INT_MAX;\n\
    \  $max = PHP_INT_MIN;\n  foreach ($lst as $item) {\n    if ($item < $min) {\n\
    \      $min = $item;\n    }\n    if ($item > $max) {\n      $max = $item;\n  \
    \  }\n  }\n  return array($min, $max);\n}\n", "  $min = null;\n  $max = null;\n\
    \  foreach ($lst as $item) {\n    if ($item < $min) {\n      $min = $item;\n \
    \   } else if ($item > $max) {\n      $max = $item;\n    }\n  }\n  return array($min,\
    \ $max);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item)\
    \ {\n    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $min = PHP_INT_MAX;\n\
    \  $max = -PHP_INT_MAX;\n  foreach ($lst as $item) {\n    if ($item < $min) {\n\
    \      $min = $item;\n    }\n    if ($item > $max) {\n      $max = $item;\n  \
    \  }\n  }\n  return array($min, $max);\n}\n", "  $largest = array();\n  $smallest\
    \ = array();\n  foreach ($lst as $item) {\n    if (is_null($item)) {\n      $largest[]\
    \ = null;\n      $smallest[] = null;\n      continue;\n    }\n    if ($item <\
    \ 0) {\n      $largest[] = $item;\n    } else {\n      $smallest[] = $item;\n\
    \    }\n  }\n  return array($largest, $smallest);\n}\n", "  $a = null;\n  $b =\
    \ null;\n  foreach ($lst as $v) {\n    if ($v < 0) {\n      if ($a === null) {\n\
    \        $a = $v;\n      }\n      else {\n        $b = $v;\n      }\n    }\n \
    \   else {\n      if ($a === null) {\n        $a = $v;\n      }\n      else {\n\
    \        if ($b === null) {\n          $b = $v;\n        }\n        else {\n \
    \         if ($a > $b) {\n            $a = $v;\n          }\n          else {\n\
    \            $b = $v;\n          }\n        }\n      }\n    }\n  }\n  return array($a,\
    \ $b);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item)\
    \ {\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest =\
    \ $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $result =\
    \ array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      $result[]\
    \ = $item;\n    } elseif (is_null($item)) {\n      $result[] = null;\n    } else\
    \ {\n      $result[] = min($item);\n      $result[] = max($item);\n    }\n  }\n\
    \  return $result;\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach\
    \ ($lst as $item) {\n    if (is_null($smallest)) {\n      $smallest = $item;\n\
    \      $largest = $item;\n    } elseif ($item < $smallest) {\n      $smallest\
    \ = $item;\n    } elseif ($item > $largest) {\n      $largest = $item;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $max = -PHP_INT_MAX;\n  $min\
    \ = PHP_INT_MAX;\n  foreach ($lst as $item) {\n    if ($item < $min) {\n     \
    \ $min = $item;\n    }\n    if ($item > $max) {\n      $max = $item;\n    }\n\
    \  }\n  return array($max, $min);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $value) {\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $value)\
    \ {\n    if ($value < 0 || $value > 0) {\n      $smallest[] = $value;\n      $largest[]\
    \ = $value;\n    } else {\n      $smallest[] = null;\n      $largest[] = null;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $result = array();\n\
    \  foreach ($lst as $value) {\n    if ($value < 0 || $value > 0) {\n      $result[]\
    \ = $value;\n    }\n  }\n  return $result ? $result : null;\n}\n", "  $result\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $result[0]\
    \ = max($result[0], $item);\n    } else {\n      $result[1] = min($result[1],\
    \ $item);\n    }\n  }\n  return $result;\n}\n", "  $smallest = array();\n  $largest\
    \ = array();\n  foreach ($lst as $item) {\n    if (is_null($item)) {\n      $smallest[]\
    \ = null;\n      $largest[] = null;\n      continue;\n    }\n    if ($item < 0)\
    \ {\n      $smallest[] = $item;\n      $largest[] = null;\n      continue;\n \
    \   }\n    $smallest[] = null;\n    $largest[] = $item;\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($largest === null || $value < $largest) {\n      $largest\
    \ = $value;\n    }\n    if ($smallest === null || $value > $smallest) {\n    \
    \  $smallest = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I tried your code,\
    \ but I got this error: `Fatal error: Call to undefined function largest_smallest_integers()\
    \ in /home/u51419490/public_html/test.php on line 9`\n<|/ c |>\n<| c |>\nI forgot\
    \ to add `largest_smallest_integers()` as a function to the `largest_smallest_integers`\
    \ class. I added it now. Try it again.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ I tried your code, but I got this error: `Fatal error: Call to undefined function\
    \ largest_smallest_integers() in /home/u51419490/public_html/test.php on line\
    \ 9`\n<|/ c |>\n<| c |>\nI added the function to the `largest_smallest_integers`\
    \ class. Try it again.\n<|/ c |>\n<| c |>\nThanks for your answer. I tried your\
    \ code, but I got this error: `Fatal error: Call to undefined function largest_smallest_integers()\
    \ in /home/u51419490/public_html/test.php on line 9`\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$array = array(\n    array(\n        'id' => 1,\n       \
    \ 'name' => 'John',\n        'age' => 30,\n    ),\n    array(\n        'id' =>\
    \ 2,\n        'name' => 'Jane',\n        'age' => 25,\n    ),\n    array(\n  \
    \      'id' => 3,\n        'name' => 'Jack',\n        'age' => 40,\n    ),\n \
    \   array(\n        'id' => 4,\n        'name' => 'Jill',\n        'age' => 25,\n\
    \    ),\n);\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item)\
    \ {\n    if (is_null($smallest)) {\n      $smallest = $item;\n      $largest =\
    \ $item;\n    } elseif ($item < $smallest) {\n      $smallest = $item;\n    }\
    \ elseif ($item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $result = array();\n  foreach ($lst as $item) {\n    if\
    \ (is_null($item)) {\n      $result[] = null;\n      continue;\n    }\n    if\
    \ ($item < 0) {\n      $result[] = $item;\n      continue;\n    }\n    $result[]\
    \ = $item;\n  }\n  return $result;\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $item) {\n    if (is_null($smallest)) {\n      $smallest =\
    \ $item;\n      $largest = $item;\n    } elseif ($item < $smallest) {\n      $smallest\
    \ = $item;\n    } elseif ($item > $largest) {\n      $largest = $item;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest\
    \ = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL || $item <\
    \ $smallest) {\n      $smallest = $item;\n    }\n    if ($largest === NULL ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work\
    \ if you have negative numbers in the array. Try it with `array(1,-1,2,-3,4)`\n\
    <|/ c |>\n<| c |>\n: Yes, it does. Try it with `array(1,-1,2,-3,4)`.\n<|/ c |>\n\
    <| c |>\n: Yes, it does. Try it with `array(1,-1,2,-3,4)`.\n<|/ c |>\n<| c |>\n\
    : Yes, it does. Try it with `array(1,-1,2,-3,4)`.\n<|/ c |>\n<| c |>\n: Yes, it\
    \ does. Try it with `array(1,-1,2,-3,4)`.\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$largest = array_reduce($array,\
    \ function($a, $b) { return max($a, $b); });\n$smallest = array_reduce($array,\
    \ function($a, $b) { return min($a, $b); });\n</code>\n<|/ a dscore=5 |>\n<| c\
    \ |>\nThis doesn't work if you have negative numbers in the array. Try it with\
    \ `array(1,-1,2,-3,4)`\n<|/ c |>\n<| c |>\n: Yes, it does. Try it with `array(1,-1,2,-3,4)`.\n\
    <|/ c |>\n<| c |>\n: Yes, it does. Try it with `array(1,-1,2,-3,4)`.\n<|/ c |>\n\
    <| c |>\n: Yes, it does. Try it with `array(1,-1,2,-3,4)`.\n<|/ c |>\n<| c |>\n\
    : Yes, it does. Try it with `array(1,-1,2,-3,4)`.\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$largest = max( $array );\n$smallest\
    \ = min( $array );\n</code>\n<|/ a tags=php,arrays |>\n<| ", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($smallest === null || $value < $smallest) {\n      $smallest\
    \ = $value;\n    }\n    if ($largest === null || $value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $val) {\n    if ($val < 0) {\n      if ($a ===\
    \ null) {\n        $a = $val;\n      } else {\n        $b = $val;\n      }\n \
    \   } else if ($val > 0) {\n      if ($a === null) {\n        $a = $val;\n   \
    \   } else if ($b === null) {\n        $b = $val;\n      } else {\n        if\
    \ ($a > $b) {\n          $a = $val;\n        } else {\n          $b = $val;\n\
    \        }\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $largest =\
    \ null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $value) {\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $result = array();\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      $result[] = $item;\n    }\n  }\n  if (count($result) == 0) {\n    return\
    \ array(null, null);\n  }\n  $max = max($result);\n  $min = min($result);\n  if\
    \ ($max == $min) {\n    return array(null, $max);\n  }\n  return array($max, $min);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $smallest[] = $item;\n    } else {\n      $largest[]\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $largest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n \
    \ return array($smallest, $largest);\n}\n", "  $smallest = array();\n  $largest\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $smallest[]\
    \ = $item;\n    } else {\n      $largest[] = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $max = -PHP_INT_MAX;\n  $min = PHP_INT_MAX;\n  foreach\
    \ ($lst as $value) {\n    if ($value < $min) {\n      $min = $value;\n    }\n\
    \    if ($value > $max) {\n      $max = $value;\n    }\n  }\n  return array($max,\
    \ $min);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item)\
    \ {\n    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $result = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $result[0] = max($result[0],\
    \ $item);\n    } else if ($item > 0) {\n      $result[1] = min($result[1], $item);\n\
    \    }\n  }\n  return $result;\n}\n", "  $min = PHP_INT_MAX;\n  $max = PHP_INT_MIN;\n\
    \  foreach ($lst as $item) {\n    if ($item < $min) {\n      $min = $item;\n \
    \   }\n    if ($item > $max) {\n      $max = $item;\n    }\n  }\n  return array($min,\
    \ $max);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $value)\
    \ {\n    if ($smallest === NULL || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === NULL || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = PHP_INT_MAX;\n\
    \  $largest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n\n/**\n * Returns\
    \ true if the given value is an integer.\n *\n * @param mixed $value A value to\
    \ check.\n * @return bool True if the value is an integer.\n */", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $largest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n \
    \ return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest =\
    \ NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === NULL || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI like this solution, but I wonder\
    \ if there is a way to do it without looping through the array. I'm thinking there\
    \ might be a way to do it with array_reduce, but I can't figure it out.\n<|/ c\
    \ |>\n<| c |>\n: I added a solution that doesn't involve looping through the array.\n\
    <|/ c |>\n<| c |>\n: I added a solution that doesn't involve looping through the\
    \ array.\n<|/ c |>\n<| c |>\n: I added a solution that doesn't involve looping\
    \ through the array.\n<|/ c |>\n<| c |>\n: I added a solution that doesn't involve\
    \ looping through the array.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $result = array();\n$smallest = $largest = NULL;\nforeach($array as $value) {\n\
    \    if ($smallest === NULL || $value < $smallest) {\n        $smallest = $value;\n\
    \    }\n    if ($largest === NULL || $value > $largest) {\n        $largest =\
    \ $value;\n    }\n}\n$result[] = $smallest;\n$result[] = $largest;\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nI like this solution, but I wonder if there\
    \ is a way to do it without looping through the array. I'm thinking there might\
    \ be a way to do it with array_reduce, but I can't figure it out.\n<|/ c |>\n\
    <| c |>\n: I added a solution that doesn't involve looping through the array.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$smallest\
    \ = $largest = NULL;\nforeach($array as $value) {\n    if ($smallest === NULL\
    \ || $value < $smallest) {\n        $smallest = $value;\n    }\n    if ($largest\
    \ === NULL || $value > $largest) {\n        $largest = $value;\n    }\n}\n$result[]\
    \ = $smallest;\n$result[] = $largest;\n</code>\n<|/ a ", "  $smallest = PHP_INT_MAX;\n\
    \  $largest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest\
    \ = array();\n  $largest = array();\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      $smallest[] = $item;\n    } else {\n      $largest[] = $item;\n\
    \    }\n  }\n  if (count($smallest) == 0) {\n    return array(null, null);\n \
    \ }\n  if (count($largest) == 0) {\n    return array(null, null);\n  }\n  $smallest_int\
    \ = min($smallest);\n  $largest_int = max($largest);\n  return array($smallest_int,\
    \ $largest_int);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst\
    \ as $item) {\n    if (is_null($smallest)) {\n      $smallest = $item;\n     \
    \ $largest = $item;\n    } elseif ($item < $smallest) {\n      $smallest = $item;\n\
    \    } elseif ($item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $smallest[] = $item;\n    } else {\n      $largest[]\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest\
    \ = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === NULL || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $smallest[] = $item;\n\
    \    } else {\n      $largest[] = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = array();\n  $smallest = array();\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $largest[] = $item;\n    } else\
    \ {\n      $smallest[] = $item;\n    }\n  }\n  if (count($largest) == 0) {\n \
    \   return array(null, null);\n  }\n  if (count($smallest) == 0) {\n    return\
    \ array(null, null);\n  }\n  return array($largest[0], $smallest[0]);\n}\n", " \
    \ $smallest = array();\n  $largest = array();\n  foreach ($lst as $item) {\n \
    \   if (is_null($item)) {\n      $smallest[] = null;\n      $largest[] = null;\n\
    \      continue;\n    }\n    if ($item < 0) {\n      $smallest[] = $item;\n  \
    \    $largest[] = null;\n      continue;\n    }\n    $smallest[] = null;\n   \
    \ $largest[] = $item;\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $largest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n \
    \ return array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest =\
    \ null;\n  foreach ($lst as $value) {\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      if ($a === null) {\n        $a = $item;\n      }\n      else {\n\
    \        $b = $item;\n      }\n    }\n    else if ($item > 0) {\n      if ($a\
    \ === null) {\n        $a = $item;\n      }\n      else {\n        $b = $item;\n\
    \      }\n    }\n    else {\n      if ($a === null) {\n        $a = null;\n  \
    \    }\n      else {\n        $b = null;\n      }\n    }\n  }\n  return array($a,\
    \ $b);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item)\
    \ {\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest === null\
    \ || $value < $largest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n \
    \ return array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest =\
    \ null;\n  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if (is_null($largest) || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if (is_null($smallest) || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

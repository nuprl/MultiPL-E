name: HumanEval_136_largest_smallest_integers
language: php
prompt: "<?php\n// Create a function that returns an array (a, b), where 'a' is\n\
  // the largest of negative integers, and 'b' is the smallest\n// of positive integers\
  \ in an array.\n// If there is no negative or positive integers, return them as\
  \ null.\n// Examples:\n// >>> largest_smallest_integers(array(2, 4, 1, 3, 5, 7))\n\
  // array(null, 1)\n// >>> largest_smallest_integers(array())\n// array(null, null)\n\
  // >>> largest_smallest_integers(array(0))\n// array(null, null)\nfunction largest_smallest_integers($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return largest_smallest_integers(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4,\
  \ 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7,\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 3,\
  \ 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array()) !== array(null, null)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0)) !== array(null, null)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -3, -5, -6)) !== array(-1,\
  \ null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item)\
    \ {\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $smallest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $largest) {\n      $smallest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $item) {\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest_negative\
    \ = null;\n  $smallest_positive = null;\n  foreach ($lst as $value) {\n    if\
    \ ($value < 0 && $largest_negative === null) {\n      $largest_negative = $value;\n\
    \    } else if ($value > 0 && $smallest_positive === null) {\n      $smallest_positive\
    \ = $value;\n    }\n  }\n  return array($largest_negative, $smallest_positive);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = null;\n\
    \  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest === null ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $smallest[] = $item;\n    } else\
    \ {\n      $largest[] = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $item)\
    \ {\n    if (is_null($item)) {\n      $smallest = null;\n      $largest = null;\n\
    \      break;\n    }\n    if (is_null($smallest)) {\n      $smallest = $item;\n\
    \      $largest = $item;\n    } else if ($item < $smallest) {\n      $smallest\
    \ = $item;\n    } else if ($item > $largest) {\n      $largest = $item;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $value) {\n    if ($largest === null || $value <\
    \ $largest) {\n      $largest = $value;\n    }\n    if ($smallest === null ||\
    \ $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $result = array();\n  foreach ($lst as $item) {\n    if\
    \ (is_int($item)) {\n      $result[] = $item;\n    }\n  }\n  if (count($result)\
    \ == 0) {\n    return array();\n  }\n  sort($result);\n  $result[0] = null;\n\
    \  $result[1] = -$result[0];\n  return $result;\n}\n", "  $largest = array();\n\
    \  $smallest = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n \
    \     $largest[] = $item;\n    } else {\n      $smallest[] = $item;\n    }\n \
    \ }\n  if (count($largest) > count($smallest)) {\n    return $largest;\n  } else\
    \ {\n    return $smallest;\n  }\n}\n", "  $largest = array();\n  $smallest = array();\n\
    \  foreach ($lst as $value) {\n    if ($value < 0 && $largest == array()) {\n\
    \      $largest = $value;\n    } else if ($value > 0 && $smallest == array())\
    \ {\n      $smallest = $value;\n    } else if ($value < 0 && $smallest == array())\
    \ {\n      $smallest = $value;\n    } else if ($value > 0 && $largest == array())\
    \ {\n      $largest = $value;\n    }\n  }\n  return array($largest, $smallest);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      if ($a === null) {\n        $a = $item;\n      } else {\n    \
    \    $b = $item;\n      }\n    } else if ($item > 0) {\n      if ($a === null)\
    \ {\n        $a = $item;\n      } else if ($b === null) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $smallest = array();\n\
    \  $largest = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      if ($item < 0) {\n        $smallest[] = $item;\n      } else {\n      \
    \  $largest[] = $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $value)\
    \ {\n    if ($value < 0 || $value > 0) {\n      $smallest[] = $value;\n      $largest[]\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n\
    \  foreach ($lst as $item) {\n    if (is_null($smallest)) {\n      $smallest =\
    \ $item;\n      $largest = $item;\n    } elseif ($item < $smallest) {\n      $smallest\
    \ = $item;\n    } elseif ($item > $largest) {\n      $largest = $item;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

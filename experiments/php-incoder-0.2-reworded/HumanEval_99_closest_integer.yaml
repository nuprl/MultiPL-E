name: HumanEval_99_closest_integer
language: php
prompt: "<?php\n// Create a function that takes a value (string) representing a number\n\
  // and returns the closest integer to it. If the number is equidistant\n// from\
  \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
  10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
  \ from zero means that if the given number is equidistant\n// from two integers,\
  \ the one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer($value) {\n"
tests: "function candidate(...$args) {\n    return closest_integer(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(\"10\") !== 10) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"14.5\") !== 15) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"-15.5\") !== -16) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"15.3\") !== 15) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"0\") !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["  $value = abs($value);\n  $closest_integer = $value;\n  while ($closest_integer\
    \ > 0 && $closest_integer < $value) {\n    $closest_integer = $closest_integer\
    \ + 1;\n  }\n  return $closest_integer;\n}\n", "  $value = floatval($value);\n\
    \  $closest = round($value, 0);\n  if ($closest == $value) {\n    return $value;\n\
    \  }\n  $difference = $value - $closest;\n  if ($difference > 0) {\n    return\
    \ $closest;\n  }\n  return $value - 1;\n}", "  $value = abs($value);\n  $closest_integer\
    \ = $value;\n  $closest_integer = ($closest_integer == $value) ? 0 : $closest_integer;\n\
    \  while ($closest_integer < $value && $closest_integer > 0) {\n    $closest_integer\
    \ = ($closest_integer + $value) / 2;\n  }\n  return $closest_integer;\n}\n", " \
    \   $value = abs($value);\n    $closest_integer = $value;\n    $closest_integer\
    \ = $closest_integer < $value ? $value : $closest_integer;\n    $closest_integer\
    \ = $closest_integer < $value ? $closest_integer + 1 : $closest_integer - 1;\n\
    \    return $closest_integer;\n}", "  $value = abs($value);\n  $closest_integer\
    \ = $value;\n  $closest_integer = $closest_integer < $value ? $value : $closest_integer;\n\
    \  $closest_integer = $closest_integer < $value ? $closest_integer : $value;\n\
    \  return $closest_integer;\n}\n", "  $value = abs($value);\n  $closest_integer\
    \ = $value;\n  $closest_integer = ($value - floor($value)) < 0.0 ? floor($value)\
    \ : ceil($value);\n  return $closest_integer;\n}", "  $value = abs($value);\n\
    \  $closest_integer = $value;\n  $closest_integer = ($closest_integer == $value)\
    \ ? 0 : $closest_integer;\n  while ($closest_integer < $value) {\n    $closest_integer\
    \ = $closest_integer * 10;\n  }\n  return $closest_integer;\n}\n", "  $value =\
    \ abs($value);\n  $closest_integer = $value;\n  while ($closest_integer == $value)\
    \ {\n    $closest_integer = $closest_integer + 1;\n  }\n  return $closest_integer;\n\
    }\n", "    $value = abs($value);\n    $closest_integer = $value;\n    $closest_integer\
    \ = $closest_integer < $value ? $value : $closest_integer;\n    $closest_integer\
    \ = $closest_integer < $value ? $closest_integer : $value;\n    return $closest_integer;\n\
    }\n", "  $value = floatval($value);\n  $closest = null;\n  $closestDiff = null;\n\
    \  $closestDiffAbs = null;\n  $closestDiffAbsMax = null;\n  $closestDiffAbsMaxAbs\
    \ = null;\n  $closestDiffAbsMaxAbsMax = null;\n  $closestDiffAbsMaxAbsMaxAbs =\
    \ null;\n  $closestDiffAbsMaxAbsMaxAbsMax = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbs\
    \ = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMax = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbs\
    \ = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMax = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbs\
    \ = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbs\
    \ = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax = null;\n\
    \  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax\
    \ = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax\
    \ = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax\
    \ = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax\
    \ = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax\
    \ = null;\n  $closestDiffAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMaxAbsMax\
    \ = null;\n  $closestDiffAbsMaxAbsMax", "  $value = abs($value);\n  $closest_integer\
    \ = $value;\n  while ($closest_integer > 0 && $closest_integer < $value) {\n \
    \   $closest_integer = floor($closest_integer);\n  }\n  return $closest_integer;\n\
    }\n", "  $value = abs($value);\n  $closest_integer = $value;\n  $closest_integer\
    \ = ($closest_integer == $value) ? $value : $closest_integer;\n  while ($closest_integer\
    \ - $value >= 1) {\n    $closest_integer -= 1;\n    $closest_integer = ($closest_integer\
    \ == $value) ? $value : $closest_integer;\n  }\n  return $closest_integer;\n}\n",
  "  $value = abs($value);\n  $closest_integer = $value;\n  $closest_integer = ($value\
    \ <= $closest_integer) ? $value : $closest_integer;\n  $closest_integer = ($value\
    \ >= $closest_integer) ? $value : $closest_integer;\n  return $closest_integer;\n\
    }\n", "  // Convert the value to a float\n  $value = floatval($value);\n  // If\
    \ the value is equidistant from two integers, round it away from zero.\n  if ($value\
    \ % 1 == 0) {\n    return round($value);\n  }\n  // Otherwise, return the integer\
    \ value.\n  return $value;\n}", "    $value = abs($value);\n    $closest_integer\
    \ = $value;\n    $closest_integer = ($closest_integer == $value) ? 0 : $closest_integer;\n\
    \    $closest_integer = ($closest_integer == $value) ? $closest_integer : $closest_integer\
    \ + 1;\n    return $closest_integer;\n}", "  $value = abs($value);\n  $closest_integer\
    \ = $value;\n  $closest_integer = $value <= $closest_integer ? $value : $closest_integer;\n\
    \  $closest_integer = $value >= $closest_integer ? $value : $closest_integer;\n\
    \  return $closest_integer;\n}\n", "  $value = abs($value);\n  $closest = $value;\n\
    \  $closestDiff = abs($value - $closest);\n  foreach ($values as $value) {\n \
    \   $diff = $value - $closest;\n    if ($diff < $closestDiff) {\n      $closestDiff\
    \ = $diff;\n      $closest = $value;\n    }\n  }\n  return $closest;\n}", "  $value\
    \ = abs($value);\n  $closest_integer = $value;\n  while ($closest_integer > 0\
    \ && $closest_integer < $value) {\n    $closest_integer = $closest_integer + 1;\n\
    \  }\n  return $closest_integer;\n}\n", "  $value = abs($value);\n  $closest =\
    \ null;\n  $closestDistance = null;\n  $closestDistanceAbs = null;\n  $closestDistanceAbsSq\
    \ = null;\n  $closestDistanceSq = null;\n  $closestDistanceSqAbs = null;\n  $closestDistanceSqAbsSq\
    \ = null;\n  $closestDistanceSqMin = null;\n  $closestDistanceSqMinAbs = null;\n\
    \  $closestDistanceSqMinAbsSq = null;\n  $closestDistanceSqMax = null;\n  $closestDistanceSqMaxAbs\
    \ = null;\n  $closestDistanceSqMaxAbsSq = null;\n  $closestDistanceSqMinMax =\
    \ null;\n  $closestDistanceSqMinMaxAbs = null;\n  $closestDistanceSqMinMaxAbsSq\
    \ = null;\n  $closestDistanceSqMinMaxSq = null;\n  $closestDistanceSqMinMaxSqAbs\
    \ = null;\n  $closestDistanceSqMinMaxSqAbsSq = null;\n  $closestDistanceSqMinMaxSqMin\
    \ = null;\n  $closestDistanceSqMinMaxSqMinAbs = null;\n  $closestDistanceSqMinMaxSqMinAbsSq\
    \ = null;\n  $closestDistanceSqMinMaxSqMax = null;\n  $closestDistanceSqMinMaxSqMaxAbs\
    \ = null;\n  $closestDistanceSqMinMaxSqMaxAbsSq = null;\n  $closestDistanceSqMinMaxSqMaxSq\
    \ = null;\n  $closestDistanceSqMinMaxSqMaxSqAbs = null;\n  $closestDistanceSqMinMaxSqMaxSqAbsSq\
    \ = null;\n  $closestDistanceSqMinMaxSqMinMax = null;\n  $closestDistanceSqMinMaxSqMinMaxAbs\
    \ = null;\n  $closestDistanceSqMinMaxSqMinMaxAbsSq = null;\n  $closestDistanceSqMinMaxSqMinMaxSq\
    \ = null;\n  $closestDistanceSqMinMaxSqMinMaxSqAbs = null;\n  $closestDistanceSqMinMaxSqMinMaxSqAbsSq\
    \ = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMin = null;\n  $closestDistanceSqMinMaxSqMinMaxSqAbs\
    \ = null;\n  $closestDistanceSqMinMaxSqMinMaxSqAbsSq = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMin\
    \ = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMinAbs = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMinAbsSq\
    \ = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMax = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMaxAbs\
    \ = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMaxAbsSq = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMaxSq\
    \ = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMaxSqAbs = null;\n  $closestDistanceSqMinMaxSqMinMaxSqMaxSqAbs",
  "  $value = abs($value);\n  $closest = null;\n  $closestDistance = null;\n  foreach\
    \ ($values as $v) {\n    $d = abs($v - $value);\n    if ($d < $closestDistance)\
    \ {\n      $closestDistance = $d;\n      $closest = $v;\n    }\n  }\n  return\
    \ $closest;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

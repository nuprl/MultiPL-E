language: php
name: HumanEval_30_get_positive
results:
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $key => $value) {\n    if ($value\
    \ > 0) {\n      $positive[$key] = $value;\n    }\n  }\n  return $positive;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26itqruu.php:22\n\
    Stack trace:\n#0 /tmp/tmp26itqruu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp26itqruu.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) {\n        return $v > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcu39sv1j.php:18\n\
    Stack trace:\n#0 /tmp/tmpcu39sv1j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpcu39sv1j.php\
    \ on line 18\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $key => $value) {\n        if\
    \ ($value > 0) {\n            $positive[$key] = $value;\n        }\n    }\n  \
    \  return $positive;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua19unby.php:22\n\
    Stack trace:\n#0 /tmp/tmpua19unby.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpua19unby.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(\n    array('name' => 'A', 'score' => 1),\n    array('name' => 'B',\
    \ 'score' => 2),\n    array('name' => 'C', 'score' => 3),\n    array('name' =>\
    \ 'D', 'score' => 4),\n    array('name' => 'E', 'score' => 5),\n    array('name'\
    \ => 'F', 'score' => 6),\n    array('name' => 'G', 'score' => 7),\n    array('name'\
    \ => 'H', 'score' => 8),\n    array('name' => 'I', 'score' => 9),\n    array('name'\
    \ => 'J', 'score' => 10),\n    array('name' => 'K', 'score' => 11),\n    array('name'\
    \ => 'L', 'score' => 12),\n    array('name' => 'M', 'score' => 13),\n    array('name'\
    \ => 'N', 'score' => 14),\n    array('name' => 'O', 'score' => 15),\n    array('name'\
    \ => 'P', 'score' => 16),\n    array('name' => 'Q', 'score' => 17),\n    array('name'\
    \ => 'R', 'score' => 18),\n    array('name' => 'S', 'score' => 19),\n    array('name'\
    \ => 'T', 'score' => 20),\n    array('name' => 'U', 'score' => 21),\n    array('name'\
    \ => 'V', 'score' => 22),\n    array('name' => 'W', 'score' => 23),\n    array('name'\
    \ => 'X', 'score' => 24),\n    array('name' => 'Y', 'score' => 25),\n    array('name'\
    \ => 'Z', 'score' => 26),\n);\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpohlibowq.php on line 16

    '
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $k => $v) {\n        if ($v\
    \ > 0) {\n            $positive[$k] = $v;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8_gsxgs.php:22\n\
    Stack trace:\n#0 /tmp/tmpn8_gsxgs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn8_gsxgs.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdsg0anan.php:18\n\
    Stack trace:\n#0 /tmp/tmpdsg0anan.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdsg0anan.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$array\
    \ = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n\
    \    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    \nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjgv6ahg5.php on line 16

    '
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaq0f__lt.php:16\n\
    Stack trace:\n#0 /tmp/tmpaq0f__lt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpaq0f__lt.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) {\n        return $v > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcu39sv1j.php:18\n\
    Stack trace:\n#0 /tmp/tmpcu39sv1j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpcu39sv1j.php\
    \ on line 18\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $key => $value) {\n        if\
    \ ($value > 0) {\n            $positive[$key] = $value;\n        }\n    }\n  \
    \  return $positive;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua19unby.php:22\n\
    Stack trace:\n#0 /tmp/tmpua19unby.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpua19unby.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdsg0anan.php:18\n\
    Stack trace:\n#0 /tmp/tmpdsg0anan.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdsg0anan.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $key => $value) {\n        if\
    \ ($value > 0) {\n            $positive[$key] = $value;\n        }\n    }\n  \
    \  return $positive;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua19unby.php:22\n\
    Stack trace:\n#0 /tmp/tmpua19unby.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpua19unby.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter(\n        $l,\n        function ($v) use ($l) {\n\
    \            return $v > 0;\n        }\n    );\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3liquk1j.php:21\n\
    Stack trace:\n#0 /tmp/tmp3liquk1j.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3liquk1j.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter(\n    $l,\n    function ($value) {\n      return $value\
    \ > 0;\n    }\n  );\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    $arr = array(1,2,3,4,5,6,7,8,9,10);\n$arr2 = array();\nforeach($arr as $key =>\
    \ $value){\n    if($value > 0){\n        $arr2[] = $value;\n    }\n}\nprint_r($arr2);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr2 = array();\nforeach($arr as $key => $value){\n    if($value > 0){\n    \
    \    $arr2[] = $value;\n    }\n}\nprint_r($arr2);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$arr2\
    \ = array();\nforeach($arr as $key => $value){\n    if($value > 0){\n        $arr2[]\
    \ = $value;\n    }\n}\nprint_r($arr2);\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$arr2 = array();\nforeach($arr\
    \ as $key => $value){\n    if($value > 0){\n        $arr2[] = $value;\n    }\n\
    }\nprint_r($arr2);\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php |>\n<code>\n\
    $arr = array(1,2,3,4,5,6,7,8,9,10);\n$arr2 = array();\nforeach($arr as $key =>\
    \ $value){\n    if($value > 0){\n        $arr2[] = $value;\n    }\n}\nprint_r($arr2);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr2 = array();\nforeach($arr as $key => $value){\n    if($value > 0){\n    \
    \    $arr2[] = $value;\n    }\n}\nprint_r($arr2);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=1 |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$arr2 = array();\n\
    foreach($arr as $key => $value){\n    if($\nfunction candidate(...$args) {\n \
    \   return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzeiu00c9.php on line 15

    '
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have negative numbers\
    \ in the array. `array_filter` will remove them from the array.\n<|/ c |>\n<|\
    \ c |>\n: Yes, it does. `array_filter` removes elements from the array that don't\
    \ satisfy the callback function. The callback function must return `true` or `false`\
    \ for each element to keep or remove it.\n<|/ c |>\n<| c |>\n: I added an example\
    \ that shows how it works.\n<|/ c |>\n<| c |>\n: I added an example that shows\
    \ how it works.\n<|/ c |>\n<| c |>\n: I added an example that shows how it works.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1, -2, 3, -4, 5, -6, 7);\n\
    $positive = array_filter($array, function($v) { return $v > 0; });\n</code>\n\
    <|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have negative numbers\
    \ in the array. `array_filter` will remove them from the array.\n<|/ c |>\n<|\
    \ c |>\n: I added an example that shows how it works.\n<|/ c |>\n<| c |>\n: I\
    \ added an example that shows how it works.\n<|/ c |>\n<| c |>\n: I added an example\
    \ that shows how it works.\n<|/ c |>\n<| c |>\n: I added an example that shows\
    \ how it works.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1, -2, 3,\
    \ -4, 5, -6, 7);\n$positive = array_filter($array, function($v) { return $v >\
    \ 0; });\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you\
    \ have negative numbers in the array. `array_filter` will remove them from the\
    \ array.\n<|/ c |>\n<| c |>\n: I added an example that shows how it works.\n<|/\
    \ c |>\n<| c |>\n: I added an example that shows how it works.\n<|/ c |>\n<| c\
    \ |>\n: I added an example that shows how it works.\n<|/ c |>\n<| c |>\n: I added\
    \ an example that shows how it works.\n<|/ c |>\n<| a \nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjom5hdgj.php on line 10

    '
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $k => $v) {\n        if ($v\
    \ > 0) {\n            $positive[$k] = $v;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8_gsxgs.php:22\n\
    Stack trace:\n#0 /tmp/tmpn8_gsxgs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn8_gsxgs.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) {\n        return $v > 0;\n    });\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a |>\n<code>\n$arr = array(\n\
    \    array('id' => 1, 'name' => 'a'),\n    array('id' => 2, 'name' => 'b'),\n\
    \    array('id' => 3, 'name' => 'c'),\n    array('id' => 4, 'name' => 'd'),\n\
    \    array('id' => 5, 'name' => 'e'),\n    array('id' => 6, 'name' => 'f'),\n\
    \    array('id' => 7, 'name' => 'g'),\n    array('id' => 8, 'name' => 'h'),\n\
    \    array('id' => 9, 'name' => 'i'),\n    array('id' => 10, 'name' => 'j'),\n\
    \    array('id' => 11, 'name' => 'k'),\n    array('id' => 12, 'name' => 'l'),\n\
    \    array('id' => 13, 'name' => 'm'),\n    array('id' => 14, 'name' => 'n'),\n\
    \    array('id' => 15, 'name' => 'o'),\n    array('id' => 16, 'name' => 'p'),\n\
    \    array('id' => 17, 'name' => 'q'),\n    array('id' => 18, 'name' => 'r'),\n\
    \    array('id' => 19, 'name' => 's'),\n    array('id' => 20, 'name' => 't'),\n\
    \    array('id' => 21, 'name' => 'u'),\n    array('id' => 22, 'name' => 'v'),\n\
    \    array('id' => 23, 'name' => 'w'),\n    array('id' => 24, 'name' => 'x'),\n\
    \    array('id' => 25, 'name' => 'y'),\n    array('id' => 26, 'name' => 'z'),\n\
    \    array('id' => 27, 'name' => 'aa'),\n    array('id' => 28, 'name' => 'ab'),\n\
    \    array('id' => 29, 'name' => 'ac'),\n    array('id' => 30, 'name' => 'ad'),\n\
    \    array('id' => 31, 'name' => 'ae'),\n    array('id' => 32, 'name' => 'af'),\n\
    \    array('id' => 33, 'name' => 'ag'),\n    array('id' => 34, 'name' => 'ah'),\n\
    \    array('id' => 35, 'name' => 'ai'),\n    array('id' => 36, 'name' => 'aj'),\n\
    \    array('id' => 37, 'name' => 'ak'),\n    array('id' => 38, 'name' => 'al'),\n\
    \    array('id' => 39, 'name' => 'am'),\n    array('id' => 40, 'name' => 'an\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt6f_dlhl.php on line 12

    '
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $k => $v) {\n    if ($v > 0) {\n\
    \      $positive[$k] = $v;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjpr27ol.php:22\n\
    Stack trace:\n#0 /tmp/tmppjpr27ol.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppjpr27ol.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($n) {\n        return $n > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfkvd26i.php:18\n\
    Stack trace:\n#0 /tmp/tmptfkvd26i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptfkvd26i.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $k => $v) {\n    if ($v > 0) {\n\
    \      $positive[$k] = $v;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjpr27ol.php:22\n\
    Stack trace:\n#0 /tmp/tmppjpr27ol.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppjpr27ol.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter(\n    $l,\n    function ($value) {\n      return $value\
    \ > 0;\n    }\n  );\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id'\
    \ => 2, 'name' => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id'\
    \ => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name' => 'Jack'),\n    array('id'\
    \ => 6, 'name' => 'Jill'),\n    array('id' => 7, 'name' => 'Jack'),\n    array('id'\
    \ => 8, 'name' => 'Jill'),\n    array('id' => 9, 'name' => 'Jack'),\n    array('id'\
    \ => 10, 'name' => 'Jill'),\n    array('id' => 11, 'name' => 'Jack'),\n    array('id'\
    \ => 12, 'name' => 'Jill'),\n    array('id' => 13, 'name' => 'Jack'),\n    array('id'\
    \ => 14, 'name' => 'Jill'),\n    array('id' => 15, 'name' => 'Jack'),\n    array('id'\
    \ => 16, 'name' => 'Jill'),\n    array('id' => 17, 'name' => 'Jack'),\n    array('id'\
    \ => 18, 'name' => 'Jill'),\n    array('id' => 19, 'name' => 'Jack'),\n    array('id'\
    \ => 20, 'name' => 'Jill'),\n    array('id' => 21, 'name' => 'Jack'),\n    array('id'\
    \ => 22, 'name' => 'Jill'),\n    array('id' => 23, 'name' => 'Jack'),\n    array('id'\
    \ => 24, 'name' => 'Jill'),\n    array('id' => 25, 'name' => 'Jack'),\n    array('id'\
    \ => 26, 'name' => 'Jill'),\n    array('id' => 27, 'name' => 'Jack'),\n    array('id'\
    \ => 28, 'name' => 'Jill'),\n    array('id' => 29, 'name' => 'Jack'),\n    array('id'\
    \ => 30, 'name' => 'Jill'),\n    array('id' => 31, 'name' => 'Jack'),\n    array('id'\
    \ => 32, 'name' => 'Jill'),\n    array('id' => 33, 'name' => 'Jack'),\n    array('id'\
    \ => 34, 'name' => 'Jill'),\n    array('id' => 35, 'name' => 'Jack'),\n    array('id'\
    \ => 36, 'name' => 'Jill'),\n    array('id\nfunction candidate(...$args) {\n \
    \   return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphff2a4os.php on line 15

    '
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdsg0anan.php:18\n\
    Stack trace:\n#0 /tmp/tmpdsg0anan.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdsg0anan.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function ($v) {\n        return $v > 0;\n   \
    \ });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbe4bf6r6.php:18\n\
    Stack trace:\n#0 /tmp/tmpbe4bf6r6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbe4bf6r6.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter(\n        $l,\n        function ($v) { return $v\
    \ > 0; });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yu03pqr.php:18\n\
    Stack trace:\n#0 /tmp/tmp0yu03pqr.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0yu03pqr.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $k => $v) {\n        if ($v\
    \ > 0) {\n            $positive[$k] = $v;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8_gsxgs.php:22\n\
    Stack trace:\n#0 /tmp/tmpn8_gsxgs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn8_gsxgs.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdsg0anan.php:18\n\
    Stack trace:\n#0 /tmp/tmpdsg0anan.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdsg0anan.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $key => $value) {\n        if\
    \ ($value > 0) {\n            $positive[$key] = $value;\n        }\n    }\n  \
    \  return $positive;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 =>\
    \ 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 =>\
    \ 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n\
    \    15 => 16,\n    16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n \
    \   20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n  \
    \  25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n   \
    \ 30 => 31,\n    31 => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35\
    \ => 36,\n    36 => 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 =>\
    \ 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n\
    \    46 => 47,\n    47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n \
    \   51 => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n  \
    \  56 => 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n   \
    \ 61 => 62,\n    62 => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66\
    \ => 67,\n    67 => 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 =>\
    \ 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n    75 => 76,\n    \nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz2euhmvl.php on line 16

    '
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(-1,\
    \ 2, -4, 5, 6);\n$positive = array_filter($array, function($v) { return $v > 0;\
    \ });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ `array_filter` was introduced in PHP 5.3.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. `array_filter` was introduced in PHP 5.3.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. `array_filter` was introduced in PHP\
    \ 5.3.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(-1, 2, -4, 5, 6);\n\
    $positive = array_filter($array, function($v) { return $v > 0; });\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis should be the accepted answer. `array_filter`\
    \ was introduced in PHP 5.3.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(-1,\
    \ 2, -4, 5, 6);\n$positive = array_filter($array, function($v) { return $v > 0;\
    \ });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(-1, 2, -4, 5, 6);\n$positive = array_filter($array, function($v) { return\
    \ $v > 0; });\n</code>\n<|/ a dscore=5 |>\n<| a dscore=4 |>\n<code>\n$array =\
    \ array(-1, 2, -4, 5, 6);\n$positive = array_filter($array, function($v) { return\
    \ $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(-1, 2, -4, 5, 6);\n$positive = array_filter($array, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a dscore=4 |>\n<| a dscore=4 |>\n<code>\n\
    $array = array(-1, 2, -4, 5, 6);\n$positive = array_filter($array, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=4 |>\n\
    <code>\n$array = array(-1, 2, -4, 5, 6);\n$positive = array_filter($array, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=php\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpn3mko7ok.php on line 10

    '
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if the array contains\
    \ negative numbers. Try it with `array(-1, 2, -4, 5, 6)`.\n<|/ c |>\n<| c |>\n\
    : I didn't see that requirement in the question. I've added a version that does\
    \ that.\n<|/ c |>\n<| c |>\n: I added a version that does that too.\n<|/ c |>\n\
    <| c |>\n: I added a version that does that too.\n<|/ c |>\n<| c |>\n: I added\
    \ a version that does that too.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array(-1, 2, -4, 5, 6);\n$positive = array_filter($array, function($v) { return\
    \ $v > 0; });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if the array\
    \ contains negative numbers. Try it with `array(-1, 2, -4, 5, 6)`.\n<|/ c |>\n\
    <| c |>\n: I didn't see that requirement in the question. I've added a version\
    \ that does that.\n<|/ c |>\n<| c |>\n: I added a version that does that too.\n\
    <|/ c |>\n<| c |>\n: I added a version that does that too.\n<|/ c |>\n<| c |>\n\
    : I added a version that does that too.\n<|/ c |>\n<| a dscore=4 |>\n<code>\n\
    $array = array(-1, 2, -4, 5, 6);\n$positive = array_filter($array, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=4 |>\n\
    <code>\n$array = array(-1, 2, -4, 5, 6);\n$positive = array_filter($array, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(-1, 2, -4, 5, 6);\n$positive = array_filter($array,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3\
    \ |>\n<code>\n$array = array(-1, 2, -4, 5, 6);\n$positive = array_filter($array,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpog2kic12.php on line 12

    '
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $key => $value) {\n    if ($value\
    \ > 0) {\n      $positive[$key] = $value;\n    }\n  }\n  return $positive;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26itqruu.php:22\n\
    Stack trace:\n#0 /tmp/tmp26itqruu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp26itqruu.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter(\n        $l,\n        function ($v) {\n        \
    \    return $v > 0;\n        }\n    );\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk1qljgy.php:21\n\
    Stack trace:\n#0 /tmp/tmplk1qljgy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplk1qljgy.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter(\n        $l,\n        function ($v) {\n        \
    \    return $v > 0;\n        }\n    );\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk1qljgy.php:21\n\
    Stack trace:\n#0 /tmp/tmplk1qljgy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplk1qljgy.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter(\n        $l,\n        function ($v) { return $v\
    \ > 0; });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yu03pqr.php:18\n\
    Stack trace:\n#0 /tmp/tmp0yu03pqr.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0yu03pqr.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $key => $value) {\n        if\
    \ ($value > 0) {\n            $positive[$key] = $value;\n        }\n    }\n  \
    \  return $positive;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua19unby.php:22\n\
    Stack trace:\n#0 /tmp/tmpua19unby.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpua19unby.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) {\n        return $v > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcu39sv1j.php:18\n\
    Stack trace:\n#0 /tmp/tmpcu39sv1j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpcu39sv1j.php\
    \ on line 18\n"
  timestamp: 1659730132
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $key => $value) {\n        if\
    \ ($value > 0) {\n            $positive[$key] = $value;\n        }\n    }\n  \
    \  return $positive;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua19unby.php:22\n\
    Stack trace:\n#0 /tmp/tmpua19unby.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpua19unby.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_filter($array, function($v){\n    return $v > 0;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=1 tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array =\
    \ array(1,2,3,4,5,6,7,8,9,10);\n$array = array_filter($array, function($v){\n\
    \    return $v > 0;\n});\nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$array = array_filter($array,\
    \ function($v){\n    return $v > 0;\n});\nprint_r($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$array\
    \ = array_filter($array, function($v){\n    return $v > 0;\n});\nprint_r($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_filter($array, function($v){\n    return $v > 0;\n});\nprint_r($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_filter($array, function($v){\n    return $v > 0;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_filter($array, function($v){\n    return $v > 0;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_filter($array, function($v){\n    return $v > 0;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2w7mh4k4.php on line 16

    '
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $key => $value) {\n    if ($value\
    \ > 0) {\n      $positive[$key] = $value;\n    }\n  }\n  return $positive;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26itqruu.php:22\n\
    Stack trace:\n#0 /tmp/tmp26itqruu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp26itqruu.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) {\n        return $v > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcu39sv1j.php:18\n\
    Stack trace:\n#0 /tmp/tmpcu39sv1j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpcu39sv1j.php\
    \ on line 18\n"
  timestamp: 1659730132
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $k => $v) {\n        if ($v\
    \ > 0) {\n            $positive[$k] = $v;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8_gsxgs.php:22\n\
    Stack trace:\n#0 /tmp/tmpn8_gsxgs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn8_gsxgs.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function ($value) {\n        return $value >\
    \ 0;\n    });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_b2soqi.php:18\n\
    Stack trace:\n#0 /tmp/tmp6_b2soqi.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6_b2soqi.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter(\n        $l,\n        function ($v) {\n        \
    \    return $v > 0;\n        }\n    );\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk1qljgy.php:21\n\
    Stack trace:\n#0 /tmp/tmplk1qljgy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplk1qljgy.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter(\n    $l,\n    function ($value) {\n      return $value\
    \ > 0;\n    }\n  );\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ndq4qki.php:21\n\
    Stack trace:\n#0 /tmp/tmp_ndq4qki.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_ndq4qki.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a |>\n<code>\n<?php\n$array = array(\n    0 => 1,\n    1\
    \ => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n   \
    \ 7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51\n);\n\n$array = array_filter($array, function($v){\n\
    \    return $v > 0;\n});\n\nprint_r($array);\n</code>\n<|/ a tags=arrays,php dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\n    0 => 1,\n    1 => 2,\n  \
    \  2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n\
    \    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n    13\
    \ => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n    18 =>\
    \ 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n\
    \    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4659p7ai.php on line 10

    '
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $k => $v) {\n        if ($v\
    \ > 0) {\n            $positive[$k] = $v;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8_gsxgs.php:22\n\
    Stack trace:\n#0 /tmp/tmpn8_gsxgs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn8_gsxgs.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($n) {\n    return $n >= 0;\n  });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr0747p8.php:18\n\
    Stack trace:\n#0 /tmp/tmpmr0747p8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmr0747p8.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3rlud87i.php:15\n\
    Stack trace:\n#0 /tmp/tmp3rlud87i.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp3rlud87i.php\
    \ on line 15\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvm96nya.php:16\n\
    Stack trace:\n#0 /tmp/tmpmvm96nya.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmvm96nya.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) {\n        return $v > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcu39sv1j.php:18\n\
    Stack trace:\n#0 /tmp/tmpcu39sv1j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpcu39sv1j.php\
    \ on line 18\n"
  timestamp: 1659730132
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaq0f__lt.php:16\n\
    Stack trace:\n#0 /tmp/tmpaq0f__lt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpaq0f__lt.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($n) {\n        return $n > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfkvd26i.php:18\n\
    Stack trace:\n#0 /tmp/tmptfkvd26i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptfkvd26i.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n\
    \      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5q8x5avt.php on line 16

    '
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29k_fjcb.php:16\n\
    Stack trace:\n#0 /tmp/tmp29k_fjcb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp29k_fjcb.php\
    \ on line 16\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) {\n        return $v > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcu39sv1j.php:18\n\
    Stack trace:\n#0 /tmp/tmpcu39sv1j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpcu39sv1j.php\
    \ on line 18\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $k => $v) {\n        if ($v\
    \ >= 0) {\n            $positive[$k] = $v;\n        }\n    }\n    return $positive;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptenrkcyo.php:22\n\
    Stack trace:\n#0 /tmp/tmptenrkcyo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptenrkcyo.php\
    \ on line 22\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194

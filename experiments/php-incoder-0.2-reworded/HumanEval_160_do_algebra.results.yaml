language: php
name: HumanEval_160_do_algebra
results:
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4w868vv2.php:32\n\
    Stack trace:\n#0 /tmp/tmp4w868vv2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4w868vv2.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key == '+') {\n   \
    \         $result += $operand[$key];\n        } elseif ($key == '-') {\n     \
    \       $result -= $operand[$key];\n        } elseif ($key == '*') {\n       \
    \     $result *= $operand[$key];\n        } elseif ($key == '/') {\n         \
    \   $result /= $operand[$key];\n        } elseif ($key == '**') {\n          \
    \  $result **= $operand[$key];\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_xzjzjy.php:43\n\
    Stack trace:\n#0 /tmp/tmp5_xzjzjy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5_xzjzjy.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key === 0) {\n            $result = $operand[0];\n\
    \        } else {\n            $result = $result + $operand[$key] * $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfz6486gl.php on line\
    \ 26\n\nWarning: A non-numeric value encountered in /tmp/tmpfz6486gl.php on line\
    \ 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfz6486gl.php:37\n\
    Stack trace:\n#0 /tmp/tmpfz6486gl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfz6486gl.php\
    \ on line 37\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = $operand[0];\n\
    \    for ($i = 1; $i < count($operand); $i++) {\n        $result = $operator[0]($result,\
    \ $operand[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpe0zylyi1.php:24\n\
    Stack trace:\n#0 /tmp/tmpe0zylyi1.php(30): do_algebra(Array, Array)\n#1 /tmp/tmpe0zylyi1.php(34):\
    \ candidate(Array, Array)\n#2 /tmp/tmpe0zylyi1.php(39): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpe0zylyi1.php on line 24\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ = $result + $operand[0];\n                break;\n            case '-':\n  \
    \              $result = $result - $operand[0];\n                break;\n    \
    \        case '*':\n                $result = $result * $operand[0];\n       \
    \         break;\n            case '/':\n                $result = $result / $operand[0];\n\
    \                break;\n            case '**':\n                $result = $result\
    \ ** $operand[0];\n                break;\n            default:\n            \
    \    echo \"Invalid operator\";\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9y_hbe4y.php:50\n\
    Stack trace:\n#0 /tmp/tmp9y_hbe4y.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp9y_hbe4y.php\
    \ on line 50\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result += (array_key_exists($key,\
    \ $operand) ? $operand[$key] : $operand[0]) * ($value === '-' ? -1 : 1);\n   \
    \ }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| c\
    \ |>\nThis doesn't seem to work. `do_algebra(['+', '*', '-'], [2, 3, 4, 5])` returns\
    \ `9` instead of `9 + 2 * 3 - 4 * 5`.\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I edited my answer to include a test case.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ if you try `do_algebra(['+', '*', '-'], [2, 3, 4, 5])` which should return `9\
    \ + 2 * 3 - 4 * 5` but returns `9 + 2 * 3 - 4 * 5`.\n<|/ c |>\n<| c |>\nI edited\
    \ my answer to include a test case that returns `9 + 2 * 3 - 4 * 5`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I edited my answer to include a test case.\n\
    <|/ c |>\n<| a dscore=2 |>\nI wrote a recursive solution that works with any number\
    \ of operands and operators:\n<code>\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdc83e8ei.php on line 28

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result = $result + ($operand[$key]\
    \ * $value);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4nh7nytk.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp4nh7nytk.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp4nh7nytk.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4nh7nytk.php:34\n\
    Stack trace:\n#0 /tmp/tmp4nh7nytk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4nh7nytk.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result += (array_key_exists($key, $operand) ?\
    \ $operand[$key] : $operand[0]);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27eghphl.php:32\n\
    Stack trace:\n#0 /tmp/tmp27eghphl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp27eghphl.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result = $result + $operand[$key]\
    \ * $value;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n \
    \   return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpgdahth8c.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpgdahth8c.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpgdahth8c.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgdahth8c.php:33\n\
    Stack trace:\n#0 /tmp/tmpgdahth8c.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgdahth8c.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result += $operand[$key];\n\
    \        } elseif ($key == '-') {\n            $result -= $operand[$key];\n  \
    \      } elseif ($key == '*') {\n            $result *= $operand[$key];\n    \
    \    } elseif ($key == '/') {\n            $result /= $operand[$key];\n      \
    \  } elseif ($key == '**') {\n            $result **= $operand[$key];\n      \
    \  }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_am85dnw.php:43\n\
    Stack trace:\n#0 /tmp/tmp_am85dnw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_am85dnw.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ = $result + $operand[0];\n                break;\n            case '-':\n  \
    \              $result = $result - $operand[0];\n                break;\n    \
    \        case '*':\n                $result = $result * $operand[0];\n       \
    \         break;\n            case '/':\n                $result = $result / $operand[0];\n\
    \                break;\n            case '**':\n                $result = $result\
    \ ** $operand[0];\n                break;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tyx_4u5.php:48\n\
    Stack trace:\n#0 /tmp/tmp_tyx_4u5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_tyx_4u5.php\
    \ on line 48\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9udcr6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9udcr6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9udcr6b.php\
    \ on line 29\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result += (array_key_exists($key, $operand) ?\
    \ $operand[$key] : 0) * ($value == '+' ? 1 : -1);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,math,algorithm |>\n<| c |>\nI like this solution, but\
    \ I wonder if there is a way to do it without using eval. I'm looking for a way\
    \ to do this without using eval.\n<|/ c |>\n<| c |>\nI added an alternative solution\
    \ that doesn't use eval.\n<|/ c |>\n<| c |>\nI added an alternative solution that\
    \ doesn't use eval.\n<|/ c |>\n<| a dscore=1 |>\nI wrote this in Python, since\
    \ I didn't have PHP available, but I hope it helps.\n<code>\ndef do_algebra(operator,\
    \ operand):\n    operator = operator.split()\n    operand = operand.split()\n\
    \    operator = [op for op in operator if op != '']\n    operand = [op for op\
    \ in operand if op != '']\n    operator = operator[::-1]\n    operand = operand[::-1]\n\
    \    operator = operator[0]\n    operand = operand[0]\n    operator = operator.replace('+',\
    \ '*')\n    operand = operand.replace('+', '*')\n    operator = operator.replace('-',\
    \ '/')\n    operand = operand.replace('-', '/')\n    operator = operator.replace('*',\
    \ '/')\n    operand = operand.replace('*', '/')\n    operator = operator.replace('//',\
    \ '/')\n    operand = operand.replace('//', '/')\n    operator = operator.replace('**',\
    \ '^')\n    operand = operand.replace('**', '^')\n    operator = operator.replace('^',\
    \ '**')\n    operand = operand.replace('^', '**')\n    operator = operator.replace('*',\
    \ '*')\n    operand = operand.replace('*', '*')\n    operator = operator.replace('^',\
    \ '**')\n    operand = operand.replace('^', '**')\n    operator = operator.replace('**',\
    \ '^')\n    operand = operand.replace('**', '^')\n    operator = operator.replace('^',\
    \ '**')\n    operand = operand.replace('^', '**')\n    operator = operator.replace('**',\
    \ '^')\n    operand = operand.replace('**', '^')\n    operator = operator.replace('^',\
    \ '**')\n    operand = operand.replace('^', '**')\n    operator = operator.replace('**',\
    \ '^')\n    operand = operand.replace('**', '^')\n    operator = operator.replace('^',\
    \ '**')\n    operand = operand.replace('^', '**')\n    operator = \nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpard45dtu.php on line 27

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result = $result\
    \ + $operand[$key];\n        } elseif ($key == '-') {\n            $result = $result\
    \ - $operand[$key];\n        } elseif ($key == '*') {\n            $result = $result\
    \ * $operand[$key];\n        } elseif ($key == '/') {\n            $result = $result\
    \ / $operand[$key];\n        } elseif ($key == '**') {\n            $result =\
    \ $result ** $operand[$key];\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2c2ycjlj.php:42\n\
    Stack trace:\n#0 /tmp/tmp2c2ycjlj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp2c2ycjlj.php\
    \ on line 42\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmmup0yx.php:33\n\
    Stack trace:\n#0 /tmp/tmplmmup0yx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplmmup0yx.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = $operand[0];\n    foreach ($operand as $key => $value)\
    \ {\n        if ($key > 0) {\n            $result = $result . $operators[$operator[$key]]\
    \ . $value;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptntcz06i.php:35\n\
    Stack trace:\n#0 /tmp/tmptntcz06i.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptntcz06i.php\
    \ on line 35\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\n$operator = array('+',\
    \ '*', '-');\n$operand = array(2, 3, 4, 5);\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuyqw22r.php:32\n\
    Stack trace:\n#0 /tmp/tmpvuyqw22r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvuyqw22r.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    $length = count($operator);\n    $operands\
    \ = count($operand);\n    $i = 0;\n    foreach ($operator as $key => $value) {\n\
    \        if ($i < $operands) {\n            $result[$key] = $operand[$i];\n  \
    \          $i++;\n        } else {\n            $result[$key] = $operand[$i -\
    \ 1];\n        }\n    }\n    foreach ($operators as $key => $value) {\n      \
    \  if ($key < $length) {\n            $result[$key] = $result[$key] . $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplumpk03u.php:47\n\
    Stack trace:\n#0 /tmp/tmplumpk03u.php(52): test()\n#1 {main}\n  thrown in /tmp/tmplumpk03u.php\
    \ on line 47\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        if (in_array($value, $operators)) {\n            $result[] = $operand[$key];\n\
    \        } else {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hbyl87d.php:38\n\
    Stack trace:\n#0 /tmp/tmp0hbyl87d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0hbyl87d.php\
    \ on line 38\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result = $result\
    \ + $operand[$key];\n        } elseif ($key == '-') {\n            $result = $result\
    \ - $operand[$key];\n        } elseif ($key == '*') {\n            $result = $result\
    \ * $operand[$key];\n        } elseif ($key == '/') {\n            $result = $result\
    \ / $operand[$key];\n        } elseif ($key == '**') {\n            $result =\
    \ $result ** $operand[$key];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpan4s85gp.php:43\n\
    Stack trace:\n#0 /tmp/tmpan4s85gp.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpan4s85gp.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key === 0) {\n    \
    \        $result = $operand[0] + $operand[1];\n        } else if ($key === 1)\
    \ {\n            $result = $operand[0] - $operand[1];\n        } else if ($key\
    \ === 2) {\n            $result = $operand[0] * $operand[1];\n        } else if\
    \ ($key === 3) {\n            $result = $operand[0] / $operand[1];\n        }\
    \ else if ($key === 4) {\n            $result = pow($operand[0], $operand[1]);\n\
    \        } else if ($key === 5) {\n            $result = pow($operand[0], $operand[1])\
    \ * $operand[1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpjxuvwa.php:46\n\
    Stack trace:\n#0 /tmp/tmpbpjxuvwa.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpbpjxuvwa.php\
    \ on line 46\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ = $result + $operand[0];\n                break;\n            case '-':\n  \
    \              $result = $result - $operand[0];\n                break;\n    \
    \        case '*':\n                $result = $result * $operand[0];\n       \
    \         break;\n            case '/':\n                $result = $result / $operand[0];\n\
    \                break;\n            case '**':\n                $result = $result\
    \ ** $operand[0];\n                break;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsa_xkew6.php:49\n\
    Stack trace:\n#0 /tmp/tmpsa_xkew6.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpsa_xkew6.php\
    \ on line 49\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key === 0) {\n    \
    \        $result = $operand[0];\n        } else {\n            $result = $operand[$key]\
    \ + $result;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp68azjxxn.php:38\n\
    Stack trace:\n#0 /tmp/tmp68azjxxn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp68azjxxn.php\
    \ on line 38\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = $operand[0];\n\
    \    for ($i = 1; $i < count($operand); $i++) {\n        $result = $operator[$operand[$i\
    \ - 1]]($result, $operand[$i]);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function +() in /tmp/tmp6ggxhajf.php:24\n\
    Stack trace:\n#0 /tmp/tmp6ggxhajf.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp6ggxhajf.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp6ggxhajf.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp6ggxhajf.php on line 24\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9udcr6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9udcr6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9udcr6b.php\
    \ on line 29\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        $result[] = $operand[$key];\n        foreach ($operators as $operator)\
    \ {\n            $result[] = $operand[$key] . $operator . $operand[$key+1];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0jwyjxd.php:37\n\
    Stack trace:\n#0 /tmp/tmpq0jwyjxd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpq0jwyjxd.php\
    \ on line 37\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n    $result =\
    \ 0;\n    foreach ($operand as $key => $value) {\n        $result += (array_key_exists($key,\
    \ $operator) ? $operator[$key]($operand[$key]) : 0);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpptu361p_.php:24\n\
    Stack trace:\n#0 /tmp/tmpptu361p_.php(30): do_algebra(Array, Array)\n#1 /tmp/tmpptu361p_.php(34):\
    \ candidate(Array, Array)\n#2 /tmp/tmpptu361p_.php(39): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpptu361p_.php on line 24\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 1; $i < count($operand); $i++) {\n        $result = $operator[0]($result, $operand[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpumksp4dg.php:23\n\
    Stack trace:\n#0 /tmp/tmpumksp4dg.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpumksp4dg.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpumksp4dg.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpumksp4dg.php on line 23\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key === 0) {\n    \
    \        $result += $operand[$key];\n        } else {\n            $result -=\
    \ $operand[$key];\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThanks for your help! I appreciate it! I did some research and\
    \ found that I can use eval() but that would not be a good solution for me. I\
    \ am still trying to figure out how to do it, but thank you for your help!\n<|/\
    \ c |>\n<| c |>\nI added a solution that uses eval, but I wouldn't recommend using\
    \ it for production code. There are better ways to do this.\n<|/ c |>\n<| c |>\n\
    Thank you so much for your help! I appreciate it!\n<|/ c |>\n<| a tags=php,arrays,math\
    \ |>\nI figured it out! I used eval() but I am not sure if this is the best way\
    \ to do it. I will post my code below. \n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkzuxv21u.php on line 32

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operand as $key => $value) {\n        $result += (array_key_exists($key,\
    \ $operator) ? $operator[$key]($operand[$key]) : 0);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpfe8zykx5.php:24\n\
    Stack trace:\n#0 /tmp/tmpfe8zykx5.php(30): do_algebra(Array, Array)\n#1 /tmp/tmpfe8zykx5.php(34):\
    \ candidate(Array, Array)\n#2 /tmp/tmpfe8zykx5.php(39): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpfe8zykx5.php on line 24\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result += $operand[$key] * $value;\n    }\n \
    \   return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpmj9ddnt1.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpmj9ddnt1.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpmj9ddnt1.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmj9ddnt1.php:32\n\
    Stack trace:\n#0 /tmp/tmpmj9ddnt1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmj9ddnt1.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9udcr6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9udcr6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9udcr6b.php\
    \ on line 29\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmmup0yx.php:33\n\
    Stack trace:\n#0 /tmp/tmplmmup0yx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplmmup0yx.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ = $result + $operand[0];\n                break;\n            case '-':\n  \
    \              $result = $result - $operand[0];\n                break;\n    \
    \        case '*':\n                $result = $result * $operand[0];\n       \
    \         break;\n            case '/':\n                $result = $result / $operand[0];\n\
    \                break;\n            case '**':\n                $result = $result\
    \ ** $operand[0];\n                break;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tyx_4u5.php:48\n\
    Stack trace:\n#0 /tmp/tmp_tyx_4u5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_tyx_4u5.php\
    \ on line 48\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key == '+') {\n   \
    \         $result += $operand[$key];\n        } elseif ($key == '-') {\n     \
    \       $result -= $operand[$key];\n        } elseif ($key == '*') {\n       \
    \     $result *= $operand[$key];\n        } elseif ($key == '/') {\n         \
    \   $result /= $operand[$key];\n        } elseif ($key == '**') {\n          \
    \  $result **= $operand[$key];\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$operators = array('+', '-',\
    \ '*', '/', '**');\n$operands = array(2, 3, 4, 5);\n$result = do_algebra($operators,\
    \ $operands);\necho $result;\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxpxb34x_.php on line 38

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    $stack = array();\n    $stack[] =\
    \ $operand[0];\n    $stack[] = $operand[1];\n    foreach ($stack as $key => $value)\
    \ {\n        foreach ($operators as $operator) {\n            if ($operator ==\
    \ '**') {\n                $result[$key] = $stack[$key] * $stack[$key];\n    \
    \        } else {\n                $result[$key] = $stack[$key] . $operator;\n\
    \            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4s1qr80.php:42\n\
    Stack trace:\n#0 /tmp/tmpq4s1qr80.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpq4s1qr80.php\
    \ on line 42\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9udcr6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9udcr6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9udcr6b.php\
    \ on line 29\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n    $result =\
    \ 0;\n    foreach ($operand as $key => $value) {\n        if ($key == 0) {\n \
    \           $result = $value;\n        } else {\n            $result = $result\
    \ . $value;\n        }\n    }\n    foreach ($operator as $key => $value) {\n \
    \       if ($key == 0) {\n            $result = $result . $value;\n        } else\
    \ {\n            $result = $result . $value;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jutijn2.php:44\n\
    Stack trace:\n#0 /tmp/tmp9jutijn2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp9jutijn2.php\
    \ on line 44\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        $result += (array_key_exists($op, $operand) ? $operand[$op]\
    \ : $operand[0]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaj7gj6qj.php:33\n\
    Stack trace:\n#0 /tmp/tmpaj7gj6qj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpaj7gj6qj.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result = $result\
    \ + $operand[$key];\n        } elseif ($key == '-') {\n            $result = $result\
    \ - $operand[$key];\n        } elseif ($key == '*') {\n            $result = $result\
    \ * $operand[$key];\n        } elseif ($key == '/') {\n            $result = $result\
    \ / $operand[$key];\n        } elseif ($key == '**') {\n            $result =\
    \ $result ** $operand[$key];\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2c2ycjlj.php:42\n\
    Stack trace:\n#0 /tmp/tmp2c2ycjlj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp2c2ycjlj.php\
    \ on line 42\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmmup0yx.php:33\n\
    Stack trace:\n#0 /tmp/tmplmmup0yx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplmmup0yx.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = $operand[0];\n\
    \    for ($i = 1; $i < count($operand); $i++) {\n        $result .= $operator[0]\
    \ . $operand[$i];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_25qwct.php:33\n\
    Stack trace:\n#0 /tmp/tmpe_25qwct.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe_25qwct.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4w868vv2.php:32\n\
    Stack trace:\n#0 /tmp/tmp4w868vv2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4w868vv2.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 1; $i < count($operand); $i++) {\n        $result = $operator[$operand[$i -\
    \ 1]]($result, $operand[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function +() in /tmp/tmp1maokgxb.php:23\n\
    Stack trace:\n#0 /tmp/tmp1maokgxb.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp1maokgxb.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1maokgxb.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1maokgxb.php on line 23\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result = $result + ($operand[$key]\
    \ * $operand[$key]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhgrwucz.php:34\n\
    Stack trace:\n#0 /tmp/tmpxhgrwucz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxhgrwucz.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n    $result =\
    \ 0;\n    foreach ($operator as $key => $value) {\n        $result += (array_key_exists($key,\
    \ $operand) ? $operand[$key] : 0) * ($value == '+' ? 1 : -1);\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n05abvm.php:33\n\
    Stack trace:\n#0 /tmp/tmp1n05abvm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1n05abvm.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n    $result =\
    \ 0;\n    foreach($operator as $key => $value) {\n        $result = $result +\
    \ $operand[$key];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_y5oeuv.php:33\n\
    Stack trace:\n#0 /tmp/tmp7_y5oeuv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7_y5oeuv.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\n$operator = array('+',\
    \ '*', '-');\n$operand = array(2, 3, 4, 5);\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuyqw22r.php:32\n\
    Stack trace:\n#0 /tmp/tmpvuyqw22r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvuyqw22r.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key === 0) {\n            $result = $operand[0];\n\
    \        } else {\n            $result = $result + $operand[$key] * $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfz6486gl.php on line\
    \ 26\n\nWarning: A non-numeric value encountered in /tmp/tmpfz6486gl.php on line\
    \ 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfz6486gl.php:37\n\
    Stack trace:\n#0 /tmp/tmpfz6486gl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfz6486gl.php\
    \ on line 37\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n    $result =\
    \ 0;\n    foreach ($operator as $key => $value) {\n        $result += (array_key_exists($key,\
    \ $operand) ? $operand[$key] : $operand[0]);\n    }\n    return $result;\n}\n\
    </code>\n<|/ a tags=php,arrays,algorithm |>\n<| c |>\nThank you for your answer.\
    \ Your code works perfectly for me. I'm going to study your code to understand\
    \ how it works. Thank you again!\n<|/ c |>\n<| c |>\nYou're welcome! I added some\
    \ comments to help you understand what's going on. Let me know if you have any\
    \ questions.\n<|/ c |>\n<| c |>\nThank you for your explanation. Your code works\
    \ perfectly for me. I'm going to study your code to understand how it works. Thank\
    \ you again!\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$operator = array('+','-','*','/','^');\n\
    $operand = array(2,3,4,5);\n\n$result = 0;\nforeach($operator as $key => $value)\
    \ {\n    $result += (array_key_exists($key, $operand) ? $operand[$key] : $operand[0]);\n\
    }\n\necho $result;\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| a tags=php,arrays,algorithm\
    \ |>\n<code>\n<?php\n$operator = array('+','-','*','/','^');\n$operand = array(2,3,4,5);\n\
    \n$result = 0;\nforeach($operator as $key => $value) {\n    $result += (array_key_exists($key,\
    \ $operand) ? $operand[$key] : $operand[0]);\n}\n\necho $result;\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,arrays,algorithm |>\n<code>\n<?php\n$operator =\
    \ array('+','-','*','/','^');\n$operand = array(2,3,4,5);\n\n$result = 0;\nforeach($operator\
    \ as $key => $value) {\n    $result += (array_key_exists($key, $operand) ? $operand[$key]\
    \ : $operand[0]);\n}\n\necho $result;\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n<?php\n$operator = array('+','-','*','/','^');\n$operand = array(2,3,4,5);\n\
    \n$result = 0;\nforeach($operator as $key => $value) {\n    $result += (array_key_exists($key,\
    \ $operand) ? $operand[$key] : $operand[0]);\n}\n\necho $result;\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphnl_0khm.php on line 28

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array();\n    $operators[]\
    \ = '+';\n    $operators[] = '-';\n    $operators[] = '*';\n    $operators[] =\
    \ '//';\n    $operators[] = '**';\n    $operators[] = '=';\n    $operators[] =\
    \ '!=';\n    $operators[] = '<';\n    $operators[] = '<=';\n    $operators[] =\
    \ '>';\n    $operators[] = '>=';\n    $operators[] = '!';\n    $operators[] =\
    \ '&&';\n    $operators[] = '||';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp273yay_g.php on line 86

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for($i =\
    \ 1; $i < count($operand); $i++) {\n        $result = $operator[0]($result, $operand[$i]);\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmp24okstwu.php:23\n\
    Stack trace:\n#0 /tmp/tmp24okstwu.php(28): do_algebra(Array, Array)\n#1 /tmp/tmp24okstwu.php(32):\
    \ candidate(Array, Array)\n#2 /tmp/tmp24okstwu.php(37): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp24okstwu.php on line 23\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result += $operand[$key];\n\
    \        } elseif ($key == '-') {\n            $result -= $operand[$key];\n  \
    \      } elseif ($key == '*') {\n            $result *= $operand[$key];\n    \
    \    } elseif ($key == '/') {\n            $result /= $operand[$key];\n      \
    \  } elseif ($key == '**') {\n            $result **= $operand[$key];\n      \
    \  }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg37_a9sv.php:42\n\
    Stack trace:\n#0 /tmp/tmpg37_a9sv.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpg37_a9sv.php\
    \ on line 42\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key == '+') {\n   \
    \         $result +=  $operand[$key];\n        }\n        if ($key == '-') {\n\
    \            $result -=  $operand[$key];\n        }\n        if ($key == '*')\
    \ {\n            $result *=  $operand[$key];\n        }\n        if ($key == '/')\
    \ {\n            $result /=  $operand[$key];\n        }\n        if ($key == '**')\
    \ {\n            $result **=  $operand[$key];\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer, but i don't know\
    \ why i get this error when i try to run your code: Parse error: syntax error,\
    \ unexpected '$operand' (T_VARIABLE) in C:\\xampp\\htdocs\\test\\index.php on\
    \ line 18\n<|/ c |>\n<| c |>\nI edited my answer, I forgot to add `$operand` as\
    \ a parameter to the function.\n<|/ c |>\n<| c |>\nThanks again for your answer,\
    \ but i still get this error when i try to run your code: Parse error: syntax\
    \ error, unexpected '$operand' (T_VARIABLE) in C:\\xampp\\htdocs\\test\\index.php\
    \ on line 18\n<|/ c |>\n<| c |>\nI edited my answer, I forgot to add `$operand`\
    \ as a parameter to the function.\n<|/ c |>\n<| c |>\nThanks again for your answer,\
    \ but i still get this error when i try to run your code: Parse error: syntax\
    \ error, unexpected '$operand' (T_VARIABLE) in C:\\xampp\\htdocs\\test\\index.php\
    \ on line 18\n<|/ c |>\n<| a tags=php,math,arrays |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp39rdd4bc.php on line 42

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    $stack = array();\n    $stack[] =\
    \ $operand[0];\n    $stack[] = $operand[1];\n    $operator = $operators[count($operators)\
    \ - 1];\n    for ($i = 0; $i < count($operand) - 2; $i++) {\n        $stack[]\
    \ = $operator;\n        $stack[] = $operand[$i + 2];\n        $result = $stack;\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnstrj88f.php:39\n\
    Stack trace:\n#0 /tmp/tmpnstrj88f.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnstrj88f.php\
    \ on line 39\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        $result += $operand[$op - 1];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpgqq8bpw2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpgqq8bpw2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpgqq8bpw2.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqq8bpw2.php:33\n\
    Stack trace:\n#0 /tmp/tmpgqq8bpw2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgqq8bpw2.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmmup0yx.php:33\n\
    Stack trace:\n#0 /tmp/tmplmmup0yx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplmmup0yx.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    $i = 0;\n    foreach ($operator as\
    \ $op) {\n        if (in_array($op, $operators)) {\n            $result[$i] =\
    \ $operand[$i];\n            $i++;\n        } else {\n            $result[$i]\
    \ = $operand[$i];\n            $i++;\n            $result[$i] = $operand[$i];\n\
    \            $i++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7lj13s7.php:43\n\
    Stack trace:\n#0 /tmp/tmp_7lj13s7.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_7lj13s7.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operator = array_filter($operator);\n\
    \    $operand = array_filter($operand);\n    $operator = array_map(function($value)\
    \ {\n        return $value[0];\n    }, $operator);\n    $operand = array_map(function($value)\
    \ {\n        return $value[0];\n    }, $operand);\n    $operator = array_unique($operator);\n\
    \    $operand = array_unique($operand);\n    $result = \"\";\n    foreach ($operator\
    \ as $key => $value) {\n        $result .= $operand[$key] . $value;\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35gjg_77.php:43\n\
    Stack trace:\n#0 /tmp/tmp35gjg_77.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp35gjg_77.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    $stack = array();\n    $stack[] =\
    \ $operand[0];\n    for($i = 1; $i < count($operand); $i++) {\n        $stack[]\
    \ = $operand[$i];\n    }\n    while(count($stack) > 0) {\n        $operator =\
    \ array_shift($stack);\n        $operand = array_shift($stack);\n        if(in_array($operator,\
    \ $operators)) {\n            $result[] = $operand;\n        } else {\n      \
    \      $result[] = $operator;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhlofa5a.php:45\n\
    Stack trace:\n#0 /tmp/tmpuhlofa5a.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpuhlofa5a.php\
    \ on line 45\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ = $result + $operand[0];\n                break;\n            case '-':\n  \
    \              $result = $result - $operand[0];\n                break;\n    \
    \        case '*':\n                $result = $result * $operand[0];\n       \
    \         break;\n            case '/':\n                $result = $result / $operand[0];\n\
    \                break;\n            case '**':\n                $result = $result\
    \ ** $operand[0];\n                break;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tyx_4u5.php:48\n\
    Stack trace:\n#0 /tmp/tmp_tyx_4u5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_tyx_4u5.php\
    \ on line 48\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    $stack = array();\n    foreach ($operator\
    \ as $key => $value) {\n        $stack[] = $value;\n    }\n    foreach ($operand\
    \ as $key => $value) {\n        $stack[] = $value;\n    }\n    $stack = array_reverse($stack);\n\
    \    $operator = array_pop($stack);\n    $operand = array_pop($stack);\n    $operators[$operator]($operand);\n\
    \    foreach ($stack as $key => $value) {\n        $result[] = $value;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Function name must be a string in /tmp/tmp6rqoidpw.php:33\n\
    Stack trace:\n#0 /tmp/tmp6rqoidpw.php(41): do_algebra('**', '*')\n#1 /tmp/tmp6rqoidpw.php(45):\
    \ candidate(Array, Array)\n#2 /tmp/tmp6rqoidpw.php(50): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp6rqoidpw.php on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9udcr6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9udcr6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9udcr6b.php\
    \ on line 29\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        $result[$key] = $operand[$key];\n        foreach ($operators as $operator)\
    \ {\n            if ($operator == '**') {\n                $result[$key] *= $operand[$key];\n\
    \            } else {\n                $result[$key] += $operand[$key] * $operators[$operator];\n\
    \            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_5hd3u2e.php:40\n\
    Stack trace:\n#0 /tmp/tmp_5hd3u2e.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_5hd3u2e.php\
    \ on line 40\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        $result = $result + ($op == '+') ? $operand[0] : $operand[$operand[0]];\n\
    \        $operand = $operand[$operand[0]];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphla5frv8.php:33\n\
    Stack trace:\n#0 /tmp/tmphla5frv8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphla5frv8.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ = $result + $operand[0];\n                break;\n            case '-':\n  \
    \              $result = $result - $operand[0];\n                break;\n    \
    \        case '*':\n                $result = $result * $operand[0];\n       \
    \         break;\n            case '/':\n                $result = $result / $operand[0];\n\
    \                break;\n            case '**':\n                $result = $result\
    \ ** $operand[0];\n                break;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tyx_4u5.php:48\n\
    Stack trace:\n#0 /tmp/tmp_tyx_4u5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_tyx_4u5.php\
    \ on line 48\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmmup0yx.php:33\n\
    Stack trace:\n#0 /tmp/tmplmmup0yx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplmmup0yx.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key === 0) {\n            $result = $operand[$key];\n\
    \        } else {\n            $result = $result + $operand[$key] * $operator[$key\
    \ - 1];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfatra156.php on line\
    \ 26\n\nWarning: A non-numeric value encountered in /tmp/tmpfatra156.php on line\
    \ 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfatra156.php:36\n\
    Stack trace:\n#0 /tmp/tmpfatra156.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfatra156.php\
    \ on line 36\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\n$operator = array('+',\
    \ '*', '-');\n$operand = array(2, 3, 4, 5);\n$result = do_algebra($operator, $operand);\n\
    echo \"The result is $result\";\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The result is \nFatal error: Uncaught Exception: Test failed! in /tmp/tmprastxgs_.php:33\n\
    Stack trace:\n#0 /tmp/tmprastxgs_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprastxgs_.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        if (in_array($value, $operators)) {\n            $result[] = $operand[$key];\n\
    \        } else {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hbyl87d.php:38\n\
    Stack trace:\n#0 /tmp/tmp0hbyl87d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0hbyl87d.php\
    \ on line 38\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = $operand[0];\n\
    \    for ($i = 1; $i < count($operand); $i++) {\n        $result = $operator[0]($result,\
    \ $operand[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpe0zylyi1.php:24\n\
    Stack trace:\n#0 /tmp/tmpe0zylyi1.php(30): do_algebra(Array, Array)\n#1 /tmp/tmpe0zylyi1.php(34):\
    \ candidate(Array, Array)\n#2 /tmp/tmpe0zylyi1.php(39): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpe0zylyi1.php on line 24\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        $result = $result + ($op == '+') ? $operand[0] : $operand[$operand[0]];\n\
    \        $operand = array_slice($operand, 1);\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4c4z66qg.php:33\n\
    Stack trace:\n#0 /tmp/tmp4c4z66qg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4c4z66qg.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ = $result + $operand[0];\n                break;\n            case '-':\n  \
    \              $result = $result - $operand[0];\n                break;\n    \
    \        case '*':\n                $result = $result * $operand[0];\n       \
    \         break;\n            case '/':\n                $result = $result / $operand[0];\n\
    \                break;\n            case '**':\n                $result = $result\
    \ ** $operand[0];\n                break;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,math,algorithm |>\n<| c |>\nThis doesn't work if you\
    \ have more than two operands.\n<|/ c |>\n<| c |>\nIt works fine for me. Can you\
    \ give an example where it doesn't work?\n<|/ c |>\n<| c |>\nIt doesn't work for\
    \ me. Try it with the example I gave in my answer.\n<|/ c |>\n<| c |>\nI see what\
    \ you mean. I'll update my answer to reflect that.\n<|/ c |>\n<| c |>\nI updated\
    \ my answer to reflect your example. Thanks for pointing that out.\n<|/ c |>\n\
    <| a tags=php,math,algorithm |>\nI wrote a recursive function which should work\
    \ for any number of operands and operators.\n<code>\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpy0hr40yv.php on line 43

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 1; $i < count($operand); $i++) {\n        $result = $operator[$operand[$i -\
    \ 1]]($result, $operand[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function +() in /tmp/tmp1maokgxb.php:23\n\
    Stack trace:\n#0 /tmp/tmp1maokgxb.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp1maokgxb.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1maokgxb.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1maokgxb.php on line 23\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9udcr6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9udcr6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9udcr6b.php\
    \ on line 29\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array();\n    $operands\
    \ = array();\n    $operators_count = count($operator);\n    $operands_count =\
    \ count($operand);\n    $result = array();\n    \n    // If there are not enough\
    \ operands or operators, return null.\n    if ($operators_count < 1 || $operands_count\
    \ < 2) {\n        return null;\n    }\n    \n    // If there are enough operands,\
    \ create an array with operators and operands.\n    if ($operands_count >= 2)\
    \ {\n        $operands = $operand;\n    }\n    \n    // If there are enough operators,\
    \ create an array with operators and operands.\n    if ($operators_count >= 1)\
    \ {\n        $operators = $operator;\n    }\n    \n    // Loop through each operator\
    \ and operand.\n    for ($i = 0; $i < $operators_count; $i++) {\n        // If\
    \ the current operator is +, multiply operand by operand and add to result.\n\
    \        if ($operators[$i] == \"+\") {\n            $result[] = $operands[$i]\
    \ * $operands[$i + 1];\n        }\n        // If the current operator is -, subtract\
    \ operand from result and add to result.\n        else if ($operators[$i] == \"\
    -\") {\n            $result[] = $operands[$i] - $operands[$i + 1];\n        }\n\
    \        // If the current operator is *, multiply operand by operand and add\
    \ to result.\n        else if ($operators[$i] == \"*\") {\n            $result[]\
    \ = $operands[$i] * $operands[$i + 1];\n        }\n        // If the current operator\
    \ is /, divide operand by operand and add to result.\n        else if ($operators[$i]\
    \ == \"/\") {\n            $result[] = $operands[$i] / $operands[$i + 1];\n  \
    \      }\n        // If the current operator is **, exponentiate operand by operand\
    \ and add to result.\n        else if ($operators[$i] == \"**\") {\n         \
    \   $result[] = $operands[$i] * $operands[$i + 1];\n        }\n    }\n    \n \
    \   // Return the result.\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnkdzftk.php:74\n\
    Stack trace:\n#0 /tmp/tmpdnkdzftk.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpdnkdzftk.php\
    \ on line 74\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + ($operand[$key] * $value);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpvv9kf6rs.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpvv9kf6rs.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpvv9kf6rs.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9kf6rs.php:33\n\
    Stack trace:\n#0 /tmp/tmpvv9kf6rs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvv9kf6rs.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        $result = $result + $operand[$op - 1];\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp5recg_rj.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp5recg_rj.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp5recg_rj.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5recg_rj.php:32\n\
    Stack trace:\n#0 /tmp/tmp5recg_rj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5recg_rj.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    $length = count($operator);\n    $operands\
    \ = count($operand) - 1;\n    $operator = array_slice($operator, 0, $operands);\n\
    \    $operand = array_slice($operand, 0, $operands);\n    $operator = array_map(function($x)\
    \ {\n        return $x;\n    }, $operator);\n    $operand = array_map(function($x)\
    \ {\n        return $x;\n    }, $operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    foreach ($operator as $key => $value)\
    \ {\n        if (array_key_exists($value, $operators)) {\n            $result[]\
    \ = $operand[$key] * $operands[$key];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9o4pbypn.php:48\n\
    Stack trace:\n#0 /tmp/tmp9o4pbypn.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp9o4pbypn.php\
    \ on line 48\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n    $result =\
    \ 0;\n    foreach ($operator as $key => $value) {\n        $result = $result +\
    \ ($operand[$key] * $value);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp8o2pwaua.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp8o2pwaua.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp8o2pwaua.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8o2pwaua.php:34\n\
    Stack trace:\n#0 /tmp/tmp8o2pwaua.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8o2pwaua.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result = $result\
    \ + $operand[$key];\n        } elseif ($key == '-') {\n            $result = $result\
    \ - $operand[$key];\n        } elseif ($key == '*') {\n            $result = $result\
    \ * $operand[$key];\n        } elseif ($key == '/') {\n            $result = $result\
    \ / $operand[$key];\n        } elseif ($key == '**') {\n            $result =\
    \ $result ** $operand[$key];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpan4s85gp.php:43\n\
    Stack trace:\n#0 /tmp/tmpan4s85gp.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpan4s85gp.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpstjqb6dp.php:28\n\
    Stack trace:\n#0 /tmp/tmpstjqb6dp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpstjqb6dp.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9udcr6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9udcr6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9udcr6b.php\
    \ on line 29\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        if (in_array($value, $operators)) {\n            $result[] = $operand[$key];\n\
    \        } else {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hbyl87d.php:38\n\
    Stack trace:\n#0 /tmp/tmp0hbyl87d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0hbyl87d.php\
    \ on line 38\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array();\n    $operators[]\
    \ = '+';\n    $operators[] = '-';\n    $operators[] = '*';\n    $operators[] =\
    \ '//';\n    $operators[] = '**';\n    $operators = array_unique($operators);\n\
    \    $operands = array();\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n    $operands[] = $operand;\n    $operands[] = $operand;\n\
    \    $operands[] = $operand;\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4kas4jzi.php on line 97

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n    $result =\
    \ 0;\n    foreach ($operand as $key => $value) {\n        if ($key === 0){\n \
    \           $result = $value;\n        }\n        else{\n            $result =\
    \ $result . $operator[$key-1] . $value;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for your answer! I appreciate\
    \ it! However, I do not understand how this would work. Could you please explain\
    \ how this would work?\n<|/ c |>\n<| c |>\nI added some comments to the code above.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThank you for your answer! I appreciate it!\
    \ However, I do not understand how this would work. Could you please explain how\
    \ this would work?\n<|/ c |>\n<| c |>\nI added some comments to the code above.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThank you for your answer! I appreciate it!\
    \ However, I do not understand how this would work. Could you please explain how\
    \ this would work?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$operators = array('+',\
    \ '-', '*', '/');\n$operands = array(2, 3, 4, 5);\n\n$result = $operands[0];\n\
    foreach ($operands as $key => $value) {\n    if ($key > 0) {\n        $result\
    \ = $result . $operators[$key-1] . $value;\n    }\n}\n\necho $result;\n</code>\n\
    <|/ a tags=php,arrays,algebra |>\n<| c |>\nThank you for your answer! I appreciate\
    \ it! However, I do not understand how this would work. Could you please explain\
    \ how this would work?\n<|/ c |>\n<| c |>\nI added some comments to the code above.\
    \ Hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$operators = array('+',\
    \ '-', '*', '/');\n$operands = array(2, 3, 4, 5);\n\n$result = $operands[0];\n\
    foreach ($operands as $key => $value) {\n    if ($key > 0) {\n        $result\
    \ = $result . $operators[$key-1] . $value;\n    }\n}\n\necho $result;\n</code>\n\
    <|/ a tags=php,arrays,algebra |>\n<| c |>\nThank you for your answer! I appreciate\
    \ it! However, I do not understand how this would work. Could you please explain\
    \ how this would work?\n<|/\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqm7k4e1d.php on line 33

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        $result = $result + $operand[$op-1];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp2pzngidr.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp2pzngidr.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp2pzngidr.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pzngidr.php:33\n\
    Stack trace:\n#0 /tmp/tmp2pzngidr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2pzngidr.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = $operand[0];\n\
    \    for ($i = 1; $i < count($operand); $i++) {\n        $result = $operator[0]\
    \ . $result . $operator[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0l7eq9it.php:34\n\
    Stack trace:\n#0 /tmp/tmp0l7eq9it.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0l7eq9it.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result += (array_key_exists($key, $operand) ?\
    \ $operand[$key] : $operand[0]) * ($value == '+' ? 1 : -1);\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,algorithm |>\n<| c |>\nI like your solution,\
    \ however it fails for `operator['+', '*', '-', '*']` and `operand = [2, 3, 4,\
    \ 5]` - it returns `0` instead of `9`.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks\
    \ for pointing it out. Now it works.\n<|/ c |>\n<| c |>\nThanks for your solution.\
    \ However it fails for `operator['+', '*', '-', '*']` and `operand = [2, 3, 4,\
    \ 5]` - it returns `0` instead of `9`.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks\
    \ for pointing it out. Now it works.\n<|/ c |>\n<| c |>\nThanks for your solution.\
    \ However it fails for `operator['+', '*', '-', '*']` and `operand = [2, 3, 4,\
    \ 5]` - it returns `0` instead of `9`.\n<|/ c |>\n<| a tags=php,algorithm |>\n\
    I wrote a recursive solution that works with any number of operands and operators.\
    \ \n<code>\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqikjmv7m.php on line 27

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + ($operand[$key] * $value);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpvv9kf6rs.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpvv9kf6rs.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpvv9kf6rs.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9kf6rs.php:33\n\
    Stack trace:\n#0 /tmp/tmpvv9kf6rs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvv9kf6rs.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key == '+') {\n   \
    \         $result += $operand[$key];\n        } elseif ($key == '-') {\n     \
    \       $result -= $operand[$key];\n        } elseif ($key == '*') {\n       \
    \     $result *= $operand[$key];\n        } elseif ($key == '/') {\n         \
    \   $result /= $operand[$key];\n        } elseif ($key == '**') {\n          \
    \  $result **= $operand[$key];\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_xzjzjy.php:43\n\
    Stack trace:\n#0 /tmp/tmp5_xzjzjy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5_xzjzjy.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 1; $i < count($operand); $i++) {\n        $result = $operator[$operand[$i -\
    \ 1]]($result, $operand[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function +() in /tmp/tmp1maokgxb.php:23\n\
    Stack trace:\n#0 /tmp/tmp1maokgxb.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp1maokgxb.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1maokgxb.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1maokgxb.php on line 23\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key == '+') {\n   \
    \         $result += $operand[$key];\n        } elseif ($key == '-') {\n     \
    \       $result -= $operand[$key];\n        } elseif ($key == '*') {\n       \
    \     $result *= $operand[$key];\n        } elseif ($key == '/') {\n         \
    \   $result /= $operand[$key];\n        } elseif ($key == '**') {\n          \
    \  $result **= $operand[$key];\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_xzjzjy.php:43\n\
    Stack trace:\n#0 /tmp/tmp5_xzjzjy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5_xzjzjy.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = $operand[0];\n\
    \    for($i = 1; $i < count($operand); $i++) {\n        $result = $result . $operator[$i\
    \ - 1] * $operand[$i];\n    }\n    return $result;\n}\n\n$operator = array('+',\
    \ '*', '-');\n$operand = array(2, 3, 4, 5);\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0u4cc8if.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp0u4cc8if.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp0u4cc8if.php on line\
    \ 24\n2000\nWarning: A non-numeric value encountered in /tmp/tmp0u4cc8if.php on\
    \ line 24\n\nWarning: A non-numeric value encountered in /tmp/tmp0u4cc8if.php\
    \ on line 24\n\nWarning: A non-numeric value encountered in /tmp/tmp0u4cc8if.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0u4cc8if.php:37\n\
    Stack trace:\n#0 /tmp/tmp0u4cc8if.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0u4cc8if.php\
    \ on line 37\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key == '+') {\n   \
    \         $result = $result + $operand[$key];\n        } elseif ($key == '-')\
    \ {\n            $result = $result - $operand[$key];\n        } elseif ($key ==\
    \ '*') {\n            $result = $result * $operand[$key];\n        } elseif ($key\
    \ == '/') {\n            $result = $result / $operand[$key];\n        } elseif\
    \ ($key == '**') {\n            $result = $result ** $operand[$key];\n       \
    \ }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsqepqg6.php:43\n\
    Stack trace:\n#0 /tmp/tmppsqepqg6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmppsqepqg6.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpstjqb6dp.php:28\n\
    Stack trace:\n#0 /tmp/tmpstjqb6dp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpstjqb6dp.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($value == 0) {\n            $result = $operand[$key];\n\
    \        } else {\n            $result = $result + $operand[$key] * $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6eml9t5e.php:37\n\
    Stack trace:\n#0 /tmp/tmp6eml9t5e.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6eml9t5e.php\
    \ on line 37\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array();\n    $operands\
    \ = array();\n    foreach ($operator as $key => $value) {\n        $operators[$key]\
    \ = $value;\n    }\n    foreach ($operand as $key => $value) {\n        $operands[$key]\
    \ = $value;\n    }\n    $result = array();\n    foreach ($operators as $key =>\
    \ $value) {\n        $result[$key] = $operands[$key];\n    }\n    foreach ($operands\
    \ as $key => $value) {\n        $result[$key] = $operands[$key];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_yfzobj.php:44\n\
    Stack trace:\n#0 /tmp/tmp3_yfzobj.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3_yfzobj.php\
    \ on line 44\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 1; $i < count($operand); $i++) {\n        $result = $operator[0]($result, $operand[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpumksp4dg.php:23\n\
    Stack trace:\n#0 /tmp/tmpumksp4dg.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpumksp4dg.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpumksp4dg.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpumksp4dg.php on line 23\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result = $result + $operand[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxi_lb3x.php:34\n\
    Stack trace:\n#0 /tmp/tmplxi_lb3x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplxi_lb3x.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    $i = 0;\n    foreach ($operator as\
    \ $key => $value) {\n        if ($value == '+') {\n            $result[$i] = $operand[$i]\
    \ + $operand[$i + 1];\n            $i++;\n        } else if ($value == '-') {\n\
    \            $result[$i] = $operand[$i] - $operand[$i + 1];\n            $i++;\n\
    \        } else if ($value == '*') {\n            $result[$i] = $operand[$i] *\
    \ $operand[$i + 1];\n            $i++;\n        } else if ($value == '/') {\n\
    \            $result[$i] = $operand[$i] / $operand[$i + 1];\n            $i++;\n\
    \        } else if ($value == '//') {\n            $result[$i] = $operand[$i]\
    \ . $operand[$i + 1];\n            $i++;\n        } else if ($value == '**') {\n\
    \            $result[$i] = $operand[$i] * $operand[$i + 1];\n            $i++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ewzqc07.php:53\n\
    Stack trace:\n#0 /tmp/tmp4ewzqc07.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp4ewzqc07.php\
    \ on line 53\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($value == 0) {\n   \
    \         $result *= $operand[$key];\n        } else {\n            $result *=\
    \ $operand[$key];\n            $result -= $operand[$key];\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbtky0id.php:39\n\
    Stack trace:\n#0 /tmp/tmpxbtky0id.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxbtky0id.php\
    \ on line 39\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result += (array_key_exists($key,\
    \ $operand) ? $operand[$key] : $operand[0]) * ($value === '-' ? -1 : 1);\n   \
    \ }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThank\
    \ you for answering my question. Your code works perfectly for me. Thank you for\
    \ your help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$operators = array('+',\
    \ '-', '*', '/');\n$operands = array(2, 3, 4, 5);\n\n$result = do_algebra($operators,\
    \ $operands);\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjer3up_z.php on line 28

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result += $operand[$key] * $value;\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpdfhrqxzk.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpdfhrqxzk.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpdfhrqxzk.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfhrqxzk.php:33\n\
    Stack trace:\n#0 /tmp/tmpdfhrqxzk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdfhrqxzk.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n    $operators\
    \ = array('+', '-', '*', '/', '//', '**');\n    $result = array();\n    foreach\
    \ ($operator as $key => $value) {\n        if (in_array($value, $operators)) {\n\
    \            $result[] = $operand[$key];\n        } else {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThank you for your answer. I am not allowed to use eval(), and\
    \ I cannot use any loops. I cannot use any arrays or loops. I cannot use any arrays\
    \ or loops. I cannot use any arrays or loops. I cannot use any arrays or loops.\
    \ I cannot use any arrays or loops. I cannot use any arrays or loops. I cannot\
    \ use any arrays or loops. I cannot use any arrays or loops. I cannot use any\
    \ arrays or loops. I cannot use any arrays or loops. I cannot use any arrays or\
    \ loops. I cannot use any arrays or loops. I cannot use any arrays or loops. I\
    \ cannot use any arrays or loops. I cannot use any arrays or loops. I cannot use\
    \ any arrays or loops. I cannot use any arrays or loops. I cannot use any arrays\
    \ or loops. I cannot use any arrays or loops. I cannot use any arrays or loops.\
    \ I cannot use any arrays or loops. I cannot use any arrays or loops. I cannot\
    \ use any arrays or loops. I cannot use any arrays or loops. I cannot use any\
    \ arrays or loops. I cannot use any arrays or loops. I cannot use any arrays or\
    \ loops. I cannot use any arrays or loops. I cannot use any arrays or loops. I\
    \ cannot use any arrays or loops. I cannot use any arrays or loops. I cannot use\
    \ any arrays or loops. I cannot use any arrays or loops. I cannot use any arrays\
    \ or loops. I cannot use any arrays or loops. I cannot use any arrays or loops.\
    \ I cannot use any arrays or loops. I cannot use any arrays or loops. I cannot\
    \ use any arrays or loops. I cannot use any arrays or loops. I cannot use any\
    \ arrays or loops. I cannot use any arrays or loops. I cannot use any arrays or\
    \ loops. I cannot use any arrays or loops. I cannot use any arrays or loops. I\
    \ cannot use any arrays or loops. I cannot use any arrays or loops. I cannot use\
    \ any arrays or loops. I cannot use any arrays or loops. I cannot use any arrays\
    \ or loops. I cannot use any array\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9hcqxktc.php on line 33

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result = $result + $operand[$key]\
    \ * $value;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpbmhy1jiv.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpbmhy1jiv.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpbmhy1jiv.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmhy1jiv.php:34\n\
    Stack trace:\n#0 /tmp/tmpbmhy1jiv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbmhy1jiv.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result = $result + $operand[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxi_lb3x.php:34\n\
    Stack trace:\n#0 /tmp/tmplxi_lb3x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplxi_lb3x.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\n$operator = array('+',\
    \ '*', '-');\n$operand = array(2, 3, 4, 5);\n$result = do_algebra($operator, $operand);\n\
    echo $result;\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqeuxur_d.php:33\n\
    Stack trace:\n#0 /tmp/tmpqeuxur_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqeuxur_d.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmplmmup0yx.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmmup0yx.php:33\n\
    Stack trace:\n#0 /tmp/tmplmmup0yx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplmmup0yx.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operand as\
    \ $key => $value) {\n        if ($key > 0) {\n            $result *= $value;\n\
    \        }\n        $result *= $operator[$key];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpri5iksh1.php on line\
    \ 26\n\nWarning: A non-numeric value encountered in /tmp/tmpri5iksh1.php on line\
    \ 26\n\nWarning: A non-numeric value encountered in /tmp/tmpri5iksh1.php on line\
    \ 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpri5iksh1.php:36\n\
    Stack trace:\n#0 /tmp/tmpri5iksh1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpri5iksh1.php\
    \ on line 36\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result += (array_key_exists($key,\
    \ $operand) ? $operand[$key] : 0) * $value;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpyx5v9frn.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpyx5v9frn.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpyx5v9frn.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyx5v9frn.php:34\n\
    Stack trace:\n#0 /tmp/tmpyx5v9frn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyx5v9frn.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        $result[$key] = $operand[$key];\n        foreach ($operators as $operator)\
    \ {\n            $result[$key] = $result[$key] . $operator;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynpvas46.php:37\n\
    Stack trace:\n#0 /tmp/tmpynpvas46.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpynpvas46.php\
    \ on line 37\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operand as $key => $value) {\n        if ($key === 0) {\n     \
    \       $result = $value;\n        } else {\n            $result = $result . $value;\n\
    \        }\n    }\n    foreach ($operator as $key => $value) {\n        if ($key\
    \ === 0) {\n            $result = $result . $value;\n        } else {\n      \
    \      $result = $result . $value;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxw1m4o1.php:45\n\
    Stack trace:\n#0 /tmp/tmpwxw1m4o1.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpwxw1m4o1.php\
    \ on line 45\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4w868vv2.php:32\n\
    Stack trace:\n#0 /tmp/tmp4w868vv2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4w868vv2.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    $operators = array_keys($operator);\n\
    \    $operands = array_keys($operand);\n    $length = count($operators);\n   \
    \ $operandCount = count($operands);\n    \n    // If there are not enough operands,\
    \ return null.\n    if ($operandCount < 2) {\n        return null;\n    }\n  \
    \  \n    // If there are not enough operators, return null.\n    if ($length <\
    \ 2) {\n        return null;\n    }\n    \n    // If there are not enough operands,\
    \ return null.\n    if ($operandCount != $length) {\n        return null;\n  \
    \  }\n    \n    // If there are not enough operators, return null.\n    if ($operandCount\
    \ != $length) {\n        return null;\n    }\n    \n    // If there are not enough\
    \ operands, return null.\n    if ($operandCount != $length) {\n        return\
    \ null;\n    }\n    \n    // If there are not enough operands, return null.\n\
    \    if ($operandCount != $length) {\n        return null;\n    }\n    \n    //\
    \ If there are not enough operands, return null.\n    if ($operandCount != $length)\
    \ {\n        return null;\n    }\n    \n    // If there are not enough operands,\
    \ return null.\n    if ($operandCount != $length) {\n        return null;\n  \
    \  }\n    \n    // If there are not enough operands, return null.\n    if ($operandCount\
    \ != $length) {\n        return null;\n    }\n    \n    // If there are not enough\
    \ operands, return null.\n    if ($operandCount != $length) {\n        return\
    \ null;\n    }\n    \n    // If there are not enough operands, return null.\n\
    \    if ($operandCount != $length) {\n        return null;\n    }\n    \n    //\
    \ If there are not enough operands, return null.\n    if ($operandCount != $length)\
    \ {\n        return null;\n    }\n    \n    // If there are not enough operands,\
    \ return null.\n    if ($operandCount != $length) {\n        return null;\n  \
    \  }\n    \n    // If there are not enough operands, return null.\n    if ($operandCount\
    \ != $length) {\n        return null;\n    }\n    \n    // If there are not enough\
    \ operands, return null.\n    if ($operandCount != $length) {\n        return\
    \ null;\n    }\n    \n    // If there are not enough operands, return null.\n\
    \    if ($operandCount != $length) {\n        return null;\n    }\n    \n    //\
    \ If there are not enough operands, return null.\n    if ($operandCount != $length)\
    \ {\n        return null;\n    }\n    \n    // If there are not enough operands,\
    \ return null.\n    if ($operandCount != $length) {\n        return null;\n  \
    \  }\n    \n    // If there are not enough operands, return \nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp96svt16l.php on line 128

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result = $result + ($operand[$key]\
    \ * $operand[$key]);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9g698nlm.php:33\n\
    Stack trace:\n#0 /tmp/tmp9g698nlm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9g698nlm.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n    $operator\
    \ = array_flip($operator);\n    $operand = array_flip($operand);\n    $result\
    \ = $operand['+'];\n    foreach ($operand as $key => $value) {\n        if ($key\
    \ != '+') {\n            $result *= $value;\n        }\n    }\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key != '+' && $key != '-' && $key != '*'\
    \ && $key != '/' && $key != '**') {\n            $result /= $value;\n        }\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,algorithm,math\
    \ |>\n<code>\n<?php\n$operators = array('+', '-', '*', '/');\n$operands = array(2,\
    \ 3, 4, 5);\n$result = array();\nforeach ($operators as $operator) {\n    foreach\
    \ ($operands as $operand) {\n        $result[] = $operands[$operator];\n    }\n\
    }\necho implode('', $result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$operators = array('+', '-', '*', '/');\n$operands = array(2, 3,\
    \ 4, 5);\n$result = array();\nforeach ($operators as $operator) {\n    foreach\
    \ ($operands as $operand) {\n        $result[] = $operands[$operator];\n    }\n\
    }\necho implode('', $result);\n</code>\n<|/ a tags=php,algorithm,math |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php\n$operators = array('+', '-', '*', '/');\n$operands\
    \ = array(2, 3, 4, 5);\n$result = array();\nforeach ($operators as $operator)\
    \ {\n    foreach ($operands as $operand) {\n        $result[] = $operands[$operator];\n\
    \    }\n}\necho implode('', $result);\n</code>\n<|/ a tags=php,algorithm,math\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$operators = array('+', '-', '*', '/');\n\
    $operands = array(2, 3, 4, 5);\n$result = array();\nforeach ($operators as $operator)\
    \ {\n    foreach ($operands as $operand) {\n        $result[] = $operands[$operator];\n\
    \    }\n}\necho implode('', $result);\n</code>\n<|/ a tags=php,algorithm,math\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a dscore=0 \nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkga4sxxd.php on line 37

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach($operator as $key => $operator) {\n        switch($operator) {\n\
    \            case '+':\n                $result = $result + $operand[$key];\n\
    \                break;\n            case '-':\n                $result = $result\
    \ - $operand[$key];\n                break;\n            case '*':\n         \
    \       $result = $result * $operand[$key];\n                break;\n        \
    \    case '/':\n                $result = $result / $operand[$key];\n        \
    \        break;\n            case '**':\n                $result = $result **\
    \ $operand[$key];\n                break;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvegqcmur.php:50\n\
    Stack trace:\n#0 /tmp/tmpvegqcmur.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpvegqcmur.php\
    \ on line 50\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array();\n    $operators[]\
    \ = '+';\n    $operators[] = '-';\n    $operators[] = '*';\n    $operators[] =\
    \ '//';\n    $operators[] = '**';\n    $operators[] = '=';\n    $operators[] =\
    \ '+=';\n    $operators[] = '-=';\n    $operators[] = '*=';\n    $operators[]\
    \ = '//=';\n    $operators[] = '**=';\n    $operators[] = '&=';\n    $operators[]\
    \ = '|=';\n    $operators[] = '^=';\n    $operators[] = '<<=';\n    $operators[]\
    \ = '>>=';\n    $operators[] = '>>>=';\n    $operators[] = '<=';\n    $operators[]\
    \ = '>=';\n    $operators[] = '!=';\n    $operators[] = '&&';\n    $operators[]\
    \ = '||';\n    $operators[] = '!=';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!==';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&=';\n    $operators[]\
    \ = '||=';\n    $operators[] = '!===';\n    $operators[] = '&&='\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8kbwhs2y.php on line 85

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($key == '+') {\n   \
    \         $result += $operand[$key];\n        } elseif ($key == '-') {\n     \
    \       $result -= $operand[$key];\n        } elseif ($key == '*') {\n       \
    \     $result *= $operand[$key];\n        } elseif ($key == '/') {\n         \
    \   $result /= $operand[$key];\n        } elseif ($key == '**') {\n          \
    \  $result **= $operand[$key];\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_xzjzjy.php:43\n\
    Stack trace:\n#0 /tmp/tmp5_xzjzjy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5_xzjzjy.php\
    \ on line 43\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + ($operand[$key] * $value);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpvv9kf6rs.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpvv9kf6rs.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpvv9kf6rs.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9kf6rs.php:33\n\
    Stack trace:\n#0 /tmp/tmpvv9kf6rs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvv9kf6rs.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ += $operand[0];\n                break;\n            case '-':\n           \
    \     $result -= $operand[0];\n                break;\n            case '*':\n\
    \                $result *= $operand[0];\n                break;\n           \
    \ case '/':\n                $result /= $operand[0];\n                break;\n\
    \            case '**':\n                $result **= $operand[0];\n          \
    \      break;\n            default:\n                echo \"Invalid operator\"\
    ;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppxgdwlh5.php:51\n\
    Stack trace:\n#0 /tmp/tmppxgdwlh5.php(56): test()\n#1 {main}\n  thrown in /tmp/tmppxgdwlh5.php\
    \ on line 51\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp4w868vv2.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4w868vv2.php:32\n\
    Stack trace:\n#0 /tmp/tmp4w868vv2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4w868vv2.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9udcr6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9udcr6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9udcr6b.php\
    \ on line 29\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $operators = array('+',\
    \ '-', '*', '/', '//', '**');\n    $result = array();\n    foreach ($operator\
    \ as $key => $value) {\n        foreach ($operand as $key2 => $value2) {\n   \
    \         if ($key == $key2) {\n                $result[] = $value;\n        \
    \    }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0yvx5qu.php:39\n\
    Stack trace:\n#0 /tmp/tmpe0yvx5qu.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe0yvx5qu.php\
    \ on line 39\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    $operators = count($operator);\n\
    \    $operands = count($operand);\n    $i = 0;\n    while($i < $operators) {\n\
    \        $operator = $operator[$i];\n        $operand = $operand[$i];\n      \
    \  switch($operator) {\n            case '+':\n                $result += $operand;\n\
    \                break;\n            case '-':\n                $result -= $operand;\n\
    \                break;\n            case '*':\n                $result *= $operand;\n\
    \                break;\n            case '/':\n                $result /= $operand;\n\
    \                break;\n            case '**':\n                $result **= $operand;\n\
    \                break;\n            default:\n                echo \"Invalid\
    \ operator\";\n        }\n        $i++;\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Invalid operator\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_6sgfc5.php:56\n\
    Stack trace:\n#0 /tmp/tmpw_6sgfc5.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpw_6sgfc5.php\
    \ on line 56\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        $result = $result + $operand[$op - 1];\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp5recg_rj.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp5recg_rj.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp5recg_rj.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5recg_rj.php:32\n\
    Stack trace:\n#0 /tmp/tmp5recg_rj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5recg_rj.php\
    \ on line 32\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($value == 0) {\n   \
    \         $result = $operand[$key];\n        } else {\n            $result = $operand[$key]\
    \ + $result;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0r3v3ak.php:38\n\
    Stack trace:\n#0 /tmp/tmpy0r3v3ak.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpy0r3v3ak.php\
    \ on line 38\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ += $operand[0];\n                break;\n            case '-':\n           \
    \     $result -= $operand[0];\n                break;\n            case '*':\n\
    \                $result *= $operand[0];\n                break;\n           \
    \ case '/':\n                $result /= $operand[0];\n                break;\n\
    \            case '**':\n                $result **= $operand[0];\n          \
    \      break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug8sb9m7.php:49\n\
    Stack trace:\n#0 /tmp/tmpug8sb9m7.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpug8sb9m7.php\
    \ on line 49\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($value == $operand[$key]) {\n            $result\
    \ += $operand[$key];\n        } else {\n            $result -= $operand[$key];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphda5nst3.php:37\n\
    Stack trace:\n#0 /tmp/tmphda5nst3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphda5nst3.php\
    \ on line 37\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        $result = $result + $operand[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxi_lb3x.php:34\n\
    Stack trace:\n#0 /tmp/tmplxi_lb3x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplxi_lb3x.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = array();\n    foreach ($operator\
    \ as $key => $value) {\n        $result[] = $operand[$key];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqup91u4w.php:33\n\
    Stack trace:\n#0 /tmp/tmpqup91u4w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqup91u4w.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code goes here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpstjqb6dp.php:28\n\
    Stack trace:\n#0 /tmp/tmpstjqb6dp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpstjqb6dp.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9udcr6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9udcr6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk9udcr6b.php\
    \ on line 29\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        switch ($value) {\n    \
    \        case '+':\n                $result = $result + $operand[$key];\n    \
    \            break;\n            case '-':\n                $result = $result\
    \ - $operand[$key];\n                break;\n            case '*':\n         \
    \       $result = $result * $operand[$key];\n                break;\n        \
    \    case '/':\n                $result = $result / $operand[$key];\n        \
    \        break;\n            case '**':\n                $result = $result **\
    \ $operand[$key];\n                break;\n            default:\n            \
    \    echo \"Invalid operator\";\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp633wy65j.php:51\n\
    Stack trace:\n#0 /tmp/tmp633wy65j.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp633wy65j.php\
    \ on line 51\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $result = 0;\n\
    \    foreach ($operator as $key => $value) {\n        if ($value == 0) {\n   \
    \         continue;\n        }\n        $result = $result + $operand[$key] * $value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3wn7_qw.php:37\n\
    Stack trace:\n#0 /tmp/tmpo3wn7_qw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo3wn7_qw.php\
    \ on line 37\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        $result = $result + ($op == '+' ? $operand[0] : $operand[$operand[0]]);\n\
    \        $operand = $operand[$operand[0]];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv2f2o73.php:33\n\
    Stack trace:\n#0 /tmp/tmpqv2f2o73.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqv2f2o73.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    $stack = array();\n    $stack[] =\
    \ $operand[0];\n    $stack[] = $operand[1];\n    $operator_index = 0;\n    while($operator_index\
    \ < count($operators)) {\n        $operator = $operators[$operator_index];\n \
    \       if($operator == '+') {\n            $result[] = $stack[$operator_index]\
    \ + $stack[$operator_index + 1];\n            $operator_index += 2;\n        }\
    \ elseif($operator == '-') {\n            $result[] = $stack[$operator_index]\
    \ - $stack[$operator_index + 1];\n            $operator_index += 2;\n        }\
    \ elseif($operator == '*') {\n            $result[] = $stack[$operator_index]\
    \ * $stack[$operator_index + 1];\n            $operator_index += 2;\n        }\
    \ elseif($operator == '/') {\n            $result[] = $stack[$operator_index]\
    \ / $stack[$operator_index + 1];\n            $operator_index += 2;\n        }\
    \ elseif($operator == '//') {\n            $result[] = $stack[$operator_index]\
    \ . $stack[$operator_index + 1];\n            $operator_index += 2;\n        }\
    \ elseif($operator == '**') {\n            $result[] = $stack[$operator_index]\
    \ * $stack[$operator_index + 1];\n            $operator_index += 2;\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ju4bc2s.php:56\n\
    Stack trace:\n#0 /tmp/tmp_ju4bc2s.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp_ju4bc2s.php\
    \ on line 56\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx31enuhj.php:28\n\
    Stack trace:\n#0 /tmp/tmpx31enuhj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx31enuhj.php\
    \ on line 28\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        if ($value === '/') {\n            $result[$key] = $operand[$key]\
    \ . $operand[$key + 1];\n        } else {\n            $result[$key] = $operand[$key];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80mukswh.php:38\n\
    Stack trace:\n#0 /tmp/tmp80mukswh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp80mukswh.php\
    \ on line 38\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        $result = $result + ($op == '+') ? $operand[0] : $operand[$operand[0]];\n\
    \        $operand[0]++;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_thm666.php:33\n\
    Stack trace:\n#0 /tmp/tmpb_thm666.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb_thm666.php\
    \ on line 33\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    // Your code here\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($operator);\n\
    \    $operand = array_flip($operand);\n    $operator = array_flip($\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2gsz1eyu.php on line 73

    '
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    $operators = array('+'\
    \ => 1, '-' => 1, '*' => 2, '/' => 2, '//' => 2, '**' => 3);\n    foreach ($operator\
    \ as $key => $value) {\n        $operator = $operators[$value];\n        $operand1\
    \ = $operand[$key];\n        $operand2 = $operand[$key + 1];\n        $result\
    \ = $result + $operator * ($operand1 + $operand2);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6739g52.php:37\n\
    Stack trace:\n#0 /tmp/tmpc6739g52.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpc6739g52.php\
    \ on line 37\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = array();\n    foreach ($operator\
    \ as $key => $value) {\n        $result[$key] = $operand[$key];\n    }\n    $result[$operator[count($operator)\
    \ - 1]] = $operand[count($operand) - 1];\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ybqi3tv.php:34\n\
    Stack trace:\n#0 /tmp/tmp0ybqi3tv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0ybqi3tv.php\
    \ on line 34\n"
  timestamp: 1659729950
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = 0;\n    foreach ($operator\
    \ as $op) {\n        switch ($op) {\n            case '+':\n                $result\
    \ = $result + $operand[0];\n                break;\n            case '-':\n  \
    \              $result = $result - $operand[0];\n                break;\n    \
    \        case '*':\n                $result = $result * $operand[0];\n       \
    \         break;\n            case '/':\n                $result = $result / $operand[0];\n\
    \                break;\n            case '**':\n                $result = $result\
    \ ** $operand[0];\n                break;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tyx_4u5.php:48\n\
    Stack trace:\n#0 /tmp/tmp_tyx_4u5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_tyx_4u5.php\
    \ on line 48\n"
  timestamp: 1659729950

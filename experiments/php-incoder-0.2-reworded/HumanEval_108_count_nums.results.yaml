language: php
name: HumanEval_108_count_nums
results:
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a += 10;\n    }\n    $n += $a < 10 ? $a : 10 - $a;\n  }\n\
    \  return $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvhrd8o48.php:29\n\
    Stack trace:\n#0 /tmp/tmpvhrd8o48.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvhrd8o48.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $n) {\n\
    \        $sum += $n;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vv9a18l.php:26\n\
    Stack trace:\n#0 /tmp/tmp0vv9a18l.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0vv9a18l.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a += 10;\n    }\n    $n += $a < 10 ? $a : 10 - $a;\n  }\n\
    \  return $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvhrd8o48.php:29\n\
    Stack trace:\n#0 /tmp/tmpvhrd8o48.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvhrd8o48.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $n) {\n\
    \        $sum += $n;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vv9a18l.php:26\n\
    Stack trace:\n#0 /tmp/tmp0vv9a18l.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0vv9a18l.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num > 0) {\n      $count += $num;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppipedisv.php:29\n\
    Stack trace:\n#0 /tmp/tmppipedisv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppipedisv.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    $sum\
    \ += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00l1yb3q.php:26\n\
    Stack trace:\n#0 /tmp/tmp00l1yb3q.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp00l1yb3q.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $sign = -1;\n\
    \        } else {\n            $sign = 1;\n        }\n        $sum += $num;\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoczil40e.php:35\n\
    Stack trace:\n#0 /tmp/tmpoczil40e.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoczil40e.php\
    \ on line 35\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n    }\n    $count += $num % 10;\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqa6ubrq6.php:29\n\
    Stack trace:\n#0 /tmp/tmpqa6ubrq6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqa6ubrq6.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $count++;\n\
    \        }\n        $count += $num % 10;\n        $num /= 10;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5kx02aw.php:31\n\
    Stack trace:\n#0 /tmp/tmpq5kx02aw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq5kx02aw.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num > 0) {\n            $count += $num;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuk1kx_cg.php:29\n\
    Stack trace:\n#0 /tmp/tmpuk1kx_cg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuk1kx_cg.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sum -= $n % 10;\n    }\n    $sum +=\
    \ $n % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolc52mu.php:31\n\
    Stack trace:\n#0 /tmp/tmpkolc52mu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkolc52mu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num % 10);\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphw9rvyw1.php:32\n\
    Stack trace:\n#0 /tmp/tmphw9rvyw1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphw9rvyw1.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num % 10;\n      $num = abs($num);\n    }\n\
    \    $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxrirdgr.php:31\n\
    Stack trace:\n#0 /tmp/tmpnxrirdgr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnxrirdgr.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum -= $num;\n    } else {\n      $sum += $num;\n \
    \   }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0plvsycf.php:30\n\
    Stack trace:\n#0 /tmp/tmp0plvsycf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0plvsycf.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgps8q0q.php:29\n\
    Stack trace:\n#0 /tmp/tmpsgps8q0q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsgps8q0q.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sign = -1;\n    } else {\n     \
    \ $sign = 1;\n    }\n    $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpphndfz.php:32\n\
    Stack trace:\n#0 /tmp/tmphpphndfz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphpphndfz.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n      $sign\
    \ = '';\n    }\n    $sum += intval($n) / 10;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzco094tk.php:32\n\
    Stack trace:\n#0 /tmp/tmpzco094tk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzco094tk.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n    }\n    $sum += $num;\n  }\n \
    \ return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpralntat5.php:29\n\
    Stack trace:\n#0 /tmp/tmpralntat5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpralntat5.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $n) {\n\
    \        if ($n < 0) {\n            $n = $n * -1;\n        }\n        $count +=\
    \ $n % 10;\n        $n = $n / 10;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0vgnya1.php:30\n\
    Stack trace:\n#0 /tmp/tmpu0vgnya1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu0vgnya1.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $n) {\n\
    \        if ($n < 0) {\n            $n = abs($n);\n            $sign = '-';\n\
    \        } else {\n            $sign = '';\n        }\n        $sum += $n * (int)strlen($sign);\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexz49214.php:32\n\
    Stack trace:\n#0 /tmp/tmpexz49214.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpexz49214.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum -= $num;\n    } else {\n   \
    \   $sum += $num;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xpck5yr.php:31\n\
    Stack trace:\n#0 /tmp/tmp2xpck5yr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2xpck5yr.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else\
    \ {\n      $sign = '';\n    }\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n      if ($digit > 0) {\n        $count++;\n      }\n    }\n \
    \ }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rkso5ch.php:37\n\
    Stack trace:\n#0 /tmp/tmp9rkso5ch.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9rkso5ch.php\
    \ on line 37\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num;\n      $num *= -1;\n    }\n    $sum +=\
    \ floor($num / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9pu4375.php:30\n\
    Stack trace:\n#0 /tmp/tmps9pu4375.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps9pu4375.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    $sum\
    \ += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00l1yb3q.php:26\n\
    Stack trace:\n#0 /tmp/tmp00l1yb3q.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp00l1yb3q.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num >= 0) {\n            $sum += $num;\n        } else {\n     \
    \       $sum += $num % 10;\n        }\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ttmm1i5.php:30\n\
    Stack trace:\n#0 /tmp/tmp7ttmm1i5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ttmm1i5.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += $num;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnaf_bi8l.php:32\n\
    Stack trace:\n#0 /tmp/tmpnaf_bi8l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnaf_bi8l.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function ($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfvcclj2.php:28\n\
    Stack trace:\n#0 /tmp/tmpqfvcclj2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqfvcclj2.php\
    \ on line 28\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num >= 0) {\n            $count += $num;\n        } else {\n\
    \            $count += $num % 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsww910gh.php:30\n\
    Stack trace:\n#0 /tmp/tmpsww910gh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsww910gh.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a += 10;\n    }\n    $n += $a > 9 ? 1 : 0;\n  }\n  return\
    \ $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1n4ljro.php:30\n\
    Stack trace:\n#0 /tmp/tmpe1n4ljro.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe1n4ljro.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $n) {\n\
    \        $count += $n < 0 ? $n%10 : $n%10;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4_vdj_8.php:26\n\
    Stack trace:\n#0 /tmp/tmpp4_vdj_8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp4_vdj_8.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n      $digit = abs($num);\n      $count\
    \ += $digit < 10 ? 1 : 0;\n    } else {\n      $count += $num < 10 ? 1 : 0;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0sghd7j.php:32\n\
    Stack trace:\n#0 /tmp/tmpu0sghd7j.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpu0sghd7j.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sum -= $n / 10;\n      $sum += $n %\
    \ 10;\n    } else {\n      $sum += $n;\n    }\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfh9ap14.php:32\n\
    Stack trace:\n#0 /tmp/tmpwfh9ap14.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwfh9ap14.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num > 0) {\n            $result += $num % 10;\n        }\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprnyqn5ms.php:29\n\
    Stack trace:\n#0 /tmp/tmprnyqn5ms.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprnyqn5ms.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $sum += intval($num);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjh8u1qu7.php:34\n\
    Stack trace:\n#0 /tmp/tmpjh8u1qu7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjh8u1qu7.php\
    \ on line 34\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n    }\n    $count += $num % 10;\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmun95nkn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmun95nkn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmun95nkn.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num % 10;\n      $num = abs($num);\n    }\n\
    \    $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxrirdgr.php:31\n\
    Stack trace:\n#0 /tmp/tmpnxrirdgr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnxrirdgr.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    $n\
    \ += $a < 0 ? -$a : abs($a);\n  }\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpll_ufwb7.php:26\n\
    Stack trace:\n#0 /tmp/tmpll_ufwb7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpll_ufwb7.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplq6c9lb3.php:41\n\
    Stack trace:\n#0 /tmp/tmplq6c9lb3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmplq6c9lb3.php\
    \ on line 41\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = $n * -1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni84ff2u.php:29\n\
    Stack trace:\n#0 /tmp/tmpni84ff2u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpni84ff2u.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t46ttjd.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t46ttjd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7t46ttjd.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = $n * -1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni84ff2u.php:29\n\
    Stack trace:\n#0 /tmp/tmpni84ff2u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpni84ff2u.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n      $digit = intval($num / 10);\n \
    \     $num -= $digit * 10;\n      if ($num < 0) {\n        $num *= -1;\n     \
    \   $digit = intval($num / 10);\n        $num -= $digit * 10;\n      }\n    }\
    \ else {\n      $digit = intval($num / 10);\n      $num -= $digit * 10;\n    }\n\
    \    if ($num > 0) {\n      $count += $digit + 1;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8p37o5l_.php:41\n\
    Stack trace:\n#0 /tmp/tmp8p37o5l_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8p37o5l_.php\
    \ on line 41\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $v) {\n    if\
    \ ($v < 0) {\n      $n = $v - $v;\n    } else {\n      $n = $v + $n;\n    }\n\
    \  }\n  return $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyinc8jnf.php:31\n\
    Stack trace:\n#0 /tmp/tmpyinc8jnf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyinc8jnf.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum -= $num;\n    }\n    $sum +=\
    \ $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxc0wfyv.php:31\n\
    Stack trace:\n#0 /tmp/tmpoxc0wfyv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoxc0wfyv.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function ($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfvcclj2.php:28\n\
    Stack trace:\n#0 /tmp/tmpqfvcclj2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqfvcclj2.php\
    \ on line 28\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    $sum\
    \ += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00l1yb3q.php:26\n\
    Stack trace:\n#0 /tmp/tmp00l1yb3q.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp00l1yb3q.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n        }\n        $result\
    \ += $num % 10;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprq30oczn.php:29\n\
    Stack trace:\n#0 /tmp/tmprq30oczn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprq30oczn.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgps8q0q.php:29\n\
    Stack trace:\n#0 /tmp/tmpsgps8q0q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsgps8q0q.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum -= $num;\n    } else {\n      $sum += $num;\n \
    \   }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0plvsycf.php:30\n\
    Stack trace:\n#0 /tmp/tmp0plvsycf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0plvsycf.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $sum += intval($num) * pow(10, strlen($sign));\n  }\n  return $sum;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14tiicjx.php:34\n\
    Stack trace:\n#0 /tmp/tmp14tiicjx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp14tiicjx.php\
    \ on line 34\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n        }\n        $count\
    \ += $num % 10;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_m1c6om.php:29\n\
    Stack trace:\n#0 /tmp/tmp7_m1c6om.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7_m1c6om.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n      $digit = intval($num / 10);\n \
    \     $num -= $digit * 10;\n    } else {\n      $digit = intval($num / 10);\n\
    \    }\n    if ($digit > 0) {\n      $count += $digit;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjg1wu8dp.php:36\n\
    Stack trace:\n#0 /tmp/tmpjg1wu8dp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjg1wu8dp.php\
    \ on line 36\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $firstDigit\
    \ = $num % 10;\n            $num = $num / 10;\n            if ($num > 0) {\n \
    \               $count += $num - $firstDigit;\n            } else {\n        \
    \        $count += $firstDigit;\n            }\n        } else {\n           \
    \ $count += $num;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1eyqphq.php:37\n\
    Stack trace:\n#0 /tmp/tmpb1eyqphq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpb1eyqphq.php\
    \ on line 37\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num / 10) * intval($num % 10);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tw8a8qe.php:33\n\
    Stack trace:\n#0 /tmp/tmp_tw8a8qe.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_tw8a8qe.php\
    \ on line 33\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t46ttjd.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t46ttjd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7t46ttjd.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a += 10;\n    }\n    $n += $a > 9 ? 1 : 0;\n  }\n  return\
    \ $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1n4ljro.php:30\n\
    Stack trace:\n#0 /tmp/tmpe1n4ljro.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe1n4ljro.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $n) {\n\
    \        if ($n < 0) {\n            $n = $n * -1;\n        }\n        $sum +=\
    \ $n;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpue224sip.php:29\n\
    Stack trace:\n#0 /tmp/tmpue224sip.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpue224sip.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n            $sign = '-';\n\
    \        } else {\n            $sign = '';\n        }\n        $sum += intval($num\
    \ / 10) * intval($num % 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudv569q_.php:33\n\
    Stack trace:\n#0 /tmp/tmpudv569q_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpudv569q_.php\
    \ on line 33\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a += 10;\n    }\n    $n += $a < 10 ? $a : 0;\n  }\n  return\
    \ $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09wh_yyu.php:29\n\
    Stack trace:\n#0 /tmp/tmp09wh_yyu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp09wh_yyu.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = abs($num);\n            $sign\
    \ = substr($num, -1);\n            $num = substr($num, 0, -1);\n        } else\
    \ {\n            $sign = '';\n        }\n        $digits = str_split($num);\n\
    \        $num_digits = count($digits);\n        foreach ($digits as $digit) {\n\
    \            $count += $digit * pow(10, $num_digits - $digits);\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmptm84jwow.php:25\n\
    Stack trace:\n#0 /tmp/tmptm84jwow.php(32): count_nums(Array)\n#1 /tmp/tmptm84jwow.php(37):\
    \ candidate(Array)\n#2 /tmp/tmptm84jwow.php(46): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmptm84jwow.php on line 25\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n            $sign = substr($num,\
    \ -1);\n            $num = substr($num, 0, -1);\n        } else {\n          \
    \  $sign = '';\n        }\n        $sum += intval($num) * pow(10, strlen($sign));\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6zkf5ls.php:34\n\
    Stack trace:\n#0 /tmp/tmpg6zkf5ls.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpg6zkf5ls.php\
    \ on line 34\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num;\n    } else {\n      $sum += $num % 10;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwbnrjr6x.php:30\n\
    Stack trace:\n#0 /tmp/tmpwbnrjr6x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwbnrjr6x.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function ($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfvcclj2.php:28\n\
    Stack trace:\n#0 /tmp/tmpqfvcclj2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqfvcclj2.php\
    \ on line 28\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sign = -1;\n    } else {\n     \
    \ $sign = 1;\n    }\n    $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpphndfz.php:32\n\
    Stack trace:\n#0 /tmp/tmphpphndfz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphpphndfz.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num / 10) * intval($num % 10);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tw8a8qe.php:33\n\
    Stack trace:\n#0 /tmp/tmp_tw8a8qe.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_tw8a8qe.php\
    \ on line 33\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $n) {\n\
    \        if ($n < 0) {\n            $n = abs($n);\n            $sign = substr($n,\
    \ 0, 1);\n            $n = substr($n, 1);\n        } else {\n            $sign\
    \ = '';\n        }\n        $n = str_pad($n, 3, '0', STR_PAD_LEFT);\n        $n\
    \ = $sign . $n;\n        $sum += $n;\n        if ($sum > 9) {\n            $count++;\n\
    \            $sum = 0;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0p5wc93n.php:39\n\
    Stack trace:\n#0 /tmp/tmp0p5wc93n.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp0p5wc93n.php\
    \ on line 39\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num >= 0) {\n            $count += $num;\n        } else {\n\
    \            $count += $num % 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsww910gh.php:30\n\
    Stack trace:\n#0 /tmp/tmpsww910gh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsww910gh.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n09_efw.php:28\n\
    Stack trace:\n#0 /tmp/tmp9n09_efw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9n09_efw.php\
    \ on line 28\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num > 0) {\n            $count += $num;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuk1kx_cg.php:29\n\
    Stack trace:\n#0 /tmp/tmpuk1kx_cg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuk1kx_cg.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = abs($num);\n            $sign\
    \ = substr($num, -1);\n            $num = substr($num, 0, -1);\n        } else\
    \ {\n            $sign = 0;\n        }\n        $result += $num * pow(10, strlen($num)\
    \ - strlen($sign));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpnweyt0t6.php on line\
    \ 22\n\nWarning: A non-numeric value encountered in /tmp/tmpnweyt0t6.php on line\
    \ 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnweyt0t6.php:33\n\
    Stack trace:\n#0 /tmp/tmpnweyt0t6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnweyt0t6.php\
    \ on line 33\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n > 0) break;\n  }\n  return $n;\n}\n\nfunction candidate(...$args) {\n  \
    \  return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmworhq9w.php:27\n\
    Stack trace:\n#0 /tmp/tmpmworhq9w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmworhq9w.php\
    \ on line 27\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num > 0) {\n            $count += $num % 10;\n        }\n  \
    \  }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl5r6r2y.php:29\n\
    Stack trace:\n#0 /tmp/tmpwl5r6r2y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwl5r6r2y.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n    }\n    $count += $num % 10;\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmun95nkn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmun95nkn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmun95nkn.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t46ttjd.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t46ttjd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7t46ttjd.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $v) {\n    if\
    \ ($v > 0) {\n      $n++;\n    }\n  }\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_9lca7t.php:32\n\
    Stack trace:\n#0 /tmp/tmpq_9lca7t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq_9lca7t.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num;\n      $num = abs($num);\n    }\n    $sum\
    \ += $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n  \
    \  return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehmcgfs4.php:31\n\
    Stack trace:\n#0 /tmp/tmpehmcgfs4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpehmcgfs4.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $v) {\n    if\
    \ ($v < 0) {\n      $v = abs($v);\n      $n = $v < 0 ? $v : $v - 10;\n    } else\
    \ {\n      $n = $v + $n;\n    }\n  }\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqf3_ait.php:31\n\
    Stack trace:\n#0 /tmp/tmpsqf3_ait.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsqf3_ait.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t46ttjd.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t46ttjd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7t46ttjd.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $n) {\n  \
    \  if ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n    \
    \  $sign = '';\n    }\n    $n = str_pad($n, 3, '0', STR_PAD_LEFT);\n    $digits\
    \ = str_split($n);\n    foreach ($digits as $digit) {\n      if ($digit > 0) $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16c3b88x.php:36\n\
    Stack trace:\n#0 /tmp/tmp16c3b88x.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp16c3b88x.php\
    \ on line 36\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += abs($num);\n    } else {\n      $sum += $num;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsh_43tsn.php:30\n\
    Stack trace:\n#0 /tmp/tmpsh_43tsn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsh_43tsn.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sign = substr($n, 0, 1);\n      $n =\
    \ substr($n, 1);\n    } else {\n      $sign = '';\n    }\n    $sum += $n * pow(10,\
    \ strlen($n) - strlen($sign));\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpvrtqwyr3.php on line\
    \ 22\n\nWarning: A non-numeric value encountered in /tmp/tmpvrtqwyr3.php on line\
    \ 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrtqwyr3.php:33\n\
    Stack trace:\n#0 /tmp/tmpvrtqwyr3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvrtqwyr3.php\
    \ on line 33\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n      $sign\
    \ = '';\n    }\n    $sum += intval($n) / pow(10, strlen($n) - 1);\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdr6syn3o.php:32\n\
    Stack trace:\n#0 /tmp/tmpdr6syn3o.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdr6syn3o.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n09_efw.php:28\n\
    Stack trace:\n#0 /tmp/tmp9n09_efw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9n09_efw.php\
    \ on line 28\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum += abs($num);\n        } else {\n \
    \           $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzn9vfbx_.php:30\n\
    Stack trace:\n#0 /tmp/tmpzn9vfbx_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzn9vfbx_.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ floor($num / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph64e6prs.php:30\n\
    Stack trace:\n#0 /tmp/tmph64e6prs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph64e6prs.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $count += $num > 0 ? 1 : 0;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihgpbhun.php:30\n\
    Stack trace:\n#0 /tmp/tmpihgpbhun.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpihgpbhun.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t46ttjd.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t46ttjd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7t46ttjd.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = $num < 0 ? '-' :\
    \ '';\n      $num = abs($num);\n    }\n    $count += $num;\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmt32oq0z.php:31\n\
    Stack trace:\n#0 /tmp/tmpmt32oq0z.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmt32oq0z.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else\
    \ {\n      $sign = '';\n    }\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n      if ($digit > 0) {\n        $count++;\n      }\n    }\n \
    \ }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rkso5ch.php:37\n\
    Stack trace:\n#0 /tmp/tmp9rkso5ch.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9rkso5ch.php\
    \ on line 37\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += abs($num);\n    } else {\n      $sum += $num;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsh_43tsn.php:30\n\
    Stack trace:\n#0 /tmp/tmpsh_43tsn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsh_43tsn.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t46ttjd.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t46ttjd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7t46ttjd.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = abs($num);\n            $sign\
    \ = substr($num, -1);\n            $num = substr($num, 0, -1);\n        } else\
    \ {\n            $sign = 1;\n        }\n        $result += $num * pow(10, strlen($num)\
    \ - strlen($sign));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp8p3bj9pq.php on line\
    \ 22\n\nWarning: A non-numeric value encountered in /tmp/tmp8p3bj9pq.php on line\
    \ 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8p3bj9pq.php:33\n\
    Stack trace:\n#0 /tmp/tmp8p3bj9pq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8p3bj9pq.php\
    \ on line 33\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sum -= $n / 10;\n      $sum += $n %\
    \ 10;\n    } else {\n      $sum += $n;\n    }\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfh9ap14.php:32\n\
    Stack trace:\n#0 /tmp/tmpwfh9ap14.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwfh9ap14.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n      $sign\
    \ = '';\n    }\n    $sum += intval($n) / 10;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzco094tk.php:32\n\
    Stack trace:\n#0 /tmp/tmpzco094tk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzco094tk.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum -= $num;\n      $num = -$num;\n    }\n    $sum\
    \ += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6tlfbzz.php:30\n\
    Stack trace:\n#0 /tmp/tmpt6tlfbzz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt6tlfbzz.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a = -$a;\n    }\n    $n = $a + $n;\n  }\n  return $n;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkw1a88j.php:29\n\
    Stack trace:\n#0 /tmp/tmpqkw1a88j.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqkw1a88j.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum -= $num;\n      $num = abs($num);\n    }\n    $sum\
    \ += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_69vlci.php:30\n\
    Stack trace:\n#0 /tmp/tmpd_69vlci.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpd_69vlci.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num > 0) {\n            $count += $num;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuk1kx_cg.php:29\n\
    Stack trace:\n#0 /tmp/tmpuk1kx_cg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuk1kx_cg.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t46ttjd.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t46ttjd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7t46ttjd.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sum -= $n % 10;\n    }\n    $sum +=\
    \ $n % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolc52mu.php:31\n\
    Stack trace:\n#0 /tmp/tmpkolc52mu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkolc52mu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = -1;\n    } else {\n\
    \      $sign = 1;\n    }\n    $sum += $num * pow(10, strlen($num) - 1);\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjj2ycus.php:32\n\
    Stack trace:\n#0 /tmp/tmpsjj2ycus.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsjj2ycus.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ floor($num / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph64e6prs.php:30\n\
    Stack trace:\n#0 /tmp/tmph64e6prs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph64e6prs.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = $n * -1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni84ff2u.php:29\n\
    Stack trace:\n#0 /tmp/tmpni84ff2u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpni84ff2u.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      $count\
    \ += $digit > 0 ? 1 : 0;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2hhif6p.php:39\n\
    Stack trace:\n#0 /tmp/tmpa2hhif6p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpa2hhif6p.php\
    \ on line 39\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += abs($num);\n    } else {\n      $sum += $num;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsh_43tsn.php:30\n\
    Stack trace:\n#0 /tmp/tmpsh_43tsn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsh_43tsn.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num >= 0) {\n            $count += $num;\n        } else {\n\
    \            $count += $num % 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsww910gh.php:30\n\
    Stack trace:\n#0 /tmp/tmpsww910gh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsww910gh.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num > 0) {\n            $count += $num;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuk1kx_cg.php:29\n\
    Stack trace:\n#0 /tmp/tmpuk1kx_cg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuk1kx_cg.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum -= $num;\n      $num = abs($num);\n    }\n    $sum\
    \ += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_69vlci.php:30\n\
    Stack trace:\n#0 /tmp/tmpd_69vlci.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpd_69vlci.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum -= $num;\n    } else {\n   \
    \   $sum += $num;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xpck5yr.php:31\n\
    Stack trace:\n#0 /tmp/tmp2xpck5yr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2xpck5yr.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t46ttjd.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t46ttjd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7t46ttjd.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    } else {\n   \
    \   $sum += $num;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1e0inr3d.php:31\n\
    Stack trace:\n#0 /tmp/tmp1e0inr3d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1e0inr3d.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n    }\n    $sum += $num;\n  }\n \
    \ return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpralntat5.php:29\n\
    Stack trace:\n#0 /tmp/tmpralntat5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpralntat5.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = $n * -1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni84ff2u.php:29\n\
    Stack trace:\n#0 /tmp/tmpni84ff2u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpni84ff2u.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $digit = substr($num,\
    \ strlen($num) - 1);\n            $count += $digit < 0 ? -$digit : $digit;\n \
    \       } else {\n            $count += $num;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgiyiuj0d.php:32\n\
    Stack trace:\n#0 /tmp/tmpgiyiuj0d.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgiyiuj0d.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else\
    \ {\n      $sign = '';\n    }\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n      if ($digit > 0) {\n        $count++;\n      }\n    }\n \
    \ }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rkso5ch.php:37\n\
    Stack trace:\n#0 /tmp/tmp9rkso5ch.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9rkso5ch.php\
    \ on line 37\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    $sum\
    \ += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00l1yb3q.php:26\n\
    Stack trace:\n#0 /tmp/tmp00l1yb3q.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp00l1yb3q.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplq6c9lb3.php:41\n\
    Stack trace:\n#0 /tmp/tmplq6c9lb3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmplq6c9lb3.php\
    \ on line 41\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += $num;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnaf_bi8l.php:32\n\
    Stack trace:\n#0 /tmp/tmpnaf_bi8l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnaf_bi8l.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a += 10;\n    }\n    $n += $a < 10 ? $a : 10 - $a;\n  }\n\
    \  return $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvhrd8o48.php:29\n\
    Stack trace:\n#0 /tmp/tmpvhrd8o48.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvhrd8o48.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n      $sign = '-';\n    } else {\n  \
    \    $sign = '';\n    }\n    $count += intval(\n      preg_replace('/[^0-9]/',\
    \ '', $num) . str_repeat($sign, strlen($num))\n    );\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u52ptcp.php:34\n\
    Stack trace:\n#0 /tmp/tmp9u52ptcp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9u52ptcp.php\
    \ on line 34\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n            $sign = -1;\n\
    \        } else {\n            $sign = 1;\n        }\n        $sum += $num * pow(10,\
    \ strlen($num) - 1);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3txtrhnq.php:32\n\
    Stack trace:\n#0 /tmp/tmp3txtrhnq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3txtrhnq.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num < 0 ? -$num : $num;\n    } else {\n   \
    \   $sum += $num;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptztius_z.php:30\n\
    Stack trace:\n#0 /tmp/tmptztius_z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptztius_z.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sum -= $n % 10;\n    }\n    $sum +=\
    \ $n % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolc52mu.php:31\n\
    Stack trace:\n#0 /tmp/tmpkolc52mu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkolc52mu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = abs($num);\n            $sign\
    \ = '-';\n        } else {\n            $sign = '';\n        }\n        $count\
    \ += $num % 10;\n        $num = floor($num / 10);\n    }\n    return $count +\
    \ $sign;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpofxasar1.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpofxasar1.php:33\n\
    Stack trace:\n#0 /tmp/tmpofxasar1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpofxasar1.php\
    \ on line 33\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    $count += $num < 0 ? -$num % 10 : $num % 10;\n  }\n  return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp63l9qg2.php:26\n\
    Stack trace:\n#0 /tmp/tmpp63l9qg2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp63l9qg2.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sum -= $n & 1;\n      $n >>= 1;\n  \
    \  }\n    $sum += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5y_ha2u.php:32\n\
    Stack trace:\n#0 /tmp/tmpv5y_ha2u.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpv5y_ha2u.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgps8q0q.php:29\n\
    Stack trace:\n#0 /tmp/tmpsgps8q0q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsgps8q0q.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sign = -1;\n \
    \       } else {\n            $sign = 1;\n        }\n        $sum += $num / pow(10,\
    \ strlen($num) - 1);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_ct0tbg.php:32\n\
    Stack trace:\n#0 /tmp/tmp1_ct0tbg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1_ct0tbg.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgps8q0q.php:29\n\
    Stack trace:\n#0 /tmp/tmpsgps8q0q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsgps8q0q.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $n) {\n  \
    \  if ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n    \
    \  $sign = '';\n    }\n    $count += $n * (int) str_repeat(substr($sign, strlen($n),\
    \ 1), 10);\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13y6wbls.php:33\n\
    Stack trace:\n#0 /tmp/tmp13y6wbls.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp13y6wbls.php\
    \ on line 33\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t46ttjd.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t46ttjd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7t46ttjd.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a = -$a;\n    }\n    $n = $a + $n;\n  }\n  return $n;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkw1a88j.php:29\n\
    Stack trace:\n#0 /tmp/tmpqkw1a88j.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqkw1a88j.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n            $sign = -1;\n\
    \        } else {\n            $sign = 1;\n        }\n        $sum += $num * pow(10,\
    \ abs(floor(log10($num))));\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88v7t3sh.php:32\n\
    Stack trace:\n#0 /tmp/tmp88v7t3sh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp88v7t3sh.php\
    \ on line 32\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    } else {\n   \
    \   $sum += $num;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1e0inr3d.php:31\n\
    Stack trace:\n#0 /tmp/tmp1e0inr3d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1e0inr3d.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n        }\n        $sum\
    \ += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14s5c6i6.php:29\n\
    Stack trace:\n#0 /tmp/tmp14s5c6i6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp14s5c6i6.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $n) {\n\
    \        if ($n < 0) {\n            $n = abs($n);\n            $sign = '-';\n\
    \        } else {\n            $sign = '';\n        }\n        $sum += $n % 10;\n\
    \        $n = $n / 10;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqkzjg17.php:33\n\
    Stack trace:\n#0 /tmp/tmplqkzjg17.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplqkzjg17.php\
    \ on line 33\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num < 0 ? -$num : $num;\n    } else {\n   \
    \   $sum += $num;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptztius_z.php:30\n\
    Stack trace:\n#0 /tmp/tmptztius_z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptztius_z.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num % 10;\n      $num = abs($num);\n    }\n\
    \    $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxrirdgr.php:31\n\
    Stack trace:\n#0 /tmp/tmpnxrirdgr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnxrirdgr.php\
    \ on line 31\n"
  timestamp: 1659730733

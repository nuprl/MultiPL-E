language: php
name: HumanEval_9_rolling_max
results:
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzt1dozk5.php:26\n\
    Stack trace:\n#0 /tmp/tmpzt1dozk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzt1dozk5.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $i = 0;\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max[$i]) {\n            $max[$i] = $number;\n        }\n\
    \        $i++;\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_qbjkzt.php:25\n\
    Stack trace:\n#0 /tmp/tmpt_qbjkzt.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt_qbjkzt.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclz2p8ym.php:28\n\
    Stack trace:\n#0 /tmp/tmpclz2p8ym.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpclz2p8ym.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbamtycim.php on line 81

    '
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($rolling_max < $number) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4wbf50z.php:27\n\
    Stack trace:\n#0 /tmp/tmpz4wbf50z.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz4wbf50z.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82h711b5.php:25\n\
    Stack trace:\n#0 /tmp/tmp82h711b5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp82h711b5.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1urbumg5.php:24\n\
    Stack trace:\n#0 /tmp/tmp1urbumg5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1urbumg5.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8mn8zzl.php:28\n\
    Stack trace:\n#0 /tmp/tmpj8mn8zzl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpj8mn8zzl.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    $result[] = $max_value;\n    $max_index++;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] == $max_index) {\n      \
    \      $result[] = $max_value;\n            $max_index++;\n        } else {\n\
    \            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0r1h9qh.php:34\n\
    Stack trace:\n#0 /tmp/tmpj0r1h9qh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj0r1h9qh.php\
    \ on line 34\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n        $index++;\n    }\n    return\
    \ array($max, $max_index);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnksy603.php:25\n\
    Stack trace:\n#0 /tmp/tmpfnksy603.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfnksy603.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rollingMax = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rollingMax === null) {\n            $rollingMax = $number;\n\
    \        } else {\n            $rollingMax = max($rollingMax, $number);\n    \
    \    }\n    }\n    $result[] = $rollingMax;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ojz8s4v.php:25\n\
    Stack trace:\n#0 /tmp/tmp7ojz8s4v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7ojz8s4v.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $i;\n        }\n        $i++;\n    }\n  \
    \  return array_slice($numbers, 0, $max_index);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91tsyy0g.php:25\n\
    Stack trace:\n#0 /tmp/tmp91tsyy0g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp91tsyy0g.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = reset($numbers);\n    $rolling_max = array();\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $rolling_max[] = $max;\n\
    \            $max = $number;\n        } else {\n            $max = $number;\n\
    \        }\n    }\n    $rolling_max[] = $max;\n    return $rolling_max;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeyq6hfek.php:26\n\
    Stack trace:\n#0 /tmp/tmpeyq6hfek.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeyq6hfek.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        } else {\n            $result[] = $number;\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1g0qfxo.php:27\n\
    Stack trace:\n#0 /tmp/tmpa1g0qfxo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa1g0qfxo.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $index = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = 0;\n        }\n        $result[$index] = $max;\n       \
    \ $index++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvlcb40u.php:27\n\
    Stack trace:\n#0 /tmp/tmplvlcb40u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplvlcb40u.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7az1addp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7az1addp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7az1addp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $number;\n        }\n    }\n    return array_slice($numbers, 0, $max_index\
    \ + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5drsfmm.php:25\n\
    Stack trace:\n#0 /tmp/tmpz5drsfmm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz5drsfmm.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7az1addp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7az1addp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7az1addp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    $rolling_max_index = 0;\n \
    \   $rolling_max_value = $numbers[0];\n    $rolling_max_index = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $rolling_max_value) {\n     \
    \       $rolling_max_value = $number;\n            $rolling_max_index = $rolling_max_index\
    \ + 1;\n        }\n        if ($number == $rolling_max_value) {\n            $rolling_max_index\
    \ = $rolling_max_index + 1;\n        }\n        if ($rolling_max_index >= $numbers)\
    \ {\n            $result[] = $rolling_max_value;\n            $rolling_max_index\
    \ = 0;\n            $rolling_max_value = $numbers[0];\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtaexjbf.php:35\n\
    Stack trace:\n#0 /tmp/tmpwtaexjbf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwtaexjbf.php\
    \ on line 35\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        } else {\n            $result[] = $number;\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1g0qfxo.php:27\n\
    Stack trace:\n#0 /tmp/tmpa1g0qfxo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa1g0qfxo.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexed_numbers\
    \ = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index\
    \ = $i;\n        }\n        $max_indexed_numbers[] = $numbers[$i];\n    }\n  \
    \  return $max_indexed_numbers;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphp64vhx_.php:27\n\
    Stack trace:\n#0 /tmp/tmphp64vhx_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphp64vhx_.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7az1addp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7az1addp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7az1addp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxjiqps3.php:25\n\
    Stack trace:\n#0 /tmp/tmpkxjiqps3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkxjiqps3.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $i;\n        }\n        $i++;\n    }\n    return $numbers[$max_index];\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpux_0w1mg.php:24\n\
    Stack trace:\n#0 /tmp/tmpux_0w1mg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpux_0w1mg.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = null;\n\
    \    $i = 0;\n    foreach ($numbers as $number) {\n        if ($rolling_max ===\
    \ null || $number > $rolling_max) {\n            $rolling_max = $number;\n   \
    \         $rolling_max_index = $i;\n        }\n        $i++;\n    }\n    $result[]\
    \ = $rolling_max;\n    $result[] = $rolling_max_index;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoppax27w.php:28\n\
    Stack trace:\n#0 /tmp/tmpoppax27w.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoppax27w.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = null;\n    $max_index = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max_value == null || $value >\
    \ $max_value) {\n            $max_value = $value;\n            $max_index = $index;\n\
    \        }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpubd03fzz.php:26\n\
    Stack trace:\n#0 /tmp/tmpubd03fzz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpubd03fzz.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpau8f01vw.php:24\n\
    Stack trace:\n#0 /tmp/tmpau8f01vw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpau8f01vw.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nz_lwpm.php:23\n\
    Stack trace:\n#0 /tmp/tmp5nz_lwpm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5nz_lwpm.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $size = count($numbers);\n    for ($i = 0; $i < $size;\
    \ $i++) {\n        $result[$i] = max($numbers[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): When only one parameter is given, it must be an array\
    \ in /tmp/tmpmsy4834x.php on line 10\n\nWarning: max(): When only one parameter\
    \ is given, it must be an array in /tmp/tmpmsy4834x.php on line 10\n\nWarning:\
    \ max(): When only one parameter is given, it must be an array in /tmp/tmpmsy4834x.php\
    \ on line 10\n\nWarning: max(): When only one parameter is given, it must be an\
    \ array in /tmp/tmpmsy4834x.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpmsy4834x.php:21\nStack trace:\n#0 /tmp/tmpmsy4834x.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmsy4834x.php on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg617f6lt.php:23\n\
    Stack trace:\n#0 /tmp/tmpg617f6lt.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpg617f6lt.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $i;\n        }\n   \
    \     $result[$max_index] = $max_value;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6zz7ruxt.php:26\n\
    Stack trace:\n#0 /tmp/tmp6zz7ruxt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6zz7ruxt.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdh1s66v.php:26\n\
    Stack trace:\n#0 /tmp/tmpkdh1s66v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkdh1s66v.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $numbers[$number];\n\
    \        }\n    }\n    $result[] = $max_value;\n    for ($i = 1; $i < $max_index;\
    \ $i++) {\n        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kq6_h3t.php:28\n\
    Stack trace:\n#0 /tmp/tmp9kq6_h3t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9kq6_h3t.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_number = null;\n    $max_index = null;\n    $max_indexs = [];\n\
    \    $max_indexs_length = 0;\n    $max_indexs_lengths = [];\n    foreach ($numbers\
    \ as $index => $number) {\n        if ($number > $max_number) {\n            $max_number\
    \ = $number;\n            $max_index = $index;\n            $max_indexs[] = $max_index;\n\
    \            $max_indexs_lengths[] = 1;\n        } else {\n            $max_indexs_lengths[$max_indexs_length]\
    \ = $max_indexs_lengths[$max_indexs_length] + 1;\n        }\n    }\n    $max_indexs_length\
    \ = array_sum($max_indexs_lengths);\n    $max_indexs = array_pad($max_indexs,\
    \ $max_indexs_length, 0);\n    foreach ($numbers as $index => $number) {\n   \
    \     if ($number > $max_number) {\n            $max_number = $number;\n     \
    \       $max_index = $index;\n            $max_indexs[$max_index] = $max_index;\n\
    \        }\n    }\n    return $max_indexs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vi0chwn.php:40\n\
    Stack trace:\n#0 /tmp/tmp1vi0chwn.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1vi0chwn.php\
    \ on line 40\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $number;\n        }\n    }\n    return $numbers[$max_index];\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1b3qj15j.php:23\n\
    Stack trace:\n#0 /tmp/tmp1b3qj15j.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1b3qj15j.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ccckgu2.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ccckgu2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6ccckgu2.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $i;\n        }\n   \
    \     $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis doesn't seem to work if there are duplicate\
    \ values in the array\n<|/ c |>\n<| c |>\nIt works, it just doesn't return the\
    \ correct result. Try it with `rolling_max(array(1, 2, 3, 2, 3, 4, 2))`\n<|/ c\
    \ |>\n<| c |>\nI see what you mean. I've edited my answer to fix the bug\n<|/\
    \ c |>\n<| c |>\nThis doesn't work if there are duplicate values in the array\n\
    <|/ c |>\n<| c |>\nIt does work, I've tested it with `rolling_max(array(1, 2,\
    \ 3, 2, 3, 4, 2))`\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfpu_rt5n.php on line 20

    '
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $result[] =\
    \ $max_value;\n        } else {\n            $result[] = $numbers[$i];\n     \
    \   }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh99rsfy.php:32\n\
    Stack trace:\n#0 /tmp/tmpwh99rsfy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwh99rsfy.php\
    \ on line 32\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i\
    \ == $max_index) {\n            $result[] = $numbers[$i];\n        } else {\n\
    \            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uvr7gyn.php:33\n\
    Stack trace:\n#0 /tmp/tmp6uvr7gyn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6uvr7gyn.php\
    \ on line 33\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = reset($numbers);\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnk_xem_7.php:21\n\
    Stack trace:\n#0 /tmp/tmpnk_xem_7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnk_xem_7.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $number;\n        }\n\
    \        $result[$max_index] = $max_value;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4dtpopb.php:26\n\
    Stack trace:\n#0 /tmp/tmpr4dtpopb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpr4dtpopb.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $value) {\n        if ($max_element == null || $value > $max_element) {\n\
    \            $max_element = $value;\n            $max_index = $index;\n      \
    \  }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgn0r696d.php:23\n\
    Stack trace:\n#0 /tmp/tmpgn0r696d.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgn0r696d.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_pop($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr_c1zjkj.php:24\n\
    Stack trace:\n#0 /tmp/tmpr_c1zjkj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr_c1zjkj.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        if ($numbers[$i] == $max_value) {\n            $result[] = $max_value;\n\
    \        } else {\n            $result[] = $numbers[$i];\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ef7yfn5.php:32\n\
    Stack trace:\n#0 /tmp/tmp9ef7yfn5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9ef7yfn5.php\
    \ on line 32\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = array();\n    $max_element[0] = max($numbers);\n    $max_element[1]\
    \ = max($numbers);\n    foreach ($numbers as $key => $value) {\n        if ($value\
    \ > $max_element[1]) {\n            $max_element[1] = $value;\n        }\n   \
    \ }\n    return $max_element;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpmv1g_eyi.php\
    \ on line 8\n\nWarning: max(): Array must contain at least one element in /tmp/tmpmv1g_eyi.php\
    \ on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmv1g_eyi.php:23\n\
    Stack trace:\n#0 /tmp/tmpmv1g_eyi.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmv1g_eyi.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ccckgu2.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ccckgu2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6ccckgu2.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiimwlqyw.php:23\n\
    Stack trace:\n#0 /tmp/tmpiimwlqyw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiimwlqyw.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11v5x9p_.php:27\n\
    Stack trace:\n#0 /tmp/tmp11v5x9p_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp11v5x9p_.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($rolling_max < $number) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4wbf50z.php:27\n\
    Stack trace:\n#0 /tmp/tmpz4wbf50z.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz4wbf50z.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $index = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max[$index]) {\n            $max[$index] = $number;\n\
    \        }\n        $index++;\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3620k7f.php:25\n\
    Stack trace:\n#0 /tmp/tmpi3620k7f.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi3620k7f.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxjiqps3.php:25\n\
    Stack trace:\n#0 /tmp/tmpkxjiqps3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkxjiqps3.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11v5x9p_.php:27\n\
    Stack trace:\n#0 /tmp/tmp11v5x9p_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp11v5x9p_.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdh1s66v.php:26\n\
    Stack trace:\n#0 /tmp/tmpkdh1s66v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkdh1s66v.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = NULL;\n    $max_index = NULL;\n    $length = count($numbers);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n            $max_index = $i;\n        }\n \
    \   }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiezfnhkm.php:26\n\
    Stack trace:\n#0 /tmp/tmpiezfnhkm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpiezfnhkm.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7az1addp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7az1addp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7az1addp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $size = count($numbers);\n    for ($i = 0; $i\
    \ < $size; $i++) {\n        $result[$i] = max($numbers[$i]);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): When only one parameter is given, it must be an array\
    \ in /tmp/tmp9j76d99o.php on line 10\n\nWarning: max(): When only one parameter\
    \ is given, it must be an array in /tmp/tmp9j76d99o.php on line 10\n\nWarning:\
    \ max(): When only one parameter is given, it must be an array in /tmp/tmp9j76d99o.php\
    \ on line 10\n\nWarning: max(): When only one parameter is given, it must be an\
    \ array in /tmp/tmp9j76d99o.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9j76d99o.php:21\nStack trace:\n#0 /tmp/tmp9j76d99o.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9j76d99o.php on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = reset($numbers);\n    $max_index = count($numbers) - 1;\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n            $max_index = $i;\n        }\n \
    \   }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcg8lz31g.php:25\n\
    Stack trace:\n#0 /tmp/tmpcg8lz31g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcg8lz31g.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n<?php\n$numbers = [1, 2, 3, 1, 2, 3, 1, 2, 3];\n\
    $max = $numbers[0];\n$result = [];\nforeach ($numbers as $number) {\n    if ($number\
    \ > $max) {\n        $max = $number;\n    }\n    $result[] = $max;\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$numbers = [1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3];\n$max = $numbers[0];\n$result = [];\nforeach ($numbers\
    \ as $number) {\n    if ($number > $max) {\n        $max = $number;\n    }\n \
    \   $result[] = $max;\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a tags=php,arrays |>\n<code>\n$numbers = [1, 2, 3, 1, 2, 3, 1, 2, 3];\n$max\
    \ = $numbers[0];\n$result = [];\nforeach ($numbers as $number) {\n    if ($number\
    \ > $max) {\n        $max = $number;\n    }\n    $result[] = $max;\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$numbers = [1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3];\n$max = $numbers[0];\n$result = [];\nforeach ($numbers as $number)\
    \ {\n    if ($number > $max) {\n        $max = $number;\n    }\n    $result[]\
    \ = $max;\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$numbers = [1, 2, 3, 1, 2, 3, 1, 2, 3];\n$max = $numbers[0];\n$result\
    \ = [];\nforeach ($numbers as $number) {\n    if ($number > $max) {\n        $max\
    \ = $number;\n    }\n    $result[] = $max;\n}\nprint_r($result);\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$numbers = [1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3];\n$max = $numbers[0];\n$result = [];\nforeach ($numbers as $number) {\n \
    \   if ($number > $max) {\n        $max = $number;\n    }\n    $result[] = $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpar6q22lc.php on line 17

    '
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $size = count($numbers);\n    for ($i = 0; $i < $size;\
    \ $i++) {\n        $result[$i] = max($numbers[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): When only one parameter is given, it must be an array\
    \ in /tmp/tmpmsy4834x.php on line 10\n\nWarning: max(): When only one parameter\
    \ is given, it must be an array in /tmp/tmpmsy4834x.php on line 10\n\nWarning:\
    \ max(): When only one parameter is given, it must be an array in /tmp/tmpmsy4834x.php\
    \ on line 10\n\nWarning: max(): When only one parameter is given, it must be an\
    \ array in /tmp/tmpmsy4834x.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpmsy4834x.php:21\nStack trace:\n#0 /tmp/tmpmsy4834x.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmsy4834x.php on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2kqrwvmc.php:25\n\
    Stack trace:\n#0 /tmp/tmp2kqrwvmc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2kqrwvmc.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7u2chmj.php:26\n\
    Stack trace:\n#0 /tmp/tmpj7u2chmj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj7u2chmj.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $size = sizeof($numbers);\n    for ($i = 0; $i\
    \ < $size; $i++) {\n        $result[$i] = max($numbers[$i]);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): When only one parameter is given, it must be an array\
    \ in /tmp/tmpoppain4x.php on line 10\n\nWarning: max(): When only one parameter\
    \ is given, it must be an array in /tmp/tmpoppain4x.php on line 10\n\nWarning:\
    \ max(): When only one parameter is given, it must be an array in /tmp/tmpoppain4x.php\
    \ on line 10\n\nWarning: max(): When only one parameter is given, it must be an\
    \ array in /tmp/tmpoppain4x.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpoppain4x.php:21\nStack trace:\n#0 /tmp/tmpoppain4x.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpoppain4x.php on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| c |>\n\
    This doesn't seem to work. `rolling_max(array(1, 2, 3, 2, 3, 4, 2))` returns `array(1,\
    \ 2, 3, 3, 3, 4, 4)` instead of `array(1, 2, 3, 3, 3, 4, 2)`.\n<|/ c |>\n<| c\
    \ |>\nI tested it on PHP 5.6 and it works. I edited my answer to add some comments\
    \ to explain how it works.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and it works.\
    \ I edited my answer to add some comments to explain how it works.\n<|/ c |>\n\
    <| c |>\nThis doesn't seem to work. `rolling_max(array(1, 2, 3, 2, 3, 4, 2))`\
    \ returns `array(1, 2, 3, 3, 3, 4, 4)` instead of `array(1, 2, 3, 3, 3, 4, 2)`.\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.6 and it works. I edited my answer to\
    \ add some comments to explain how it works.\n<|/ c |>\n<| a tags=php,arrays,algorithm\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfnerti22.php on line 20

    '
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclz2p8ym.php:28\n\
    Stack trace:\n#0 /tmp/tmpclz2p8ym.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpclz2p8ym.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = 0;\n        } elseif ($number == $max) {\n            $max_index++;\n    \
    \    }\n    }\n    return array_slice($numbers, 0, $max_index);\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpih5j32a3.php:25\n\
    Stack trace:\n#0 /tmp/tmpih5j32a3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpih5j32a3.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = -INF;\n    $max_index = -1;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $number;\n        }\n    }\n    return array_slice($numbers, 0, $max_index\
    \ + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zj4m4b4.php:25\n\
    Stack trace:\n#0 /tmp/tmp8zj4m4b4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8zj4m4b4.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdh1s66v.php:26\n\
    Stack trace:\n#0 /tmp/tmpkdh1s66v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkdh1s66v.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        if ($numbers[$i] == $max_value) {\n            $result[] = $max_value;\n\
    \        } else {\n            $result[] = $numbers[$i];\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp661l37kj.php:32\n\
    Stack trace:\n#0 /tmp/tmp661l37kj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp661l37kj.php\
    \ on line 32\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxjiqps3.php:25\n\
    Stack trace:\n#0 /tmp/tmpkxjiqps3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkxjiqps3.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = $rolling_max;\n        }\n    }\n    return $rolling_max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gt63c3s.php:25\n\
    Stack trace:\n#0 /tmp/tmp2gt63c3s.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2gt63c3s.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7az1addp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7az1addp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7az1addp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        } else {\n            $result[] = $number;\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1g0qfxo.php:27\n\
    Stack trace:\n#0 /tmp/tmpa1g0qfxo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa1g0qfxo.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        if ($numbers[$i] == $max_value) {\n            $result[] = $max_value;\n\
    \        } else {\n            $result[] = $numbers[$i];\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ef7yfn5.php:32\n\
    Stack trace:\n#0 /tmp/tmp9ef7yfn5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9ef7yfn5.php\
    \ on line 32\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2m0jt4q.php:23\n\
    Stack trace:\n#0 /tmp/tmph2m0jt4q.php(29): test()\n#1 {main}\n  thrown in /tmp/tmph2m0jt4q.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $index = 0;\n    $max = array_shift($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $result[$index] = $max;\n            $index++;\n            $max = $number;\n\
    \        } else {\n            $max = $number;\n        }\n    }\n    $result[$index]\
    \ = $max;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtyvu3lr.php:28\n\
    Stack trace:\n#0 /tmp/tmpvtyvu3lr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvtyvu3lr.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1urbumg5.php:24\n\
    Stack trace:\n#0 /tmp/tmp1urbumg5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1urbumg5.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $index = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max[$index]) {\n            $max[$index] = $number;\n\
    \        }\n        $index++;\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3620k7f.php:25\n\
    Stack trace:\n#0 /tmp/tmpi3620k7f.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi3620k7f.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1urbumg5.php:24\n\
    Stack trace:\n#0 /tmp/tmp1urbumg5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1urbumg5.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    $i = 0;\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max) {\n            $max = $number;\n   \
    \         $result[$i] = $max;\n            $i++;\n        } else {\n         \
    \   $result[$i] = $number;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oxcx28.php:29\n\
    Stack trace:\n#0 /tmp/tmpz3oxcx28.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz3oxcx28.php\
    \ on line 29\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    $max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = 0;\n        }\n        $result[$index++] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmwujstz.php:26\n\
    Stack trace:\n#0 /tmp/tmplmwujstz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplmwujstz.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxjiqps3.php:25\n\
    Stack trace:\n#0 /tmp/tmpkxjiqps3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkxjiqps3.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $index = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = $number;\n        } else {\n            $result[$index]\
    \ = $max;\n            $max = $number;\n            $index = $number;\n      \
    \  }\n    }\n    $result[$index] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi2g89u9.php:29\n\
    Stack trace:\n#0 /tmp/tmpwi2g89u9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwi2g89u9.php\
    \ on line 29\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $result[$index]) {\n            $result[$index] = $number;\n\
    \        }\n        $index++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6s734bn.php:25\n\
    Stack trace:\n#0 /tmp/tmpz6s734bn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz6s734bn.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11v5x9p_.php:27\n\
    Stack trace:\n#0 /tmp/tmp11v5x9p_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp11v5x9p_.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7u2chmj.php:26\n\
    Stack trace:\n#0 /tmp/tmpj7u2chmj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj7u2chmj.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    $result[] = $max_value;\n    $max_index++;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \      $result[] = $max_value;\n        $max_index++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvjsqvt_z.php:34\n\
    Stack trace:\n#0 /tmp/tmpvjsqvt_z.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvjsqvt_z.php\
    \ on line 34\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = -INF;\n    $max_index = 0;\n    $max_value = -INF;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($value > $max) {\n           \
    \ $max = $value;\n            $max_index = $index;\n            $max_value = $value;\n\
    \        }\n    }\n    return array($max_index, $max_value);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9pxbh29y.php:25\n\
    Stack trace:\n#0 /tmp/tmp9pxbh29y.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9pxbh29y.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$arr = [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, \n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpg989_v2z.php on line 17

    '
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1urbumg5.php:24\n\
    Stack trace:\n#0 /tmp/tmp1urbumg5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1urbumg5.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_number = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_number) {\n            $max_number\
    \ = $number;\n            $max_index = $i;\n        }\n        $i++;\n    }\n\
    \    return $numbers[$max_index];\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgr4ytbqz.php:24\n\
    Stack trace:\n#0 /tmp/tmpgr4ytbqz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgr4ytbqz.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1urbumg5.php:24\n\
    Stack trace:\n#0 /tmp/tmp1urbumg5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1urbumg5.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p480jmy.php:25\n\
    Stack trace:\n#0 /tmp/tmp2p480jmy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2p480jmy.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $max_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max === null) {\n           \
    \ $max = $value;\n            $max_index = $index;\n            $max_value = $value;\n\
    \        } elseif ($max < $value) {\n            $max = $value;\n            $max_index\
    \ = $index;\n            $max_value = $value;\n        }\n    }\n    return array($max,\
    \ $max_index, $max_value);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxdccly1.php:29\n\
    Stack trace:\n#0 /tmp/tmpkxdccly1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkxdccly1.php\
    \ on line 29\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclz2p8ym.php:28\n\
    Stack trace:\n#0 /tmp/tmpclz2p8ym.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpclz2p8ym.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = $max_index; $i >= 0; $i--) {\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqra2pa27.php:27\n\
    Stack trace:\n#0 /tmp/tmpqra2pa27.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqra2pa27.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrf7jziq.php:27\n\
    Stack trace:\n#0 /tmp/tmpnrf7jziq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnrf7jziq.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = array_shift($numbers);\n    $rolling_max = array();\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_element) {\n\
    \            $rolling_max[] = $max_element;\n            $max_element = $number;\n\
    \        } else {\n            $max_element = $number;\n        }\n    }\n   \
    \ $rolling_max[] = $max_element;\n    return $rolling_max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5dvfsswu.php:26\n\
    Stack trace:\n#0 /tmp/tmp5dvfsswu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5dvfsswu.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclz2p8ym.php:28\n\
    Stack trace:\n#0 /tmp/tmpclz2p8ym.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpclz2p8ym.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $number;\n        }\n    }\n    $max_index++;\n    $numbers[$max_index] =\
    \ $max;\n    return $numbers;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2qjyh66.php:25\n\
    Stack trace:\n#0 /tmp/tmpy2qjyh66.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpy2qjyh66.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzt1dozk5.php:26\n\
    Stack trace:\n#0 /tmp/tmpzt1dozk5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzt1dozk5.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1urbumg5.php:24\n\
    Stack trace:\n#0 /tmp/tmp1urbumg5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1urbumg5.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    $max = -INF;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $result[$index] = $max;\n        }\n        $index++;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46h8jduo.php:27\n\
    Stack trace:\n#0 /tmp/tmp46h8jduo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp46h8jduo.php\
    \ on line 27\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   $index = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_value)\
    \ {\n            $max_value = $number;\n            $max_index = $index;\n   \
    \     }\n        $result[$index] = $number;\n        $index++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0s03v61w.php:29\n\
    Stack trace:\n#0 /tmp/tmp0s03v61w.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0s03v61w.php\
    \ on line 29\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclz2p8ym.php:28\n\
    Stack trace:\n#0 /tmp/tmpclz2p8ym.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpclz2p8ym.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = -INF;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = $rolling_max > $number ? $rolling_max : $number;\n        }\n    }\n    return\
    \ $rolling_max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb87r1kc.php:25\n\
    Stack trace:\n#0 /tmp/tmprb87r1kc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprb87r1kc.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $value) {\n        if ($max_element === null || $value > $max_element) {\n\
    \            $max_element = $value;\n            $max_index = $index;\n      \
    \  }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv38zc4vp.php:25\n\
    Stack trace:\n#0 /tmp/tmpv38zc4vp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv38zc4vp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = NULL;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = 0;\n        } elseif ($number == $max) {\n            $max_index++;\n    \
    \    }\n    }\n    return array_slice($numbers, 0, $max_index);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2g74z_2.php:26\n\
    Stack trace:\n#0 /tmp/tmpw2g74z_2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw2g74z_2.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null || $number > $rolling_max) {\n        \
    \    $rolling_max = $number;\n        }\n        $result[] = $rolling_max;\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $i = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($rolling_max === null) {\n            $rolling_max\
    \ = $number;\n        } else {\n            $rolling_max = $rolling_max > $number\
    \ ? $rolling_max : $number;\n        }\n        $result[$i] = $rolling_max;\n\
    \        $i++;\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [1, 2, 3, 1, 2, 3, 1, 2, 3];\n\
    $max = 0;\n$result = [];\nforeach ($array as $key => $value) {\n    if ($value\
    \ > $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\n\
    print_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = [1, 2, 3, 1, 2, 3, 1, 2, 3];\n$max = 0;\n$result = [];\nforeach\
    \ ($array as $key => $value) {\n    if ($value > $max) {\n        $max = $value;\n\
    \        $result[$key] = $max;\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = [1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3];\n$max = 0;\n$result = [];\nforeach ($array as $key => $value) {\n    if\
    \ ($value > $max) {\n        $max = $value;\n        $result[$key] = $max;\n \
    \   }\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = [1, 2, 3, 1, 2, 3, 1, 2, 3];\n$max = 0;\n$result = [];\nforeach\
    \ ($array as $key => $value) {\n    if ($value > $max) {\n        $max = $value;\n\
    \        $result[$key] = $max;\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = [1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3];\n$max = 0;\n$result = [];\nforeach ($array as $key => $value) {\n    if\
    \ ($value > $max) {\n        $max = $value;\n        $result[$key] = $max;\n \
    \   }\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp43t_5d_g.php on line 21

    '
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2kqrwvmc.php:25\n\
    Stack trace:\n#0 /tmp/tmp2kqrwvmc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2kqrwvmc.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclz2p8ym.php:28\n\
    Stack trace:\n#0 /tmp/tmpclz2p8ym.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpclz2p8ym.php\
    \ on line 28\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    $max_element = $numbers[$max_index];\n    return\
    \ $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fnt3y8y.php:25\n\
    Stack trace:\n#0 /tmp/tmp8fnt3y8y.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8fnt3y8y.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiomuukk.php:21\n\
    Stack trace:\n#0 /tmp/tmppiomuukk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppiomuukk.php\
    \ on line 21\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $result[] =\
    \ $numbers[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst9_8q93.php:29\n\
    Stack trace:\n#0 /tmp/tmpst9_8q93.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpst9_8q93.php\
    \ on line 29\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuei_uiln.php:23\n\
    Stack trace:\n#0 /tmp/tmpuei_uiln.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuei_uiln.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $max_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max === null) {\n           \
    \ $max = $value;\n            $max_index = $index;\n            $max_value = $value;\n\
    \        } elseif ($max < $value) {\n            $max = $value;\n            $max_index\
    \ = $index;\n            $max_value = $value;\n        }\n    }\n    return array($max_index,\
    \ $max_value);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbuk5pd6k.php:29\n\
    Stack trace:\n#0 /tmp/tmpbuk5pd6k.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbuk5pd6k.php\
    \ on line 29\n"
  timestamp: 1659730638
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730638
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_value) {\n            $max_value = $number;\n\
    \        }\n        $result[] = $max_value;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $number;\n        }\n\
    \        $result[$max_index] = $max_value;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4dtpopb.php:26\n\
    Stack trace:\n#0 /tmp/tmpr4dtpopb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpr4dtpopb.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = 0;\n        } else if ($number == $max) {\n            $max_index++;\n   \
    \     }\n    }\n    return array_slice($numbers, 0, $max_index);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphng4t3uq.php:26\n\
    Stack trace:\n#0 /tmp/tmphng4t3uq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphng4t3uq.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    $rolling_max = array();\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $rolling_max[]\
    \ = $max;\n            $max = $number;\n        } else {\n            $max = $number;\n\
    \        }\n    }\n    $rolling_max[] = $max;\n    return $rolling_max;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6x8qm_x7.php:26\n\
    Stack trace:\n#0 /tmp/tmp6x8qm_x7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6x8qm_x7.php\
    \ on line 26\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $index = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = $number;\n        } else {\n            $result[$index]\
    \ = $max;\n            $max = $number;\n            $index = $number;\n      \
    \  }\n    }\n    $result[$index] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi2g89u9.php:29\n\
    Stack trace:\n#0 /tmp/tmpwi2g89u9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwi2g89u9.php\
    \ on line 29\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n        $result[] = $rolling_max;\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/17490147)\n\
    <|/ c |>\n<| c |>\nI added an explanation to the answer\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/17490147)\n\
    <|/ c |>\n<| c |>\nI added an explanation to the answer\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/17490147)\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, \nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8yy6th84.php on line 19

    '
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynlvu_40.php:23\n\
    Stack trace:\n#0 /tmp/tmpynlvu_40.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpynlvu_40.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16twtas9.php:23\n\
    Stack trace:\n#0 /tmp/tmp16twtas9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp16twtas9.php\
    \ on line 23\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7az1addp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7az1addp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7az1addp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7az1addp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7az1addp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7az1addp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1urbumg5.php:24\n\
    Stack trace:\n#0 /tmp/tmp1urbumg5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1urbumg5.php\
    \ on line 24\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiouamo4n.php:25\n\
    Stack trace:\n#0 /tmp/tmpiouamo4n.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiouamo4n.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7az1addp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7az1addp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7az1addp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7az1addp.php:25\n\
    Stack trace:\n#0 /tmp/tmp7az1addp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7az1addp.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $index = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = $number;\n        } else {\n            $result[$index]\
    \ = $max;\n            $max = $number;\n            $index = $number;\n      \
    \  }\n    }\n    $result[$index] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi2g89u9.php:29\n\
    Stack trace:\n#0 /tmp/tmpwi2g89u9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwi2g89u9.php\
    \ on line 29\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4yxcb3d5.php:25\n\
    Stack trace:\n#0 /tmp/tmp4yxcb3d5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4yxcb3d5.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl5m7wy7.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl5m7wy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkl5m7wy7.php\
    \ on line 25\n"
  timestamp: 1659730638
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index = 0;\n\
    \    $index = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_value)\
    \ {\n            $max_value = $number;\n            $max_index = $index;\n   \
    \     }\n        $index++;\n    }\n    return $max_value;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a |>\n<code>\n<?php\n$numbers = array(1,2,3,4,5,6,7,8,9,10);\n$max =\
    \ $numbers[0];\n$maxIndex = 0;\n$index = 0;\nforeach ($numbers as $number) {\n\
    \    if ($number > $max) {\n        $max = $number;\n        $maxIndex = $index;\n\
    \    }\n    $index++;\n}\necho \"Max number is: $max\";\necho \"Max index is:\
    \ $maxIndex\";\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdt454xoo.php on line 20

    '
  timestamp: 1659730638

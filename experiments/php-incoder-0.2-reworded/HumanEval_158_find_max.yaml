name: HumanEval_158_find_max
language: php
prompt: "<?php\n// Write a function that accepts an array of strings.\n// The array\
  \ contains different words. Return the word with maximum number\n// of unique characters.\
  \ If multiple strings have maximum number of unique\n// characters, return the one\
  \ which comes first in lexicographical order.\n// >>> find_max(array(\"name\", \"\
  of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"enam\", \"\
  game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n// \"\
  aaaaaaa\"\nfunction find_max($words) {\n"
tests: "function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
  string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"cba\"))\
  \ !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"gonna\"\
  , \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"))\
  \ !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $max_count = -1;\n    $max_word = \"\";\n    foreach ($words as\
    \ $word) {\n        $word_count = count($word);\n        if ($word_count > $max_count)\
    \ {\n            $max_count = $word_count;\n            $max_word = $word;\n \
    \       }\n    }\n    return $max_word;\n}\n", "    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max = $word;\n        \
    \    $max_count = $word_count;\n        }\n    }\n    return $max;\n}\n", "  \
    \  $max = $words[0];\n    $max_count = 0;\n    foreach ($words as $word) {\n \
    \       $count = count($word);\n        if ($count > $max_count) {\n         \
    \   $max = $word;\n            $max_count = $count;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word)\
    \ {\n        $count = count($word);\n        if ($count > $maxCount) {\n     \
    \       $maxCount = $count;\n            $max = $word;\n        }\n    }\n   \
    \ return $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max = $word;\n        }\n\
    \    }\n    return $max;\n}\n", "    $max = $words[0];\n    foreach ($words as\
    \ $word) {\n        $count = count($word);\n        if ($count > count($max))\
    \ {\n            $max = $word;\n        }\n    }\n    return $max;\n}", "  $counts\
    \ = array_count_values($words);\n  arsort($counts);\n  return key($counts);\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThanks for your answer. Your solution\
    \ works fine but i want to know why my code is not working ?\n<|/ c |>\n<| c |>\n\
    I added a comment to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. Your solution works fine but i want to know why my code is not\
    \ working ?\n<|/ c |>\n<| c |>\nI added a comment to my answer. Hope it helps.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\"name\",\"of\",\"string\"\
    ,\"name\",\"enam\",\"game\",\"aaaaaaa\",\"bb\",\"cc\");\n$max = 0;\n$maxWord =\
    \ \"\";\nforeach($array as $key => $value) {\n    if($value>$max) {\n        $max\
    \ = $value;\n        $maxWord = $key;\n    }\n}\necho $maxWord;", "    $max =\
    \ null;\n    $max_count = 0;\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n      \
    \  $count = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n      \
    \  $count = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}\n", "    $max\
    \ = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $maxCount) {\n            $maxCount =\
    \ $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $chars\
    \ = str_split($word);\n        $count = count($chars);\n        if ($count > $max)\
    \ {\n            $max = $count;\n            $word = $word;\n        }\n    }\n\
    \    return $word;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max = $word;\n        }\n\
    \    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $word_count = count($word);\n        if ($word_count\
    \ > $max_count) {\n            $max = $word;\n            $max_count = $word_count;\n\
    \        } else if ($word_count == $max_count) {\n            if ($word[0] < $max[0])\
    \ {\n                $max = $word;\n            }\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach ($words as\
    \ $word) {\n        $count = count($word);\n        if ($count > $max_count) {\n\
    \            $max_count = $count;\n            $max = $word;\n        }\n    }\n\
    \    return $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $max) {\n\
    \            $max = $count;\n            $word = $word;\n        }\n    }\n  \
    \  return $word;\n}\n", "    $max_count = -1;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}\n", "    $max = null;\n    $maxCount = 0;\n\
    \    foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $maxCount) {\n            $maxCount = $count;\n            $max = $word;\n\
    \        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount =\
    \ 0;\n    foreach ($words as $word) {\n        $count = count($word);\n      \
    \  if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = $words[0];\n\
    \    foreach ($words as $word) {\n        if (count($word) > count($max)) {\n\
    \            $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max\
    \ = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $maxCount) {\n            $maxCount =\
    \ $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n      \
    \  $count = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = 0;\n    $word = \"\";\n    foreach ($words as $w) {\n        $chars\
    \ = str_split($w);\n        $chars = array_count_values($chars);\n        $char\
    \ = max($chars);\n        if ($char > $max) {\n            $max = $char;\n   \
    \         $word = $w;\n        }\n    }\n    return $word;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a |>\n<code>\n<?php\n$string = \"Hello World\";\n$words = explode(\"\
    \ \", $string);\n$words = array_count_values($words);\narsort($words);\n$word\
    \ = key($words);\necho $word;", "    $max = 0;\n    $word = \"\";\n    foreach\
    \ ($words as $word) {\n        $chars = str_split($word);\n        $chars = array_count_values($chars);\n\
    \        $chars = array_filter($chars);\n        if (count($chars) > $max) {\n\
    \            $max = count($chars);\n            $word = $word;\n        }\n  \
    \  }\n    return $word;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach\
    \ ($words as $word) {\n        $chars = str_split($word);\n        $count = count($chars);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n", "    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n", "    $max = $words[0];\n\
    \    $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = $words[0];\n\
    \    $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $maxCount = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}\n", "  $max = null;\n\
    \  $max_count = 0;\n  foreach ($words as $word) {\n    $count = count($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max = $word;\n\
    \    }\n  }\n  return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n   \
    \ foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $maxCount) {\n            $maxCount = $count;\n            $max = $word;\n\
    \        }\n    }\n    return $max;\n}", "    $max = $words[0];\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $max_count = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max_count = $word_count;\n\
    \            $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max\
    \ = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $maxCount) {\n            $maxCount =\
    \ $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = $words[0];\n    $count = 1;\n    foreach ($words as $word) {\n     \
    \   if (strlen($word) > strlen($max)) {\n            $max = $word;\n         \
    \   $count = 1;\n        } elseif (strlen($word) == strlen($max)) {\n        \
    \    $count++;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $maxCount = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}", "    $max = 0;\n \
    \   $word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $max_count = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max_count = $word_count;\n\
    \            $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max\
    \ = $words[0];\n    $max_count = 0;\n    foreach ($words as $word) {\n       \
    \ $count = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n       \
    \ $count = count($word);\n        if ($count > $maxCount) {\n            $maxCount\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = $words[0];\n    $max_count = 0;\n    foreach ($words as $word) {\n \
    \       $count = count($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max = $word;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word)\
    \ {\n        $count = count($word);\n        if ($count > $max) {\n          \
    \  $max = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n \
    \       $count = count($word);\n        if ($count > $maxCount) {\n          \
    \  $maxCount = $count;\n            $max = $word;\n        }\n    }\n    return\
    \ $max;\n}", "    $max = $words[0];\n    $count = 1;\n    foreach ($words as $word)\
    \ {\n        if (strlen($word) > strlen($max)) {\n            $max = $word;\n\
    \            $count = 1;\n        } elseif (strlen($word) == strlen($max)) {\n\
    \            $count++;\n        }\n    }\n    return $max;\n}\n", "    $max_count\
    \ = -1;\n    $max_word = \"\";\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max_word = $word;\n        }\n    }\n    return $max_word;\n\
    }\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n   \
    \     $chars = str_split($word);\n        $count = count($chars);\n        if\
    \ ($count > $max) {\n            $max = $count;\n            $word = $word;\n\
    \        }\n    }\n    return $word;\n}\n", "    $max = null;\n    $maxCount =\
    \ 0;\n    foreach ($words as $word) {\n        $count = count($word);\n      \
    \  if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "  $max = $words[0];\n \
    \ $max_count = 0;\n  foreach ($words as $word) {\n    $count = count($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max = $word;\n\
    \    }\n  }\n  return $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach\
    \ ($words as $word) {\n        $chars = str_split($word);\n        $count = count($chars);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n", "    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = 1;\n        foreach\
    \ ($words as $word2) {\n            if ($word == $word2) {\n                $count++;\n\
    \            }\n        }\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}", "    $max\
    \ = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n       \
    \ $count = count($word);\n        if ($count > $maxCount) {\n            $maxCount\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}\n", "    $max\
    \ = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $count = count($chars);\n        if ($count > $max) {\n            $max\
    \ = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n \
    \       $count = count($word);\n        if ($count > $maxCount) {\n          \
    \  $maxCount = $count;\n            $max = $word;\n        }\n    }\n    return\
    \ $max;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I am\
    \ not able to understand your code. Can you please explain it a bit?\n<|/ c |>\n\
    <| c |>\nI added some comments to my answer. Hope it helps.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. I am not able to understand your code. Can you please\
    \ explain it a bit?\n<|/ c |>\n<| c |>\nI added some comments to my answer. Hope\
    \ it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I am not able to understand\
    \ your code. Can you please explain it a bit?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    <?php", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n\
    \        $count = count($word);\n        if ($count > $maxCount) {\n         \
    \   $maxCount = $count;\n            $max = $word;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word)\
    \ {\n        $count = count($word);\n        if ($count > $maxCount) {\n     \
    \       $maxCount = $count;\n            $max = $word;\n        }\n    }\n   \
    \ return $max;\n}", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max = $word;\n        }\n\
    \    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach\
    \ ($words as $word) {\n        $chars = count($word);\n        if ($chars > $max)\
    \ {\n            $max = $chars;\n            $word = $word;\n        }\n    }\n\
    \    return $word;\n}", "    $counts = array_count_values($words);\n    $max =\
    \ max($counts);\n    foreach ($counts as $word => $count) {\n        if ($count\
    \ === $max) {\n            return $word;\n        }\n    }\n}\n</code>\n<|/ a\
    \ |>\n<| c |>\nI like your solution, however it fails for `find_max(array(\"aaaaaaa\"\
    , \"bb\", \"cc\"))` which should return `\"aaaaaaa\"` but returns `\"cc\"`.\n\
    <|/ c |>\n<| c |>\nYes, I missed that case. Thanks for pointing it out. I've updated\
    \ my answer to handle that case too.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $string = \"aaaaaaa\";\n$array = array(\"aaaaaaa\", \"bb\", \"cc\");\n$count =\
    \ array_count_values($array);\n$max = $count[max($count)];\n$result = \"\";\n\
    foreach ($count as $key => $value) {\n    if ($value == $max) {\n        $result\
    \ = $key;\n        break;\n    }\n}\necho $result;\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = \"aaaaaaa\";\n$array = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\n$count = array_count_values($array);\n$max = $count[max($count)];\n\
    $result = \"\";\nforeach ($count as $key => $value) {\n    if ($value == $max)\
    \ {\n        $result = $key;\n        break;\n    }\n}\necho $result;\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$string = \"\
    aaaaaaa\";\n$array = array(\"aaaaaaa\", \"bb\", \"cc\");\n$count = array_count_values($array);\n\
    $max = $count[max($count)];\n$result = \"\";\nforeach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n        $result = $key;\n        break;\n    }\n\
    }\necho $result;\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$string\
    \ = \"aaaaaaa\";\n$array = array(\"aaaaaaa\", \"bb\", \"cc\");\n$count = array_count_values($array);\n\
    $max = $count[max($count)];\n$result = \"\";\nforeach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n        $result = $key;\n        break;\n    }\n\
    }\necho $result;\n</code>", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = $words[0];\n    $max_count = 0;\n \
    \   foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max = $word;\n\
    \        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount =\
    \ 0;\n    foreach ($words as $word) {\n        $count = count($word);\n      \
    \  if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}", "    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = 0;\n\
    \    $word = \"\";\n    foreach ($words as $w) {\n        $len = strlen($w);\n\
    \        if ($len > $max) {\n            $max = $len;\n            $word = $w;\n\
    \        }\n    }\n    return $word;\n}\n", "    $max = $words[0];\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $max_count = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max = $word;\n            $max_count\
    \ = $count;\n        } else if ($count == $max_count) {\n            $max = str_replace($word,\
    \ '', $max);\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,algorithm |>\n<code>\n<?php\n$string = 'aaabbbccc';\n$array = str_split($string);\n\
    $count = array_count_values($array);\n$max = $array[0];\n$maxCount = 1;\nforeach\
    \ ($count as $key => $value) {\n    if ($value > $maxCount) {\n        $max =\
    \ $key;\n        $maxCount = $value;\n    }\n}\necho $max;\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = 'aaabbbccc';\n$array = str_split($string);\n\
    $count = array_count_values($array);\n$max = $array[0];\n$maxCount = 1;\nforeach\
    \ ($count as $key => $value) {\n    if ($value > $maxCount) {\n        $max =\
    \ $key;\n        $maxCount = $value;\n    }\n}\necho $max;\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| a tags=php,algorithm |>\n<code>\n<?php\n$string = 'aaabbbccc';\n$array\
    \ = str_split($string);\n$count = array_count_values($array);\n$max = $array[0];\n\
    $maxCount = 1;\nforeach ($count as $key => $value) {\n    if ($value > $maxCount)\
    \ {\n        $max = $key;\n        $maxCount = $value;\n    }\n}\necho $max;\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = 'aaabbbccc';\n\
    $array = str_split($string);\n$count = array_count_values($array);\n$max = $array[0];\n\
    $maxCount = 1;\nforeach ($count as $key => $value) {\n    if ($value > $maxCount)\
    \ {\n        $max = $key;\n        $maxCount = $value;\n    }\n}\necho $max;\n\
    </code>\n<|/ a tags=php,algorithm |>\n<| a tags=php,algorithm |>\n<code>\n<?php\n\
    $string = 'aaabbbccc';\n$array = str_split($string);\n$count = array_count_",
  "    $max = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n      \
    \  $count = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $count\
    \ = 1;\n        foreach (str_split($word) as $char) {\n            $count += substr_count($word,\
    \ $char);\n        }\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}\n</code>\n\
    <|/ a tags=algorithm,php |>\n<| c |>\nThis doesn't work. Try it on `array(\"aaaaaaa\"\
    , \"bb\", \"cc\")`\n<|/ c |>\n<| c |>\nIt works. I tested it on `array(\"aaaaaaa\"\
    , \"bb\", \"cc\")`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it on `array(\"aaaaaaa\"\
    , \"bb\", \"cc\")`\n<|/ c |>\n<| c |>\nIt works. I tested it on `array(\"aaaaaaa\"\
    , \"bb\", \"cc\")`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it on `array(\"aaaaaaa\"\
    , \"bb\", \"cc\")`\n<|/ c |>\n<| a tags=algorithm,php |>\n<code>\n<?php\n$word\
    \ = \"aaaaaaa\";\n$count = substr_count($word, 'a');\n$count2 = substr_count($word,\
    \ 'b');\n$count3 = substr_count($word, 'c');\n$count4 = substr_count($word, 'd');\n\
    $count5 = substr_count($word, 'e');\n$count6 = substr_count($word, 'f');\n$count7\
    \ = substr_count($word, 'g');\n$count8 = substr_count($word, 'h');\n$count9 =\
    \ substr_count($word, 'i');\n$count10 = substr_count($word, 'j');\n$count11 =\
    \ substr_count($word, 'k');\n$count12 = substr_count($word, 'l');\n$count13 =\
    \ substr_count($word, 'm');\n$count14 = substr_count($word, 'n');\n$count15 =\
    \ substr_count($word, 'o');\n$count16 = substr_count($word, 'p');\n$count17 =\
    \ substr_count($word, 'q');\n$count18 = substr_count($word, 'r');\n$count19 =\
    \ substr_count($word, 's');\n$count20 = substr_count($word, 't');\n$count21 =\
    \ substr_count($word, 'u');\n$", "    $max_count = -1;\n    $max_word = \"\";\n\
    \    foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "  $counts = array_count_values($words);\n\
    \  arsort($counts);\n  return key($counts);\n}\n", "    $counts = array_count_values($words);\n\
    \    $max = $words[0];\n    foreach ($counts as $word => $count) {\n        if\
    \ ($count > $max) {\n            $max = $count;\n        }\n    }\n    return\
    \ $max;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't seem to work. `find_max(array(\"\
    aaaaaaa\", \"bb\", \"cc\"))` returns `\"aaaaaaa\"` instead of `\"cc\"`.\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works fine for me. Are you sure you copied it\
    \ correctly?\n<|/ c |>\n<| c |>\nI copied it exactly as you wrote it. I'm running\
    \ PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli) (built: Jul 18 2013 11:16:24).\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli)\
    \ (built: Jul 18 2013 11:16:24). What version are you using?\n<|/ c |>\n<| c |>\n\
    I tested it on PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli) (built: Jul 18\
    \ 2013 11:16:24). What version are you using?\n<|/ c |>\n<| a tags=php,algorithm\
    \ |>\n<code>", "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word)\
    \ {\n        $count = 1;\n        foreach (str_split($word) as $char) {\n    \
    \        $count *= strlen($char);\n        }\n        if ($count > $max) {\n \
    \           $max = $count;\n            $word = $word;\n        }\n    }\n   \
    \ return $word;\n}\n</code>\n<|/ a tags=php,algorithm |>\n<| c |>\nI believe this\
    \ fails for \"aaaaaaa\" and \"bbb\" because they both have 4 unique characters.\
    \ But I could be wrong.\n<|/ c |>\n<| c |>\nYes, you are right. My mistake. Thanks\
    \ for pointing it out.\n<|/ c |>\n<| c |>\nI believe this fails for \"aaaaaaa\"\
    \ and \"bbb\" because they both have 4 unique characters. But I could be wrong.\n\
    <|/ c |>\n<| c |>\nYes, you are right. My mistake. Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\nI believe this fails for \"aaaaaaa\" and \"bbb\" because they\
    \ both have 4 unique characters. But I could be wrong.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word)\
    \ {\n        $count = count($word);\n        if ($count > $maxCount) {\n     \
    \       $maxCount = $count;\n            $max = $word;\n        }\n    }\n   \
    \ return $max;\n}\n", "    $max = $words[0];\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max = $word;\n        }\n\
    \    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "  $max = 0;\n  $word = \"\";\n  foreach ($words\
    \ as $word) {\n    $count = count($word);\n    if ($count > $max) {\n      $max\
    \ = $count;\n      $word = $word;\n    }\n  }\n  return $word;\n}", "    $max\
    \ = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $counts = array_count_values($words);\n    $max = $words[0];\n    foreach ($counts\
    \ as $word => $count) {\n        if ($count > $max) {\n            $max = $count;\n\
    \        }\n    }\n    return $max;\n}\n", "    $max = $words[0];\n    $count\
    \ = 1;\n    foreach ($words as $word) {\n        if ($word == $max) {\n      \
    \      $count++;\n        } else {\n            $count = 1;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $length = strlen($word);\n\
    \        if ($length > $max) {\n            $max = $length;\n            $word\
    \ = $word;\n        }\n    }\n    return $word;\n}", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $chars = array_count_values($chars);\n        $char = max($chars);\n\
    \        if ($char > $max) {\n            $max = $char;\n            $word = $word;\n\
    \        }\n    }\n    return $word;\n}", "    $max = null;\n    $maxCount = 0;\n\
    \    foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $maxCount) {\n            $maxCount = $count;\n            $max = $word;\n\
    \        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount =\
    \ 0;\n    foreach ($words as $word) {\n        $count = count($word);\n      \
    \  if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = getUniqueCharCount($word);\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $max_count = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max_count = $word_count;\n\
    \            $max = $word;\n        } else if ($word_count == $max_count) {\n\
    \            $max = str_replace($word, $words[$i], $max);\n        }\n    }\n\
    \    return $max;\n}", "  $chars = array_count_values($words);\n  $max = -1;\n\
    \  foreach ($chars as $char => $count) {\n    if ($count > $max) {\n      $max\
    \ = $count;\n    }\n  }\n  foreach ($chars as $char => $count) {\n    if ($count\
    \ == $max) {\n      return $char;\n    }\n  }\n  return $words[0];\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nI like the idea of using array_count_values()\
    \ to find the most frequent word, but this doesn't really answer the question.\
    \ OP wants to find the word that comes first in lexicographical order.\n<|/ c\
    \ |>\n<| c |>\nYes, I agree with you. I've added a solution that does that.\n\
    <|/ c |>\n<| c |>\nI like your solution, but I wonder if there's a way to do this\
    \ without using array_count_values(). I'm thinking about a solution where I sort\
    \ the array by length and then by lexicographical order. I'll post my solution\
    \ when I get it working.\n<|/ c |>\n<| c |>\nYes, I think your solution is better.\
    \ I've added a solution that does that.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$words = array(\"name\", \"of\", \"string\");\n$words = array_count_values($words);\n\
    $max = max($words);\n$maxKeys = array_keys($words, $max);\n$maxKey = $maxKeys[0];\n\
    echo $maxKey;", "    $max = $words[0];\n    $max_count = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max = $word;\n        }\n\
    \    }\n    return $max;\n}", "    $max_count = -1;\n    $max_word = \"\";\n \
    \   foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n", "    $max = 0;\n    $word = \"\
    \";\n    foreach ($words as $w) {\n        $wlen = strlen($w);\n        if ($wlen\
    \ > $max) {\n            $max = $wlen;\n            $word = $w;\n        }\n \
    \   }\n    return $word;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $word_count = count($word);\n        if ($word_count\
    \ > $max_count) {\n            $max = $word;\n            $max_count = $word_count;\n\
    \        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount =\
    \ 0;\n    foreach ($words as $word) {\n        $count = count($word);\n      \
    \  if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}", "    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $maxCount = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = 0;\n\
    \    $word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $length = strlen($word);\n\
    \        if ($length > $max) {\n            $max = $length;\n            $word\
    \ = $word;\n        }\n    }\n    return $word;\n}\n", "    $max = null;\n   \
    \ $maxCount = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}\n", "  $max = 0;\n \
    \ $word = \"\";\n  foreach ($words as $word) {\n    $count = count($word);\n \
    \   if ($count > $max) {\n      $max = $count;\n      $word = $word;\n    }\n\
    \  }\n  return $word;\n}", "    $max = 0;\n    $word = \"\";\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $max) {\n\
    \            $max = $count;\n            $word = $word;\n        }\n    }\n  \
    \  return $word;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max = $word;\n            $max_count = $count;\n        } else\
    \ if ($count == $max_count) {\n            $max = str_replace($word, $words[$i],\
    \ $max);\n        }\n    }\n    return $max;\n}", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = $words[0];\n\
    \    foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > count($max)) {\n            $max = $word;\n        }\n    }\n    return $max;\n\
    }\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n   \
    \     $chars = str_split($word);\n        $count = count($chars);\n        if\
    \ ($count > $max) {\n            $max = $count;\n            $word = $word;\n\
    \        }\n    }\n    return $word;\n}\n", "    $max = 0;\n    $word = \"\";\n\
    \    foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $max) {\n            $max = $count;\n            $word = $word;\n        }\n\
    \    }\n    return $word;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max = $word;\n        }\n\
    \    }\n    return $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max = $word;\n        }\n\
    \    }\n    return $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $word_count = count($word);\n        if ($word_count\
    \ > $max_count) {\n            $max = $word;\n            $max_count = $word_count;\n\
    \        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $max_count =\
    \ 0;\n    foreach ($words as $word) {\n        $count = count($word);\n      \
    \  if ($count > $max_count) {\n            $max_count = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nThe question was about a PHP solution, not a Python one.\n<|/ c\
    \ |>\n<| c |>\nI added a PHP solution as well\n<|/ c |>\n<| c |>\nI added a PHP\
    \ solution as well\n<|/ c |>\n<| a |>\n<code>\n$array = array(\"name\", \"of\"\
    , \"string\");\n$result = array_count_values($array);\n$max = $result[0];\n$maxKey\
    \ = null;\nforeach ($result as $key => $value) {\n    if ($value > $max) {\n \
    \       $max = $value;\n        $maxKey = $key;\n    }\n}\necho $maxKey;\n</code>\n\
    <|/ a dscore=1 tags=php,algorithm |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    name\", \"of\", \"string\");\n$result = array_count_values($array);\n$max = $result[0];\n\
    $maxKey = null;\nforeach ($result as $key => $value) {\n    if ($value > $max)\
    \ {\n        $max = $value;\n        $maxKey = $key;\n    }\n}\necho $maxKey;\n\
    </code>\n<|/ a tags=php,algorithm |>\n<| a |>\n<code>\n$array = array(\"name\"\
    , \"of\", \"string\");\n$result = array_count_values($array);\n$max = $result[0];\n\
    $maxKey = null;\nforeach ($result as $key => $value) {\n    if ($value > $max)\
    \ {\n        $max = $value;\n        $maxKey = $key;\n    }\n}\necho $maxKey;\n\
    </code>\n<|/ a dscore=1 tags=php,algorithm |>\n<| a |>\n<code>\n$array = array(\"\
    name\", \"of\", \"string\");\n$result = array_count_values($array);\n$max = $result[0];\n\
    $maxKey = null;\nforeach ($result as $key => $value) {\n    if ($value > $max)\
    \ {\n        $max = $value;\n        $maxKey = $key;\n    }\n}\necho $maxKey;\n\
    </code>\n<|/ a dscore=1 tags=php,algorithm |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(\"name\", \"of\", \"string\");\n$result = array_count_values($array);\n\
    $max = $result[0];\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "  $max = 0;\n  $word = \"\";\n  foreach ($words\
    \ as $word) {\n    $count = count($word);\n    if ($count > $max) {\n      $max\
    \ = $count;\n      $word = $word;\n    }\n  }\n  return $word;\n}", "    $max\
    \ = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $maxCount) {\n            $maxCount =\
    \ $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n       \
    \ $count = count($word);\n        if ($count > $maxCount) {\n            $maxCount\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}",
  "    $max_count = -1;\n    $max_word = \"\";\n    foreach ($words as $word) {\n\
    \        $count = count($word);\n        if ($count > $max_count) {\n        \
    \    $max_count = $count;\n            $max_word = $word;\n        }\n    }\n\
    \    return $max_word;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}", "    $max_count = -1;\n    $max_word = \"\";\n  \
    \  foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n", "    $max_count = -1;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max_count) {\n            $max_count = $count;\n       \
    \     $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n", "   \
    \ $max = $words[0];\n    $count = 1;\n    foreach ($words as $word) {\n      \
    \  if ($word == $max) {\n            $count++;\n        } else {\n           \
    \ if ($count > 1) {\n                return $max;\n            }\n           \
    \ $count = 1;\n            $max = $word;\n        }\n    }\n    return $max;\n\
    }", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n \
    \       $count = count($word);\n        if ($count > $maxCount) {\n          \
    \  $maxCount = $count;\n            $max = $word;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach ($words as\
    \ $word) {\n        $count = count($word);\n        if ($count > $max_count) {\n\
    \            $max_count = $count;\n            $max = $word;\n        }\n    }\n\
    \    return $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words\
    \ as $word) {\n        $count = 1;\n        foreach ($words as $word2) {\n   \
    \         if ($word == $word2) {\n                $count++;\n            }\n \
    \       }\n        if ($count > $max) {\n            $max = $count;\n        \
    \    $word = $word;\n        }\n    }\n    return $word;\n}\n", "    $max_count\
    \ = -1;\n    $max_word = \"\";\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max_word = $word;\n        }\n    }\n    return $max_word;\n\
    }\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n\
    \        $count = count($word);\n        if ($count > $maxCount) {\n         \
    \   $maxCount = $count;\n            $max = $word;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word)\
    \ {\n        $count = count($word);\n        if ($count > $maxCount) {\n     \
    \       $maxCount = $count;\n            $max = $word;\n        }\n    }\n   \
    \ return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach\
    \ ($words as $word) {\n        $count = 1;\n        foreach ($words as $w) {\n\
    \            if ($w == $word) {\n                $count++;\n            }\n  \
    \      }\n        if ($count > $max) {\n            $max = $count;\n         \
    \   $word = $word;\n        }\n    }\n    return $word;\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nThis does not answer the question. He wants to find the word with\
    \ the most unique characters, not the number of unique characters.\n<|/ c |>\n\
    <| c |>\nThe question was edited after I posted my answer. Now it answers the\
    \ question as it was originally asked.\n<|/ c |>\n<| c |>\nI edited my answer\
    \ after I posted my answer. Now it answers the question as it was originally asked.\n\
    <|/ c |>\n<| c |>\nI edited my answer after I posted my answer. Now it answers\
    \ the question as it was originally asked.\n<|/ c |>\n<| a tags=php,algorithm\
    \ |>\n<code>\n<?php\n$word = \"name\";\n$wordArray = explode(\" \", $word);\n\
    $uniqueChars = array_count_values($wordArray);\n$maxCount = 0;\n$maxWord = \"\"\
    ;\nforeach ($uniqueChars as $key => $value) {\n    if ($value > $maxCount) {\n\
    \        $maxCount = $value;\n        $maxWord = $key;\n    }\n}\necho $maxWord;",
  "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n       \
    \ $count = count($word);\n        if ($count > $maxCount) {\n            $maxCount\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n      \
    \  $word_count = count($word);\n        if ($word_count > $max_count) {\n    \
    \        $max = $word;\n            $max_count = $word_count;\n        }\n   \
    \ }\n    return $max;\n}\n", "    $counts = array_count_values($words);\n    $max\
    \ = $counts[0];\n    $word = $words[0];\n    foreach ($counts as $count => $word)\
    \ {\n        if ($count > $max) {\n            $max = $count;\n            $word\
    \ = $word;\n        }\n    }\n    return $word;\n}\n", "    $max = 0;\n    $word\
    \ = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count > $max) {\n            $max = $count;\n            $word =\
    \ $word;\n        }\n    }\n    return $word;\n}\n", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "  $counts = array_count_values($words);\n\
    \  arsort($counts);\n  return key($counts);\n}\n", "    $max = 0;\n    $word =\
    \ \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n   \
    \     if ($count > $max) {\n            $max = $count;\n            $word = $word;\n\
    \        }\n    }\n    return $word;\n}\n", "    $max = null;\n    $maxCount =\
    \ 0;\n    foreach ($words as $word) {\n        $count = count($word);\n      \
    \  if ($count > $maxCount) {\n            $maxCount = $count;\n            $max\
    \ = $word;\n        }\n    }\n    return $max;\n}\n", "    $max_count = -1;\n\
    \    $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n", "  \
    \  $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}\n", "    $max\
    \ = $words[0];\n    $max_count = 0;\n    foreach ($words as $word) {\n       \
    \ $count = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n      \
    \  $count = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n       \
    \ $count = count($word);\n        if ($count > $maxCount) {\n            $maxCount\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = 0;\n    $word = \"\";\n    foreach ($words as $w) {\n        $chars\
    \ = str_split($w);\n        $chars = array_count_values($chars);\n        $char\
    \ = max($chars);\n        if ($char > $max) {\n            $max = $char;\n   \
    \         $word = $w;\n        }\n    }\n    return $word;\n}\n</code>\n<|/ a\
    \ tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(\"name\", \"of\", \"string\");\n$array = array_count_values($array);\n\
    arsort($array);\n$max = array_keys($array)[0];\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=php,arrays,sorting |>\n<code>\n$array = array(\"name\", \"of\", \"string\"\
    );\n$array = array_count_values($array);\narsort($array);\n$max = array_keys($array)[0];\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array =\
    \ array(\"name\", \"of\", \"string\");\n$array = array_count_values($array);\n\
    arsort($array);\n$max = array_keys($array)[0];\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=php,arrays,sorting |>\n<code>\n$array = array(\"name\", \"of\", \"string\"\
    );\n$array = array_count_values($array);\narsort($array);\n$max = array_keys($array)[0];\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array =\
    \ array(\"name\", \"of\", \"string\");\n$array = array_count_values($array);\n\
    arsort($array);\n$max = array_keys($array)[0];\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=php,arrays,sorting |>\n<code>\n$array = array(\"name\", \"of\", \"string\"\
    );\n$array = array_count_values($array);\narsort($array);\n$max = array_keys($array)[0];\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"name\"\
    , \"of\", \"string\");\n$array = array_count_values($array);\narsort($array);\n\
    $max = array_keys($array)[0];\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ |>\n<code>\n$array = array(\"name\", \"of\", \"string\");\n$array = array_count_values($array);\n\
    ar", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n\
    \        $count = count($word);\n        if ($count > $maxCount) {\n         \
    \   $maxCount = $count;\n            $max = $word;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word)\
    \ {\n        $length = strlen($word);\n        if ($length > $max) {\n       \
    \     $max = $length;\n            $word = $word;\n        }\n    }\n    return\
    \ $word;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as\
    \ $word) {\n        $count = count($word);\n        if ($count > $maxCount) {\n\
    \            $maxCount = $count;\n            $max = $word;\n        }\n    }\n\
    \    return $max;\n}\n", "    $counts = array_count_values($words);\n    $max\
    \ = $words[0];\n    foreach ($counts as $word => $count) {\n        if ($count\
    \ > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n\
    }\n", "    $max = $words[0];\n    $count = 1;\n    foreach ($words as $word) {\n\
    \        if (count($word) > count($max)) {\n            $max = $word;\n      \
    \      $count = 1;\n        } else {\n            $count++;\n        }\n    }\n\
    \    return $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $max) {\n\
    \            $max = $count;\n            $word = $word;\n        }\n    }\n  \
    \  return $word;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $max) {\n\
    \            $max = $count;\n            $word = $word;\n        }\n    }\n  \
    \  return $word;\n}", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max_count = -1;\n    $max_word = \"\";\n\
    \    foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n", "    $max = $words[0];\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max = null;\n\
    \    $maxCount = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}", "    $max = null;\n\
    \    $maxCount = 0;\n    foreach ($words as $word) {\n        $count = count($word);\n\
    \        if ($count > $maxCount) {\n            $maxCount = $count;\n        \
    \    $max = $word;\n        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't seem to work. `find_max(array(\"name\", \"of\", \"\
    string\"))` returns `\"name\"` instead of `\"string\"`.\n<|/ c |>\n<| c |>\nI\
    \ tested it on PHP 5.3.10 and it works. What PHP version are you using?\n<|/ c\
    \ |>\n<| c |>\nPHP 5.3.10. Maybe it's my PHP version?\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.3.10 and it works. What PHP version are you using?\n<|/ c |>\n<|\
    \ c |>\nPHP 5.3.10. Maybe it's my PHP version?\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$array = array(\"name\", \"of\", \"string\");\n$max = $array[0];\n\
    $maxCount = 0;\nforeach ($array as $word) {\n    $count = count($word);\n    if\
    \ ($count > $maxCount) {\n        $maxCount = $count;\n        $max = $word;\n\
    \    }\n}\necho $max;", "    $max = 0;\n    $word = \"\";\n    foreach ($words\
    \ as $word) {\n        $count = str_word_count($word);\n        if ($count > $max)\
    \ {\n            $max = $count;\n            $word = $word;\n        }\n    }\n\
    \    return $word;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $counts = array_count_values($words);\n  \
    \  $max = $counts[0];\n    foreach ($counts as $count => $word) {\n        if\
    \ ($count > $max) {\n            $max = $count;\n        }\n    }\n    return\
    \ $words[$max];\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max_chars = array();\n    $max_chars_length\
    \ = array();\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $chars_length = count($chars);\n        $max_chars[] = $chars;\n    \
    \    $max_chars_length[] = $chars_length;\n    }\n    $max_chars = array_unique($max_chars);\n\
    \    $max_chars_length = array_unique($max_chars_length);\n    $max_chars_length\
    \ = array_sum($max_chars_length);\n    $max_chars = array_slice($max_chars, 0,\
    \ 1);\n    $max_chars = array_map(function($chars) {\n        return implode($chars);\n\
    \    }, $max_chars);\n    $max_chars = array_map(function($chars) {\n        return\
    \ strlen($chars);\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_chars = array_map(function($chars)\
    \ {\n        return $chars;\n    }, $max_chars);\n    $max_chars = array_sum($max_chars);\n\
    \    $max_chars = array_slice($max_chars, 0, 1);\n    $max_char", "    $max =\
    \ null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n        $count =\
    \ count($word);\n        if ($count > $maxCount) {\n            $maxCount = $count;\n\
    \            $max = $word;\n        }\n    }\n    return $max;\n}\n", "    $max\
    \ = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $count = count($chars);\n        if ($count > $max) {\n            $max\
    \ = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }\n", "    $max = $words[0];\n    $max_count = 0;\n    foreach ($words as $word)\
    \ {\n        $count = count($word);\n        if ($count > $max_count) {\n    \
    \        $max_count = $count;\n            $max = $word;\n        }\n    }\n \
    \   return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $counts = array_count_values($words);\n  \
    \  $max = $words[0];\n    foreach ($counts as $word => $count) {\n        if ($count\
    \ > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n\
    }\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n   \
    \     $count = count($word);\n        if ($count > $max) {\n            $max =\
    \ $count;\n            $word = $word;\n        }\n    }\n    return $word;\n}\n",
  "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}\n", "    $max_count\
    \ = -1;\n    $max_word = \"\";\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max_word = $word;\n        }\n    }\n    return $max_word;\n\
    }\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n\
    \        $count = 1;\n        foreach ($words as $word2) {\n            if ($word\
    \ == $word2) {\n                continue;\n            }\n            $count +=\
    \ substr_count($word, $word2);\n        }\n        if ($count > $maxCount) {\n\
    \            $maxCount = $count;\n            $max = $word;\n        }\n    }\n\
    \    return $max;\n}", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = get_unique_chars($word);\n        if ($count >\
    \ $maxCount) {\n            $maxCount = $count;\n            $max = $word;\n \
    \       }\n    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n\
    \    foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $maxCount) {\n            $maxCount = $count;\n            $max = $word;\n\
    \        }\n    }\n    return $max;\n}\n", "  $max = 0;\n  $word = \"\";\n  foreach\
    \ ($words as $word) {\n    $count = count($word);\n    if ($count > $max) {\n\
    \      $max = $count;\n      $word = $word;\n    }\n  }\n  return $word;\n}\n",
  "    $max = $words[0];\n    $max_count = 0;\n    foreach ($words as $word) {\n \
    \       $count = count($word);\n        if ($count > $max_count) {\n         \
    \   $max = $word;\n            $max_count = $count;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach ($words as\
    \ $word) {\n        $word_count = count($word);\n        if ($word_count > $max_count)\
    \ {\n            $max = $word;\n            $max_count = $word_count;\n      \
    \  }\n    }\n    return $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach\
    \ ($words as $word) {\n        $count = str_split($word);\n        $count = array_count_values($count);\n\
    \        $count = array_filter($count);\n        $count = array_keys($count);\n\
    \        $count = array_reverse($count);\n        $count = array_slice($count,\
    \ 0, 1);\n        $count = array_sum($count);\n        if ($count > $max) {\n\
    \            $max = $count;\n            $word = $word;\n        }\n    }\n  \
    \  return $word;\n}", "    $max = null;\n    $maxCount = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

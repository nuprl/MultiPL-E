name: HumanEval_158_find_max
language: php
prompt: "<?php\n// Write a function that accepts an array of strings.\n// The array\
  \ contains different words. Return the word with maximum number\n// of unique characters.\
  \ If multiple strings have maximum number of unique\n// characters, return the one\
  \ which comes first in lexicographical order.\n// >>> find_max(array(\"name\", \"\
  of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"enam\", \"\
  game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n// \"\
  aaaaaaa\"\nfunction find_max($words) {\n"
tests: "function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
  string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"cba\"))\
  \ !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"gonna\"\
  , \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"))\
  \ !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $max_count = -1;\n    $max_word = \"\";\n    foreach ($words as\
    \ $word) {\n        $word_count = count($word);\n        if ($word_count > $max_count)\
    \ {\n            $max_count = $word_count;\n            $max_word = $word;\n \
    \       }\n    }\n    return $max_word;\n}\n", "    $max = null;\n    $max_count\
    \ = 0;\n    foreach ($words as $word) {\n        $word_count = count($word);\n\
    \        if ($word_count > $max_count) {\n            $max = $word;\n        \
    \    $max_count = $word_count;\n        }\n    }\n    return $max;\n}\n", "  \
    \  $max = $words[0];\n    $max_count = 0;\n    foreach ($words as $word) {\n \
    \       $count = count($word);\n        if ($count > $max_count) {\n         \
    \   $max = $word;\n            $max_count = $count;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach ($words as $word)\
    \ {\n        $count = count($word);\n        if ($count > $maxCount) {\n     \
    \       $maxCount = $count;\n            $max = $word;\n        }\n    }\n   \
    \ return $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max = $word;\n        }\n\
    \    }\n    return $max;\n}\n", "    $max = $words[0];\n    foreach ($words as\
    \ $word) {\n        $count = count($word);\n        if ($count > count($max))\
    \ {\n            $max = $word;\n        }\n    }\n    return $max;\n}", "  $counts\
    \ = array_count_values($words);\n  arsort($counts);\n  return key($counts);\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThanks for your answer. Your solution\
    \ works fine but i want to know why my code is not working ?\n<|/ c |>\n<| c |>\n\
    I added a comment to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. Your solution works fine but i want to know why my code is not\
    \ working ?\n<|/ c |>\n<| c |>\nI added a comment to my answer. Hope it helps.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\"name\",\"of\",\"string\"\
    ,\"name\",\"enam\",\"game\",\"aaaaaaa\",\"bb\",\"cc\");\n$max = 0;\n$maxWord =\
    \ \"\";\nforeach($array as $key => $value) {\n    if($value>$max) {\n        $max\
    \ = $value;\n        $maxWord = $key;\n    }\n}\necho $maxWord;", "    $max =\
    \ null;\n    $max_count = 0;\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n      \
    \  $count = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = null;\n    $max_count = 0;\n    foreach ($words as $word) {\n      \
    \  $count = count($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $max) {\n            $max = $count;\n\
    \            $word = $word;\n        }\n    }\n    return $word;\n}\n", "    $max\
    \ = null;\n    $maxCount = 0;\n    foreach ($words as $word) {\n        $count\
    \ = count($word);\n        if ($count > $maxCount) {\n            $maxCount =\
    \ $count;\n            $max = $word;\n        }\n    }\n    return $max;\n}\n",
  "    $max = 0;\n    $word = \"\";\n    foreach ($words as $word) {\n        $chars\
    \ = str_split($word);\n        $count = count($chars);\n        if ($count > $max)\
    \ {\n            $max = $count;\n            $word = $word;\n        }\n    }\n\
    \    return $word;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max = $word;\n        }\n\
    \    }\n    return $max;\n}\n", "    $max = null;\n    $maxCount = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $maxCount)\
    \ {\n            $maxCount = $count;\n            $max = $word;\n        }\n \
    \   }\n    return $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $word_count = count($word);\n        if ($word_count\
    \ > $max_count) {\n            $max = $word;\n            $max_count = $word_count;\n\
    \        } else if ($word_count == $max_count) {\n            if ($word[0] < $max[0])\
    \ {\n                $max = $word;\n            }\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = null;\n    $max_count = 0;\n    foreach ($words as\
    \ $word) {\n        $count = count($word);\n        if ($count > $max_count) {\n\
    \            $max_count = $count;\n            $max = $word;\n        }\n    }\n\
    \    return $max;\n}\n", "    $max = 0;\n    $word = \"\";\n    foreach ($words\
    \ as $word) {\n        $count = count($word);\n        if ($count > $max) {\n\
    \            $max = $count;\n            $word = $word;\n        }\n    }\n  \
    \  return $word;\n}\n", "    $max_count = -1;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $count = count($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}\n", "    $max = null;\n    $maxCount = 0;\n\
    \    foreach ($words as $word) {\n        $count = count($word);\n        if ($count\
    \ > $maxCount) {\n            $maxCount = $count;\n            $max = $word;\n\
    \        }\n    }\n    return $max;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

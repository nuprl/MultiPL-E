name: HumanEval_104_unique_digits
language: php
prompt: "<?php\n// Given an array of positive integers x. return a sorted array of\
  \ all \n// elements that hasn't any even digit.\n// Note: Returned array should\
  \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
  \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
  \ 10))\n// array()\nfunction unique_digits($x) {\n"
tests: "function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
  \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
  \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) {\
  \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = [];\n    foreach ($x as $v) {\n        $result[] = $v;\n\
    \    }\n    sort($result);\n    $result = [];\n    foreach ($result as $v) {\n\
    \        if ($v % 2 == 0) {\n            $result[] = $v;\n        }\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    foreach ($x as $number) {\n\
    \        $result[] = array_sum(str_split($number));\n    }\n    sort($result);\n\
    \    return array_filter($result, function($number) {\n        return !($number\
    \ % 2);\n    });\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try it with\
    \ `unique_digits(array(15, 33, 1422, 1))`\n<|/ c |>\n<| c |>\nIt works. I tested\
    \ it before posting it. What do you mean by \"doesn't work\"?\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work. Try it with `unique_digits(array(15, 33, 1422, 1))`\n<|/\
    \ c |>\n<| c |>\nI tested it before posting it. What do you mean by \"doesn't\
    \ work\"?\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `unique_digits(array(15,\
    \ 33, 1422, 1))`\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    $digits = array();\n\
    \    foreach($x as $key => $value) {\n        $digits[$key] = $value;\n    }\n\
    \    sort($digits);\n    $result = array();\n    foreach($digits as $key => $value)\
    \ {\n        if($value % 2 == 0) {\n            $result[] = $value;\n        }\n\
    \    }\n    return $result;\n}", "    $result = [];\n    foreach($x as $key =>\
    \ $value) {\n        if($value % 2 == 0) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$arr1 = [];\n\
    foreach($arr as $key => $value) {\n    if($value % 2 == 0) {\n        $arr1[$key]\
    \ = $value;\n    }\n}\nprint_r($arr1);", "    $result = array();\n    foreach($x\
    \ as $val) {\n        $result[] = $val;\n    }\n    sort($result);\n    $result\
    \ = array_filter($result, function($val){\n        return !is_numeric($val);\n\
    \    });\n    return $result;\n}\n</code>\n<|/ a tags=arrays,php,sorting |>\n\
    <| a tags=arrays,php,sorting |>\n<code>\n<?php\n$array = array(15, 33, 1422, 1);\n\
    $array = array_filter($array, function($v){\n    return !is_numeric($v);\n});\n\
    sort($array);\nprint_r($array);\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\n\
    $array = array(15, 33, 1422, 1);\n$array = array_filter($array, function($v){\n\
    \    return !is_numeric($v);\n});\nsort($array);\nprint_r($array);\n</code>\n\
    <|/ a tags=arrays,php,sorting dscore=2 |>\n<| a tags=arrays,php,sorting |>\n<code>\n\
    $array = array(15, 33, 1422, 1);\n$array = array_filter($array, function($v){\n\
    \    return !is_numeric($v);\n});\nsort($array);\nprint_r($array);\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=arrays,php,sorting |>\n<code>\n$array = array(15,\
    \ 33, 1422, 1);\n$array = array_filter($array, function($v){\n    return !is_numeric($v);\n\
    });\nsort($array);\nprint_r($array);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(15, 33, 1422, 1);\n$array = array_filter($array,\
    \ function($v){\n    return !is_numeric($v);\n});\nsort($array);\nprint_r($array);\n\
    </code>\n<|/ a tags=arrays,php,sorting |>\n<| a tags=arrays,php,sorting |>\n<code>\n\
    $array = array(15, 33, 1422, 1);\n$array = array_filter($array, function($v){\n\
    \    return !is_numeric($v);\n});\nsort($array);\nprint_r($array);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=arrays,php,sorting |>\n<code>\n$array = array(15,\
    \ 33, 1422, 1);\n$array = array_filter($array, function($v){\n    return !is_numeric($v);\n\
    });\nsort($array);\nprint_r($array);\n</code>\n<|/ a dscore=1 ", "    $digits\
    \ = array();\n    foreach($x as $num) {\n        $digits[] = $num % 10;\n    }\n\
    \    sort($digits);\n    $result = array();\n    foreach($digits as $digit) {\n\
    \        if($digit % 2 != 0) {\n            $result[] = $digit;\n        }\n \
    \   }\n    return $result;\n}\n", "    $result = array();\n    foreach ($x as\
    \ $key => $value) {\n        if ($value % 2 != 0) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $digits = array();\n\
    \    foreach($x as $n) {\n        $digits[] = $n % 10;\n    }\n    return array_unique($digits);\n\
    }\n", "    $result = array();\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    sort($result);\n    $result = array_filter($result, function($value)\
    \ {\n        return !is_numeric($value);\n    });\n    return $result;\n}\n",
  "    $result = array();\n    foreach($x as $v) {\n        $result[] = $v;\n    }\n\
    \    sort($result);\n    $result = array_filter($result);\n    return $result;\n\
    }\n", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[] = $n\
    \ % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($x as\
    \ $n) {\n        if (!in_array($n % 10, $digits)) {\n            $result[] = $n;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[$n\
    \ % 10] = $n % 10;\n    }\n    asort($digits);\n    $result = array();\n    foreach\
    \ ($digits as $digit) {\n        if ($digit % 2 == 0) {\n            $result[]\
    \ = $digit;\n        }\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    foreach ($x as $key => $value) {\n        $result[$key] = $value;\n    }\n\
    \    sort($result);\n    $result = [];\n    foreach ($result as $key => $value)\
    \ {\n        if ($value % 2 != 0) {\n            $result[$key] = $value;\n   \
    \     }\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach ($x\
    \ as $e) {\n        $result[$e] = $e;\n    }\n    asort($result);\n    return\
    \ array_keys($result);\n}\n", "    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    return array_filter($digits, function($n)\
    \ {\n        return $n % 2 === 0;\n    });\n}\n", "    $digits = array();\n  \
    \  foreach ($x as $key => $value) {\n        $digits[$key] = $value;\n    }\n\
    \    asort($digits);\n    $result = array();\n    foreach ($digits as $key =>\
    \ $value) {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = array();\n    foreach\
    \ ($x as $key => $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n\
    \    $result2 = array();\n    foreach ($result as $key => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $result2[] = $value;\n        }\n    }\n  \
    \  return $result2;\n}\n", "    $result = array();\n    foreach ($x as $key =>\
    \ $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n    $result\
    \ = array_filter($result);\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work. Try it with `unique_digits(array(15, 33, 1422,\
    \ 1))`\n<|/ c |>\n<| c |>\nI tested it and it works. I added the test case to\
    \ the answer. Can you please give me the test case that doesn't work?\n<|/ c |>\n\
    <| c |>\nI tested it again and it works. I added the test case to the answer.\
    \ Can you please give me the test case that doesn't work?\n<|/ c |>\n<| c |>\n\
    I tested it again and it works. I added the test case to the answer. Can you please\
    \ give me the test case that doesn't work?\n<|/ c |>\n<| c |>\nI tested it again\
    \ and it works. I added the test case to the answer. Can you please give me the\
    \ test case that doesn't work?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr\
    \ = array(15, 33, 1422, 1);\n$arr = array_filter($arr, function($v){\n    return\
    \ !preg_match('/[^\\d]/', $v);\n});\nprint_r($arr);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work. Try it with `unique_digits(array(15, 33, 1422,\
    \ 1))`\n<|/ c |>\n<| c |>\nI tested it and it works. I added the test case to\
    \ the answer. Can you please give me the test case that doesn't work?\n<|/ c |>\n\
    <| c |>\nI tested it again and it works. I added the test case to the answer.\
    \ Can you please give me the test case that doesn't work?\n<|/ c |>\n<| c |>\n\
    I tested it again and it works. I added the test case to the answer. Can you please\
    \ give me the test case that doesn't work?\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$arr = array_filter($arr, function($v){\n\
    \    return !preg_match('/[^\\d]/', $v);\n});\nprint_r($arr);\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work", "    $result = [];\n    foreach ($x\
    \ as $key => $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n\
    \    $result = [];\n    foreach ($result as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $digits = array();\n    foreach($x as $n) {\n        $digits[$n\
    \ % 10] = $n % 10;\n    }\n    asort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if($digit % 2 == 0) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}", "    $result = [];\n    foreach ($x\
    \ as $value) {\n        $result[] = $value;\n    }\n    sort($result);\n    $result\
    \ = [];\n    foreach ($result as $value) {\n        if ($value % 2 == 0) {\n \
    \           $result[] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC);\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($x as $e) {\n        $result[$e] = 1;\n\
    \    }\n    ksort($result);\n    return array_keys($result);\n}\n", "    $digits\
    \ = array();\n    foreach($x as $key => $value) {\n        $digits[$key] = $value;\n\
    \    }\n    \n    foreach($digits as $key => $value) {\n        if($value % 2\
    \ == 0) {\n            unset($digits[$key]);\n        }\n    }\n    \n    return\
    \ $digits;\n}\n", "    $result = array();\n    foreach($x as $y) {\n        $result[]\
    \ = $y;\n    }\n    sort($result);\n    $result = array_filter($result);\n   \
    \ return $result;\n}\n", "    $result = array();\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $digits = array();\n    foreach($x\
    \ as $k=>$v) {\n        $digits[$v] = $k;\n    }\n    asort($digits);\n    $result\
    \ = array();\n    foreach($digits as $k=>$v) {\n        if($v % 2 == 0) {\n  \
    \          $result[] = $v;\n        }\n    }\n    return $result;\n}\n", "   \
    \ $result = [];\n    foreach ($x as $num) {\n        $result[] = $num;\n    }\n\
    \    sort($result);\n    $result = [];\n    foreach ($result as $num) {\n    \
    \    if ($num % 2 == 0) {\n            $result[] = $num;\n        }\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $result = array();\n    foreach ($x\
    \ as $key => $value) {\n        $result[$key] = $value;\n    }\n    asort($result);\n\
    \    return $result;\n}\n", "    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    return array_filter($digits, function($n)\
    \ {\n        return $n % 2 === 0;\n    });\n}\n", "    $result = [];\n    foreach\
    \ ($x as $num) {\n        $digits = str_split($num);\n        foreach ($digits\
    \ as $digit) {\n            if ($digit % 2 === 0) {\n                $result[]\
    \ = $num;\n                break;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $digits = array();\n    foreach($x as $n) {\n        $digits[]\
    \ = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if(!in_array($digit, $result)) {\n            $result[]\
    \ = $digit;\n        }\n    }\n    return $result;\n}\n", "    $digits = array();\n\
    \    foreach ($x as $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach ($x as $n) {\n        if (in_array($n % 10,\
    \ $digits)) {\n            continue;\n        }\n        $result[] = $n;\n   \
    \ }\n    return $result;\n}\n", "    $digits = array();\n    foreach($x as $num)\
    \ {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n    $result =\
    \ array();\n    foreach($digits as $digit) {\n        if($digit % 2 != 0) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}", " \
    \   $digits = array();\n    foreach ($x as $n) {\n        $digits[$n % 10] = 1;\n\
    \    }\n    $result = array();\n    foreach ($x as $n) {\n        if ($digits[$n\
    \ % 10] == 0) {\n            $result[] = $n;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $result\
    \ = [];\n    foreach ($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n\
    \    $result = [];\n    foreach ($result as $y) {\n        if ($y % 2 == 0) {\n\
    \            $result[] = $y;\n        }\n    }\n    return $result;\n}\n", " \
    \   $digits = array();\n    foreach($x as $n) {\n        $digits[] = $n % 10;\n\
    \    }\n    sort($digits);\n    $result = array();\n    foreach($digits as $digit)\
    \ {\n        if(!in_array($digit, $result)) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a tags=php,arrays |>\n<code>\n<?php\n$array = array(15, 33, 1422, 1);\n$result\
    \ = array();\nforeach($array as $number){\n    $result[] = $number % 10;\n}\n\
    sort($result);\n$result = array_filter($result, function($number){\n    return\
    \ $number % 2 == 0;\n});\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=php,arrays |>\n<code>\n$array = array(15, 33, 1422, 1);\n$result = array();\n\
    foreach($array as $number){\n    $result[] = $number % 10;\n}\nsort($result);\n\
    $result = array_filter($result, function($number){\n    return $number % 2 ==\
    \ 0;\n});\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(15, 33, 1422, 1);\n$result = array();\nforeach($array as $number){\n\
    \    $result[] = $number % 10;\n}\nsort($result);\n$result = array_filter($result,\
    \ function($number){\n    return $number % 2 == 0;\n});\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(15, 33, 1422,\
    \ 1);\n$result = array();\nforeach($array as $number){\n    $result[] = $number\
    \ % 10;\n}\nsort($result);\n$result = array_filter($result, function($number){\n\
    \    return $number % 2 == 0;\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(15, 33, 1422, 1);\n$result = array();\n\
    foreach($array as $number){\n    $result[] = $number % 10;\n}\nsort($result);\n\
    $result = array_filter($result, function($number){\n    return $number % 2 ==\
    \ 0;\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(15, 33, 1422, 1);", "    $result = array();\n   \
    \ foreach ($x as $v) {\n        $result[] = $v;\n    }\n    sort($result);\n \
    \   $result2 = array();\n    foreach ($result as $v) {\n        $result2[] = intval($v);\n\
    \    }\n    sort($result2);\n    return $result2;\n}\n", "    $digits = array();\n\
    \    foreach($x as $num) {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach($digits as $digit) {\n        if($digit %\
    \ 2 == 0) {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[$n %\
    \ 10] = 1;\n    }\n    $result = array();\n    foreach ($x as $n) {\n        if\
    \ ($n % 10 == 0) {\n            $result[] = $n;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $digits = array();\n    foreach($x as $key => $value) {\n\
    \        $digits[$key] = $value;\n    }\n    array_multisort($digits, SORT_ASC,\
    \ $x);\n    return $x;\n}\n", "    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[$num] = $num;\n    }\n    sort($result);\n    return array_keys($result);\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr =\
    \ [1, 2, 3, 10, 20, 30];\n$arr2 = array_filter($arr, function($v){\n    return\
    \ $v % 2 == 0;\n});\nprint_r($arr2);\n</code>\n<|/ a tags=arrays,php |>\n<| a\
    \ tags=arrays,php |>\n<code>\n$arr = [1, 2, 3, 10, 20, 30];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return $v % 2 == 0;\n});\nprint_r($arr2);\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1, 2, 3, 10, 20, 30];\n\
    $arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\nprint_r($arr2);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$arr = [1, 2, 3,\
    \ 10, 20, 30];\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 ==\
    \ 0;\n});\nprint_r($arr2);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$arr = [1, 2, 3, 10, 20, 30];\n$arr2 = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\nprint_r($arr2);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1, 2, 3, 10,\
    \ 20, 30];\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n\
    });\nprint_r($arr2);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$arr = [1, 2, 3, 10, 20, 30];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return $v % 2 == 0;\n});\nprint_r($arr2);\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1, 2, 3, 10, ", "    $digits\
    \ = array();\n    foreach ($x as $num) {\n        $digits[] = $num % 10;\n   \
    \ }\n    sort($digits);\n    $result = array();\n    foreach ($x as $num) {\n\
    \        if (in_array($num % 10, $digits)) {\n            continue;\n        }\n\
    \        $result[] = $num;\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    foreach ($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n\
    \    return array_filter($result, 'is_numeric');\n}\n", "    $digits = array();\n\
    \    foreach ($x as $key => $value) {\n        $digits[$key] = $value;\n    }\n\
    \    sort($digits);\n    $result = array();\n    foreach ($digits as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$arr1 = array_filter($arr,\
    \ function($v){\n    return $v % 2 == 0;\n});\nprint_r($arr1);\n</code>\n<|/ a\
    \ tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr = array(15, 33, 1422,\
    \ 1);\n$arr1 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n\
    print_r($arr1);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$arr =\
    \ array(15, 33, 1422, 1);\n$arr1 = array_filter($arr, function($v){\n    return\
    \ $v % 2 == 0;\n});\nprint_r($arr1);\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$arr1 = array_filter($arr,\
    \ function($v){\n    return $v % 2 == 0;\n});\nprint_r($arr1);", "    $digits\
    \ = array();\n    foreach ($x as $n) {\n        $digits[$n % 10] = $n % 10;\n\
    \    }\n    ksort($digits);\n    return array_keys($digits);\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(\n   \
    \ array(\n        'id' => 1,\n        'name' => 'John',\n        'age' => 25,\n\
    \        'email' => '',\n    ),\n    array(\n        'id' => 2,\n        'name'\
    \ => 'Jane',\n        'age' => 22,\n        'email' => '',\n    ),\n    array(\n\
    \        'id' => 3,\n        'name' => 'Jack',\n        'age' => 25,\n       \
    \ 'email' => '',\n    ),\n    array(\n        'id' => 4,\n        'name' => 'Jack',\n\
    \        'age' => 25,\n        'email' => '',\n    ),\n    array(\n        'id'\
    \ => 5,\n        'name' => 'Jack',\n        'age' => 25,\n        'email' => '',\n\
    \    ),\n    array(\n        'id' => 6,\n        'name' => 'Jack',\n        'age'\
    \ => 25,\n        'email' => '',\n    ),\n    array(\n        'id' => 7,\n   \
    \     'name' => 'Jack',\n        'age' => 25,\n        'email' => '',\n    ),\n\
    \    array(\n        'id' => 8,\n        'name' => 'Jack',\n        'age' => 25,\n\
    \        'email' => '',\n    ),\n    array(\n        'id' => 9,\n        'name'\
    \ => 'Jack',\n        'age' => 25,\n        'email' => '',\n    ),\n    array(\n\
    \        'id' => 10,\n        'name' => 'Jack',\n        'age' => 25,\n      \
    \  'email' => '',\n    ),\n    array(\n        'id' => 11,\n        'name' =>\
    \ 'Jack',\n        'age' => 25,\n        'email' => '',\n    ),\n    array(\n\
    \        'id' => 12,\n        'name' => 'Jack',\n        'age' => 25,\n      \
    \  'email' => '',\n    ),\n    array(\n        'id' => 13,\n        'name' =>\
    \ 'Jack',\n        'age' => 25,\n        'email' => '',\n    ),\n    array(\n\
    \        'id' => 14,\n        'name' => 'Jack',\n        'age' => 25,\n      \
    \  'email' => '',\n    ),\n    array(\n        'id' => 15,\n        'name' =>\
    \ 'Jack',\n        'age' => 25,\n        'email' => '',\n    ),\n    array(\n\
    \        'id' => 16,\n        'name' => 'Jack',\n        'age' => 25,\n      \
    \  'email' => '',\n    ),\n    array(\n        'id' => 17,\n        'name' =>\
    \ 'Jack", "    $result = [];\n    foreach ($x as $num) {\n        $result[] =\
    \ $num;\n    }\n    sort($result);\n    $result = [];\n    foreach ($result as\
    \ $num) {\n        $result[] = strlen($num);\n    }\n    sort($result);\n    $result\
    \ = [];\n    foreach ($result as $num) {\n        if ($num % 2 != 0) {\n     \
    \       $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    $digits = array();\n\
    \    foreach ($x as $key => $value) {\n        $digits[$key] = $value;\n    }\n\
    \    sort($digits);\n    $result = array();\n    foreach ($digits as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach ($x as\
    \ $num) {\n        $result[] = array_sum(str_split($num));\n    }\n    sort($result);\n\
    \    return array_filter($result, 'strlen');\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\n$arr = [\n    152,\n    323,\n    1422,\n\
    \    10\n];\n\n$result = [];\n\nforeach ($arr as $num) {\n    $result[] = array_sum(str_split($num));\n\
    }\n\nsort($result);\n\n$result = [];\n\nforeach ($result as $num) {\n    if ($num\
    \ % 2 == 0) {\n        $result[] = $num;\n    }\n}\n\nsort($result);\n\nvar_dump($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = [\n\
    \    152,\n    323,\n    1422,\n    10\n];\n\n$result = [];\n\nforeach ($arr as\
    \ $num) {\n    $result[] = array_sum(str_split($num));\n}\n\nsort($result);\n\n\
    $result = [];\n\nforeach ($result as $num) {\n    if ($num % 2 == 0) {\n     \
    \   $result[] = $num;\n    }\n}\n\nsort($result);\n\nvar_dump($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [\n\
    \    152,\n    323,\n    1422,\n    10\n];\n\n$result = [];\n\nforeach ($arr as\
    \ $num) {\n    $result[] = array_sum(str_split($num));\n}\n\nsort($result);\n\n\
    $result = [];\n\nforeach ($result as $num) {\n    if ($num % 2 == 0) {\n     \
    \   $result[] = $num;\n    }\n}\n\nsort($result);\n\nvar_dump($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = [\n    152,\n\
    \    323,\n    1422,\n    10\n];\n\n$result = [];\n\nforeach ($arr as $num) {\n\
    \    $result[] = array_sum(str_split($num));\n}\n\nsort($result);\n\n$result =\
    \ [];\n\nforeach ($result as $num) {\n    if ($num % 2 == 0) {\n        $result[]\
    \ = $num;\n    }\n}\n\nsort($result);\n\nvar_dump($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=", "    $result = [];\n    foreach ($x as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $result[] = $value;\n        }\n\
    \    }\n    return $result;\n}\n", "    $digits = array();\n    foreach ($x as\
    \ $n) {\n        $digits[$n % 10] = 1;\n    }\n    $result = array();\n    foreach\
    \ ($x as $n) {\n        if (!isset($digits[$n % 10])) {\n            $result[]\
    \ = $n;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThanks for your answer. Your code is very helpful to me. Thanks\
    \ again.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$array = array(15,\
    \ 33, 1422, 1);\n$result = array();\nforeach($array as $key => $value){\n    if($value\
    \ % 2 == 0){\n        $result[] = $value;\n    }\n}\nprint_r($result);", "   \
    \ $result = [];\n    foreach ($x as $num) {\n        $result[] = array_sum(str_split($num));\n\
    \    }\n    sort($result);\n    return array_filter($result, function($num) {\n\
    \        return $num % 2 === 0;\n    });\n}\n", "    $result = [];\n    foreach\
    \ ($x as $value) {\n        $result[] = array_sum(str_split($value));\n    }\n\
    \    return array_unique($result);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$numbers = array(15, 33, 1422, 1);\n$result = array_filter($numbers,\
    \ function($number) {\n    return !preg_match('/\\d/', $number);\n});\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$numbers = array(15,\
    \ 33, 1422, 1);\n$result = array_filter($numbers, function($number) {\n    return\
    \ !preg_match('/\\d/', $number);\n});\nprint_r($result);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$numbers = array(15, 33, 1422, 1);\n\
    $result = array_filter($numbers, function($number) {\n    return !preg_match('/\\\
    d/', $number);\n});\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$numbers = array(15, 33, 1422, 1);\n$result = array_filter($numbers,\
    \ function($number) {\n    return !preg_match('/\\d/', $number);\n});\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$numbers\
    \ = array(15, 33, 1422, 1);\n$result = array_filter($numbers, function($number)\
    \ {\n    return !preg_match('/\\d/', $number);\n});\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$numbers = array(15,\
    \ 33, 1422, 1);\n$result = array_filter($numbers, function($number) {\n    return\
    \ !preg_match('/\\d/', $number);\n});\nprint_r($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$numbers = array(15, 33, 1422, 1);\n$result\
    \ = array_filter($numbers, function($number) {\n    return !preg_match('/\\d/',\
    \ $number);\n});\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$numbers = array(15, 33, 1422, 1);\n$result = array_filter($",
  "    $result = [];\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_ASC, $x);\n    return $x;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work. `array_multisort`\
    \ sorts by the first parameter, then by the second, then by the third, then by\
    \ the fourth and so on. Since `array_multisort` sorts by the first parameter,\
    \ `array_unique` will remove all duplicates, leaving you with an empty array.\
    \ Try it yourself with `var_dump(array_unique([1,1,2,3,3]));`.\n<|/ c |>\n<| c\
    \ |>\nYes, you are right. I've updated the answer. Thanks!\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n\
    \    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This doesn't work. `preg_match` returns true if the pattern matches, false if\
    \ it doesn't. Since `array_filter` removes elements that return false, the array\
    \ will still be empty after `array_filter` has removed all elements that return\
    \ false. Try it yourself with `var_dump(array_filter([1,1,2,3,3]));`.\n<|/ c |>\n\
    <| c |>\nYes, you are right. I've updated the answer. Thanks!\n<|/ c |>\n<| a\
    \ tags=php,arrays,sorting |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThis doesn't work. `preg_match` returns true if the pattern matches,\
    \ false if it doesn't. Since `array_filter` removes elements that return false,\
    \ the array will still be empty after `array_filter` has removed all elements\
    \ that return false. Try it yourself with `var_dump(array_filter([1,1,2,3,3]));`.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>", "    $result = [];\n    foreach ($x as $y) {\n        $result[$y] = 1;\n\
    \    }\n    foreach ($result as $key => $value) {\n        if ($value % 2 != 0)\
    \ {\n            unset($result[$key]);\n        }\n    }\n    return array_values($result);\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\n<?php\n$arr = [15, 33,\
    \ 1422, 1];\n$result = [];\nforeach ($arr as $key => $value) {\n    if ($value\
    \ % 2 != 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr\
    \ = [15, 33, 1422, 1];\n$result = [];\nforeach ($arr as $key => $value) {\n  \
    \  if ($value % 2 != 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422,\
    \ 1];\n$result = [];\nforeach ($arr as $key => $value) {\n    if ($value % 2 !=\
    \ 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422,\
    \ 1];\n$result = [];\nforeach ($arr as $key => $value) {\n    if ($value % 2 !=\
    \ 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422,\
    \ 1];\n$result = [];\nforeach ($arr as $key => $value) {\n    if ($value % 2 !=\
    \ 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [15, 33,\
    \ 1422, 1];\n$result = [];\nforeach ($arr as $key => $value) {\n    if ($value\
    \ % 2 != 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [15, 33, 1422,\
    \ 1];\n$result = [];\nforeach ($", "    $digits = array();\n    foreach ($x as\
    \ $val) {\n        $digits[] = $val % 10;\n    }\n    return array_unique($digits);\n\
    }\n", "    $result = [];\n    foreach ($x as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $digits = array();\n    foreach ($x as $val) {\n        $digits[] =\
    \ $val % 10;\n    }\n    $digits = array_unique($digits);\n    sort($digits);\n\
    \    return $digits;\n}\n", "    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    sort($result);\n    $result =\
    \ [];\n    foreach ($result as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $digits = array();\n    foreach($x as $val) {\n        $digits[] =\
    \ $val % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if($digit % 2 == 0) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($x as $value) {\n        $result[] = $value;\n    }\n    sort($result);\n \
    \   $result = [];\n    foreach ($result as $value) {\n        if ($value % 2 ==\
    \ 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[] = $n\
    \ % 10;\n    }\n    return array_filter($digits, function($n) {\n        return\
    \ $n % 2 === 0;\n    });\n}\n", "    $result = [];\n    foreach ($x as $key =>\
    \ $value) {\n        $result[$key] = $value;\n    }\n    asort($result);\n   \
    \ return array_keys($result);\n}\n", "    $result = [];\n    foreach ($x as $key\
    \ => $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n \
    \   $result = [];\n    foreach ($result as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>", "    $result = array();\n    foreach ($x as $e) {\n        $result[]\
    \ = $e;\n    }\n    sort($result);\n    return array_filter($result, 'is_int');\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,25",
  "    $result = [];\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    foreach ($result as $key => $value) {\n        $result[$key]\
    \ = $value % 10;\n    }\n    foreach ($result as $key => $value) {\n        if\
    \ ($value == 0) {\n            unset($result[$key]);\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    foreach($x as $y) {\n        $result[]\
    \ = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach($result as\
    \ $y) {\n        if(!in_array($y, $result)) {\n            $result[] = $y;\n \
    \       }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $result = array();\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $digits = array();\n    foreach($x\
    \ as $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result\
    \ = array();\n    foreach($digits as $digit) {\n        if($digit % 2 != 0) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nI like your solution, however it only works for positive integers.\
    \ If you try it on `unique_digits(array(15, 33, 1422, 1))` it returns `array(1,\
    \ 15, 33)` instead of `array()`.\n<|/ c |>\n<| c |>\nI agree with you, my solution\
    \ is only a proof of concept. I'll try to improve it for negative integers :)\n\
    <|/ c |>\n<| c |>\nI updated my answer to include a solution for negative integers.\
    \ I hope it helps :)\n<|/ c |>\n<| c |>\nI like your solution, however it only\
    \ works for positive integers. If you try it on `unique_digits(array(15, 33, 1422,\
    \ 1))` it returns `array(1, 15, 33)` instead of `array()`.\n<|/ c |>\n<| c |>\n\
    I updated my answer to include a solution for negative integers. I hope it helps\
    \ :)\n<|/ c |>\n<| a |>\n<code>\n<?php\n", "    $result = array();\n    foreach\
    \ ($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n    $result\
    \ = array_filter($result, 'is_numeric');\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($x as $e) {\n        $result[] = $e;\n    }\n    sort($result);\n\
    \    $result = [];\n    foreach ($result as $e) {\n        if ($e % 2 == 0) {\n\
    \            $result[] = $e;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($x as $y) {\n        $result[] = $y;\n    }\n\
    \    sort($result);\n    $result = [];\n    foreach ($result as $y) {\n      \
    \  $result[] = $y % 10;\n    }\n    sort($result);\n    return $result;\n}\n",
  "    $digits = array();\n    foreach ($x as $key => $value) {\n        $digits[$key]\
    \ = $value;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($digits\
    \ as $key => $value) {\n        if ($value % 2 != 0) {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $digits = array();\n\
    \    foreach ($x as $n) {\n        $digits[] = $n % 10;\n    }\n    return array_unique($digits);\n\
    }\n", "    $digits = array();\n    foreach ($x as $key => $value) {\n        $digits[$key]\
    \ = $value;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($digits\
    \ as $key => $value) {\n        if ($value % 2 == 0) {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    foreach ($x as $number) {\n        $result[] = array_sum(str_split($number));\n\
    \    }\n    return array_filter($result, function($number) {\n        return $number\
    \ % 2 === 0;\n    });\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0\
    \ |>\n<code>", "    $result = array();\n    foreach ($x as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $result[] = $value;\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    foreach ($x as\
    \ $key => $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n\
    \    $result = array_filter($result, function($value) {\n        return !is_numeric($value);\n\
    \    });\n    return $result;\n}\n", "    $digits = array();\n    foreach ($x\
    \ as $key => $value) {\n        $digits[$key] = $value;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach ($digits as $key => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n\
    $arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n \
    \   return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n",
  "    $result = [];\n    foreach ($x as $value) {\n        $result[] = $value;\n\
    \    }\n    sort($result);\n    $result = [];\n    foreach ($result as $value)\
    \ {\n        if ($value % 2 != 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach($x as $y)\
    \ {\n        $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n \
    \   foreach($result as $y) {\n        if($y % 2 == 0) {\n            $result[]\
    \ = $y;\n        }\n    }\n    return $result;\n}\n", "    $result = [];\n   \
    \ foreach($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n  \
    \  $result = [];\n    foreach($result as $y) {\n        if($y % 2 == 0) {\n  \
    \          $result[] = $y;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work. Try it with `unique_digits(array(15,\
    \ 33, 1422, 1))`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting\
    \ my answer. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before\
    \ posting my answer. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it does. I tested\
    \ it before posting my answer. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it does.\
    \ I tested it before posting my answer. Try it yourself.\n<|/ c |>\n<| a |>\n\
    <code>\n<?php", "    $result = array();\n    foreach($x as $e) {\n        $result[]\
    \ = $e;\n    }\n    sort($result);\n    $result = array_filter($result);\n   \
    \ return $result;\n}\n", "    $result = [];\n    foreach ($x as $y) {\n      \
    \  $result[] = $y;\n    }\n    sort($result);\n    return array_filter($result,\
    \ function($x) {\n        return !($x % 2);\n    });\n}\n", "    $result = [];\n\
    \    foreach ($x as $e) {\n        $result[$e] = 1;\n    }\n    ksort($result);\n\
    \    return array_keys($result);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = [\n    152,\n    323,\n    1422,\n    10\n];\n\n$result\
    \ = array_filter($array, function($value) {\n    return !preg_match('/\\d/', $value);\n\
    });\n\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = [\n    152,\n    323,\n    1422,\n    10\n];\n\n$result = array_filter($array,\
    \ function($value) {\n    return !preg_match('/\\d/', $value);\n});\n\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = [\n    152,\n\
    \    323,\n    1422,\n    10\n];\n\n$result = array_filter($array, function($value)\
    \ {\n    return !preg_match('/\\d/', $value);\n});\n\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer.\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [\n    152,\n    323,\n    1422,\n\
    \    10\n];\n\n$result = array_filter($array, function($value) {\n    return !preg_match('/\\\
    d/', $value);\n});\n\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$array = [\n    152,\n    323,\n    1422,\n  \
    \  10\n];\n\n$result = array_filter($array, function($value) {\n    return !preg_match('/\\\
    d/', $value);\n});\n\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$array = [\n    152,\n    323,\n    1422,\n    10\n];\n\n$result\
    \ = array_filter($array, function($value) {\n    return !preg_match('/\\d/', $value);\n\
    });\n\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n$array = [\n    152,\n    323,\n    1422,\n    10\n", "    $result = [];\n\
    \    foreach ($x as $key => $value) {\n        $result[$key] = $value;\n    }\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $value % 10;\n\
    \    }\n    foreach ($result as $key => $value) {\n        if ($value % 2 != 0)\
    \ {\n            unset($result[$key]);\n        }\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    sort($result);\n    $result = array_filter($result);\n\
    \    return $result;\n}\n", "    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 != 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't seem to work. `unique_digits(array(15,\
    \ 33, 1422, 1))` returns `array(1)` instead of `array(1, 15)`.\n<|/ c |>\n<| c\
    \ |>\nI tested it on PHP 5.3.10 and it worked fine. Are you sure you copied the\
    \ code correctly?\n<|/ c |>\n<| c |>\nYes, I copied it exactly. I'm running PHP\
    \ 5.3.10 as well.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10 and it worked\
    \ fine. Are you sure you copied the code correctly?\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.3.10 and it worked fine. Are you sure you copied the code correctly?\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    $result = array();\n    foreach\
    \ ($x as $n) {\n        $result[] = $n;\n    }\n    sort($result);\n    $result\
    \ = array_filter($result, function($n) {\n        return $n % 2 === 0;\n    });\n\
    \    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work.\
    \ Try it with `unique_digits(array(15, 33, 1422, 1))`.\n<|/ c |>\n<| c |>\n: It\
    \ works fine for me. `var_dump(unique_digits(array(15, 33, 1422, 1)));` gives\
    \ `array(1) { [0]=> int(1) }`\n<|/ c |>\n<| c |>\n: I see what you mean. I've\
    \ updated my answer.\n<|/ c |>\n<| c |>\n: I see what you mean. I've updated my\
    \ answer.\n<|/ c |>\n<| c |>\n: I see what you mean. I've updated my answer.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "    $digits = array();\n    foreach($x as\
    \ $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result\
    \ = array();\n    foreach($digits as $digit) {\n        if($digit % 2 != 0) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    sort($result);\n    $result = [];\n    foreach ($result\
    \ as $key => $value) {\n        if ($value % 2 == 0) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $digits = array();\n\
    \    foreach($x as $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach($digits as $digit) {\n        if($digit %\
    \ 2 != 0) {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    foreach($x as $v) {\n        $result[] = $v;\n\
    \    }\n    sort($result);\n    $result = array_filter($result, 'is_numeric');\n\
    \    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your\
    \ answer. Your code is working but i want to know why my code is not working?\n\
    <|/ c |>\n<| c |>\nI guess it's because you didn't sort your array before you\
    \ filter out non-numeric values.\n<|/ c |>\n<| c |>\nYes i sorted my array before\
    \ i filter out non-numeric values.\n<|/ c |>\n<| c |>\nI added a comment to my\
    \ answer explaining why your code doesn't work.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$array = array(15, 33, 1422, 1);\n$array = array_filter($array,\
    \ 'is_numeric');\n$array = array_unique($array);\nsort($array);\nprint_r($array);",
  "    $result = [];\n    foreach ($x as $value) {\n        $result[] = $value;\n\
    \    }\n    sort($result);\n    $result = [];\n    foreach ($result as $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $digits = array();\n    foreach ($x\
    \ as $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result\
    \ = array();\n    foreach ($x as $n) {\n        if (in_array($n % 10, $digits))\
    \ {\n            continue;\n        }\n        $result[] = $n;\n    }\n    return\
    \ $result;\n}\n", "    $digits = array();\n    foreach($x as $n) {\n        $digits[]\
    \ = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if($digit % 2 != 0) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}\n", "    $digits = array();\n    foreach\
    \ ($x as $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result\
    \ = array();\n    foreach ($x as $n) {\n        if (!in_array($n % 10, $digits))\
    \ {\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($x as $value) {\n        $result[] = array_sum(str_split($value));\n\
    \    }\n    return array_unique($result);\n}\n", "    $result = [];\n    foreach\
    \ ($x as $number) {\n        $result[] = $number;\n    }\n    sort($result);\n\
    \    $result = [];\n    foreach ($result as $number) {\n        if ($number %\
    \ 2 == 0) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr =\
    \ [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return !($v\
    \ % 2);\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return !($v % 2);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return !($v % 2);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return !($v % 2);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr\
    \ = [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return !($v\
    \ % 2);\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return !($v % 2);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return !($v % 2);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return !($v % 2);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr\
    \ = [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n", "    $result\
    \ = array();\n    foreach($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n\
    \    $result = array_filter($result, 'is_int');\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers. Try `unique_digits(array(15, 33, 1422, -1))`\n<|/ c |>\n<| c |>\nI\
    \ tested it before posting. It works. Try it yourself.\n<|/ c |>\n<| c |>\nI tested\
    \ it myself and it doesn't work. Try it yourself.\n<|/ c |>\n<| c |>\nI tested\
    \ it myself and it works. Try it yourself.\n<|/ c |>\n<| c |>\nI tested it myself\
    \ and it works. Try it yourself.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$array = array(15, 33, 1422, 1);\n$result = array();\nforeach($array as\
    \ $value) {\n    if(!in_array($value, $result)) {\n        $result[] = $value;\n\
    \    }\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if you have\
    \ negative numbers. Try `unique_digits(array(15, 33, 1422, -1))`\n<|/ c |>\n<|\
    \ c |>\nI tested it before posting. It works. Try it yourself.\n<|/ c |>\n<| c\
    \ |>\nI tested it myself and it doesn't work. Try it yourself.\n<|/ c |>\n<| c\
    \ |>\nI tested it myself and it works. Try it yourself.\n<|/ c |>\n<| c |>\nI\
    \ tested it myself and it works. Try it yourself.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>", "    $digits = array();\n    foreach ($x as $num) {\n        $digits[]\
    \ = $num % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach\
    \ ($x as $num) {\n        if (in_array($num % 10, $digits)) {\n            continue;\n\
    \        }\n        $result[] = $num;\n    }\n    return $result;\n}\n", "   \
    \ $digits = array();\n    foreach($x as $n) {\n        $digits[] = $n % 10;\n\
    \    }\n    sort($digits);\n    $result = array();\n    foreach($digits as $digit)\
    \ {\n        if($digit % 2 == 0) {\n            $result[] = $digit;\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    foreach ($x as $key\
    \ => $value) {\n        $result[$key] = $value;\n    }\n    array_multisort($result,\
    \ SORT_ASC, $x);\n    return $x;\n}\n", "    $result = array();\n    foreach ($x\
    \ as $key => $value) {\n        $result[$key] = $value;\n    }\n    array_multisort($result,\
    \ SORT_DESC, $x);\n    return $x;\n}\n", "    $digits = array();\n    foreach($x\
    \ as $val) {\n        $digits[] = $val % 10;\n    }\n    sort($digits);\n    $result\
    \ = array();\n    foreach($digits as $digit) {\n        if(!in_array($digit, $result))\
    \ {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work for negative numbers. Try `unique_digits(array(15,\
    \ 33, 1422, -1))`\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ Try `unique_digits(array(15, 33, 1422, -1))`\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for negative numbers. Try `unique_digits(array(15, 33, 1422, -1))`\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `unique_digits(array(15,\
    \ 33, 1422, -1))`\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ Try `unique_digits(array(15, 33, 1422, -1))`\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>", "    $result = [];\n    foreach ($x as $e) {\n        $result[]\
    \ = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach ($result as\
    \ $e) {\n        if ($e % 2 == 0) {\n            $result[] = $e;\n        }\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<|\
    \ c |>\nThis doesn't work. Try it with `unique_digits(array(15, 33, 1422, 1))`.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test case to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test case to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test case to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test case to the answer.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n$array = [15, 33, 1422, 1];\n$result = array_filter($array,\
    \ function($v){\n    return $v % 2 == 0;\n});\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work. Try it with `unique_digits(array(15, 33, 1422,\
    \ 1))`.\n<|/ c |>\n<| c |>\nI tested it and it works. I added the test case to\
    \ the answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    $result = [];\n    foreach($x\
    \ as $v) {\n        $result[] = array_sum(str_split($v));\n    }\n    sort($result);\n\
    \    return array_filter($result, function($v){\n        return $v % 2 === 0;\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n<?php\n\
    $arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n \
    \   return $v % 2 === 0;\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr,\
    \ function($v){\n    return $v % 2 === 0;\n});\nprint_r($result);\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n<?php\n$arr = array(15, 33,\
    \ 1422, 1);\n$result = array_filter($arr, function($v){\n    return $v % 2 ===\
    \ 0;\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\n\
    $arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n \
    \   return $v % 2 === 0;\n});\nprint_r($result);\n</code>\n<|/ a dscore=1 tags=php,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$result\
    \ = array_filter($arr, function($v){\n    return $v % 2 === 0;\n});\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr = array(15,\
    \ 33, 1422, 1);\n$result = array_filter($arr, function($v){\n    return $v % 2\
    \ === 0;\n});\nprint_r($result);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n\
    \    return $v % 2 === 0;\n});\nprint_r($result);\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr,\
    \ function($v){\n    return $v % 2 === 0;\n});\nprint_r($result);\n</code>\n<|/\
    \ a tags=", "    $result = array();\n    foreach ($x as $y) {\n        $result[]\
    \ = $y;\n    }\n    sort($result);\n    $result = array_filter($result, 'is_numeric');\n\
    \    return $result;\n}\n", "    $result = [];\n    foreach($x as $val) {\n  \
    \      $result[$val] = 1;\n    }\n    foreach($result as $key => $val) {\n   \
    \     if($val % 2 == 0) {\n            unset($result[$key]);\n        }\n    }\n\
    \    return array_keys($result);\n}\n", "    $result = [];\n    foreach ($x as\
    \ $key => $value) {\n        $result[$key] = $value;\n    }\n    array_multisort($result,\
    \ SORT_DESC);\n    return $result;\n}\n", "    $result = array();\n    foreach($x\
    \ as $v) {\n        $result[] = strval($v);\n    }\n    sort($result);\n    $result\
    \ = array_unique($result);\n    return $result;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    This doesn't work if there are duplicates in the array.\n<|/ c |>\n<| c |>\n:\
    \ It does. Try it yourself.\n<|/ c |>\n<| c |>\n: It does work. Try it yourself.\
    \ It returns `array(1, 15, 33)` as expected.\n<|/ c |>\n<| c |>\n: It does work.\
    \ Try it yourself. It returns `array(1, 15, 33)` as expected.\n<|/ c |>\n<| c\
    \ |>\n: It does work. Try it yourself. It returns `array(1, 15, 33)` as expected.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>", "    $digits = array();\n    foreach($x\
    \ as $digit) {\n        $digits[$digit] = $digit;\n    }\n    asort($digits);\n\
    \    $result = array();\n    foreach($digits as $digit) {\n        if($digit %\
    \ 2 == 0) {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }", "    $result = array();\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    sort($result);\n    $result = array_filter($result, function($value)\
    \ {\n        return $value % 2 === 0;\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($x as $y) {\n        $result[] = $y;\n    }\n\
    \    sort($result);\n    $result = [];\n    foreach ($result as $y) {\n      \
    \  $result[] = $y % 10;\n    }\n    return array_unique($result);\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 ==\
    \ 0;\n});\n$arr3 = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 ==\
    \ 0;\n});\n$arr3 = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 ==\
    \ 0;\n});\n$arr3 = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n\
    $arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n$arr3\
    \ = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n\
    $arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n$arr3\
    \ = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n\
    $arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n$arr3\
    \ = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n<|/ a dscore=0 ",
  "    $digits = array();\n    foreach($x as $n) {\n        $digits[] = $n % 10;\n\
    \    }\n    sort($digits);\n    $result = array();\n    foreach($digits as $d)\
    \ {\n        if(!in_array($d, $result)) {\n            $result[] = $d;\n     \
    \   }\n    }\n    return $result;\n}\n", "    $digits = array();\n    foreach\
    \ ($x as $num) {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 != 0) {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    sort($result);\n    $result = [];\n    foreach ($result\
    \ as $key => $value) {\n        if ($value % 2 == 0) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $digits = array();\n\
    \    foreach($x as $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach($digits as $digit) {\n        if($digit %\
    \ 2 != 0) {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work. Try it with\
    \ `unique_digits(array(15, 33, 1422, 1))`.\n<|/ c |>\n<| c |>\n: Thanks for pointing\
    \ out. I've corrected my answer.\n<|/ c |>\n<| c |>\n: I've added a solution that\
    \ works with your test cases. Please let me know if that works for you.\n<|/ c\
    \ |>\n<| c |>\n: I've added a solution that works with your test cases. Please\
    \ let me know if that works for you.\n<|/ c |>\n<| c |>\n: I've added a solution\
    \ that works with your test cases. Please let me know if that works for you.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n\
    $result = array();\nforeach($arr as $num){\n    $result[] = $num % 10;\n}\nsort($result);\n\
    $result = array_filter($result, 'strlen');\nprint_r($result);\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `unique_digits(array(15,\
    \ 33, 1422, 1))`.\n<|/ c |>\n<| c |>\n: Thanks for pointing out. I've corrected\
    \ my answer.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = array(15,\
    \ 33, 1422, 1);\n$result = array();\nforeach($arr as $num){\n    $result[] = $num\
    \ % 10;\n}\nsort($result);\n$result = array_filter($result, 'strlen');\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `unique_digits(array(15,\
    \ 33, 1422, 1))`.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$arr = array(15,\
    \ 33, 1422, 1);\n$result = array();\nforeach($arr as $num){\n    $result[] = $num\
    \ % 10;\n}\nsort($result);\n$result = array_filter($result, 'strlen');\nprint_r",
  "    $result = [];\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $x);\n    return $x;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate digits. For example, `unique_digits(array(15, 33, 1422, 1))` returns\
    \ `array(1)` instead of `array(15, 33)`.\n<|/ c |>\n<| c |>\nIt works. I tested\
    \ it before posting my answer. `unique_digits(array(15, 33, 1422, 1))` returns\
    \ `array(1)` instead of `array(15, 33)`.\n<|/ c |>\n<| c |>\nI tested it again\
    \ and it works now. Sorry about that. My apologies.\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>", "    $result = array();\n    foreach($x as $num) {\n        $result[]\
    \ = $num;\n    }\n    sort($result);\n    foreach($result as $num) {\n       \
    \ if($num % 2 == 0) {\n            unset($result[$num]);\n        }\n    }\n \
    \   return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=1\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){return\
    \ $v % 2 == 0;});\n$arr3 = array_unique($arr2);\n$arr4 = array_values($arr3);\n\
    print_r($arr4);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){return\
    \ $v % 2 == 0;});\n$arr3 = array_unique($arr2);\n$arr4 = array_values($arr3);\n\
    print_r($arr4);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$arr = array(15, 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){return\
    \ $v % 2 == 0;});\n$arr3 = array_unique($arr2);\n$arr4 = array_values($arr3);\n\
    print_r($arr4);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr =\
    \ array(15, 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){return $v %\
    \ 2 == 0;});\n$arr3 = array_unique($arr2);\n$arr4 = array_values($arr3);\nprint_r($arr4);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=1 |>\n<code>\n$arr = array(15,\
    \ 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){return $v % 2 == 0;});\n\
    $arr3 = array_unique($arr2);\n$arr4 = array_values($arr3);\nprint_r($arr4);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=1 |>\n<code>\n$arr = array(15,\
    \ 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){return $v % 2 == 0;});\n\
    $arr3 = array_unique($arr2);\n$arr4 = array_values($arr3);\nprint_r($arr4);\n\
    </code>", "    $result = [];\n    foreach ($x as $y) {\n        $result[] = $y;\n\
    \    }\n    sort($result);\n    $result = [];\n    foreach ($result as $y) {\n\
    \        $result[] = $y % 10;\n    }\n    sort($result);\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $x);\n    return $x;\n\
    }\n", "    $digits = array();\n    foreach($x as $n) {\n        $digits[] = $n\
    \ % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if($digit % 2 != 0) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a tags=arrays,php |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$arr2\
    \ = array_filter($arr, function($v){\n    return $v % 2 != 0;\n});\nprint_r($arr2);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = array(15,\
    \ 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 !=\
    \ 0;\n});\nprint_r($arr2);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){\n\
    \    return $v % 2 != 0;\n});\nprint_r($arr2);\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr2 = array_filter($arr,\
    \ function($v){\n    return $v % 2 != 0;\n});\nprint_r($arr2);\n</code>\n<|/ a\
    \ tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = array(15,\
    \ 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 !=\
    \ 0;\n});\nprint_r($arr2);\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n\
    <code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$arr2 = array_filter($arr, function($v){\n\
    \    return $v % 2 != 0;\n});\nprint_r($arr2);\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$arr2 = array_filter($arr,\
    \ function($v){\n    return $v % 2 != 0;\n});\nprint_r($arr2);\n</code>\n<|/ a\
    \ tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = array(15, ",
  "    $digits = array();\n    foreach ($x as $key => $value) {\n        $digits[$key]\
    \ = $value;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($digits\
    \ as $key => $value) {\n        if ($value % 2 == 0) {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$result\
    \ = array();\nforeach($arr as $key => $value) {\n    if($value % 2 == 0) {\n \
    \       $result[] = $value;\n    }\n}\nprint_r($result);", "    $digits = array();\n\
    \    foreach($x as $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach($digits as $digit) {\n        if(!in_array($digit,\
    \ $result)) {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $digits\
    \ = array();\n    foreach($x as $n) {\n        $digits[] = $n % 10;\n    }\n \
    \   sort($digits);\n    $result = array();\n    foreach($digits as $digit) {\n\
    \        if($digit % 2 == 0) {\n            $result[] = $digit;\n        }\n \
    \   }\n    return $result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if\
    \ you have negative numbers. Try it with `unique_digits(array(15, 33, 1422, -1))`.\n\
    <|/ c |>\n<| c |>\nI agree with you. But the question was about positive integers.\
    \ So I wrote this solution. Thanks for your comment.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, but I believe that OP wants positive integers sorted.\n<|/ c |>\n\
    <| c |>\nI agree with you, but I believe that OP wants positive integers sorted.\n\
    <|/ c |>\n<| c |>\nI agree with you, but I believe that OP wants positive integers\
    \ sorted.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>", "    $digits =\
    \ array();\n    foreach($x as $n) {\n        $digits[] = $n % 10;\n    }\n   \
    \ sort($digits);\n    $result = array();\n    foreach($digits as $digit) {\n \
    \       if(!in_array($digit, $result)) {\n            $result[] = $digit;\n  \
    \      }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>", "    $digits = array();\n    foreach($x as $y) {\n        $digits[]\
    \ = $y;\n    }\n    sort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if($digit % 2 == 0) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis doesn't work if you have duplicate numbers in the array. For example,\
    \ `unique_digits(array(15, 33, 1422, 1))` returns `array(1, 15, 33)` instead of\
    \ `array(1, 15)`.\n<|/ c |>\n<| c |>\nYes, you are right. I've added a note about\
    \ this in my answer. Thanks.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(15, 33, 1422, 1);\n$result = array();\nforeach($array as $value) {\n\
    \    if(!in_array($value, $result)) {\n        $result[] = $value;\n    }\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(15, 33, 1422,\
    \ 1);\n$result = array();\nforeach($array as $value) {\n    if(!in_array($value,\
    \ $result)) {\n        $result[] = $value;\n    }\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(15, 33, 1422, 1);\n$result\
    \ = array();\nforeach($array as $value) {\n    if(!in_array($value, $result))\
    \ {\n        $result[] = $value;\n    }\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(15, 33, 1422, 1);\n$result = array();\nforeach($array\
    \ as $value) {\n    if(!in_array($value, $result)) {\n        $result[] = $value;\n\
    \    }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(15, 33, 1422, 1);\n$result = array();\nforeach($array as $value) {\n\
    \    if(!in_array($value, $result)) {\n        $result[] = $value;\n    }\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = array(15,\
    \ 33, 1422, 1);\n$result = array();\nforeach($array as $value) {\n    if(!in_array($value,\
    \ $result)) {\n        $result[] = $value;\n    }\n}\n", "    $digits = array();\n\
    \    foreach ($x as $y) {\n        $digits[] = $y;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 != 0) {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n", "    $digits = array();\n    foreach ($x as $val) {\n        $digits[] =\
    \ $val % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 != 0) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}\n", "    $digits = array();\n    foreach($x\
    \ as $n) {\n        $digits[] = $n % 10;\n    }\n    return array_unique($digits);\n\
    }\n", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[] = $n\
    \ % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($x as\
    \ $n) {\n        $result[] = $n % 10;\n    }\n    return array_diff($result, $digits);\n\
    }\n", "    $digits = array();\n    foreach ($x as $key => $value) {\n        $digits[$key]\
    \ = $value % 10;\n    }\n    array_multisort($digits, SORT_ASC, $x);\n    return\
    \ $x;\n}\n", "    $result = [];\n    foreach ($x as $num) {\n        $result[]\
    \ = array_sum(str_split($num));\n    }\n    sort($result);\n    return array_filter($result,\
    \ 'is_numeric');\n}\n", "    $digits = array();\n    foreach ($x as $key => $value)\
    \ {\n        $digits[$key] = $value;\n    }\n    sort($digits);\n    $result =\
    \ array();\n    foreach ($digits as $key => $value) {\n        if ($value % 2\
    \ == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $digits\
    \ = array();\n    foreach($x as $n) {\n        $digits[] = $n % 10;\n    }\n \
    \   return array_unique($digits);\n}\n", "    $result = [];\n    foreach ($x as\
    \ $key => $value) {\n        $result[$key] = $value;\n    }\n    array_multisort($result,\
    \ SORT_ASC, $x);\n    return $x;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $digits = array();\n    foreach ($x as $val) {\n  \
    \      $digits[] = $val % 10;\n    }\n    return array_unique($digits);\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr\
    \ = array(15, 33, 1422, 1);\n$arr = array_filter($arr, function($a){\n    return\
    \ !($a % 2);\n});\nsort($arr);\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work. `array_filter` removes elements from the array that don't match the given\
    \ condition. `sort` sorts the array in place.\n<|/ c |>\n<| c |>\n: Yes, it does.\
    \ Try it yourself.\n<|/ c |>\n<| c |>\n: It does work. Try it yourself.\n<|/ c\
    \ |>\n<| c |>\n: It does work. Try it yourself.\n<|/ c |>\n<| c |>\n: It does\
    \ work. Try it yourself.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$arr = array(15,\
    \ 33, 1422, 1);\n$arr = array_filter($arr, function($a){\n    return !($a % 2);\n\
    });\nsort($arr);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr = array_filter($arr, function($a){\n\
    \    return !($a % 2);\n});\nsort($arr);\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr = array_filter($arr, function($a){\n\
    \    return !($a % 2);\n});\nsort($arr);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = array(15, 33, 1422, 1);\n\
    $arr = array_filter($arr, function($a){\n    return !($a % 2);\n});\nsort($arr);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = array(15, 33, 1422,\
    \ 1);\n$arr = array_filter($arr, function($a){\n    return !($a % 2);\n});\nsort($arr);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=", "    $result = array();\n\
    \    foreach ($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n\
    \    $result = array_filter($result);\n    return $result;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a tags=arrays,php,sorting |>\n<code>\n<?php\n$array = array(15,\
    \ 33, 1422, 1);\n$array = array_filter($array);\nsort($array);\n$array = array_unique($array);\n\
    print_r($array);\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php,sorting |>\n\
    <code>\n$array = array(15, 33, 1422, 1);\n$array = array_filter($array);\nsort($array);\n\
    $array = array_unique($array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$array = array(15, 33, 1422, 1);\n$array = array_filter($array);\n\
    sort($array);\n$array = array_unique($array);\nprint_r($array);\n</code>\n<|/\
    \ a tags=arrays,php,sorting |>\n<| a tags=arrays,php,sorting |>\n<code>\n<?php\n\
    $array = array(15, 33, 1422, 1);\n$array = array_filter($array);\nsort($array);\n\
    $array = array_unique($array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$array = array(15, 33, 1422, 1);\n$array = array_filter($array);\n\
    sort($array);\n$array = array_unique($array);\nprint_r($array);\n</code>\n<|/\
    \ a tags=arrays,php,sorting |>\n<| a tags=arrays,php,sorting |>\n<code>\n<?php\n\
    $array = array(15, 33, 1422, 1);\n$array = array_filter($array);\nsort($array);\n\
    $array = array_unique($array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=arrays,php,sorting |>\n<code>\n<?php\n$array = array(15, 33, 1422, 1);\n\
    $array = array_filter($array);\nsort($array);\n$array = array_unique($array);\n\
    print_r($array);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $array = array(15, 33, 1422, 1);\n$array = array_filter($array);\nsort($array);\n\
    $array = array_unique($", "    $result = array();\n    foreach ($x as $e) {\n\
    \        $result[] = $e;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ function($e){\n        return $e % 2 === 0;\n    });\n    return $result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. Your code is working\
    \ fine but i want to know that how can i get all even number from array and store\
    \ in another array. Like i want to store all even number from array in another\
    \ array and i want to print that array also.\n<|/ c |>\n<| c |>\nI updated my\
    \ answer, please check it out.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n\
    $arr = [15, 33, 1422, 1];\n$arr1 = [];\nforeach ($arr as $key => $value) {\n \
    \   if ($value % 2 == 0) {\n        $arr1[$key] = $value;\n    }\n}\nprint_r($arr1);",
  "    $digits = array();\n    foreach ($x as $key => $value) {\n        $digits[$key]\
    \ = $value;\n    }\n    array_multisort($digits, SORT_ASC, $x);\n    return $x;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr =\
    \ [\n    152,\n    323,\n    1422,\n    10\n];\n\n$result = array_filter($arr,\
    \ function($v) {\n    return !preg_match('/\\d/', $v);\n});\n\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$arr = [\n    152,\n\
    \    323,\n    1422,\n    10\n];\n\n$result = array_filter($arr, function($v)\
    \ {\n    return !preg_match('/\\d/', $v);\n});\n\nprint_r($result);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$arr = [\n    152,\n    323,\n\
    \    1422,\n    10\n];\n\n$result = array_filter($arr, function($v) {\n    return\
    \ !preg_match('/\\d/', $v);\n});\n\nprint_r($result);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$arr = [\n    152,\n    323,\n    1422,\n\
    \    10\n];\n\n$result = array_filter($arr, function($v) {\n    return !preg_match('/\\\
    d/', $v);\n});\n\nprint_r($result);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [\n    152,\n    323,\n    1422,\n    10\n];\n\n$result =\
    \ array_filter($arr, function($v) {\n    return !preg_match('/\\d/', $v);\n});\n\
    \nprint_r($result);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n$arr\
    \ = [\n    152,\n    323,\n    1422,\n    10\n];\n\n$result = array_filter($arr,\
    \ function($v) {\n    return !preg_match('/\\d/', $v);\n});\n\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr = [\n\
    \    152,\n    323,\n    1422,\n    10", "    $result = [];\n    foreach ($x as\
    \ $y) {\n        $result[$y] = 1;\n    }\n    foreach ($x as $y) {\n        if\
    \ ($y % 2 == 0) {\n            unset($result[$y]);\n        }\n    }\n    return\
    \ array_keys($result);\n}\n", "    $digits = array();\n    foreach($x as $key\
    \ => $value) {\n        $digits[$key] = strlen($value);\n    }\n    array_multisort($digits,\
    \ SORT_DESC, $x);\n    return $x;\n}\n", "    $result = array();\n    foreach\
    \ ($x as $key => $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n\
    \    $result = array_filter($result, function($value) {\n        return !is_numeric($value);\n\
    \    });\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $result = [];\n    foreach ($x as $y) {\n        $result[]\
    \ = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach ($result as\
    \ $y) {\n        $result[] = $y % 10;\n    }\n    return array_unique($result);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr =\
    \ array(15, 33, 1422, 1);\n$arr2 = array_unique($arr);\n$arr3 = array_filter($arr2,\
    \ function($v){\n    return $v % 2 == 0;\n});\nprint_r($arr3);\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr2\
    \ = array_unique($arr);\n$arr3 = array_filter($arr2, function($v){\n    return\
    \ $v % 2 == 0;\n});\nprint_r($arr3);\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ tags=php,arrays |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$arr2 = array_unique($arr);\n\
    $arr3 = array_filter($arr2, function($v){\n    return $v % 2 == 0;\n});\nprint_r($arr3);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$arr = array(15, 33, 1422,\
    \ 1);\n$arr2 = array_unique($arr);\n$arr3 = array_filter($arr2, function($v){\n\
    \    return $v % 2 == 0;\n});\nprint_r($arr3);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n\
    $arr2 = array_unique($arr);\n$arr3 = array_filter($arr2, function($v){\n    return\
    \ $v % 2 == 0;\n});\nprint_r($arr3);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr2 = array_unique($arr);\n$arr3\
    \ = array_filter($arr2, function($v){\n    return $v % 2 == 0;\n});\nprint_r($arr3);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\n$arr = array(15, 33, 1422,\
    \ 1);\n$arr2 = array_unique($arr);\n$arr3 = array_filter($arr2, function($v){\n\
    \    return $v", "    $result = [];\n    foreach ($x as $value) {\n        $result[]\
    \ = array_sum(str_split($value));\n    }\n    return array_unique($result);\n\
    }\n", "    $result = [];\n    foreach($x as $num) {\n        $result[] = $num;\n\
    \    }\n    sort($result);\n    return array_filter($result, function($num) {\n\
    \        return $num % 2 === 0;\n    });\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php", "    $digits = array();\n    foreach($x as $n)\
    \ {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if(!in_array($digit, $result)) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($x as $key => $value) {\n        if ($value % 2\
    \ == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    foreach($x as $v) {\n        $result[] = str_split($v)[1];\n\
    \    }\n    return array_unique($result);\n}\n", "    $result = [];\n    foreach\
    \ ($x as $key => $value) {\n        $result[$key] = $value;\n    }\n    array_multisort($result,\
    \ SORT_ASC, $x);\n    return $x;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(\n    array(\n        'name' => 'John',\n       \
    \ 'age' => 25,\n        'city' => 'New York'\n    ),\n    array(\n        'name'\
    \ => 'Jane',\n        'age' => 30,\n        'city' => 'New York'\n    ),\n   \
    \ array(\n        'name' => 'Jack',\n        'age' => 20,\n        'city' => 'New\
    \ York'\n    ),\n    array(\n        'name' => 'Jack',\n        'age' => 20,\n\
    \        'city' => 'New York'\n    ),\n    array(\n        'name' => 'Jack',\n\
    \        'age' => 20,\n        'city' => 'New York'\n    ),\n    array(\n    \
    \    'name' => 'Jack',\n        'age' => 20,\n        'city' => 'New York'\n \
    \   ),\n    array(\n        'name' => 'Jack',\n        'age' => 20,\n        'city'\
    \ => 'New York'\n    ),\n    array(\n        'name' => 'Jack',\n        'age'\
    \ => 20,\n        'city' => 'New York'\n    ),\n    array(\n        'name' =>\
    \ 'Jack',\n        'age' => 20,\n        'city' => 'New York'\n    ),\n    array(\n\
    \        'name' => 'Jack',\n        'age' => 20,\n        'city' => 'New York'\n\
    \    ),\n    array(\n        'name' => 'Jack',\n        'age' => 20,\n       \
    \ 'city' => 'New York'\n    ),\n    array(\n        'name' => 'Jack',\n      \
    \  'age' => 20,\n        'city' => 'New York'\n    ),\n    array(\n        'name'\
    \ => 'Jack',\n        'age' => 20,\n        'city' => 'New York'\n    ),\n   \
    \ array(\n        'name' => 'Jack',\n        'age' => 20,\n        'city' => 'New\
    \ York'\n    ),\n    array(\n        'name' => 'Jack',\n        'age' => 20,\n\
    \        'city' => 'New York'\n    ),\n    array(\n        'name' => 'Jack',\n\
    \        'age' => 20,\n        'city' => 'New York'\n    ),\n    array(\n    \
    \    'name' => 'Jack',\n        'age' => 20,\n        'city' => 'New York'\n \
    \   ),\n    array(", "    $result = array();\n    foreach ($x as $y) {\n     \
    \   $result[$y] = 1;\n    }\n    asort($result);\n    return array_keys($result);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to know if there is a faster way to do this in PHP. Your solution requires O(n)\
    \ extra memory and O(n) time to sort the array.\n<|/ c |>\n<| c |>\nYes, I know.\
    \ That's why I posted this answer. My solution is O(n) time and O(n) extra memory.\
    \ OP can use my solution if he wants O(n) extra memory and O(n) time.\n<|/ c |>\n\
    <| c |>\nThe OP wants to know if there is a faster way to do this in PHP. Your\
    \ solution requires O(n) extra memory and O(n) time to sort the array. Your solution\
    \ requires O(n) extra memory and O(n) time to sort the array. Your solution requires\
    \ O(n) extra memory and O(n) time to sort the array. Your solution requires O(n)\
    \ extra memory and O(n) time to sort the array. Your solution requires O(n) extra\
    \ memory and O(n) time to sort the array. Your solution requires O(n) extra memory\
    \ and O(n) time to sort the array. Your solution requires O(n) extra memory and\
    \ O(n) time to sort the array. Your solution requires O(n) extra memory and O(n)\
    \ time to sort the array. Your solution requires O(n) extra memory and O(n) time\
    \ to sort the array. Your solution requires O(n) extra memory and O(n) time to\
    \ sort the array. Your solution requires O(n) extra memory and O(n) time to sort\
    \ the array. Your solution requires O(n) extra memory and O(n) time to sort the\
    \ array. Your solution requires O(n) extra memory and O(n) time to sort the array.\
    \ Your solution requires O(n) extra memory and O(n) time to sort the array. Your\
    \ solution requires O(n) extra memory and O(n) time to sort the array. Your solution\
    \ requires O(n) extra memory and O(n) time to sort the array. Your solution requires\
    \ O(n) extra memory and O(n) time to sort the array. Your solution requires O(n)\
    \ extra memory and O(n) time to sort the array. Your solution requires O(n) extra\
    \ memory and O(n) time to sort the array. Your solution requires O(n) extra memory\
    \ and O(n) time to sort the array. Your solution requires O(n", "    $digits =\
    \ array();\n    foreach($x as $n) {\n        $digits[$n % 10] = 1;\n    }\n  \
    \  $result = array();\n    foreach($x as $n) {\n        if(!isset($digits[$n %\
    \ 10])) {\n            $result[] = $n;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $result = array();\n    foreach ($x as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $digits = array();\n    foreach($x as $n) {\n        $digits[] = $n\
    \ % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if(!in_array($digit, $result)) {\n            $result[]\
    \ = $digit;\n        }\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    foreach($x as $e) {\n        $result[] = $e;\n    }\n    sort($result);\n\
    \    $result = [];\n    foreach($result as $e) {\n        if($e % 2 == 0) {\n\
    \            $result[] = $e;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($x as $value) {\n        $result[$value] = 1;\n\
    \    }\n    foreach ($result as $key => $value) {\n        if ($value % 2 != 0)\
    \ {\n            unset($result[$key]);\n        }\n    }\n    return array_keys($result);\n\
    }\n", "    $result = array();\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    sort($result);\n    $result = array_filter($result, function($value)\
    \ {\n        return !is_numeric($value);\n    });\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n$array = array(15,\
    \ 33, 1422, 1);\n$result = array();\nforeach ($array as $key => $value) {\n  \
    \  $result[$key] = $value;\n}\nsort($result);\n$result = array_filter($result,\
    \ function($value) {\n    return !is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(15, 33, 1422, 1);\n\
    $result = array();\nforeach ($array as $key => $value) {\n    $result[$key] =\
    \ $value;\n}\nsort($result);\n$result = array_filter($result, function($value)\
    \ {\n    return !is_numeric($value);\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(15, 33, 1422, 1);\n$result = array();\nforeach ($array\
    \ as $key => $value) {\n    $result[$key] = $value;\n}\nsort($result);\n$result\
    \ = array_filter($result, function($value) {\n    return !is_numeric($value);\n\
    });\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(15, 33, 1422, 1);\n$result = array();\nforeach ($array as $key => $value)\
    \ {\n    $result[$key] = $value;\n}\nsort($result);\n$result = array_filter($result,\
    \ function($value) {\n    return !is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(15, 33, 1422, 1);\n\
    $result = array();\nforeach ($array as $key => $value) {\n    $result[$key] =\
    \ $value;\n}\nsort($result);\n$result = array_filter($result, function($value)\
    \ {\n    return !is_numeric($value);\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(15, 33, 1422, 1);\n$result = array();\nforeach ($array\
    \ as $key => $value) {\n    $result[$key] = $value;", "    $result = [];\n   \
    \ foreach ($x as $val) {\n        $result[] = array_sum(str_split($val));\n  \
    \  }\n    return array_unique($result);\n}\n", "    $digits = array();\n    foreach\
    \ ($x as $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result\
    \ = array();\n    foreach ($x as $n) {\n        if (!in_array($n % 10, $digits))\
    \ {\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n",
  "    $digits = array();\n    foreach ($x as $n) {\n        $digits[$n % 10] = $n\
    \ % 10;\n    }\n    asort($digits);\n    $result = array();\n    foreach ($x as\
    \ $n) {\n        if (!isset($digits[$n % 10])) {\n            $result[] = $n;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(15, 33, 1422, 1);\n$result = array_filter($array,\
    \ function($v){\n    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(15, 33, 1422, 1);\n\
    $result = array_filter($array, function($v){\n    return !preg_match('/\\d/',\
    \ $v);\n});\nprint_r($result);", "    $result = array();\n    foreach ($x as $num)\
    \ {\n        $result[] = array_sum(str_split($num));\n    }\n    sort($result);\n\
    \    return array_filter($result, 'strlen');\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$numbers = array(\n    152,\n    323,\n    1422,\n\
    \    10\n);\n\n$unique = array_unique($numbers);\n$unique = array_filter($unique,\
    \ 'strlen');\n$unique = array_values($unique);\n\nprint_r($unique);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$numbers = array(\n\
    \    152,\n    323,\n    1422,\n    10\n);\n\n$unique = array_unique($numbers);\n\
    $unique = array_filter($unique, 'strlen');\n$unique = array_values($unique);\n\
    \nprint_r($unique);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation\
    \ to your answer such that others can learn from it\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$numbers = array(\n    152,\n    323,\n    1422,\n    10\n);\n\n\
    $unique = array_unique($numbers);\n$unique = array_filter($unique, 'strlen');\n\
    $unique = array_values($unique);\n\nprint_r($unique);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$numbers = array(\n    152,\n    323,\n\
    \    1422,\n    10\n);\n\n$unique = array_unique($numbers);\n$unique = array_filter($unique,\
    \ 'strlen');\n$unique = array_values($unique);\n\nprint_r($unique);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$numbers = array(\n\
    \    152,\n    323,\n    1422,\n    10\n);\n\n$unique = array_unique($numbers);\n\
    $unique = array_filter($unique, 'strlen');\n$unique = array_values($unique);\n\
    \nprint_r($unique);\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n\
    $numbers = array(\n    152,\n    323,\n    1422,\n    10\n);\n\n", "    $result\
    \ = [];\n    foreach ($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n\
    \    $result = [];\n    foreach ($result as $y) {\n        if ($y % 2 == 0) {\n\
    \            $result[] = $y;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422,\
    \ 1];\n$arr2 = [];\n$arr3 = [];\nforeach ($arr as $value) {\n    if ($value %\
    \ 2 == 0) {\n        $arr2[] = $value;\n    } else {\n        $arr3[] = $value;\n\
    \    }\n}\n$arr3 = array_unique($arr3);\n$arr2 = array_unique($arr2);\n$arr3 =\
    \ array_merge($arr3, $arr2);\n$arr3 = array_unique($arr3);\nprint_r($arr3);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr\
    \ = [15, 33, 1422, 1];\n$arr2 = [];\n$arr3 = [];\nforeach ($arr as $value) {\n\
    \    if ($value % 2 == 0) {\n        $arr2[] = $value;\n    } else {\n       \
    \ $arr3[] = $value;\n    }\n}\n$arr3 = array_unique($arr3);\n$arr2 = array_unique($arr2);\n\
    $arr3 = array_merge($arr3, $arr2);\n$arr3 = array_unique($arr3);\nprint_r($arr3);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422,\
    \ 1];\n$arr2 = [];\n$arr3 = [];\nforeach ($arr as $value) {\n    if ($value %\
    \ 2 == 0) {\n        $arr2[] = $value;\n    } else {\n        $arr3[] = $value;\n\
    \    }\n}\n$arr3 = array_unique($arr3);\n$arr2 = array_unique($arr2);\n$arr3 =\
    \ array_merge($arr3, $arr2);\n$arr3 = array_unique($arr3);\nprint_r($arr3);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr\
    \ = [15, 33, 1422, 1];\n$arr2 = [];\n$arr3 = [];\nforeach ($arr as $value) {\n\
    \    if ($value % 2 == 0) {\n        $arr2[] = $value;\n    } else {\n       \
    \ $arr3[] = $value;\n    }\n}\n$arr3 = array_unique($arr3);\n$arr2 = array_",
  "    $digits = array();\n    foreach ($x as $key => $value) {\n        $digits[$key]\
    \ = $value;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($digits\
    \ as $key => $value) {\n        if ($value % 2 == 0) {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try it with `unique_digits(array(15, 33, 1422,\
    \ 1))`.\n<|/ c |>\n<| c |>\nI tested it and it works. I added the test case in\
    \ the answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added the test case\
    \ in the answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added the test\
    \ case in the answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added the\
    \ test case in the answer.\n<|/ c |>\n<| a |>\n<code>\n<?php\n", "    $result\
    \ = [];\n    foreach ($x as $key => $value) {\n        $result[$key] = $value;\n\
    \    }\n    asort($result);\n    $result = [];\n    foreach ($result as $key =>\
    \ $value) {\n        if ($value % 2 == 0) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $digits = array();\n    foreach\
    \ ($x as $n) {\n        $digits[] = $n % 10;\n    }\n    return array_unique($digits);\n\
    }\n", "    $result = [];\n    foreach ($x as $y) {\n        $result[] = $y;\n\
    \    }\n    sort($result);\n    $result = [];\n    foreach ($result as $y) {\n\
    \        $result[] = $y % 10;\n    }\n    return array_filter($result);\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work. `unique_digits(array(15, 33, 1422, 1))`\
    \ returns `[1, 15, 33]` instead of `[1, 15, 33]`.\n<|/ c |>\n<| c |>\nYes, you\
    \ are right. I've corrected my answer. Thanks.\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php", "    $result = [];\n    foreach($x as $v) {\n        $result[]\
    \ = array_sum(str_split($v));\n    }\n    array_multisort($result, SORT_DESC,\
    \ $x);\n    return $x;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\n\
    This doesn't work if the array contains negative numbers. For example: `unique_digits([-15,\
    \ -33, -1422, 1])` returns `[-33, -1422, 1]` instead of `[-33, 1, -15]`.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work if the array contains negative numbers. For\
    \ example: `unique_digits([-15, -33, -1422, 1])` returns `[-33, -1422, 1]` instead\
    \ of `[-33, 1, -15]`.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(-15, -33, -1422, 1);\n$array = array_filter($array, function($v){\n\
    \    return !is_numeric($v);\n});\nsort($array);\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThis doesn't work if the array contains negative numbers. For example:\
    \ `unique_digits([-15, -33, -1422, 1])` returns `[-33, -1422, 1]` instead of `[-33,\
    \ 1, -15]`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(-15, -33, -1422,\
    \ 1);\n$array = array_filter($array, function($v){\n    return !is_numeric($v);\n\
    });\nsort($array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=1 |>\n\
    <code>", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[]\
    \ = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($x\
    \ as $n) {\n        if (!in_array($n % 10, $digits)) {\n            $result[]\
    \ = $n;\n        }\n    }\n    return $result;\n}\n", "    $digits = array();\n\
    \    foreach($x as $n) {\n        $digits[] = $n % 10;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach($digits as $d) {\n        if(!in_array($d,\
    \ $result)) {\n            $result[] = $d;\n        }\n    }\n    return $result;\n\
    }\n", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[] = $n\
    \ % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($x as\
    \ $n) {\n        if (in_array($n % 10, $digits)) {\n            continue;\n  \
    \      }\n        $result[] = $n;\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($x as $key => $value) {\n        $result[$key] = $value;\n\
    \    }\n    asort($result);\n    $result = [];\n    foreach ($result as $key =>\
    \ $value) {\n        if ($value % 2 == 0) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n\
    \    return !($v % 2);\n});\nprint_r($arr2);\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=php,arrays |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return !($v % 2);\n});\nprint_r($arr2);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return !($v % 2);\n});\nprint_r($arr2);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return !($v % 2);\n});\nprint_r($arr2);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return !($v % 2);\n});\nprint_r($arr2);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return !($v % 2);\n});\nprint_r($arr2);", "    $result =\
    \ [];\n    foreach ($x as $value) {\n        $result[] = array_sum(str_split($value));\n\
    \    }\n    sort($result);\n    return array_filter($result, function($value)\
    \ {\n        return $value % 2 === 0;\n    });\n}\n", "    $digits = array();\n\
    \    foreach ($x as $num) {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n\
    \    return array_filter($digits, function($num) {\n        return $num % 2 ===\
    \ 0;\n    });\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $result = [];\n    foreach ($x as $value) {\n        $result[] = array_sum(str_split($value));\n\
    \    }\n    sort($result);\n    return array_filter($result, function($value)\
    \ {\n        return $value % 2 === 0;\n    });\n}\n", "    $result = [];\n   \
    \ foreach ($x as $key => $value) {\n        if ($value % 2 == 0) {\n         \
    \   $result[] = $value;\n        }\n    }\n    return $result;\n}\n", "    $digits\
    \ = array();\n    foreach($x as $y) {\n        $digits[] = $y;\n    }\n    sort($digits);\n\
    \    $result = array();\n    foreach($digits as $digit) {\n        if($digit %\
    \ 2 == 0) {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    foreach($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    foreach($result as $key => $value) {\n        if($value\
    \ % 2 == 0) {\n            unset($result[$key]);\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = array();\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    sort($result);\n    $result2\
    \ = array();\n    foreach ($result as $key => $value) {\n        if ($value %\
    \ 2 == 0) {\n            $result2[] = $value;\n        }\n    }\n    return $result2;\n\
    }\n", "    $result = array();\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    foreach ($result as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            unset($result[$key]);\n        }\n    }\n    return\
    \ array_values($result);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "    $result = array();\n    foreach ($x as $y) {\n        $result[] = $y;\n   \
    \ }\n    sort($result);\n    $result2 = array();\n    foreach ($result as $y)\
    \ {\n        $result2[] = strlen($y);\n    }\n    sort($result2);\n    $result3\
    \ = array();\n    foreach ($result2 as $y) {\n        if ($y % 2 == 0) {\n   \
    \         $result3[] = $y;\n        }\n    }\n    sort($result3);\n    return\
    \ $result3;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work.\
    \ Try it with `unique_digits(array(15, 33, 1422, 1))`\n<|/ c |>\n<| c |>\nYes,\
    \ I forgot about that case. Thanks for pointing it out. I've updated my answer.\n\
    <|/ c |>\n<| c |>\nThis still doesn't work. Try it with `unique_digits(array(152,\
    \ 323, 1422, 10))`\n<|/ c |>\n<| c |>\nYes, I forgot about that case. Thanks for\
    \ pointing it out. I've updated my answer.\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>", "    $result = [];\n    foreach ($x as $y) {\n        $result[$y]++;\n\
    \    }\n    foreach ($result as $key => $value) {\n        if ($value == 1) {\n\
    \            unset($result[$key]);\n        }\n    }\n    return array_keys($result);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n$arr = [15, 33,\
    \ 1422, 1];\n$result = array_filter($arr, function($v){\n    return !preg_match('/\\\
    d/', $v);\n});\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n$arr = [15, 33, 1422,\
    \ 1];\n$result = array_filter($arr, function($v){\n    return !preg_match('/\\\
    d/', $v);\n});\n</code>\n<|/ a dscore=0 tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$result = array_filter($arr, function($v){\n\
    \    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Please add some explanation to your answer such that others can learn from it\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n\
    $result = array_filter($arr, function($v){\n    return !preg_match('/\\d/', $v);\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n$arr = [15,\
    \ 33, 1422, 1];\n$result = array_filter($arr, function($v){\n    return !preg_match('/\\\
    d/', $v);\n});\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation\
    \ to your answer such that others can learn from it\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = [15, 33, 1422, 1];\n$result = array_filter($arr, function($v){\n\
    \    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$arr = [15, 33, 1422, 1];\n$result = array_filter($arr, function($v){\n\
    \    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a |>\n<code>\n$arr = [15, ", "    $digits = array();\n    foreach($x as $y)\
    \ {\n        $digits[] = $y;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n</code>\n<|/\
    \ a |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr=array(15,33,1422,1);\n$arr1=array();\n\
    foreach($arr as $k=>$v){\n    if($v%2==0){\n        $arr1[$k]=$v;\n    }\n}\n\
    $arr2=array_unique($arr1);\n$arr3=array_diff($arr,$arr2);\nprint_r($arr3);", " \
    \   $result = [];\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_ASC, $x);\n    return $x;\n\
    }\n", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[] = $n\
    \ % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($x as\
    \ $n) {\n        if (in_array($n % 10, $digits)) {\n            continue;\n  \
    \      }\n        $result[] = $n;\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($x as $key => $value) {\n        if ($value % 2 == 0) {\n\
    \            $result[] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($x as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_ASC, $x);\n    return $x;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n\
    <code>", "    $result = [];\n    foreach($x as $v) {\n        $result[] = $v;\n\
    \    }\n    sort($result);\n    $result = [];\n    foreach($result as $v) {\n\
    \        $result[] = $v % 10;\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($x as $key => $value) {\n        $result[$key] = $value;\n\
    \    }\n    sort($result);\n    $result = [];\n    foreach ($result as $key =>\
    \ $value) {\n        if ($value % 2 != 0) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a |>\n<code>", "    $result = array();\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    asort($result);\n    return $result;\n\
    }\n", "    $digits = array();\n    foreach($x as $num) {\n        $digits[] =\
    \ $num % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if($digit % 2 != 0) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$numbers = array(15, 33, 1422, 1);\n$unique = array_unique($numbers);\n\
    $unique = array_filter($unique, 'is_int');\nsort($unique);\nprint_r($unique);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't answer the question.\
    \ OP wants to remove all elements that aren't even digits, not just remove all\
    \ non-integer elements.\n<|/ c |>\n<| c |>\nThis doesn't answer the question.\
    \ OP wants to remove all elements that aren't even digits, not just remove all\
    \ non-integer elements.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$numbers\
    \ = array(15, 33, 1422, 1);\n$unique = array_unique($numbers);\n$unique = array_filter($unique,\
    \ 'is_int');\nsort($unique);\nprint_r($unique);\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't answer the question. OP wants to remove all elements that\
    \ aren't even digits, not just remove all non-integer elements.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't answer the question. OP wants to remove all elements that\
    \ aren't even digits, not just remove all non-integer elements.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n$numbers = array(15, 33, 1422, 1);\n$unique = array_unique($numbers);\n\
    $unique = array_filter($unique, 'is_int');\nsort($unique);\nprint_r($unique);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't answer the question.\
    \ OP wants to remove all elements that aren't even digits, not just remove all\
    \ non-integer elements.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n$numbers = array(15,\
    \ 33, 1422, 1);\n$unique = array_unique($numbers);\n$unique = array_filter($unique,\
    \ 'is_int');\nsort($unique);\nprint_r($unique);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[]\
    \ = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($x\
    \ as $n) {\n        if (in_array($n % 10, $digits)) {\n            continue;\n\
    \        }\n        $result[] = $n;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = array(15,\
    \ 33, 1422, 1);\n$result = array();\nforeach($arr as $key => $val){\n    if($val\
    \ % 2 == 0){\n        $result[] = $val;\n    }\n}\nsort($result);\nprint_r($result);",
  "    $digits = array();\n    foreach($x as $y) {\n        $digits[] = $y;\n    }\n\
    \    sort($digits);\n    $result = array();\n    foreach($digits as $digit) {\n\
    \        if($digit % 2 == 0) {\n            $result[] = $digit;\n        }\n \
    \   }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ doesn't work if there are duplicates in the array.\n<|/ c |>\n<| c |>\nIt does\
    \ work if there are duplicates in the array. Just tested it.\n<|/ c |>\n<| c |>\n\
    Yes, it does. I tested it before posting my comment. Try it yourself.\n<|/ c |>\n\
    <| c |>\nI tested it myself before posting my comment. Try it yourself.\n<|/ c\
    \ |>\n<| c |>\nI tested it myself before posting my comment. Try it yourself.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$newArr\
    \ = array();\nforeach($arr as $key => $value) {\n    if($value % 2 == 0) {\n \
    \       $newArr[] = $value;\n    }\n}\nsort($newArr);\nprint_r($newArr);", " \
    \   $digits = array();\n    foreach($x as $n) {\n        $digits[$n % 10] = $n\
    \ % 10;\n    }\n    asort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if($digit % 2 == 0) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n    $result\
    \ = [];\n    foreach ($result as $y) {\n        if ($y % 2 != 0) {\n         \
    \   $result[] = $y;\n        }\n    }\n    return $result;\n}\n", "    $digits\
    \ = array();\n    foreach ($x as $n) {\n        $digits[] = $n % 10;\n    }\n\
    \    $digits = array_unique($digits);\n    sort($digits);\n    return $digits;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(15,\
    \ 33, 1422, 1);\n$unique = array_unique($array);\n$sorted = array_values($unique);\n\
    $sorted = array_filter($sorted);\n$sorted = array_unique($sorted);\nprint_r($sorted);",
  "    $result = [];\n    foreach ($x as $num) {\n        $result[$num] = $num;\n\
    \    }\n    ksort($result);\n    return array_keys($result);\n}\n", "    $result\
    \ = [];\n    foreach ($x as $key => $value) {\n        $result[$key] = $value;\n\
    \    }\n    sort($result);\n    $result = [];\n    foreach ($result as $key =>\
    \ $value) {\n        if ($value % 2 == 0) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $digits = array();\n    foreach\
    \ ($x as $n) {\n        $digits[$n % 10] = $n % 10;\n    }\n    asort($digits);\n\
    \    return array_keys($digits);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_114_minSubArraySum
language: php
prompt: "<?php\n// Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2, 3, 4, 1, 2,\
  \ 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction minSubArraySum($nums)\
  \ {\n"
tests: "function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3,\
  \ 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
  \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
  \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-10)) !== -10) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(7)) !== 7) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -1)) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min\
    \ = min($min, $num);\n    }\n    return $min;\n}\n", "    $sum = 0;\n    foreach\
    \ ($nums as $num) {\n        $sum += $num;\n    }\n    return $sum;\n}\n", " \
    \   $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n    }\n \
    \   return $sum;\n}\n", "    $sum = 0;\n    foreach ($nums as $num) {\n      \
    \  $sum += $num;\n    }\n    return $sum;\n}\n", "    $min = $nums[0];\n    $minSum\
    \ = 0;\n    foreach ($nums as $num) {\n        $minSum += $num;\n        if ($minSum\
    \ < $min) {\n            $min = $minSum;\n        }\n    }\n    return $min;\n\
    }\n", "    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $n) {\n \
    \       if ($n >= 0) {\n            $sum += $n;\n            if ($sum < $min)\
    \ {\n                $min = $sum;\n            }\n        }\n    }\n    return\
    \ $min;\n}\n", "    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n     \
    \   if ($num < $min) {\n            $min = $num;\n        }\n    }\n    return\
    \ $min;\n}\n", "    $sum = 0;\n    foreach ($nums as $num) {\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n", "    $min = PHP_INT_MAX;\n    foreach\
    \ ($nums as $num) {\n        if ($num < $min) {\n            $min = $num;\n  \
    \      }\n    }\n    return $min;\n}\n", "    $min = 0;\n    $sum = 0;\n    foreach\
    \ ($nums as $num) {\n        $sum += $num;\n        if ($sum < $min) {\n     \
    \       $min = $sum;\n        }\n    }\n    return $min;\n}\n", "    $min = PHP_INT_MAX;\n\
    \    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n       \
    \ if ($sum < $min) {\n            $min = $sum;\n        }\n    }\n    return $min;\n\
    }\n", "    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    </code>\n<|/ a tags=php,arrays,algorithm |>\n<| c |>\nThis doesn't work if you\
    \ have a negative number in the array.\n<|/ c |>\n<| c |>\nThis doesn't work if\
    \ you have a negative number in the array.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if you have a negative number in the array.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have a negative number in the array.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have a negative number in the array.\n<|/ c |>\n<| a tags=php,arrays,algorithm\
    \ |>\n<code>", "    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n     \
    \   $min = min($min, $num);\n    }\n    return $min;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. `minSubArraySum([-10, -20,\
    \ -30])` returns `-10` instead of `-10`.\n<|/ c |>\n<| a dscore=2 |>\n<code>",
  "    $sum = 0;\n    $min = $nums[0];\n    foreach ($nums as $num) {\n        if\
    \ ($num > $min) {\n            $sum += $num - $min;\n            $min = $num;\n\
    \        }\n    }\n    return $sum;\n}\n", "    $minSum = PHP_INT_MAX;\n    foreach\
    \ ($nums as $num) {\n        $minSum = min($minSum, $num);\n    }\n    return\
    \ $minSum;\n}\n", "    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n  \
    \      if ($num < $min) {\n            $min = $num;\n        }\n    }\n    return\
    \ $min;\n}\n", "    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n     \
    \   $min = min($min, $num);\n    }\n    return $min;\n}\n", "    $sum = 0;\n \
    \   foreach ($nums as $num) {\n        $sum += $num;\n    }\n    return $sum;\n\
    }\n", "    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $n) {\n \
    \       $sum += $n;\n        if ($sum < $min) {\n            $min = $sum;\n  \
    \      }\n    }\n    return $min;\n}\n", "    $min = 0;\n    $max = 0;\n    foreach\
    \ ($nums as $num) {\n        if ($min > $num) {\n            $min = $num;\n  \
    \      }\n        if ($max < $num) {\n            $max = $num;\n        }\n  \
    \  }\n    return $min + $max;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

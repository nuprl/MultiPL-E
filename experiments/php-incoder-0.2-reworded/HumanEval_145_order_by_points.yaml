name: HumanEval_145_order_by_points
language: php
prompt: "<?php\n// Write a function which sorts the given array of integers\n// in\
  \ ascending order according to the sum of their digits.\n// Note: if there are several\
  \ items with similar sum of their digits,\n// order them based on their index in\
  \ original array.\n// For example:\n// >>> order_by_points(array(1, 11, -1, -11,\
  \ -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n// array()\n\
  function order_by_points($nums) {\n"
tests: "function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
  \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
  \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3,\
  \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !==\
  \ array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10,\
  \ 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6))\
  \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $sums = array_sum($nums);\n    $order = array_keys($nums, $sums);\n\
    \    return array_map(function($v) use ($order) {\n        return $order[$v];\n\
    \    }, $nums);\n}\n", "    $sums = array_sum($nums);\n    $order = array_keys($nums,\
    \ $sums);\n    return array_intersect_key($nums, $order);\n}\n", "  $sums = array_sum($nums);\n\
    \  $order = array_keys($nums, $sums);\n  return array_intersect_key($nums, $order);\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work when\
    \ there are two or more elements with same sum.\n<|/ c |>\n<| c |>\n: It does\
    \ work. Try it yourself. It returns an array with elements with same sum in ascending\
    \ order.\n<|/ c |>\n<| c |>\n: I added a note about this in my answer.\n<|/ c\
    \ |>\n<| c |>\n: I added a note about this in my answer.\n<|/ c |>\n<| c |>\n\
    : I added a note about this in my answer.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>", "    $sums = array_sum($nums);\n    $sorted = array_map(function\
    \ ($num) use ($sums) {\n        return $sums - $num;\n    }, $nums);\n    asort($sorted);\n\
    \    return $sorted;\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n \
    \ return $nums;\n}\n", "    $sums = array_sum($nums);\n    $order = array_keys($nums,\
    \ $sums);\n    return array_map(function($v) use ($sums) {\n        return $sums\
    \ - $v;\n    }, $order);\n}\n", "    $sums = array_sum($nums);\n    $sorted =\
    \ array();\n    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n\
    \    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $sums[$i];\n    }\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n\
    \    $order = array_keys($nums, $sums);\n    return array_map(function($v) use\
    \ ($sums) {\n        return $sums[$v];\n    }, $order);\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    return array_map(function($num) use ($sums) {\n      \
    \  return $sums - $num;\n    }, $nums);\n}\n", "  $sums = array_sum($nums);\n\
    \  asort($nums);\n  return $nums;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| c |>\nThis doesn't work if there are two or more numbers with the same sum.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are two or more numbers with the\
    \ same sum.\n<|/ c |>\n<| c |>\nThis doesn't work if there are two or more numbers\
    \ with the same sum.\n<|/ c |>\n<| c |>\nThis doesn't work if there are two or\
    \ more numbers with the same sum.\n<|/ c |>\n<| c |>\nThis doesn't work if there\
    \ are two or more numbers with the same sum.\n<|/ c |>\n<| a |>\n<code>\n$arr\
    \ = array(\n    array('name' => 'John', 'age' => 25),\n    array('name' => 'Jane',\
    \ 'age' => 20),\n    array('name' => 'Jack', 'age' => 25),\n    array('name' =>\
    \ 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    array('name'\
    \ => 'Jill', 'age' => 25),\n    array('name' => 'Jack', 'age' => 25),\n    ",
  "    $sums = array_sum($nums);\n    foreach ($nums as $i => $num) {\n        $sums[$i]\
    \ = $sums[$i] - $num;\n    }\n    return array_keys($sums);\n}\n", "    $sums\
    \ = array_sum($nums);\n    $order = array_keys($nums, $sums);\n    return array_map(function($v)\
    \ use ($order) {\n        return $order[$v];\n    }, $nums);\n}\n", "    $sorted\
    \ = array();\n    $sums = array();\n    foreach ($nums as $num) {\n        $sums[$num]\
    \ = array_sum(str_split($num));\n        $sorted[] = $num;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $num => $sum) {\n        $sorted[$num] = $nums[$sum];\n\
    \    }\n    return $sorted;\n}\n", "    $sorted = array();\n    $sums = array();\n\
    \    foreach ($nums as $num) {\n        $sums[$num] = array_sum(str_split($num));\n\
    \        $sorted[] = $num;\n    }\n    asort($sums);\n    foreach ($sums as $num\
    \ => $sum) {\n        $sorted[$num] = $nums[$sum];\n    }\n    return $sorted;\n\
    }\n", "    $sums = array_sum($nums);\n    $sorted = array();\n    foreach ($nums\
    \ as $i => $num) {\n        $sorted[$i] = $num;\n    }\n    asort($sorted);\n\
    \    foreach ($sorted as $i => $num) {\n        $sorted[$i] = $sums[$i];\n   \
    \ }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ doesn't work if there are multiple items with the same sum.\n<|/ c |>\n<| c\
    \ |>\nYes, it does. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work if there\
    \ are multiple items with the same sum. Try it yourself.\n<|/ c |>\n<| c |>\n\
    It does work. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work if there are\
    \ multiple items with the same sum. Try it yourself.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\n    array('name' => 'John', 'age' => 20, 'score'\
    \ => 5),\n    array('name' => 'Jane', 'age' => 20, 'score' => 5),\n    array('name'\
    \ => 'Jack', 'age' => 20, 'score' => 5),\n    array('name' => 'Jill', 'age' =>\
    \ 20, 'score' => 5),\n    array('name' => 'Jack', 'age' => 20, 'score' => 5),\n\
    \    array('name' => 'Jill', 'age' => 20, 'score' => 5),\n    array('name' =>\
    \ 'Jack', 'age' => 20, 'score' => 5),\n    array('name' => 'Jill', 'age' => 20,\
    \ 'score' => 5),\n    array('name' => 'Jack', 'age' => 20, 'score' => 5),\n  \
    \  array('name' => 'Jill', 'age' => 20, 'score' => 5),\n    array('name' => 'Jack',\
    \ 'age' => 20, 'score' => 5),\n    array('name' => 'Jill', 'age' => 20, 'score'\
    \ => 5),\n    array('name' => 'Jack', 'age' => 20, 'score' => 5),\n    array('name'\
    \ => 'Jill', 'age' => 20, 'score' => 5),\n    array('name' => 'Jack', 'age' =>\
    \ 20, 'score' => 5),\n    array('name' => 'Jill', 'age' => 20, 'score' => 5),\n\
    \    array('name' => 'Jack', 'age' => 20, 'score' => 5),\n    array('name' =>\
    \ 'Jill', 'age' => 20, 'score' => 5),\n    array('name' => 'Jack', 'age", "  $sums\
    \ = array_sum($nums);\n  arsort($nums);\n  return $nums;\n}\n", "  $sums = array_sum($nums);\n\
    \  $order = array_keys($nums, $sums);\n  return array_intersect_key($nums, $order);\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis does not work if there\
    \ are two or more items with the same sum.\n<|/ c |>\n<| c |>\nI added a note\
    \ to my answer.\n<|/ c |>\n<| c |>\nI added a note to my answer.\n<|/ c |>\n<|\
    \ a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = array(\n    1 => 1,\n  \
    \  2 => 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n\
    \    8 => 8,\n    9 => 9,\n    10 => 10,\n    11 => 11,\n    12 => 12,\n    13\
    \ => 13,\n    14 => 14,\n    15 => 15,\n    16 => 16,\n    17 => 17,\n    18 =>\
    \ 18,\n    19 => 19,\n    20 => 20,\n    21 => 21,\n    22 => 22,\n    23 => 23,\n\
    \    24 => 24,\n    25 => 25,\n    26 => 26,\n    27 => 27,\n    28 => 28,\n \
    \   29 => 29,\n    30 => 30,\n    31 => 31,\n    32 => 32,\n    33 => 33,\n  \
    \  34 => 34,\n    35 => 35,\n    36 => 36,\n    37 => 37,\n    38 => 38,\n   \
    \ 39 => 39,\n    40 => 40,\n    41 => 41,\n    42 => 42,\n    43 => 43,\n    44\
    \ => 44,\n    45 => 45,\n    46 => 46,\n    47 => 47,\n    48 => 48,\n    49 =>\
    \ 49,\n    50 => 50,\n    51 => 51,\n    52 => 52,\n    53 => 53,\n    54 => 54,\n\
    \    55 => 55,\n    56 => 56,\n    57 => 57,\n    58 => 58,\n    59 => 59,\n \
    \   60 => 60,\n    61 => 61,\n    62 => 62,\n    63 => 63,\n    64 => 64,\n  \
    \  65 => 65,\n    66 => 66,\n    67 => 67,\n    68 => 68,\n    ", "    $sorted\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n     \
    \   foreach (str_split($num) as $digit) {\n            $sum += $digit;\n     \
    \   }\n        $sorted[$key] = $nums[$key];\n        $sorted[$key]->sum = $sum;\n\
    \    }\n    array_multisort($sorted);\n    return $sorted;\n}\n", "    $sums =\
    \ array_sum($nums);\n    $sorted = array();\n    foreach ($nums as $i => $num)\
    \ {\n        $sorted[$i] = $num;\n        $sorted[$i] = $sums - $num;\n    }\n\
    \    return $sorted;\n}\n", "    $sums = array_sum($nums);\n    $sorted = array_map(function\
    \ ($num) use ($sums) {\n        return $num < 0 ? $num * -1 : abs($num * $sums\
    \ - $sums);\n    }, $nums);\n    return array_map(function ($num) use ($sorted)\
    \ {\n        return $num < 0 ? $sorted[-1 - $num] : $sorted[$num];\n    }, $nums);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n\
    $array = array(1, 11, -1, -11, -12);\n$sums = array_sum($array);\n$sorted = array_map(function\
    \ ($num) use ($sums) {\n    return $num < 0 ? $num * -1 : abs($num * $sums - $sums);\n\
    }, $array);\n$sorted = array_map(function ($num) use ($sorted) {\n    return $num\
    \ < 0 ? $sorted[-1 - $num] : $sorted[$num];\n}, $array);\nprint_r($sorted);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$array\
    \ = array(1, 11, -1, -11, -12);\n$sums = array_sum($array);\n$sorted = array_map(function\
    \ ($num) use ($sums) {\n    return $num < 0 ? $num * -1 : abs($num * $sums - $sums);\n\
    }, $array);\n$sorted = array_map(function ($num) use ($sorted) {\n    return $num\
    \ < 0 ? $sorted[-1 - $num] : $sorted[$num];\n}, $array);\nprint_r($sorted);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(1,\
    \ 11, -1, -11, -12);\n$sums = array_sum($array);\n$sorted = array_map(function\
    \ ($num) use ($sums) {\n    return $num < 0 ? $num * -1 : abs($num * $sums - $sums);\n\
    }, $array);\n$sorted = array_map(function ($num) use ($sorted) {\n    return $num\
    \ < 0 ? $sorted[-1 - $num] : $sorted[$num];\n}, $array);\nprint_r($sorted);"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

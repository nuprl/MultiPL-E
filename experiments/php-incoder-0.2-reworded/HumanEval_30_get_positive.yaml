name: HumanEval_30_get_positive
language: php
prompt: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
  \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3, 3,\
  \ 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
  \ {\n"
tests: "function candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
  \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $positive = array();\n  foreach ($l as $value) {\n    if ($value\
    \ > 0) {\n      $positive[] = $value;\n    }\n  }\n  return $positive;\n}", " \
    \   $positive = array();\n    foreach ($l as $item) {\n        if ($item > 0)\
    \ {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n", "    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n", "    return array_filter($l, function($v) { return $v > 0; });\n}\n", " \
    \ $positive = array();\n  foreach ($l as $key => $value) {\n    if ($value > 0)\
    \ {\n      $positive[$key] = $value;\n    }\n  }\n  return $positive;\n}\n", " \
    \   return array_filter($l, function($v) { return $v > 0; });\n}\n", "    return\
    \ array_filter($l, function($v) {\n        return $v > 0;\n    });\n}\n", "  \
    \  return array_filter($l, function($v) { return $v > 0; });\n}\n", "    $positive\
    \ = array();\n    foreach ($l as $key => $value) {\n        if ($value > 0) {\n\
    \            $positive[$key] = $value;\n        }\n    }\n    return $positive;\n\
    }\n", "    $positive = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n", "  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0)\
    \ {\n      $positive[] = $value;\n    }\n  }\n  return $positive;\n}\n", "  $positive\
    \ = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[]\
    \ = $item;\n    }\n  }\n  return $positive;\n}\n", "    $positive = array();\n\
    \    foreach ($l as $item) {\n        if ($item > 0) {\n            $positive[]\
    \ = $item;\n        }\n    }\n    return $positive;\n}\n", "    $positive = array();\n\
    \    foreach ($l as $item) {\n        if ($item > 0) {\n            $positive[]\
    \ = $item;\n        }\n    }\n    return $positive;\n}\n", "  return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "  return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "    $positive = array();\n    foreach ($l as $value)\
    \ {\n        if ($value > 0) {\n            $positive[] = $value;\n        }\n\
    \    }\n    return $positive;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(\n    array('name' => 'A', 'score' => 1),\n    array('name'\
    \ => 'B', 'score' => 2),\n    array('name' => 'C', 'score' => 3),\n    array('name'\
    \ => 'D', 'score' => 4),\n    array('name' => 'E', 'score' => 5),\n    array('name'\
    \ => 'F', 'score' => 6),\n    array('name' => 'G', 'score' => 7),\n    array('name'\
    \ => 'H', 'score' => 8),\n    array('name' => 'I', 'score' => 9),\n    array('name'\
    \ => 'J', 'score' => 10),\n    array('name' => 'K', 'score' => 11),\n    array('name'\
    \ => 'L', 'score' => 12),\n    array('name' => 'M', 'score' => 13),\n    array('name'\
    \ => 'N', 'score' => 14),\n    array('name' => 'O', 'score' => 15),\n    array('name'\
    \ => 'P', 'score' => 16),\n    array('name' => 'Q', 'score' => 17),\n    array('name'\
    \ => 'R', 'score' => 18),\n    array('name' => 'S', 'score' => 19),\n    array('name'\
    \ => 'T', 'score' => 20),\n    array('name' => 'U', 'score' => 21),\n    array('name'\
    \ => 'V', 'score' => 22),\n    array('name' => 'W', 'score' => 23),\n    array('name'\
    \ => 'X', 'score' => 24),\n    array('name' => 'Y', 'score' => 25),\n    array('name'\
    \ => 'Z', 'score' => 26),\n);\n", "  $positive = array();\n  foreach ($l as $value)\
    \ {\n    if ($value > 0) {\n      $positive[] = $value;\n    }\n  }\n  return\
    \ $positive;\n}\n", "    $positive = array();\n    foreach ($l as $value) {\n\
    \        if ($value > 0) {\n            $positive[] = $value;\n        }\n   \
    \ }\n    return $positive;\n}\n", "    $positive = array();\n    foreach ($l as\
    \ $value) {\n        if ($value > 0) {\n            $positive[] = $value;\n  \
    \      }\n    }\n    return $positive;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

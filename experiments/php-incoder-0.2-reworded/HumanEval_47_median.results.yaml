language: php
name: HumanEval_47_median
results:
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2])\
    \ / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mu5de0n.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mu5de0n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6mu5de0n.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwewaxos.php:23\n\
    Stack trace:\n#0 /tmp/tmpfwewaxos.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfwewaxos.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr22pgv2.php:17\n\
    Stack trace:\n#0 /tmp/tmpmr22pgv2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmr22pgv2.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[(count($l) / 2) - 1];\n    }\n    return ($l[($n - 1) /\
    \ 2] - $l[($n - 1) / 2]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa18yqbos.php:20\n\
    Stack trace:\n#0 /tmp/tmpa18yqbos.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa18yqbos.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    $m = $n / 2;\n    return ($l[$m] + $l[$n - 1])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24wftnqh.php:23\n\
    Stack trace:\n#0 /tmp/tmp24wftnqh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp24wftnqh.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_values($l);\n  return $l[count($l)/2];\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzuye7r__.php:17\n\
    Stack trace:\n#0 /tmp/tmpzuye7r__.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzuye7r__.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8ayn2l1.php:22\n\
    Stack trace:\n#0 /tmp/tmpt8ayn2l1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt8ayn2l1.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_filter($l);\n    $n = count($l);\n    if\
    \ ($n % 2) {\n        return $l[($n + 1) / 2];\n    }\n    $m = $l[($n - 1) /\
    \ 2];\n    if ($m == 0) {\n        return $l[0];\n    }\n    return ($l[($n -\
    \ 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n}\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_0ore2j.php:24\n\
    Stack trace:\n#0 /tmp/tmp0_0ore2j.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0_0ore2j.php\
    \ on line 24\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpoe7f0eet.php on line 14

    '
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n\
    \ - 1) / 2] + ($l[($n - 1) / 2] * 0.5);\n  }\n  return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcvwmgwn2.php:19\n\
    Stack trace:\n#0 /tmp/tmpcvwmgwn2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcvwmgwn2.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    $m = $l[$n\
    \ / 2];\n    for ($i = 1; $i < $n; $i += 2) {\n      if ($l[$i] > $m) {\n    \
    \    $m = $l[$i];\n      }\n    }\n    return $m;\n  }\n  else {\n    $m = $l[$n\
    \ / 2 - 1];\n    for ($i = 1; $i < $n; $i += 2) {\n      if ($l[$i] > $m) {\n\
    \        $m = $l[$i];\n      }\n    }\n    return $m;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ycjxtz7.php:34\n\
    Stack trace:\n#0 /tmp/tmp1ycjxtz7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1ycjxtz7.php\
    \ on line 34\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  sort($l);\n  return $l[count($l) / 2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzu821bm6.php:21\n\
    Stack trace:\n#0 /tmp/tmpzu821bm6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzu821bm6.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 === 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9f2l_t_1.php on line 14

    '
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr22pgv2.php:17\n\
    Stack trace:\n#0 /tmp/tmpmr22pgv2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmr22pgv2.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwewaxos.php:23\n\
    Stack trace:\n#0 /tmp/tmpfwewaxos.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfwewaxos.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n\
    \ - 1) / 2]; // median = (left + right)/2\n  }\n  else {\n    return ($l[($n -\
    \ 1) / 2] + $l[($n - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9x65r0tg.php:22\n\
    Stack trace:\n#0 /tmp/tmp9x65r0tg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9x65r0tg.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) /\
    \ 2] + $l[($n - 1) / 2 - 1]) / 2;\n  }\n}\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrxcajl7.php:22\n\
    Stack trace:\n#0 /tmp/tmprrxcajl7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprrxcajl7.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        // even\n     \
    \   return $l[count($l) / 2 - 1];\n    }\n    else {\n        // odd\n       \
    \ return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wn7ngji.php:22\n\
    Stack trace:\n#0 /tmp/tmp0wn7ngji.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0wn7ngji.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2]; // median = (left + right)/2\n  } else {\n    return ($l[($n\
    \ - 1) / 2] + $l[($n - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyx7ao47a.php:23\n\
    Stack trace:\n#0 /tmp/tmpyx7ao47a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyx7ao47a.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2) {\n        return\
    \ $l[($n - 1) / 2]; // median = (left + right)/2\n    }\n    else {\n        $m\
    \ = $n / 2;\n        return ($l[$m] + $l[$n - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu9w7fpz2.php:23\n\
    Stack trace:\n#0 /tmp/tmpu9w7fpz2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpu9w7fpz2.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  }\
    \ else {\n    return $l[($n - 1) / 2];\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxcgjsco.php:23\n\
    Stack trace:\n#0 /tmp/tmpxxcgjsco.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxxcgjsco.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  }\n\
    \  return $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp19sahfd.php:22\n\
    Stack trace:\n#0 /tmp/tmpp19sahfd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp19sahfd.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[count($l)\
    \ / 2 - 1];\n    }\n    $m = $l[count($l) / 2];\n    foreach ($l as $i => $e)\
    \ {\n        if ($e < $m) {\n            $l[$i] = $m;\n        } else {\n    \
    \        $l[$i] = $e;\n        }\n    }\n    return $m;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmped6s1yql.php:26\n\
    Stack trace:\n#0 /tmp/tmped6s1yql.php(33): test()\n#1 {main}\n  thrown in /tmp/tmped6s1yql.php\
    \ on line 26\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9ry3vf.php:17\n\
    Stack trace:\n#0 /tmp/tmpvv9ry3vf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvv9ry3vf.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n\
    \        return null;\n    }\n    $l = array_values($l);\n    $l = array_slice($l,\
    \ count($l) / 2);\n    return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjw_0k2en.php:22\n\
    Stack trace:\n#0 /tmp/tmpjw_0k2en.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjw_0k2en.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdorlg336.php:22\n\
    Stack trace:\n#0 /tmp/tmpdorlg336.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpdorlg336.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[($n + 1) / 2];\n    }\n    return ($l[($n - 1) / 2] - $l[($n\
    \ - 2) / 2 + 1]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkcb8tv2r.php:20\n\
    Stack trace:\n#0 /tmp/tmpkcb8tv2r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkcb8tv2r.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[(count($l) / 2)];\n    }\n    return ($l[($n - 1) / 2]\
    \ + $l[($n - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc537z3jv.php:21\n\
    Stack trace:\n#0 /tmp/tmpc537z3jv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc537z3jv.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 -\
    \ 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk37n22fc.php:22\n\
    Stack trace:\n#0 /tmp/tmpk37n22fc.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpk37n22fc.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheeo8pcf.php:18\n\
    Stack trace:\n#0 /tmp/tmpheeo8pcf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpheeo8pcf.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 === 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  return ($l[($n - 1) / 2] + $l[($n - 1) /\
    \ 2 - 1]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3azuc88.php:20\n\
    Stack trace:\n#0 /tmp/tmpl3azuc88.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpl3azuc88.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheeo8pcf.php:18\n\
    Stack trace:\n#0 /tmp/tmpheeo8pcf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpheeo8pcf.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    $m = $l[($n\
    \ - 1) / 2];\n    return $m + ($m / 2);\n  } else {\n    return $l[($n - 1) /\
    \ 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u6iglay.php:22\n\
    Stack trace:\n#0 /tmp/tmp3u6iglay.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3u6iglay.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw63y7cp7.php:23\n\
    Stack trace:\n#0 /tmp/tmpw63y7cp7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw63y7cp7.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjd3ha7lh.php:23\n\
    Stack trace:\n#0 /tmp/tmpjd3ha7lh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjd3ha7lh.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheeo8pcf.php:18\n\
    Stack trace:\n#0 /tmp/tmpheeo8pcf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpheeo8pcf.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_w0ysl8.php:19\n\
    Stack trace:\n#0 /tmp/tmpk_w0ysl8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk_w0ysl8.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  $l = array_reverse($l);\n  $l = array_slice($l, count($l) /\
    \ 2);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbz65gym9.php:21\n\
    Stack trace:\n#0 /tmp/tmpbz65gym9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbz65gym9.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n   \
    \ return 0;\n  }\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n -\
    \ 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5ui0r8l.php:26\n\
    Stack trace:\n#0 /tmp/tmpz5ui0r8l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz5ui0r8l.php\
    \ on line 26\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1])\
    \ / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5kfnl0in.php:20\n\
    Stack trace:\n#0 /tmp/tmp5kfnl0in.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5kfnl0in.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  $m = $l[count($l) / 2];\n  foreach ($l as $n) {\n    if ($n\
    \ < $m) {\n      $m = $n;\n    }\n  }\n  return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvm_b4gzf.php:25\n\
    Stack trace:\n#0 /tmp/tmpvm_b4gzf.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvm_b4gzf.php\
    \ on line 25\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9ry3vf.php:17\n\
    Stack trace:\n#0 /tmp/tmpvv9ry3vf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvv9ry3vf.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_values($l);\n  sort($l);\n  return $l[count($l)\
    \ / 2 - 1];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxq1i19i.php:17\n\
    Stack trace:\n#0 /tmp/tmpxxq1i19i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxxq1i19i.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n\
    \        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp563xj3xx.php:22\n\
    Stack trace:\n#0 /tmp/tmp563xj3xx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp563xj3xx.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) /\
    \ 2] - $l[($n - 2) / 2 + 1]) / 2;\n  }\n}\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qbs5ejv.php:22\n\
    Stack trace:\n#0 /tmp/tmp4qbs5ejv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4qbs5ejv.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    $n = count($l);\n    if\
    \ ($n % 2) {\n        return $l[($n - 1) / 2];\n    }\n    $m = $l[($n - 1) /\
    \ 2];\n    for ($i = 1; $i < $n; $i++) {\n        if ($l[$i] >= $m) {\n      \
    \      $m = $l[$i];\n        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7fxw_dz.php:27\n\
    Stack trace:\n#0 /tmp/tmpq7fxw_dz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpq7fxw_dz.php\
    \ on line 27\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  $m = $l[count($l) / 2];\n  foreach ($l as $n) {\n    if ($n\
    \ < $m) {\n      $m = $n;\n    }\n  }\n  return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvm_b4gzf.php:25\n\
    Stack trace:\n#0 /tmp/tmpvm_b4gzf.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvm_b4gzf.php\
    \ on line 25\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    sort($l);\n    $n = count($l);\n\
    \    if ($n % 2 == 0) {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n\
    \ - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n}\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg99jecbq.php:21\n\
    Stack trace:\n#0 /tmp/tmpg99jecbq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg99jecbq.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheeo8pcf.php:18\n\
    Stack trace:\n#0 /tmp/tmpheeo8pcf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpheeo8pcf.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n + 1) / 2];\n  } else {\n    return ($l[($n - 1) / 2] - $l[$n\
    \ / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ubt_ar6.php:22\n\
    Stack trace:\n#0 /tmp/tmp3ubt_ar6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3ubt_ar6.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_values($l);\n  sort($l);\n  return $l[count($l)\
    \ / 2 - 1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeizduyxl.php:18\n\
    Stack trace:\n#0 /tmp/tmpeizduyxl.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpeizduyxl.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9ry3vf.php:17\n\
    Stack trace:\n#0 /tmp/tmpvv9ry3vf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvv9ry3vf.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw63y7cp7.php:23\n\
    Stack trace:\n#0 /tmp/tmpw63y7cp7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw63y7cp7.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp98dffobx.php:21\n\
    Stack trace:\n#0 /tmp/tmp98dffobx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp98dffobx.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[(count($l) / 2)];\n  }\n  else {\n    return ($l[($n - 1) / 2]\
    \ + $l[($n - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhlp_s6t.php:23\n\
    Stack trace:\n#0 /tmp/tmpqhlp_s6t.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqhlp_s6t.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjaiow54t.php:21\n\
    Stack trace:\n#0 /tmp/tmpjaiow54t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjaiow54t.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[(count($l) / 2)];\n  }\n  else {\n    return ($l[($n - 1) / 2 + 1] + $l[($n\
    \ - 1) / 2];\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4qsm4z86.php on line 14

    '
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  return ($l[($n - 1) / 2] + $l[($n - 2) /\
    \ 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvml4cwx.php:21\n\
    Stack trace:\n#0 /tmp/tmpxvml4cwx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxvml4cwx.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = sort($l);\n  return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpfnmjxyul.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfnmjxyul.php:17\nStack trace:\n#0 /tmp/tmpfnmjxyul.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfnmjxyul.php on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 === 0) {\n        return\
    \ $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) /\
    \ 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiyyvn9kc.php:20\n\
    Stack trace:\n#0 /tmp/tmpiyyvn9kc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpiyyvn9kc.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9ry3vf.php:17\n\
    Stack trace:\n#0 /tmp/tmpvv9ry3vf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvv9ry3vf.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 == 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph79blg0r.php:21\n\
    Stack trace:\n#0 /tmp/tmph79blg0r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph79blg0r.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr22pgv2.php:17\n\
    Stack trace:\n#0 /tmp/tmpmr22pgv2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmr22pgv2.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69yuifzm.php:21\n\
    Stack trace:\n#0 /tmp/tmp69yuifzm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp69yuifzm.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ - 1) / 2] + ($l[($n - 1) / 2 + 1] + $l[($n - 1) / 2 - 1]) / 2;\n  } else {\n\
    \    return $l[($n - 1) / 2] + $l[($n - 1) / 2 - 1];\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpakdj85oy.php:21\n\
    Stack trace:\n#0 /tmp/tmpakdj85oy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpakdj85oy.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[(count($l) / 2) - 1];\n  }\n  return ($l[($n - 1) / 2] - $l[($n - 1) / 2])\
    \ / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ek8vsku.php:21\n\
    Stack trace:\n#0 /tmp/tmp0ek8vsku.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0ek8vsku.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  sort($l);\n  return $l[count($l) / 2];\n}\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work when you have negative numbers. Try median(array(3,\
    \ 1, 2, 4, -5, 5))\n<|/ c |>\n<| c |>\nI believe this fails when the array has\
    \ only 1 element. Try median(array(1))\n<|/ c |>\n<| c |>\nI believe this fails\
    \ when the array has only 1 element. Try median(array(1))\n<|/ c |>\n<| c |>\n\
    This fails when the array has only 1 element. Try median(array(1))\n<|/ c |>\n\
    <| c |>\nThis fails when the array has only 1 element. Try median(array(1))\n\
    <|/ c |>\n<| a tags=php,median |>\n<code>\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9_fd1xh1.php on line 14

    '
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_w0ysl8.php:19\n\
    Stack trace:\n#0 /tmp/tmpk_w0ysl8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk_w0ysl8.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr22pgv2.php:17\n\
    Stack trace:\n#0 /tmp/tmpmr22pgv2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmr22pgv2.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpombdzwlt.php:24\n\
    Stack trace:\n#0 /tmp/tmpombdzwlt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpombdzwlt.php\
    \ on line 24\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 -\
    \ 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9br9k7e.php:22\n\
    Stack trace:\n#0 /tmp/tmpy9br9k7e.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpy9br9k7e.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n\
    \        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp563xj3xx.php:22\n\
    Stack trace:\n#0 /tmp/tmp563xj3xx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp563xj3xx.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_values($l);\n  sort($l);\n  return $l[count($l)\
    \ / 2 - 1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeizduyxl.php:18\n\
    Stack trace:\n#0 /tmp/tmpeizduyxl.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpeizduyxl.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n\
    \        return $l[(count($l) / 2) - 1];\n    }\n    return ($l[($n - 1) / 2]\
    \ - $l[$n / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjncrcewc.php:21\n\
    Stack trace:\n#0 /tmp/tmpjncrcewc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjncrcewc.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2] + ($l[($n - 1) / 2 + 1] / 2);\n  }\n  else {\n  \
    \  return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnd6swa9w.php:23\n\
    Stack trace:\n#0 /tmp/tmpnd6swa9w.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnd6swa9w.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n < 1) {\n    return NULL;\n\
    \  }\n  $l = array_reverse($l);\n  $m = $l[0];\n  for ($i = 1; $i < $n; ++$i)\
    \ {\n    if ($l[$i] < $m) {\n      $m = $l[$i];\n    }\n  }\n  return $m;\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1iaio78j.php:27\n\
    Stack trace:\n#0 /tmp/tmp1iaio78j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1iaio78j.php\
    \ on line 27\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) /\
    \ 2] - $l[($n - 2) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkgun6hik.php on line 14

    '
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_reverse($l);\n  sort($l);\n  return $l[count($l)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr55d0l1.php:19\n\
    Stack trace:\n#0 /tmp/tmpwr55d0l1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwr55d0l1.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n  } else {\n    return\
    \ $l[($n - 1) / 2];\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp63v0zjij.php:22\n\
    Stack trace:\n#0 /tmp/tmp63v0zjij.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp63v0zjij.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1uld9kqn.php:18\n\
    Stack trace:\n#0 /tmp/tmp1uld9kqn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1uld9kqn.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_values($l);\n  $n = count($l);\n  if ($n %\
    \ 2 == 0) {\n    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n -\
    \ 1) / 2] + $l[($n - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxezqlgrj.php:23\n\
    Stack trace:\n#0 /tmp/tmpxezqlgrj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxezqlgrj.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprt6j18a5.php:22\n\
    Stack trace:\n#0 /tmp/tmprt6j18a5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprt6j18a5.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    sort($l);\n    return $l[count($l)\
    \ / 2 - 1];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpng7c454m.php:17\n\
    Stack trace:\n#0 /tmp/tmpng7c454m.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpng7c454m.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw63y7cp7.php:23\n\
    Stack trace:\n#0 /tmp/tmpw63y7cp7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw63y7cp7.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        $sorted = $l;\n\
    \    } else {\n        $sorted = array_reverse($l);\n    }\n    sort($sorted);\n\
    \    return $sorted[count($sorted) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4tda107.php:22\n\
    Stack trace:\n#0 /tmp/tmpb4tda107.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpb4tda107.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9ry3vf.php:17\n\
    Stack trace:\n#0 /tmp/tmpvv9ry3vf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvv9ry3vf.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n    } else {\n\
    \        return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5038uh0t.php:21\n\
    Stack trace:\n#0 /tmp/tmp5038uh0t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5038uh0t.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ - 1) / 2] + $l[($n - 2) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] +\
    \ $l[($n - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzi8f08sb.php:22\n\
    Stack trace:\n#0 /tmp/tmpzi8f08sb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzi8f08sb.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1)\
    \ / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfduh1du_.php:23\n\
    Stack trace:\n#0 /tmp/tmpfduh1du_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfduh1du_.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n\
    \ - 1) / 2]; // median(array(3, 1, 2, 4, 5))\n  }\n  else {\n    return ($l[($n\
    \ - 1) / 2] + $l[($n - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzc9d92sm.php:22\n\
    Stack trace:\n#0 /tmp/tmpzc9d92sm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzc9d92sm.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  } else {\n    return\
    \ $l[($n - 1) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1o36fzw.php:21\n\
    Stack trace:\n#0 /tmp/tmpf1o36fzw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpf1o36fzw.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n\
    \        return null;\n    }\n    $n = count($l);\n    if ($n % 2 == 0) {\n  \
    \      return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2.0;\n    }\n    return\
    \ $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfr9u95ci.php:24\n\
    Stack trace:\n#0 /tmp/tmpfr9u95ci.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfr9u95ci.php\
    \ on line 24\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9ry3vf.php:17\n\
    Stack trace:\n#0 /tmp/tmpvv9ry3vf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvv9ry3vf.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7o0mp5y.php:22\n\
    Stack trace:\n#0 /tmp/tmpp7o0mp5y.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpp7o0mp5y.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[(count($l) / 2)];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n -\
    \ 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph929_mg7.php:24\n\
    Stack trace:\n#0 /tmp/tmph929_mg7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph929_mg7.php\
    \ on line 24\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjaiow54t.php:21\n\
    Stack trace:\n#0 /tmp/tmpjaiow54t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjaiow54t.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsr4vcvd.php:21\n\
    Stack trace:\n#0 /tmp/tmpvsr4vcvd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvsr4vcvd.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheeo8pcf.php:18\n\
    Stack trace:\n#0 /tmp/tmpheeo8pcf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpheeo8pcf.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    sort($l);\n    return $l[count($l)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg8qulka5.php:19\n\
    Stack trace:\n#0 /tmp/tmpg8qulka5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpg8qulka5.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[count($l)\
    \ / 2 - 1];\n    }\n    $m = $l[count($l) / 2];\n    foreach ($l as $n) {\n  \
    \      if ($n < $m) {\n            $m = $n;\n        }\n    }\n    return $m;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9pz0p8uh.php:25\n\
    Stack trace:\n#0 /tmp/tmp9pz0p8uh.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9pz0p8uh.php\
    \ on line 25\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return ($l[$n-1] + $l[$n/2]) / 2;\n  } else {\n    return $l[$n/2];\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplt6asufs.php:23\n\
    Stack trace:\n#0 /tmp/tmplt6asufs.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplt6asufs.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16mzq0b1.php:20\n\
    Stack trace:\n#0 /tmp/tmp16mzq0b1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp16mzq0b1.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2) / 2];\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0zukmi4_.php on line 14

    '
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9ry3vf.php:17\n\
    Stack trace:\n#0 /tmp/tmpvv9ry3vf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvv9ry3vf.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ $l[($n - 1) / 2];\n    }\n    else {\n        return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu4_w15nz.php:22\n\
    Stack trace:\n#0 /tmp/tmpu4_w15nz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu4_w15nz.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb3ocpfi.php:22\n\
    Stack trace:\n#0 /tmp/tmpxb3ocpfi.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxb3ocpfi.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_values($l);\n  return $l[count($l)/2];\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzuye7r__.php:17\n\
    Stack trace:\n#0 /tmp/tmpzuye7r__.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzuye7r__.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    return $l[count($l)/2];\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzf0dsxyk.php:16\n\
    Stack trace:\n#0 /tmp/tmpzf0dsxyk.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzf0dsxyk.php\
    \ on line 16\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n < 1) {\n    return NULL;\n\
    \  }\n  sort($l);\n  $l = array_slice($l, 0, $n / 2);\n  $m = $l[count($l) / 2\
    \ - 1];\n  return $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpab85k1nz.php:23\n\
    Stack trace:\n#0 /tmp/tmpab85k1nz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpab85k1nz.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_filter($l);\n    $l = array_values($l);\n\
    \    $n = count($l);\n    if ($n % 2) {\n        return $l[($n - 1) / 2];\n  \
    \  }\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuenq74ic.php:22\n\
    Stack trace:\n#0 /tmp/tmpuenq74ic.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuenq74ic.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[(count($l) / 2)];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n -\
    \ 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph929_mg7.php:24\n\
    Stack trace:\n#0 /tmp/tmph929_mg7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph929_mg7.php\
    \ on line 24\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_values($l);\n  sort($l);\n  return $l[count($l)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqqs5c_m.php:19\n\
    Stack trace:\n#0 /tmp/tmpjqqs5c_m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjqqs5c_m.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprt6j18a5.php:22\n\
    Stack trace:\n#0 /tmp/tmprt6j18a5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprt6j18a5.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr22pgv2.php:17\n\
    Stack trace:\n#0 /tmp/tmpmr22pgv2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmr22pgv2.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdorlg336.php:22\n\
    Stack trace:\n#0 /tmp/tmpdorlg336.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpdorlg336.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvth88rng.php:22\n\
    Stack trace:\n#0 /tmp/tmpvth88rng.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvth88rng.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsr4vcvd.php:21\n\
    Stack trace:\n#0 /tmp/tmpvsr4vcvd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvsr4vcvd.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[count($l)\
    \ / 2 - 1];\n    }\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctw05754.php:19\n\
    Stack trace:\n#0 /tmp/tmpctw05754.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpctw05754.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjaiow54t.php:21\n\
    Stack trace:\n#0 /tmp/tmpjaiow54t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjaiow54t.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_w0ysl8.php:19\n\
    Stack trace:\n#0 /tmp/tmpk_w0ysl8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk_w0ysl8.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsr4vcvd.php:21\n\
    Stack trace:\n#0 /tmp/tmpvsr4vcvd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvsr4vcvd.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 == 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqi0dfc56.php:19\n\
    Stack trace:\n#0 /tmp/tmpqi0dfc56.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqi0dfc56.php\
    \ on line 19\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2 == 0)\
    \ {\n    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2]\
    \ + $l[($n - 1) / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n   \
    \ return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp6uwzr9cz.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp6uwzr9cz.php:23\nStack trace:\n#0 /tmp/tmp6uwzr9cz.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6uwzr9cz.php on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphu5zwlgi.php:17\n\
    Stack trace:\n#0 /tmp/tmphu5zwlgi.php(23): test()\n#1 {main}\n  thrown in /tmp/tmphu5zwlgi.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheeo8pcf.php:18\n\
    Stack trace:\n#0 /tmp/tmpheeo8pcf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpheeo8pcf.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphu5zwlgi.php:17\n\
    Stack trace:\n#0 /tmp/tmphu5zwlgi.php(23): test()\n#1 {main}\n  thrown in /tmp/tmphu5zwlgi.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[count($l)\
    \ / 2 - 1];\n    }\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctw05754.php:19\n\
    Stack trace:\n#0 /tmp/tmpctw05754.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpctw05754.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  $m = $l[count($l) / 2];\n  foreach ($l as $n) {\n    if ($n\
    \ < $m) {\n      $m = $n;\n    }\n  }\n  return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvm_b4gzf.php:25\n\
    Stack trace:\n#0 /tmp/tmpvm_b4gzf.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvm_b4gzf.php\
    \ on line 25\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ $l[($n + 1) / 2];\n    }\n    else {\n        return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqgu88m0e.php:22\n\
    Stack trace:\n#0 /tmp/tmpqgu88m0e.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqgu88m0e.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    sort($l);\n    return $l[count($l)\
    \ / 2 - 1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__7n6pms.php:18\n\
    Stack trace:\n#0 /tmp/tmp__7n6pms.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp__7n6pms.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_filter($l);\n    $n = count($l);\n    if\
    \ ($n % 2) {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1)\
    \ / 2] + $l[($n - 2) / 2]) / 2;\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2fdpfaz.php:20\n\
    Stack trace:\n#0 /tmp/tmpj2fdpfaz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj2fdpfaz.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2) {\n        return\
    \ $l[(count($l) / 2) - 1];\n    }\n    $m = $l[($n - 1) / 2];\n    $l[$n - 1]\
    \ = $m;\n    $l[$n - 2] = $m;\n    return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_zj57x_.php:23\n\
    Stack trace:\n#0 /tmp/tmp3_zj57x_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3_zj57x_.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n    }\n    return\
    \ $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8tekj6n.php:20\n\
    Stack trace:\n#0 /tmp/tmpk8tekj6n.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk8tekj6n.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_reverse($l);\n  $n = count($l);\n  if ($n\
    \ % 2 == 0) {\n    return $l[($n - 1) / 2] + $l[($n - 2) / 2];\n  }\n  else {\n\
    \    return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_yrsu4u.php:24\n\
    Stack trace:\n#0 /tmp/tmpz_yrsu4u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpz_yrsu4u.php\
    \ on line 24\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_reverse($l);\n    sort($l);\n    return\
    \ $l[count($l)/2];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevoeop0h.php:18\n\
    Stack trace:\n#0 /tmp/tmpevoeop0h.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpevoeop0h.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr22pgv2.php:17\n\
    Stack trace:\n#0 /tmp/tmpmr22pgv2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmr22pgv2.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_reverse($l);\n  $n = count($l);\n  if ($n\
    \ % 2) {\n    return $l[($n - 1) / 2];\n  }\n  else {\n    $m = $n / 2;\n    return\
    \ ($l[$m] + $l[$n - 1]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwnd6urck.php:23\n\
    Stack trace:\n#0 /tmp/tmpwnd6urck.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwnd6urck.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    $n = count($l);\n    if\
    \ ($n % 2 == 0) {\n        return ($l[($n + 1) / 2 - 1] + $l[($n - 1) / 2 + 1])\
    \ / 2;\n    }\n    return $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu35u3l7r.php:21\n\
    Stack trace:\n#0 /tmp/tmpu35u3l7r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpu35u3l7r.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 -\
    \ 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzypj3anx.php:22\n\
    Stack trace:\n#0 /tmp/tmpzypj3anx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzypj3anx.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_w0ysl8.php:19\n\
    Stack trace:\n#0 /tmp/tmpk_w0ysl8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk_w0ysl8.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  sort($l);\n  return $l[count($l) / 2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzu821bm6.php:21\n\
    Stack trace:\n#0 /tmp/tmpzu821bm6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzu821bm6.php\
    \ on line 21\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) return\
    \ null;\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ - 1) / 2];\n  } else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgoinkxb.php:24\n\
    Stack trace:\n#0 /tmp/tmpzgoinkxb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzgoinkxb.php\
    \ on line 24\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 2) / 2] + $l[($n - 1)\
    \ / 2) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjzl51htx.php on line 14

    '
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvth88rng.php:22\n\
    Stack trace:\n#0 /tmp/tmpvth88rng.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvth88rng.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) == 0) return null;\n  $sorted = array_reverse($l);\n\
    \  $n = count($sorted);\n  if ($n % 2 == 0) {\n    return $sorted[($n - 1) / 2]\
    \ + $sorted[($n - 1) / 2 - 1];\n  }\n  else {\n    return ($sorted[($n - 1) /\
    \ 2] + $sorted[($n - 1) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3seq8r3.php:24\n\
    Stack trace:\n#0 /tmp/tmpn3seq8r3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpn3seq8r3.php\
    \ on line 24\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n-1] + $l[$n/2]) / 2.0;\n    } else {\n        return\
    \ $l[$n/2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55uojyl2.php:23\n\
    Stack trace:\n#0 /tmp/tmp55uojyl2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp55uojyl2.php\
    \ on line 23\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr22pgv2.php:17\n\
    Stack trace:\n#0 /tmp/tmpmr22pgv2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmr22pgv2.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return ($l[($n\
    \ - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n  } else {\n    return $l[($n - 1) /\
    \ 2];\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwap154pz.php:20\n\
    Stack trace:\n#0 /tmp/tmpwap154pz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwap154pz.php\
    \ on line 20\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) return\
    \ null;\n    $sorted = array_values($l);\n    sort($sorted);\n    return $sorted[count($sorted)-1];\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3f3j4nv.php:19\n\
    Stack trace:\n#0 /tmp/tmpg3f3j4nv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg3f3j4nv.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt4x3jwc.php:18\n\
    Stack trace:\n#0 /tmp/tmpjt4x3jwc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjt4x3jwc.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n\
    \ - 1) / 2] + ($l[($n - 2) / 2] * 0.5);\n  }\n  return $l[($n - 1) / 2];\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7f25mnn.php:20\n\
    Stack trace:\n#0 /tmp/tmps7f25mnn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmps7f25mnn.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[(count($l)\
    \ / 2) - 1];\n  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2\
    \ - 1]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsrnm3li.php:20\n\
    Stack trace:\n#0 /tmp/tmppsrnm3li.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppsrnm3li.php\
    \ on line 20\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2) {\n    return $l[($n -\
    \ 1) / 2];\n  }\n  else {\n    $m = $n / 2;\n    $left = $l[$m];\n    $right =\
    \ $l[$n - 1];\n    return ($left + $right) / 2;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa66_opek.php:25\n\
    Stack trace:\n#0 /tmp/tmpa66_opek.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa66_opek.php\
    \ on line 25\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr22pgv2.php:17\n\
    Stack trace:\n#0 /tmp/tmpmr22pgv2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmr22pgv2.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheeo8pcf.php:18\n\
    Stack trace:\n#0 /tmp/tmpheeo8pcf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpheeo8pcf.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvth88rng.php:22\n\
    Stack trace:\n#0 /tmp/tmpvth88rng.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvth88rng.php\
    \ on line 22\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[count($l)\
    \ / 2 - 1];\n    }\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctw05754.php:19\n\
    Stack trace:\n#0 /tmp/tmpctw05754.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpctw05754.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv9ry3vf.php:17\n\
    Stack trace:\n#0 /tmp/tmpvv9ry3vf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvv9ry3vf.php\
    \ on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxcf220j.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxcf220j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnxcf220j.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    $n = count($l);\n    if\
    \ ($n % 2 === 0) {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n\
    \ - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9o38u1io.php:21\n\
    Stack trace:\n#0 /tmp/tmp9o38u1io.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9o38u1io.php\
    \ on line 21\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[count($l)\
    \ / 2 - 1];\n    }\n    $l = array_reverse($l);\n    return $l[count($l) / 2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0p02xjk.php:20\n\
    Stack trace:\n#0 /tmp/tmpq0p02xjk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpq0p02xjk.php\
    \ on line 20\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheeo8pcf.php:18\n\
    Stack trace:\n#0 /tmp/tmpheeo8pcf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpheeo8pcf.php\
    \ on line 18\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_values($l);\n  sort($l);\n  return $l[count($l)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqqs5c_m.php:19\n\
    Stack trace:\n#0 /tmp/tmpjqqs5c_m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjqqs5c_m.php\
    \ on line 19\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) / 2] - $l[($n\
    \ - 1) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92_kdg8j.php:23\n\
    Stack trace:\n#0 /tmp/tmp92_kdg8j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp92_kdg8j.php\
    \ on line 23\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = sort($l);\n  return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpfnmjxyul.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfnmjxyul.php:17\nStack trace:\n#0 /tmp/tmpfnmjxyul.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfnmjxyul.php on line 17\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1)\
    \ / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9szvv3m.php:24\n\
    Stack trace:\n#0 /tmp/tmp_9szvv3m.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_9szvv3m.php\
    \ on line 24\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    $n = count($l);\n    if\
    \ ($n % 2 == 0) {\n        return $l[($n - 1) / 2] + $l[($n - 2) / 2];\n    }\n\
    \    return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk5iehvq.php:21\n\
    Stack trace:\n#0 /tmp/tmpdk5iehvq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdk5iehvq.php\
    \ on line 21\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if\
    \ ($n % 2 == 0) {\n        return $l[($n - 1) / 2] + $l[($n - 2) / 2];\n    }\n\
    \    return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy194ggb.php:22\n\
    Stack trace:\n#0 /tmp/tmpuy194ggb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuy194ggb.php\
    \ on line 22\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw63y7cp7.php:23\n\
    Stack trace:\n#0 /tmp/tmpw63y7cp7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw63y7cp7.php\
    \ on line 23\n"
  timestamp: 1659729924
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_filter($l);\n  if (count($l) < 1) {\n    return\
    \ NULL;\n  }\n  $n = count($l);\n  if ($n % 2) {\n    return $l[($n - 1) / 2];\n\
    \  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n  }\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe2jgi_96.php:25\n\
    Stack trace:\n#0 /tmp/tmpe2jgi_96.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpe2jgi_96.php\
    \ on line 25\n"
  timestamp: 1659729925
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) /\
    \ 2 - 1];\n  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1])\
    \ / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5kfnl0in.php:20\n\
    Stack trace:\n#0 /tmp/tmp5kfnl0in.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5kfnl0in.php\
    \ on line 20\n"
  timestamp: 1659729924

name: HumanEval_9_rolling_max
language: php
prompt: "<?php\n// From a given array of integers, generate an array of rolling maximum\
  \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
  \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
  \ {\n"
tests: "function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
  \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1;\
    \ $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n  \
    \          $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n\
    \    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", "    $result\
    \ = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1;\
    \ $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n  \
    \          $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n\
    \    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n \
    \   return $result;\n}\n", "    $max = array();\n    $i = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max[$i]) {\n            $max[$i] = $number;\n\
    \        }\n        $i++;\n    }\n    return $max;\n}\n", "    $result = [];\n\
    \    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    $result[]\
    \ = $max_value;\n    for ($i = $max_index + 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    $result[]\
    \ = $max;\n    return $result;\n}\n", "    $result = [];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n    $result[] = $",
  "    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n", "    $result = [];\n    $rolling_max = null;\n    foreach ($numbers\
    \ as $number) {\n        if ($rolling_max === null) {\n            $rolling_max\
    \ = $number;\n        } else {\n            if ($rolling_max < $number) {\n  \
    \              $rolling_max = $number;\n            }\n        }\n    }\n    $result[]\
    \ = $rolling_max;\n    return $result;\n}\n", "    $result = [];\n    $max = null;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n        }\n        $result[] = $number;\n    }\n    return\
    \ $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return $max_value;\n}\n", "    $result = [];\n    $max_value\
    \ = array_shift($numbers);\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n        }\n        $result[]\
    \ = $max_value;\n    }\n    return $result;\n}\n", "    $result = array();\n \
    \   $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    $result[]\
    \ = $max_value;\n    for ($i = $max_index + 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    $result[]\
    \ = $max_value;\n    $max_index++;\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        if ($numbers[$i] == $max_index) {\n            $result[] = $max_value;\n\
    \            $max_index++;\n        } else {\n            $result[] = $numbers[$i];\n\
    \        }\n    }\n    return $result;\n}\n", "    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    return $max;\n}\n", "    $max_value = $numbers[0];\n  \
    \  $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n    \
    \        $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max = null;\n    $max_index = null;\n    $index\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n \
    \           $max = $number;\n            $max_index = $index;\n        }\n   \
    \     $index++;\n    }\n    return array($max, $max_index);\n}\n", "    $result\
    \ = [];\n    $max = null;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $rollingMax = null;\n\
    \    foreach ($numbers as $number) {\n        if ($rollingMax === null) {\n  \
    \          $rollingMax = $number;\n        } else {\n            $rollingMax =\
    \ max($rollingMax, $number);\n        }\n    }\n    $result[] = $rollingMax;\n\
    \    return $result;\n}\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max_value = $number;\n            $max_index = $i;\n        }\n  \
    \      $i++;\n    }\n    return array_slice($numbers, 0, $max_index);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_39_prime_fib
language: php
prompt: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and it's\
  \ also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
  // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib($n)\
  \ {\n"
tests: "function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n \
  \   if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
  \ !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    if ($n < 2) {\n        return 1;\n    }\n    if ($n == 2) {\n \
    \       return 2;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if\
    \ ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n - 2);\n   \
    \ }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}", "    if ($n < 2) {\n\
    \        return 1;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if\
    \ ($n == 3) {\n        return 5;\n    }\n    $a = prime_fib($n - 1);\n    $b =\
    \ prime_fib($n - 2);\n    return $a + $b;\n}", "    if ($n < 2) {\n        return\
    \ $n;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n\
    \        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n    }\n   \
    \ if ($n == 6) {\n        return 89;\n    }\n    if ($n == 7) {\n        return\
    \ 139;\n    }\n    if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9)\
    \ {\n        return 341;\n    }\n    if ($n == 10) {\n        return 551;\n  \
    \  }\n    if ($n == 11) {\n        return 891;\n    }\n    if ($n == 12) {\n \
    \       return 1357;\n    }\n    if ($n == 13) {\n        return 2333;\n    }\n\
    \    if ($n == 14) {\n        return 3417;\n    }\n    if ($n == 15) {\n     \
    \   return 5517;\n    }\n    if ($n == 16) {\n        return 8917;\n    }\n  \
    \  if ($n == 17) {\n        return 13579;\n    }\n    if ($n == 18) {\n      \
    \  return 23339;\n    }\n    if ($n == 19) {\n        return 34199;\n    }\n \
    \   if ($n == 20) {\n        return 55199;\n    }\n    if ($n == 21) {\n     \
    \   return 89199;\n    }\n    if ($n == 22) {\n        return 135793;\n    }\n\
    \    if ($n == 23) {\n        return 233389;\n    }\n    if ($n == 24) {\n   \
    \     return 341971;\n    }\n    if ($n == 25) {\n        return 551971;\n   \
    \ }\n    if ($n == 26) {\n        return 891971;\n    }\n    if ($n == 27) {\n\
    \        return 135795;\n    }\n    if ($n == 28) {\n        return 2333897;\n\
    \    }\n    if ($n == 29) {\n        return 3419713;\n    }\n    if ($n == 30)\
    \ {\n        return 5519713;\n    }\n    if ($n == 31) {\n        return 8919713;\n\
    \    }\n    if ($n == 32) {\n        return 135797;\n    }\n    if ($n == 33)\
    \ {\n        return 23338987;\n    }\n    if ($n == 34) {\n        return 34197171;\n\
    \    }\n    if ($n == 35) {\n        return 55197171;\n    }\n    if ($n == 36)\
    \ {\n        return 89197171;\n    }\n    if ($n == 37) {\n        return 135793;\n\
    \    }\n    if ($n == 38) {\n        return 233389873;\n    }\n    if ($n == 39)\
    \ {\n        return 341971713;\n    }\n    if ($n == 40) {\n        return 551971713;\n\
    \    }\n    if ($n == 41) {\n        return 891971713;\n    }\n    if ($n == 42",
  "    if ($n <= 1) return $n;\n    return prime_fib(floor($n / 2)) + prime_fib(floor($n\
    \ / 3)) + ($n % 2 ? 1 : 0);\n}\n", "    if ($n < 2) {\n        return 1;\n   \
    \ }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n      \
    \  return 5;\n    }\n    if ($n % 2 == 0) {\n        return prime_fib(3 * $n)\
    \ + 1;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n}\n", "\tif ($n < 2) {\n\
    \t\treturn $n;\n\t}\n\treturn prime_fib(2 * $n) + prime_fib(2 * $n - 1);\n}\n",
  "    if ($n < 2) {\n        return $n;\n    }\n    $a = $b = 1;\n    $c = 1;\n \
    \   while ($n < $c) {\n        $a = ($a + $c) % $n;\n        $b = ($b + $a) %\
    \ $n;\n        $c = ($c + $b) % $n;\n    }\n    return $c;\n}\n", "    if ($n\
    \ < 2) {\n        return 1;\n    }\n    if ($n == 2) {\n        return 2;\n  \
    \  }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 5) {\n     \
    \   return 13;\n    }\n    if ($n == 6) {\n        return 89;\n    }\n    if ($n\
    \ == 7) {\n        return 139;\n    }\n    if ($n == 8) {\n        return 233;\n\
    \    }\n    if ($n == 9) {\n        return 341;\n    }\n    if ($n == 10) {\n\
    \        return 551;\n    }\n    if ($n == 11) {\n        return 891;\n    }\n\
    \    if ($n == 12) {\n        return 1357;\n    }\n    if ($n == 13) {\n     \
    \   return 2333;\n    }\n    if ($n == 14) {\n        return 3417;\n    }\n  \
    \  if ($n == 15) {\n        return 5517;\n    }\n    if ($n == 16) {\n       \
    \ return 8917;\n    }\n    if ($n == 17) {\n        return 13579;\n    }\n   \
    \ if ($n == 18) {\n        return 23339;\n    }\n    if ($n == 19) {\n       \
    \ return 34199;\n    }\n    if ($n == 20) {\n        return 55199;\n    }\n  \
    \  if ($n == 21) {\n        return 89199;\n    }\n    if ($n == 22) {\n      \
    \  return 135793;\n    }\n    if ($n == 23) {\n        return 233389;\n    }\n\
    \    if ($n == 24) {\n        return 341971;\n    }\n    if ($n == 25) {\n   \
    \     return 551971;\n    }\n    if ($n == 26) {\n        return 891971;\n   \
    \ }\n    if ($n == 27) {\n        return 135795;\n    }\n    if ($n == 28) {\n\
    \        return 2333897;\n    }\n    if ($n == 29) {\n        return 3419713;\n\
    \    }\n    if ($n == 30) {\n        return 5519713;\n    }\n    if ($n == 31)\
    \ {\n        return 8919713;\n    }\n    if ($n == 32) {\n        return 135797;\n\
    \    }\n    if ($n == 33) {\n        return 23338977;\n    }\n    if ($n == 34)\
    \ {\n        return 34197173;\n    }\n    if ($n == 35) {\n        return 55197173;\n\
    \    }\n    if ($n == 36) {\n        return 89197173;\n    }\n    if ($n == 37)\
    \ {\n        return 135797;\n    }\n    if ($n == 38) {\n        return 233389777;\n\
    \    }\n    if ($n == 39) {\n        return 341971737;\n    }\n    if ($n == 40)\
    \ {\n        return 551971737;\n    }\n    if ($n == 41) {\n        return 891971737;\n\
    \    }\n    if ($", "    $a = 1;\n    $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n   \
    \     $n--;\n    }\n    return $c;\n}\n", "    if ($n < 2) {\n        return $n;\n\
    \    }\n    $a = $b = 1;\n    while ($n < $a) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n        $n++;\n    }\n    return $b;\n}\n", " \
    \   if ($n < 2) {\n        return 1;\n    }\n    if ($n == 2) {\n        return\
    \ 2;\n    }\n    if ($n == 3) {\n        return 5;\n    }\n    if ($n == 5) {\n\
    \        return 13;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n\
    \ - 2);\n    return $a + $b;\n}\n", "    if ($n <= 2) {\n        return $n;\n\
    \    }\n    $a = $b = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $a = $b;\n\
    \        $b = $a + $b;\n    }\n    return $b;\n}\n", "    if ($n < 2) {\n    \
    \    return 1;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n\
    \ == 3) {\n        return 5;\n    }\n    if ($n == 5) {\n        return 13;\n\
    \    }\n    if ($n == 6) {\n        return 89;\n    }\n    if ($n == 7) {\n  \
    \      return 139;\n    }\n    if ($n == 8) {\n        return 233;\n    }\n  \
    \  if ($n == 9) {\n        return 341;\n    }\n    if ($n == 10) {\n        return\
    \ 551;\n    }\n    if ($n == 11) {\n        return 891;\n    }\n    if ($n ==\
    \ 12) {\n        return 1357;\n    }\n    if ($n == 13) {\n        return 2333;\n\
    \    }\n    if ($n == 14) {\n        return 3417;\n    }\n    if ($n == 15) {\n\
    \        return 5517;\n    }\n    if ($n == 16) {\n        return 8917;\n    }\n\
    \    if ($n == 17) {\n        return 13579;\n    }\n    if ($n == 18) {\n    \
    \    return 23339;\n    }\n    if ($n == 19) {\n        return 34199;\n    }\n\
    \    if ($n == 20) {\n        return 55199;\n    }\n    if ($n == 21) {\n    \
    \    return 89199;\n    }\n    if ($n == 22) {\n        return 135793;\n    }\n\
    \    if ($n == 23) {\n        return 233389;\n    }\n    if ($n == 24) {\n   \
    \     return 341971;\n    }\n    if ($n == 25) {\n        return 551971;\n   \
    \ }\n    if ($n == 26) {\n        return 891971;\n    }\n    if ($n == 27) {\n\
    \        return 135795;\n    }\n    if ($n == 28) {\n        return 2333897;\n\
    \    }\n    if ($n == 29) {\n        return 3419713;\n    }\n    if ($n == 30)\
    \ {\n        return 5519713;\n    }\n    if ($n == 31) {\n        return 8919713;\n\
    \    }\n    if ($n == 32) {\n        return 135797;\n    }\n    if ($n == 33)\
    \ {\n        return 23338977;\n    }\n    if ($n == 34) {\n        return 34197173;\n\
    \    }\n    if ($n == 35) {\n        return 55197173;\n    }\n    if ($n == 36)\
    \ {\n        return 89197173;\n    }\n    if ($n == 37) {\n        return 135793;\n\
    \    }\n    if ($n == 38) {\n        return 23338973;\n    }\n    if ($n == 39)\
    \ {\n        return 34197177;\n    }\n    if ($n == 40) {\n        return 55197177;\n\
    \    }\n    if ($n == 41) {\n        return 89197177;\n    }\n    if ($n == 42)\
    \ {", "    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $a = $a +\
    \ $b;\n        $b = $a - $b;\n    }\n    return $a;\n}\n", "    $fib = [0, 1];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $fib[] = $fib[$i - 1] + $fib[$i -\
    \ 2];\n    }\n    return $fib[$n];\n}\n", "    $a = $b = 1;\n    $c = 1;\n   \
    \ for($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n    \
    \    $b = $c;\n    }\n    return $c;\n}\n", "    $a = $b = 1;\n    $c = $n;\n\
    \    while ($c > 1) {\n        $a = $b;\n        $b = $a + $c;\n        $c = $c\
    \ - 1;\n    }\n    return $b;\n}", "    if ($n <= 1) return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n", "    $fib = [0, 1];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    }\n    return $fib[$n];\n\
    }\n", "    $a = 1;\n    $b = 1;\n    $c = 1;\n    $n--;\n    while ($n >= 0) {\n\
    \        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n        $n--;\n  \
    \  }\n    return $c;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

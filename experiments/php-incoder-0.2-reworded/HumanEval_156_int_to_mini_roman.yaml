name: HumanEval_156_int_to_mini_roman
language: php
prompt: "<?php\n// Given a positive integer, obtain its roman numeral equivalent as\
  \ a string,\n// and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n\
  // Examples:\n// >>> int_to_mini_roman(19)\n// \"xix\"\n// >>> int_to_mini_roman(152)\n\
  // \"clii\"\n// >>> int_to_mini_roman(426)\n// \"cdxxvi\"\nfunction int_to_mini_roman($number)\
  \ {\n"
tests: "function candidate(...$args) {\n    return int_to_mini_roman(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(19) !== \"xix\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(152) !== \"clii\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(251) !== \"ccli\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(426) !== \"cdxxvi\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(500) !== \"d\") { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(1) !== \"i\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(4) !== \"iv\") { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(43) !== \"xliii\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(90) !== \"xc\") { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(94) !== \"xciv\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(532) !== \"dxxxii\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(900) !== \"cm\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(994) !== \"cmxciv\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1000) !== \"m\") { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["  $roman = '';\n  $roman_numerals = array('M' => 1000, 'CM' => 900,\
    \ 'D' => 500, 'CD' => 400,\n    'C' => 100, 'XC' => 90, 'L' => 50, 'XL' => 40,\
    \ 'X' => 10, 'IX' => 9,\n    'V' => 5, 'IV' => 4, 'I' => 1);\n  while ($number\
    \ >= 1000) {\n    $roman .= $roman_numerals[floor($number / 1000)];\n    $number\
    \ %= 1000;\n  }\n  $roman .= $roman_numerals[$number];\n  return strtolower($roman);\n\
    }\n", "  $roman = '';\n  for ($i = 1; $i <= 1000; $i++) {\n    $roman .= roman_numeral($number,\
    \ $i);\n  }\n  return strtolower($roman);\n}\n", "  $roman = '';\n  for ($i =\
    \ 1; $i < $number; $i++) {\n    $roman .= roman($i);\n  }\n  return strtolower($roman);\n\
    }\n", "  $roman = '';\n  $roman_numerals = array(\n    1 => 'i',\n    5 => 'v',\n\
    \    10 => 'x',\n    40 => 'c',\n    100 => 'l',\n    400 => 'd',\n    1000 =>\
    \ 'm',\n    10000 => 'c',\n    100000 => 'l',\n    1000000 => 'x',\n    10000000\
    \ => 'x',\n    100000000 => 'l',\n    1000000000 => 'd',\n    10000000000 => 'c',\n\
    \    100000000000 => 'c',\n    1000000000000 => 'l',\n    10000000000000 => 'd',\n\
    \    100000000000000 => 'c',\n    1000000000000000 => 'c',\n    10000000000000000\
    \ => 'l',\n    100000000000000000 => 'd',\n    1000000000000000000 => 'm',\n \
    \   10000000000000000000 => 'm',\n    100000000000000000000 => 'm',\n    1000000000000000000000\
    \ => 'm',\n    10000000000000000000000 => 'm',\n    100000000000000000000000 =>\
    \ 'm',\n    1000000000000000000000000 => 'm',\n    10000000000000000000000000\
    \ => 'm',\n    100000000000000000000000000 => 'm',\n    1000000000000000000000000000\
    \ => 'm',\n    10000000000000000000000000000 => 'm',\n    100000000000000000000000000000\
    \ => 'm',\n    1000000000000000000000000000000 => 'm',\n    10000000000000000000000000000000\
    \ => 'm',\n    100000000000000000000000000000000 => 'm',\n    1000000000000000000000000000000000\
    \ => 'm',\n    10000000000000000000000000000000000 => 'm',\n    100000000000000000000000000000000000\
    \ => 'm',\n    1000000000000000000000000000000000000 => 'm',\n    10000000000000000000000000000000000000\
    \ => 'm',\n    100000000000000000000000000000000000000 => 'm',\n    1000000000000000000000000000000000000000\
    \ => 'm',\n    10000000000000000000000000000000000000000 => 'm',\n    100000000000000000000000000000000000000000\
    \ => 'm',\n    1000000000000000000000000000000000000000000 => 'm',\n    10000000000000000000000000000000000000000000\
    \ => 'm',\n    100000000000000000000000000000000000000000000 => 'm',\n    1000000000000000000000000000000000000000000000\
    \ => 'm',\n    10000000000000000000000000000000000000000000000 => 'm',\n    100000000000000000000000000000000000000000000000\
    \ => 'm',\n    1000000000000000000000000000000000000000000000000 => 'm',\n   \
    \ 10000000000000000000000000000000000000000000000000 => 'm',\n    100000000000000000000000000000000000000000000000000\
    \ => 'm',\n    1000000000000000000000000000000000000000000000000000 => 'm',\n\
    \    10000000000000000000000000000000000000000000000000000 => 'm',\n    100000000000000000000000000000000000000000000000000000\
    \ => 'm',\n    1000000000000000000000000000000000000000000000000000000 => 'm',\n\
    \    10000000000000000000000000000000000000000000000000000000 => 'm',\n    100000000000000000000000000000000000000000000000000000000\
    \ => 'm',\n    100", "  $roman = '';\n  for ($i = 1; $i <= 1000; $i++) {\n   \
    \ $roman .= roman_numeral($number, $i);\n  }\n  return strtolower($roman);\n}\n",
  "    $roman = '';\n    $num = $number;\n    $num -= $num % 10;\n    $num = $num\
    \ / 10;\n    while ($num > 0) {\n        $roman .= $num % 10;\n        $num =\
    \ $num / 10;\n    }\n    return $roman;\n}\n", "  $roman = '';\n  $num = $number;\n\
    \  while (true) {\n    $remainder = $num % 10;\n    $num = ($num - $remainder)\
    \ / 10;\n    $roman .= $remainder == 0 ? $num : $romans[$remainder];\n    if ($num\
    \ == 0) {\n      break;\n    }\n  }\n  return $roman;\n}\n", "  $roman = '';\n\
    \  for ($i = 1; $i <= 1000; $i++) {\n    $roman .= roman_numeral($number, $i);\n\
    \  }\n  return strtolower($roman);\n}\n", "  $roman = '';\n  for ($i = 1; $i <=\
    \ 1000; $i++) {\n    $roman .= roman($number);\n    $number = floor($number /\
    \ 10);\n  }\n  return strtolower($roman);\n}\n", "  $roman = '';\n  for ($i =\
    \ 0; $i < $number; $i++) {\n    $roman .= roman_numeral($i);\n  }\n  return strtolower($roman);\n\
    }\n", "    $roman = '';\n    $roman_numerals = array(\n        100  => 'M',\n\
    \        500  => 'D',\n        1000 => 'C',\n        2000 => 'L',\n        3000\
    \ => 'X',\n        4000 => 'V',\n        5000 => 'I',\n        6000 => 'X',\n\
    \        7000 => 'C',\n        8000 => 'L',\n        9000 => 'X',\n        10000\
    \ => 'C',\n        11000 => 'L',\n        12000 => 'X',\n        13000 => 'X',\n\
    \        14000 => 'X',\n        15000 => 'X',\n        16000 => 'X',\n       \
    \ 17000 => 'X',\n        18000 => 'X',\n        19000 => 'X',\n        20000 \
    \ => 'X',\n        21000 => 'L',\n        22000 => 'X',\n        23000 => 'X',\n\
    \        24000 => 'X',\n        25000 => 'C',\n        26000 => 'X',\n       \
    \ 27000 => 'X',\n        28000 => 'X',\n        29000 => 'X',\n        30000 =>\
    \ 'X',\n        31000 => 'L',\n        32000 => 'X',\n        33000 => 'X',\n\
    \        34000 => 'X',\n        35000 => 'X',\n        36000 => 'X',\n       \
    \ 37000 => 'X',\n        38000 => 'X',\n        39000 => 'X',\n        40000 =>\
    \ 'X',\n        41000 => 'L',\n        42000 => 'X',\n        43000 => 'X',\n\
    \        44000 => 'X',\n        45000 => 'X',\n        46000 => 'X',\n       \
    \ 47000 => 'X',\n        48000 => 'X',\n        49000 => 'X',\n        50000 =>\
    \ 'X',\n        51000 => 'L',\n        52000 => 'X',\n        53000 => 'X',\n\
    \        54000 => 'X',\n        55000 => 'X',\n        56000 => 'X',\n       \
    \ 57000 => 'X',\n        58000 => 'X',\n        59000 => 'X',\n        60000 =>\
    \ 'X',\n        61000 => 'L',\n        62000 => 'X',\n        63000 => 'X',\n\
    \        64000 => 'X',\n        65000 => 'X',\n        66000 => 'X',\n       \
    \ 67000 => 'X',\n        68000 => 'X',\n        69000 => 'X',\n        70000 =>\
    \ 'X',\n        71000 ", "    $roman = '';\n    $roman_numerals = array('', 'I',\
    \ 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII',\
    \ 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX');\n    $roman_numerals_length = count($roman_numerals);\n\
    \    $roman_numerals_length = min($roman_numerals_length, $number);\n    $roman_numerals_length\
    \ = max($roman_numerals_length, 1);\n    $roman_numerals_length = max($roman_numerals_length,\
    \ 1);\n    $roman_numerals_length = max($roman_numerals_length, 1);\n    $roman_numerals_length\
    \ = max($roman_numerals_length, 1);\n    $roman_numerals_length = max($roman_numerals_length,\
    \ 1);\n    $roman_numerals_length = max($roman_numerals_length, 1);\n    $roman_numerals_length\
    \ = max($roman_numerals_length, 1);\n    $roman_numerals_length = max($roman_numerals_length,\
    \ 1);\n    $roman_numerals_length = max($roman_numerals_length, 1);\n    $roman_numerals_length\
    \ = max($roman_numerals_length, 1);\n    $roman_numerals_length = max($roman_numerals_length,\
    \ 1);\n    $roman_numerals_length = max($roman_numerals_length, 1);\n    $roman_numerals_length\
    \ = max($roman_numerals_length, 1);\n    $roman_numerals_length = max($roman_numerals_length,\
    \ 1);\n    $roman_numerals_length = max($roman_numerals_length, 1);\n    $roman_numerals_length\
    \ = max($roman_numerals_length, 1);\n    $roman_numerals_length = max($roman_numerals_length,\
    \ 1);\n    $roman_numerals_length = max($roman_numerals_length, 1);\n    $roman_numerals_length\
    \ = max($roman_numerals_length, 1);\n    $roman_numerals_length = max($roman_numerals_length,\
    \ 1);\n    $roman_numerals_length = max($roman_numerals_length, 1);\n    $roman_numerals_length\
    \ = max($roman_numerals_length, 1);\n    $roman_numerals_length = max($roman_numerals_length,\
    \ 1);\n    $roman_numerals_length = max($roman_numerals_length, 1);\n    $roman_numerals_length\
    \ = max($roman_numer", "  $roman = '';\n  $num = $number;\n  while ($num > 0)\
    \ {\n    $remainder = $num % 10;\n    $roman .= $remainder == 0 ? $num : $remainder;\n\
    \    $num = ($num - $remainder) / 10;\n  }\n  return $roman;\n}\n", "  $roman\
    \ = '';\n  for ($i = 1; $i <= 1000; $i++) {\n    $roman .= roman_numeral($number);\n\
    \    $number = floor($number / 10);\n  }\n  return $roman;\n}\n", "  $roman =\
    \ '';\n  for ($i = 1; $i <= 1000; $i++) {\n    $roman .= roman($number);\n   \
    \ $number = floor($number / 10);\n  }\n  return strtolower($roman);\n}\n", " \
    \ $roman = '';\n  for ($i = 1; $i <= 1000; $i++) {\n    $roman .= roman($i);\n\
    \  }\n  return substr($roman, 0, $number);\n}\n", "  $roman = '';\n  $roman_numerals\
    \ = array('', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX');\n  while\
    \ ($number >= 1000) {\n    $roman .= $roman_numerals[$number % 100];\n    $number\
    \ /= 100;\n  }\n  $roman .= $roman_numerals[$number];\n  return strtolower($roman);\n\
    }\n", "  $roman = '';\n  for ($i = 0; $i < $number; $i++) {\n    $roman .= roman($i);\n\
    \  }\n  return strtolower($roman);\n}\n", "  $roman = '';\n  $roman_numerals =\
    \ array('M' => 1000, 'CM' => 900, 'D' => 500, 'CD' => 400,\n    'C' => 100, 'XC'\
    \ => 90, 'L' => 50, 'XL' => 40, 'X' => 10, 'IX' => 9,\n    'V' => 5, 'IV' => 4,\
    \ 'I' => 1);\n  while ($number >= 1000) {\n    $roman .= $roman_numerals[floor($number\
    \ / 1000)];\n    $number %= 1000;\n  }\n  $roman .= $roman_numerals[$number];\n\
    \  return strtolower($roman);\n}\n", "  $roman = '';\n  for ($i = 1; $i <= 1000;\
    \ $i++) {\n    $roman .= roman($number);\n    $number = floor($number / $i);\n\
    \  }\n  return $roman;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

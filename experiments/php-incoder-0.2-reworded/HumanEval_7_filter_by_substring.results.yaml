language: php
name: HumanEval_7_filter_by_substring
results:
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpy5e_j41b.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a dscore=5 |>\n<| c |>\nI like this solution, but I wanted to add that you can\
    \ also use array_filter with a closure. `array_filter($strings, function($string)\
    \ use ($substring) { return strpos($string, $substring) !== false; });`\n<|/ c\
    \ |>\n<| c |>\nI like this solution, but I wanted to add that you can also use\
    \ array_filter with a closure. `array_filter($strings, function($string) use ($substring)\
    \ { return strpos($string, $substring) !== false; });`\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Much more elegant than other solutions.\n<|/\
    \ c |>\n<| c |>\nI like this solution, but I wanted to add that you can also use\
    \ array_filter with a closure. `array_filter($strings, function($string) use ($substring)\
    \ { return strpos($string, $substring) !== false; });`\n<|/ c |>\n<| c |>\nI like\
    \ this solution, but I wanted to add that you can also use array_filter with a\
    \ closure. `array_filter($strings, function($string) use ($substring) { return\
    \ strpos($string, $substring) !== false; });`\n<|/ c |>\n<| a |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7omlpz5e.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have a string that contains\
    \ a substring that matches a substring in the array (ex. `array(\"abc\", \"bacd\"\
    , \"cde\", \"array\", \"abca\")`). You would need to use `strpos($string, $substring)\
    \ !== false` instead of `strpos($string, $substring) !== false`.\n<|/ c |>\n<|\
    \ c |>\nThanks for pointing that out. I've updated the answer to fix it.\n<|/\
    \ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\", \"abca\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if you have a string\
    \ that contains a substring that matches a substring in the array (ex. `array(\"\
    abc\", \"bacd\", \"cde\", \"array\", \"abca\")`). You would need to use `strpos($value,\
    \ $search) !== false` instead of `strpos($value, $search) !== false`.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\", \"abca\");\n\
    $search = \"a\";\n$result = array_filter($array, function($value) use ($search)\
    \ {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work if you have a string that contains a substring\
    \ that matches a substring in the array (ex. `array(\"abc\", \"bacd\", \"cde\"\
    , \"array\", \"abca\")`). You would need to use `strpos($value, $search) !== false`\
    \ instead of `strpos($value, $search) !== false`.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly.\n\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8w4pa39k.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| a |>\n<code>\n$array = array();\n\
    $array[] = array(\"name\" => \"John\", \"age\" => 25);\n$array[] = array(\"name\"\
    \ => \"Jane\", \"age\" => 30);\n$array[] = array(\"name\" => \"Jack\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] =\
    \ array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"\
    Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n\
    $array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\"\
    \ => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] =\
    \ array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"\
    Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n\
    $array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\"\
    \ => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] =\
    \ array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"\
    Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n\
    $array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\"\
    \ => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] =\
    \ array(\"name\" \nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxe_zxc98.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb1oal3u2.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = array();\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== false) {\n      $result[] = $string;\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== FALSE;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays,string |>\n<| c |>\nI like your solution, but I prefer `strpos`\
    \ over `strstr` because `strstr` will search for the entire string and `strpos`\
    \ will search for a substring.\n<|/ c |>\n<| c |>\nI agree with you, `strpos`\
    \ will search for the entire string. `strstr` will search for a substring and\
    \ `strpos` will search for the entire string. `strpos` will search for the entire\
    \ string and `strstr` will search for a substring and `strpos` will search for\
    \ the entire string.\n<|/ c |>\n<| c |>\nI agree with you, `strpos` will search\
    \ for the entire string. `strstr` will search for a substring and `strpos` will\
    \ search for the entire string. `strpos` will search for the entire string and\
    \ `strstr` will search for a substring and `strpos` will search for the entire\
    \ string.\n<|/ c |>\n<| c |>\nI agree with you, `strpos` will search for the entire\
    \ string. `strstr` will search for a substring and `strpos` will search for the\
    \ entire string. `strpos` will search for the entire string and `strstr` will\
    \ search for a substring and `strpos` will search for the entire string.\n<|/\
    \ c |>\n<| c |>\nI agree with you, `strpos` will search for the entire string.\
    \ `strstr` will search for a substring and `strpos` will search for the entire\
    \ string. `strpos` will search for the entire string and `strstr` will search\
    \ for a substring and `strpos` will search for the entire string.\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4b1n55_x.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays,string |>\n<code>\n$strings = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$substring = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,string |>\n\
    <code>\n$strings = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring =\
    \ \"a\";\n$filtered = array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n});\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays,string |>\n<code>\n$strings = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$substring = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$strings\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring = \"a\";\n$filtered\
    \ = array_filter($strings, function($string) use ($substring) {\n    return strpos($string,\
    \ $substring) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string |>\n<| a\
    \ tags=php,arrays,string |>\n<code>\n$strings = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$substring = \"a\";\n$filtered = array_filter($strings, function($string)\
    \ use ($substring) {\n    return strpos($string, $substring) !== false;\n});\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$strings = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$substring = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n});\n</code>\n<|/ a tags=php,arrays,string |>\n<| a dscore=0 |>\n\
    <code>\n$strings = array(\"abc\", \"bacd\", \"cde\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_r08rxqe.php on line 16

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThanks for your answer.\
    \ I'm going to try this out and see if it works. I appreciate it.\n<|/ c |>\n\
    <| c |>\nI added an example to my question to show how it works.\n<|/ c |>\n<|\
    \ c |>\nI added an example to my question to show how it works.\n<|/ c |>\n<|\
    \ c |>\nI added an example to my question to show how it works.\n<|/ c |>\n<|\
    \ c |>\nI added an example to my question to show how it works.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n$array1 = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$array2 = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array3 = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$array4 = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$array5 = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array6\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array7 = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$array8 = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$array9 = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array10 = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$array11 = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$array12 = array(\"abc\", \"bacd\", \"cde\", \"array\");\n\
    $array13 = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array14 = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$array15 = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$array16 = array(\"abc\", \"bacd\", \"cde\", \"array\");\n\
    $array17 = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array18 = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$array19 = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$array20 = array(\"abc\", \"bacd\", \"cde\", \"array\");\n\
    $array21 = \nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_f9mt3d8.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== FALSE;\n  });\n}\n</code>\n<|/\
    \ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($v) use ($search) {\n    return strpos($v, $search) !== FALSE;\n});\n\
    </code>\n<|/ a dscore=3 |>\n<| a |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($v)\
    \ use ($search) {\n    return strpos($v, $search) !== FALSE;\n});\n</code>\n<|/\
    \ a tags=arrays,php dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($v) use ($search) {\n    return strpos($v, $search) !== FALSE;\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($v) use ($search) {\n    return strpos($v, $search) !== FALSE;\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($v) use ($search) {\n    return strpos($v, $search) !== FALSE;\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\",\
    \ \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($v) use ($search) {\n    return strpos($v, $search) !== FALSE;\n});\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($v) use ($search) {\n    return strpos($v, $\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw0ys3ohb.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n</code>\n<|/ a |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$string = \"Hello World\";\n$search = \"World\"\
    ;\n$pos = strpos($string, $search);\nif ($pos === false) {\n    echo \"The string\
    \ '$search' was not found in the string '$string'\";\n} else {\n    echo \"The\
    \ string '$search' was found in the string '$string'\";\n    echo \" and exists\
    \ at position $pos\";\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptu89c3ad.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string |>\n<code>\n$string\
    \ = \"abc\";\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$result\
    \ = array_filter($array, function($v) use ($string) {\n    return strpos($v, $string)\
    \ !== false;\n});\n</code>\n<|/ a dscore=4 |>\n<| a dscore=4 |>\n<code>\n$string\
    \ = \"abc\";\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$result\
    \ = array_filter($array, function($v) use ($string) {\n    return strpos($v, $string)\
    \ !== false;\n});\n</code>\n<|/ a tags=php,arrays,string |>\n<| a dscore=4 |>\n\
    <code>\n$string = \"abc\";\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$result = array_filter($array, function($v) use ($string) {\n    return strpos($v,\
    \ $string) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$string = \"abc\";\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$result = array_filter($array, function($v) use ($string) {\n    return\
    \ strpos($v, $string) !== false;\n});\n</code>\n<|/ a dscore=3 |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$string = \"abc\";\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$result = array_filter($array, function($v) use ($string) {\n    return\
    \ strpos($v, $string) !== false;\n});\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3\
    \ |>\n<code>\n$string = \"abc\";\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$result = array_filter($array, function($v) use ($string) {\n    return\
    \ strpos($v, $string) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string |>\n\
    <| a dscore=2 |>\n<code>\n$string = \"abc\";\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$result = array_filter($array, function($v) use ($string)\
    \ {\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpylk7xv7p.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,search\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk94xl9dd.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_svbzb68.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = 'Hello World';\n$search\
    \ = 'World';\n$pos = strpos($string, $search);\n$string[$pos]; // 'o'\n</code>\n\
    <|/ a tags=php,string |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to get the first occurrence of a substring in a string.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$string = 'Hello World';\n$search = 'World';\n$pos = strpos($string,\
    \ $search);\n$string[$pos]; // 'o'\n</code>\n<|/ a tags=php,string |>\n<| c |>\n\
    This doesn't answer the question. OP wants to get the first occurrence of a substring\
    \ in a string.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = 'Hello World';\n\
    $search = 'World';\n$pos = strpos($string, $search);\n$string[$pos]; // 'o'\n\
    </code>\n<|/ a tags=php,string |>\n<| a dscore=0 |>\n<code>\n<?php\n$string =\
    \ 'Hello World';\n$search = 'World';\n$pos = strpos($string, $search);\n$string[$pos];\
    \ // 'o'\n</code>\n<|/ a tags=php,string |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $string = 'Hello World';\n$search = 'World';\n$pos = strpos($string, $search);\n\
    $string[$pos]; // 'o'\n</code>\n<|/ a tags=php,string |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$string = 'Hello World';\n$search = 'World';\n$pos = strpos($string, $search);\n\
    $string[$pos]; // 'o'\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php\n$string = 'Hello World';\n$search = 'World';\n$pos = strpos($string,\
    \ $search);\n$string[$pos]; // 'o'\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$string = 'Hello World';\n$search = 'World';\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk5ke7b8j.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like\
    \ the idea of using array_filter, but I believe it would be more efficient to\
    \ just use strpos() to find the substring and only add the string if it is not\
    \ false. Also, strpos() returns false if the substring is not found, so the if\
    \ statement would need to be `if (strpos($string, $substring) !== false)`\n<|/\
    \ c |>\n<| c |>\n: I agree, `strpos` would be more efficient. I've updated my\
    \ answer.\n<|/ c |>\n<| c |>\n: I added a more efficient solution that uses `strpos`.\n\
    <|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpn3hhvxwf.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kcvef5_.php:19\n\
    Stack trace:\n#0 /tmp/tmp0kcvef5_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0kcvef5_.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($item) use ($search) {\n    return strpos($item,\
    \ $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0hg9mtck.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a dscore=5 |>\n<| c |>\nI like this solution, but I wonder if it would be more\
    \ efficient to run `strpos` once and store the result in a variable?\n<|/ c |>\n\
    <| c |>\nI doubt that would make much of a difference, since `strpos` has to search\
    \ the string multiple times. But I guess it would be more efficient to store the\
    \ result in a variable and use that variable in the `array_filter` callback.\n\
    <|/ c |>\n<| c |>\nI did some benchmarking and the difference is negligible. `strpos`\
    \ takes about 0.2 microseconds to complete on my machine.\n<|/ c |>\n<| c |>\n\
    I tested this with PHP 5.3.10 and it took about 0.2 microseconds to complete.\
    \ On my machine it took about 0.1 microseconds. So it seems that `strpos` does\
    \ indeed take about 0.2 microseconds to complete.\n<|/ c |>\n<| c |>\nI tested\
    \ this with PHP 5.3.10 and it took about 0.2 microseconds to complete. On my machine\
    \ it took about 0.1 microseconds. So it seems that `strpos` does indeed take about\
    \ 0.2 microseconds to complete.\n<|/ c |>\n<| a tags=arrays,php,string |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result\
    \ = array_filter($array, function($item) use ($search) {\n    return strpos($item,\
    \ $search) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be\
    \ the accepted answer. `array_filter` with anonymous functions is much more readable\
    \ than `array_map` with anonymous functions.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. `array_filter` with anonymous functions is much more readable\
    \ than `array_map` with anonymous functions.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. `array_filter` with anonymous functions is much more readable\
    \ than `array_map` with anonymous functions.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. `array_filter` with anonymous functions is much more readable\
    \ than `array_map` with anonymo\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4fb0wa1v.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array\
    \ = array();\n$array[] = array('name' => 'John', 'age' => '20');\n$array[] = array('name'\
    \ => 'Jane', 'age' => '30');\n$array[] = array('name' => 'Jack', 'age' => '40');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '40');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jack', 'age' => '40');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jack', 'age' => '40');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '40');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jack', 'age' => '40');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jack', 'age' => '40');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '40');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jack', 'age' => '40');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jack', 'age' => '40');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '40');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jack', 'age' => '40');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jack', 'age' => '40');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr7ap9ukg.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kcvef5_.php:19\n\
    Stack trace:\n#0 /tmp/tmp0kcvef5_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0kcvef5_.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=arrays,php,multidimensional-array |>\n<| c |>\nI like this solution,\
    \ it's simple and easy to understand.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array\
    \ = array();\n$array[] = array('name' => 'John', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jane', 'age' => 30);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbooh94o0.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a tags=php,arrays,string |>\n\
    <| c |>\nThanks, this was very helpful.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string\
    \ = \"a\";\n$result = array_filter($array, function($var) use ($string) {\n  \
    \  return strpos($var, $string) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string\
    \ = \"a\";\n$result = array_filter($array, function($var) use ($string) {\n  \
    \  return strpos($var, $string) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string\
    \ = \"a\";\n$result = array_filter($array, function($var) use ($string) {\n  \
    \  return strpos($var, $string) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly.\n<|/ c |>\n<| a\
    \ tags=php,arrays,string |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$string = \"a\";\n$result = array_filter($array, function($var)\
    \ use ($string) {\n    return \nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7niwrqbd.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThis doesn't work if\
    \ you have multiple occurrences of the substring in the string. For example, if\
    \ `$strings = array(\"abc\", \"bacd\", \"cde\", \"array\", \"abcabc\");` then\
    \ `filter_by_substring($strings, \"a\")` returns `array(\"abc\", \"bacd\", \"\
    array\", \"abcabc\")` instead of `array(\"abc\", \"bacd\", \"array\")`.\n<|/ c\
    \ |>\n<| c |>\nI fixed the problem by changing the `strpos` line to `return strpos($string,\
    \ $substring) !== false && strpos($string, $substring) !== false;`\n<|/ c |>\n\
    <| c |>\nThis doesn't work if you have multiple occurrences of the substring in\
    \ the string. For example, if `$strings = array(\"abc\", \"bacd\", \"cde\", \"\
    array\", \"abcabc\");` then `filter_by_substring($strings, \"a\")` returns `array(\"\
    abc\", \"bacd\", \"array\", \"abcabc\")` instead of `array(\"abc\", \"bacd\",\
    \ \"array\")`.\n<|/ c |>\n<| c |>\nI fixed the problem by changing the `strpos`\
    \ line to `return strpos($string, $substring) !== false && strpos($string, $substring)\
    \ !== false;`\n<|/ c |>\n<| a dscore=5 tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a |>\n<| c |>\n\
    This doesn't work if you have multiple occurrences of the substring in the string.\
    \ For example, if `$array = array(\"abc\", \"bacd\", \"cde\", \"array\", \"abcabc\"\
    );` then `filter_by_substring($array, \"a\")` returns `array(\"abc\", \"bacd\"\
    , \"array\", \"abcabc\")` instead of `array(\"abc\", \"bacd\", \"array\")`.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if you have multiple occurrences of the substring\
    \ in the string. For example, if `$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\", \"abcabc\");` then `filter_by_substring($array, \"a\")` returns `array(\"\
    abc\", \"bacd\", \"array\", \"\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2bdxx28a.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThanks for your answer.\
    \ I'm going to try this out and see how it goes.\n<|/ c |>\n<| c |>\nI got this\
    \ error when trying your code: `Parse error: syntax error, unexpected 'function'\
    \ (T_FUNCTION), expecting ')'`\n<|/ c |>\n<| c |>\nI forgot the `use` keyword.\
    \ Try now.\n<|/ c |>\n<| c |>\nI got this error when trying your code: `Parse\
    \ error: syntax error, unexpected 'function' (T_FUNCTION), expecting ')'`\n<|/\
    \ c |>\n<| c |>\nI forgot the `use` keyword. Try now.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array();\n$array[] = array('name' => 'John', 'age' => '20');\n\
    $array[] = array('name' => 'Jane', 'age' => '30');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '40');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jack', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsfccxww2.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| c |>\nThis doesn't seem to work. `filter_by_substring`\
    \ returns an empty array.\n<|/ c |>\n<| c |>\nI tested it and it works. I added\
    \ an example to my answer.\n<|/ c |>\n<| c |>\nI added a working example to my\
    \ answer.\n<|/ c |>\n<| c |>\nThis doesn't work. `filter_by_substring` returns\
    \ an empty array.\n<|/ c |>\n<| c |>\nI tested it and it works. I added an example\
    \ to my answer.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't seem to work. `filter_by_substring`\
    \ returns an empty array.\n<|/ c |>\n<| c |>\nI tested it and it works. I added\
    \ an example to my answer.\n<|/ c |>\n<| c |>\nThis doesn't work. `filter_by_substring`\
    \ returns an empty array.\n<|/ c |>\n<| c |>\nI tested it and it works. I added\
    \ an example to my answer.\n<|/ c |>\n<| c |>\nThis doesn't work. `filter_by_substring`\
    \ returns an empty array.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array =\
    \ array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't seem to work. `filter_by_substring`\
    \ returns an empty array.\n<|/ c |>\n<| c |>\nI tested it and it works. I added\
    \ an example to my answer.\n<|/ c |>\n<| c |>\nThis doesn't work. `filter_by_substring`\
    \ returns an empty array.\n<|/ c |>\n<| c |>\nThis doesn't work. `filter_by_substring`\
    \ returns an empty array.\n<|/ c |>\n<| a |>\n<code>\n$array = array\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3nntxlts.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array();\n$array[] = array('name' => 'John', 'age' => '20');\n$array[] = array('name'\
    \ => 'Jane', 'age' => '30');\n$array[] = array('name' => 'Jack', 'age' => '40');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1mya16ax.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $result[] =\
    \ $string;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have a string that\
    \ starts with `a` and ends with `a`\n<|/ c |>\n<| c |>\nYes, it does. `filter_by_substring`\
    \ will remove all strings that don't contain `$substring`.\n<|/ c |>\n<| c |>\n\
    Yes, but if you have `a` at the start and `a` at the end of a string, it will\
    \ remove both of them\n<|/ c |>\n<| c |>\nYes, that's why I wrote \"contains\"\
    . `filter_by_substring` will remove all strings that don't contain `$substring`.\n\
    <|/ c |>\n<| c |>\nI see what you mean. Yes, it does remove both of them. My bad.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have a string that\
    \ starts with `a` and ends with `a`\n<|/ c |>\n<| c |>\nYes, it does. `filter_by_substring`\
    \ will remove all strings that don't contain `$substring`.\n<|/ c |>\n<| c |>\n\
    Yes, but if you have `a` at the start and `a` at the end of a string, it will\
    \ remove both of them\n<|/ c |>\n<| c |>\nYes, that's why I wrote \"contains\"\
    . `filter_by_substring` will remove all strings that don't contain `$substring`.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work if you have a string that starts\
    \ with `a` and ends with `a`\n<|/ c |>\n<| a dscore=0 |>\n<code>\n$array = array(\"\
    abc\", \"bacd\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4owisl9i.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = array();\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== false) {\n      $result[] = $string;\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThanks for the answer, but this doesn't seem to work.\
    \ I'm getting a syntax error on the `function($string) use ($substring)` line.\
    \ I'm running PHP 5.3.10\n<|/ c |>\n<| c |>\nOh, I see. That's because you're\
    \ using PHP 5.3. I'll update my answer.\n<|/ c |>\n<| c |>\nThanks for the update.\
    \ I'm still getting a syntax error on the `function($string) use ($substring)`\
    \ line. I'm running PHP 5.3.10\n<|/ c |>\n<| c |>\nOh, I see. That's because you're\
    \ using PHP 5.3. I'll update my answer.\n<|/ c |>\n<| c |>\nThanks for the update.\
    \ I'm still getting a syntax error on the `function($string) use ($substring)`\
    \ line. I'm running PHP 5.3.10\n<|/ c |>\n<| a dscore=2 |>\n<code>\n<?php\n$strings\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring = \"a\";\n$filtered\
    \ = array_filter($strings, function($string) use ($substring) {\n    return strpos($string,\
    \ $substring) !== false;\n});\nprint_r($filtered);\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphxi1ov18.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThanks, this works perfectly!\
    \ I didn't know about array_filter. Thanks again!\n<|/ c |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array();\n$array[] = array('name' => 'John', 'age' => 25);\n\
    $array[] = array('name' => 'Jane', 'age' => 30);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n$array[]\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp819_dz60.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array();\n$array[] = array('name' => 'John', 'age' => '25');\n$array[] = array('name'\
    \ => 'Jane', 'age' => '28');\n$array[] = array('name' => 'Jack', 'age' => '26');\n\
    $array[] = array('name' => 'Jill', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4yciog1r.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kcvef5_.php:19\n\
    Stack trace:\n#0 /tmp/tmp0kcvef5_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0kcvef5_.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered_strings = array();\n  foreach ($strings as $string)\
    \ {\n    if (strpos($string, $substring) !== FALSE) {\n      $filtered_strings[]\
    \ = $string;\n    }\n  }\n  return $filtered_strings;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays,string |>\n<code>\n<?php\n$string = \"\
    Hello World\";\n$array = array(\"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello\
    \ World\", \"Hello World\", \"Hello World\", \"Hello World\", \"Hello World\"\
    , \"Hello World\", \"Hello World\", \"Hello \nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwhxjoy1g.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer since it uses `array_filter`\
    \ which is available since PHP 5.3\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer since it uses `array_filter` which is available since PHP 5.3\n<|/ c\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=4 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=4 |>\n<| a dscore=3 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a tags=arrays,php dscore=3 |>\n<| a |>\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvn5a0w8r.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=arrays,php,multidimensional-array |>\n<code>\n$array\
    \ = array(\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\"\
    , \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"\
    ),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n  \
    \  array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n  \
    \  array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n  \
    \  array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n  \
    \  array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n  \
    \  array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n  \
    \  array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n  \
    \  array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n  \
    \  array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"bacd\", \"cde\", \"array\"),\n  \
    \  array(\"abc\", \"bacd\", \"cde\", \"array\"),\n    array(\"abc\", \"bacd\"\
    , \"cde\", \"array\"),\n    array(\"abc\", \"ba\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpn_0zsmuf.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = array();\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== false) {\n      $result[] = $string;\n \
    \   }\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$search = \"a\";\n$result = array_filter($array, function($item) use ($search)\
    \ {\n    return strpos($item, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return str\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnew07pl_.php on line 16

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$string = 'abc';\n$array =\
    \ array('abc', 'bacd', 'cde', 'array');\n$array = array_filter($array, function($string)\
    \ use ($string) {\n    return strpos($string, $string) !== false;\n});\nprint_r($array);\n\
    </code>\n<|/ a tags=arrays,php,string |>\n<| a tags=arrays,php,string |>\n<code>\n\
    $string = 'abc';\n$array = array('abc', 'bacd', 'cde', 'array');\n$array = array_filter($array,\
    \ function($string) use ($string) {\n    return strpos($string, $string) !== false;\n\
    });\nprint_r($array);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$string = 'abc';\n$array = array('abc', 'bacd', 'cde', 'array');\n$array\
    \ = array_filter($array, function($string) use ($string) {\n    return strpos($string,\
    \ $string) !== false;\n});\nprint_r($array);\n</code>\n<|/ a tags=arrays,php,string\
    \ |>\n<| a dscore=1 |>\n<code>\n<?php\n$string = 'abc';\n$array = array('abc',\
    \ 'bacd', 'cde', 'array');\n$array = array_filter($array, function($string) use\
    \ ($string) {\n    return strpos($string, $string) !== false;\n});\nprint_r($array);\n\
    </code>\n<|/ a tags=arrays,php,string |>\n<| a tags=arrays,php,string |>\n<code>\n\
    <?php\n$string = 'abc';\n$array = array('abc', 'bacd', 'cde', 'array');\n$array\
    \ = array_filter($array, function($string) use ($string) {\n    return strpos($string,\
    \ $string) !== false;\n});\nprint_r($array);\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php\n$string = 'abc';\n$array = array('abc', 'bacd',\
    \ 'cde', 'array');\n$array = array_filter($array, function($string) use ($string)\
    \ {\n    return strpos($string, $string) !== false;\n});\nprint_r($array);\n</code>\n\
    <|/ a tags=arrays,php,string |>\n<| a \nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7x4brt8y.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kcvef5_.php:19\n\
    Stack trace:\n#0 /tmp/tmp0kcvef5_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0kcvef5_.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered_strings = array();\n  foreach ($strings as $string)\
    \ {\n    if (strpos($string, $substring) !== false) {\n      $filtered_strings[]\
    \ = $string;\n    }\n  }\n  return $filtered_strings;\n}\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| c |>\nI like your solution, but I wonder if there is a way to do it without\
    \ looping through the array twice. Maybe with array_filter?\n<|/ c |>\n<| c |>\n\
    : Yes, `array_filter` would work, but you'd have to write your own custom callback\
    \ function instead of `strpos`.  It would look something like `array_filter($strings,\
    \ function($string) { return strpos($string, $substring) !== false; });`\n<|/\
    \ c |>\n<| c |>\n: I added a custom callback function to the answer.\n<|/ c |>\n\
    <| a tags=php,arrays,string |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nI like this solution, but I wonder if there is a way\
    \ to do it without looping through the array twice. Maybe with array_filter?\n\
    <|/ c |>\n<| c |>\n: Yes, `array_filter` would work, but you'd have to write your\
    \ own custom callback function instead of `strpos`.  It would look something like\
    \ `array_filter($strings, function($string) { return strpos($string, $substring)\
    \ !== false; });`\n<|/ c |>\n<| c |>\n: I added a custom callback function to\
    \ the answer.\n<|/ c |>\n<| c |>\n: I added a custom callback function to the\
    \ answer.\n<|/ c |>\n<| c |>\n: I added a custom callback function to the answer.\n\
    <|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nI like this solution, but I wonder if there is a way\
    \ to do it without looping through the array twice. Maybe with array_filter?\n\
    <|/ c |>\n<| c |>\n: Yes, `array_filter` would work\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpc28vmgf4.php on line 16

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result\
    \ = array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($search) {\n    return\
    \ strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=arrays,php\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpx24b5ytz.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = array();\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== false) {\n      $result[] = $string;\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks,\
    \ this helped me a lot!\n<|/ c |>\n<| a dscore=2 |>\nI wrote a little function\
    \ to do this:\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxnimmln2.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nI like this solution, but I feel like it would be\
    \ better to use the `===` operator instead of `!==` because `strpos` returns false\
    \ if the substring is not found at the beginning.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, `===` would be better. I've edited my answer accordingly.\n<|/ c |>\n\
    <| c |>\nI like this solution, but I feel like it would be better to use the `===`\
    \ operator instead of `!==` because `strpos` returns false if the substring is\
    \ not found at the beginning.\n<|/ c |>\n<| c |>\nI like this solution, but I\
    \ feel like it would be better to use the `===` operator instead of `!==` because\
    \ `strpos` returns false if the substring is not found at the beginning.\n<|/\
    \ c |>\n<| c |>\nI like this solution, but I feel like it would be better to use\
    \ the `===` operator instead of `!==` because `strpos` returns false if the substring\
    \ is not found at the beginning.\n<|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcxaxkcaz.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered_strings = array();\n  foreach ($strings as $string)\
    \ {\n    if (strpos($string, $substring) !== false) {\n      $filtered_strings[]\
    \ = $string;\n    }\n  }\n  return $filtered_strings;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThis doesn't seem to\
    \ work. `filter_by_substring` returns an empty array.\n<|/ c |>\n<| c |>\nIt works\
    \ fine for me. Can you post the code you're using?\n<|/ c |>\n<| c |>\nI added\
    \ the code to the original question. Thanks for your help.\n<|/ c |>\n<| c |>\n\
    I added a working example to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks\
    \ for your help. I added the code to the original question. Thanks for your help.\n\
    <|/ c |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array = array();\n\
    $array[] = array('name' => 'John', 'age' => 25, 'city' => 'New York');\n$array[]\
    \ = array('name' => 'Jane', 'age' => 25, 'city' => 'New York');\n$array[] = array('name'\
    \ => 'Jack', 'age' => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jill',\
    \ 'age' => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jack', 'age'\
    \ => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jill', 'age' => 25,\
    \ 'city' => 'New York');\n$array[] = array('name' => 'Jack', 'age' => 25, 'city'\
    \ => 'New York');\n$array[] = array('name' => 'Jill', 'age' => 25, 'city' => 'New\
    \ York');\n$array[] = array('name' => 'Jack', 'age' => 25, 'city' => 'New York');\n\
    $array[] = array('name' => 'Jill', 'age' => 25, 'city' => 'New York');\n$array[]\
    \ = array('name' => 'Jack', 'age' => 25, 'city' => 'New York');\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25, 'city' => 'New York');\n$array\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4qid0cwb.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| a tags=php,arrays,string |>\n<code>\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr_v2x3dd.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $result[] =\
    \ $string;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nI like your answer but I'm getting this error `Warning:\
    \ array_filter() expects parameter 2 to be a valid callback, function 'filter_by_substring'\
    \ not found or invalid function name`\n<|/ c |>\n<| c |>\nI added the function\
    \ to the top of my answer - I forgot to add it to the `use` statement. Try it\
    \ now.\n<|/ c |>\n<| c |>\nI added the function to the top of my answer - I forgot\
    \ to add it to the `use` statement. Try it now.\n<|/ c |>\n<| c |>\nI added the\
    \ function to the top of my answer - I forgot to add it to the `use` statement.\
    \ Try it now.\n<|/ c |>\n<| c |>\nI added the function to the top of my answer\
    \ - I forgot to add it to the `use` statement. Try it now.\n<|/ c |>\n<| a dscore=1\
    \ |>\nI like your answer but I'm getting this error Warning: array_filter() expects\
    \ parameter 2 to be a valid callback, function 'filter_by_substring' not found\
    \ or invalid function name\n\nThe function filter_by_substring is not defined\
    \ in the scope of the function filter_by_substring. \nThe function filter_by_substring\
    \ is a closure and needs to be defined in the scope of the function filter_by_substring\
    \ - either by using the use statement or by defining the function before you use\
    \ it.\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpet8vf5qh.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have multiple occurrences\
    \ of the substring in the string. For example, if `$strings = array(\"abc abc\
    \ abc\", \"abc abc\", \"abc abc abc abc\");` then `$substring = \"abc\"` then\
    \ this returns `array(\"abc abc abc\", \"abc abc\", \"abc abc abc abc\")` instead\
    \ of `array(\"abc abc abc\")`.\n<|/ c |>\n<| c |>\nYes, I know. That's why I wrote\
    \ \"filter an input array of strings only for ones that contain given substring\"\
    \n<|/ c |>\n<| c |>\nYes, I know. That's why I wrote \"filter an input array of\
    \ strings only for ones that contain given substring\"\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpg1c22l03.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array();\n$array[] = array('name' => 'John', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jane', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n\n$array = array_filter($array,\
    \ 'filter');\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpf6tm8e3g.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nI like this solution. Very clean and easy to understand.\n\
    <|/ c |>\n<| c |>\nI like this solution as well. Very clean and easy to understand.\n\
    <|/ c |>\n<| c |>\nI like this solution as well. Very clean and easy to understand.\n\
    <|/ c |>\n<| c |>\nI like this solution as well. Very clean and easy to understand.\n\
    <|/ c |>\n<| c |>\nI like this solution as well. Very clean and easy to understand.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($var)\
    \ use ($search) {\n    return strpos($var, $search) !== false;\n});\n</code>\n\
    <|/ a tags=arrays,php,search |>\n<| c |>\nThis should be the accepted answer.\
    \ Much cleaner and easier to understand.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Much cleaner and easier to understand.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Much cleaner and easier to understand.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Much cleaner and easier to\
    \ understand.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much cleaner\
    \ and easier to understand.\n<|/ c |>\n<| a dscore=5 tags=arrays,php,search |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($var) use ($search) {\n    return strpos($var,\
    \ $search) !== false;\n});\n</code>\n<|/ a |>\n<| c |>\nThis should be the accepted\
    \ answer. Much cleaner and easier to understand.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Much cleaner and easier to understand.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Much cleaner and easier to understand.\n\
    <|/ c |>\n<| a |>\n<code>\n$array = array(\"abc\", \"bacd\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgdegocnm.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynaynnea.php:18\n\
    Stack trace:\n#0 /tmp/tmpynaynnea.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpynaynnea.php\
    \ on line 18\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$search = \"a\";\n$result = array_filter($array, function($item) use ($search)\
    \ {\n    return strpos($item, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($item) use\
    \ ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpi_ra7_4m.php on line 16

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThanks for your answer. I've tried your solution and it works fine.\
    \ However I still don't understand why my code doesn't work. Could you please\
    \ explain me why my code doesn't work?\n<|/ c |>\n<| c |>\nI added some explanation\
    \ to the answer.\n<|/ c |>\n<| c |>\nThanks for your explanation. Now I understand\
    \ why my code doesn't work. However I still don't understand why my code doesn't\
    \ work. Could you please explain me why my code doesn't work?\n<|/ c |>\n<| c\
    \ |>\nI added some explanation to the answer.\n<|/ c |>\n<| a dscore=0 |>\nI believe\
    \ that your problem is that you are trying to use $strings as an array, but it\
    \ is actually a string. Try this:\n<code>\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbc4155g1.php on line 16

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$array = array_filter($array, function($value)\
    \ {\n    return strpos($value, \"a\") !== false;\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward, and\
    \ works with PHP 5.3+\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Simple, straightforward, and works with PHP 5.3+\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Simple, straightforward, and works with PHP 5.3+\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward,\
    \ and works with PHP 5.3+\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Simple, straightforward, and works with PHP 5.3+\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array =\
    \ array_filter($array, function($value) {\n    return strpos($value, \"a\") !==\
    \ false;\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple, straightforward, and works with PHP 5.3+\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Simple, straightforward, and works with PHP\
    \ 5.3+\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward,\
    \ and works with PHP 5.3+\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array =\
    \ array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array = array_filter($array,\
    \ function($value) {\n    return strpos($value, \"a\") !== false;\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward,\
    \ and works with PHP 5.3+\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array =\
    \ array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array = array_filter($array,\
    \ function($value) {\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps627gex3.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $result[] =\
    \ $string;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,string |>\n<| c |>\nThanks for your answer. Your solution\
    \ is very elegant. I was trying to avoid looping through the array and checking\
    \ each string for substring but this solution is much more elegant and efficient.\n\
    <|/ c |>\n<| c |>\nI agree with you. Looping through the array is more efficient\
    \ than using array_filter. However, the array_filter solution also has the advantage\
    \ of being able to filter by multiple substrings.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$string = 'abc';\n$array = array('abc', 'bacd', 'cde', 'array');\n\
    \n$result = array_filter($array, function($value) use ($string) {\n    return\
    \ strpos($value, $string) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This should be the accepted answer since it uses `array_filter` which has better\
    \ performance than `array_map`.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. `array_filter` has better performance than `array_map`.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. `array_filter` has better performance\
    \ than `array_map`.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. `array_filter`\
    \ has better performance than `array_map`.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. `array_filter` has better performance than `array_map`.\n\
    <|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n$string = 'abc';\n$array = array('abc',\
    \ 'bacd', 'cde', 'array');\n\n$result = array_filter($array, function($value)\
    \ use ($string) {\n    return strpos($value, $string) !== false;\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. `array_filter`\
    \ has better performance than `array_map`.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. `array_filter` has better performance than `array_map`.\n\
    <|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n$string = 'abc';\n$\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpesw04aom.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array();\n$array[] = array('name' => 'John', 'age' => '20');\n\
    $array[] = array('name' => 'Jane', 'age' => '30');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '40');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jack', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    \nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsy2bt8ql.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have a string that\
    \ has multiple occurrences of the substring you're looking for. For example, if\
    \ you have `array(\"abc\", \"bacd\", \"cde\", \"array\", \"ab\", \"ba\", \"c\"\
    , \"d\")` and you search for \"a\", you'll get `array(\"abc\", \"bacd\", \"array\"\
    , \"ab\", \"ba\", \"c\", \"d\")` instead of `array(\"abc\", \"bacd\", \"array\"\
    )`.\n<|/ c |>\n<| c |>\n: Yes, I know. That's why I wrote \"filter an input array\
    \ of strings only for ones that contain given substring\"\n<|/ c |>\n<| c |>\n\
    I see. But I thought the OP was looking for a way to filter out strings that don't\
    \ contain given substring. Your solution would return `array(\"abc\", \"bacd\"\
    , \"array\")` for `array(\"abc\", \"bacd\", \"cde\", \"array\", \"ab\", \"ba\"\
    , \"c\", \"d\")`.\n<|/ c |>\n<| c |>\n: Yes, I know. That's why I wrote \"filter\
    \ an input array of strings only for ones that contain given substring\"\n<|/\
    \ c |>\n<| c |>\n: Yes, I know. That's why I wrote \"filter an input array of\
    \ strings only for ones that contain given substring\"\n<|/ c |>\n<| a |>\n<code>\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_4g7bvd6.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,string |>\n<| c |>\nThanks, this was very helpful.\n<|/\
    \ c |>\n<| a dscore=2 |>\n<code>\n$string = \"abc\";\n$array = array(\"abc\",\
    \ \"bacd\", \"cde\", \"array\");\n$array = array_filter($array, function($var)\
    \ use ($string) {\n    return strpos($var, $string) !== false;\n});\n</code>\n\
    <|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string |>\n<code>\n$string\
    \ = \"abc\";\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array =\
    \ array_filter($array, function($var) use ($string) {\n    return strpos($var,\
    \ $string) !== false;\n});\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$string = \"abc\";\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$array = array_filter($array, function($var) use ($string) {\n    return\
    \ strpos($var, $string) !== false;\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\n$string = \"abc\";\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$array = array_filter($array, function($var) use ($string) {\n    return\
    \ strpos($var, $string) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| a tags=php,arrays,string |>\n<code>\n$string = \"abc\";\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$array = array_filter($array, function($var)\
    \ use ($string) {\n    return strpos($var, $string) !== false;\n});\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=php,arrays,string |>\n<code>\n$string = \"abc\";\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array = array_filter($array,\
    \ function($var) use ($string) {\n    return strpos($var, $string) !== false;\n\
    });\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,string |>\n<code>\n$string\
    \ = \"abc\";\n$array = array(\"abc\", \"bacd\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpy73rphq9.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kcvef5_.php:19\n\
    Stack trace:\n#0 /tmp/tmp0kcvef5_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0kcvef5_.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array();\n$array[] = array(\"name\" =>\
    \ \"John\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jane\", \"age\" =>\
    \ 30);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"\
    name\" => \"Jill\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"\
    age\" => 25);\n$array[] = array(\"name\" => \"Jill\", \"age\" => 25);\n$array[]\
    \ = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" =>\
    \ \"Jill\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" =>\
    \ 25);\n$array[] = array(\"name\" => \"Jill\", \"age\" => 25);\n$array[] = array(\"\
    name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jill\", \"\
    age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[]\
    \ = array(\"name\" => \"Jill\", \"age\" => 25);\n$array[] = array(\"name\" =>\
    \ \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jill\", \"age\" =>\
    \ 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"\
    name\" => \"Jill\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"\
    age\" => 25);\n$array[] = array(\"name\" => \"Jill\", \"age\" => 25);\n$array[]\
    \ = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" =>\
    \ \"Jill\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" =>\
    \ 25);\n$array[] = array(\"name\" => \"Jill\", \"age\" => 25);\n$array[] = array(\"\
    name\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpg49m1gg6.php on line 16

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nI like this solution the best. No need to reinvent\
    \ the wheel. Just a small note, if you have PHP 5.3 or greater you can use the\
    \ anonymous function syntax instead of `create_function()`\n<|/ c |>\n<| c |>\n\
    I like this solution the best. No need to reinvent the wheel. Just a small note,\
    \ if you have PHP 5.3 or greater you can use the anonymous function syntax instead\
    \ of `create_function()`\n<|/ c |>\n<| c |>\nI like this solution the best. No\
    \ need to reinvent the wheel. Just a small note, if you have PHP 5.3 or greater\
    \ you can use the anonymous function syntax instead of `create_function()`\n<|/\
    \ c |>\n<| c |>\nI like this solution the best. No need to reinvent the wheel.\
    \ Just a small note, if you have PHP 5.3 or greater you can use the anonymous\
    \ function syntax instead of `create_function()`\n<|/ c |>\n<| c |>\nI like this\
    \ solution the best. No need to reinvent the wheel. Just a small note, if you\
    \ have PHP 5.3 or greater you can use the anonymous function syntax instead of\
    \ `create_function()`\n<|/ c |>\n<| a |>\nI like using array_filter() for this\
    \ sort of thing:\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$filtered\
    \ = array_filter($array, function($value) {\n    return strpos($value, 'a') !==\
    \ false;\n});\n</code>\n<|/ a tags=arrays,php,string dscore=5 |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple, straightforward, and no need for additional\
    \ libraries.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward,\
    \ and no need for additional libraries.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Simple, straightforward, and no need for additional libraries.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward,\
    \ and no need for additional libraries.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Simple, straightforward, and no need for additional libraries.\n\
    <|/ c |>\n<| a |>\n<code>\n$array = array\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmim9zo7b.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nThis doesn't seem to work if the substring appears\
    \ more than once in the string. For example, if `$strings = array(\"abc\", \"\
    bacd\", \"cde\", \"array\", \"ab\", \"ba\", \"c\", \"d\");` then `filter_by_substring($strings,\
    \ \"a\")` returns `array(\"abc\", \"bacd\", \"array\", \"ab\", \"ba\", \"c\",\
    \ \"d\")` instead of `array(\"abc\", \"bacd\", \"array\")`.\n<|/ c |>\n<| c |>\n\
    I added a version that does handle multiple occurrences.\n<|/ c |>\n<| c |>\n\
    Thanks, I appreciate your help. I added a version that doesn't require a callback\
    \ and is more efficient for large arrays.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    $strings = array(\"abc\", \"bacd\", \"cde\", \"array\", \"ab\", \"ba\", \"c\"\
    , \"d\");\n$substring = \"a\";\n\n$result = array_filter($strings, function($string)\
    \ use ($substring) {\n    return strpos($string, $substring) !== false;\n});\n\
    \nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n\
    $strings = array(\"abc\", \"bacd\", \"cde\", \"array\", \"ab\", \"ba\", \"c\"\
    , \"d\");\n$substring = \"a\";\n\n$result = array_filter($strings, function($string)\
    \ use ($substring) {\n    return strpos($string, $substring) !== false;\n});\n\
    \nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\n$strings\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\", \"ab\", \"ba\", \"c\", \"d\"\
    );\n$substring = \"a\";\n\n$result = array_filter($strings, function($string)\
    \ use ($substring) {\n    return strpos($string, $substring) !== false;\n});\n\
    \nprint_r($result);\n</code>\n<|/ a tags=php,arrays dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$strings = array(\"abc\", \"bacd\", \"cde\", \"array\", \"ab\",\
    \ \"ba\", \"c\", \"d\");\n$substring = \"a\";\n\n$result = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n});\n\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a dscore\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu6rloti0.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $result[] =\
    \ $string;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks\
    \ for the answer. I am not very familiar with PHP. Could you please explain how\
    \ this works?\n<|/ c |>\n<| c |>\nI've added some comments to the code. Hope it\
    \ helps.\n<|/ c |>\n<| c |>\nThanks for the explanation. I am not very familiar\
    \ with PHP so I appreciate your help. I tried to implement this but I am getting\
    \ an error \"Parse error: syntax error, unexpected 'function' (T_FUNCTION), expecting\
    \ ')' in /Applications/XAMPP/xamppfiles/htdocs/filter_by_substring/index.php on\
    \ line 6\"\n<|/ c |>\n<| c |>\nSorry, I forgot the closing parenthesis. I've edited\
    \ the answer.\n<|/ c |>\n<| c |>\nThanks again. I tried implementing this but\
    \ I am getting an error \"Parse error: syntax error, unexpected 'function' (T_FUNCTION),\
    \ expecting ')' in /Applications/XAMPP/xamppfiles/htdocs/filter_by_substring/index.php\
    \ on line 6\"\n<|/ c |>\n<| a tags=arrays,php,filter,search |>\n<code>\n<?php\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2_8nh2eu.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = array();\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== false) {\n      $result[] = $string;\n \
    \   }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a tags=php,arrays,string |>\n\
    <| a tags=php,arrays,string |>\n<code>\n$string = 'abc';\n$array = array('abc',\
    \ 'bacd', 'cde', 'array');\n$array = array_filter($array, function($var) use ($string)\
    \ {\n    return strpos($var, $string) !== false;\n});\n</code>\n<|/ a dscore=4\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| a tags=php,arrays,string |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp_cwtac8.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynaynnea.php:18\n\
    Stack trace:\n#0 /tmp/tmpynaynnea.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpynaynnea.php\
    \ on line 18\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwx1mnk9q.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kcvef5_.php:19\n\
    Stack trace:\n#0 /tmp/tmp0kcvef5_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0kcvef5_.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = array();\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== FALSE) {\n      $result[] = $string;\n \
    \   }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kcvef5_.php:19\n\
    Stack trace:\n#0 /tmp/tmp0kcvef5_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0kcvef5_.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a tags=php,arrays,search |>\n<code>\n$search = 'a';\n$array\
    \ = array('abc', 'bacd', 'cde', 'array');\n\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n\nprint_r($result);\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,search |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpihnhq1_r.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThanks so much for this. I used this and modified\
    \ it a little to fit my needs. I added a little more explanation to the code above.\
    \ Thanks again!\n<|/ c |>\n<| a |>\nI used the answer from and modified it a little\
    \ to fit my needs. I added a little more explanation to the code above. Thanks\
    \ again!\n<code>\n<?php\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp16ew9yyn.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp10fphj36.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThanks for your answer.\
    \ I tried your solution and it works great. However I still have one problem.\
    \ My array is multidimensional. I edited my question to show you the array structure.\
    \ Can you please help me to solve this problem?\n<|/ c |>\n<| c |>\nI edited my\
    \ question to show you the array structure. Can you please help me to solve this\
    \ problem?\n<|/ c |>\n<| c |>\nI edited my question to show you the array structure.\
    \ Can you please help me to solve this problem?\n<|/ c |>\n<| c |>\nI edited my\
    \ question to show you the array structure. Can you please help me to solve this\
    \ problem?\n<|/ c |>\n<| c |>\nI edited my question to show you the array structure.\
    \ Can you please help me to solve this problem?\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(\n    'a' => array(\n        'b' => array(\n          \
    \  'c' => array(\n                'd' => array(\n                    'e' => array(\n\
    \                        'f' => array(\n                            'g' => array(\n\
    \                                'h' => array(\n                             \
    \       'i' => array(\n                                        'j' => array(\n\
    \                                            'k' => array(\n                 \
    \                               'l' => array(\n                              \
    \                      'm' => array(\n                                       \
    \                 'n' => array(\n                                            \
    \                'o' => array(\n                                             \
    \                   'p' => array(\n                                          \
    \                          'q' => array(\n                                   \
    \                                     'r' => array(\n                        \
    \                                                    's' => array(\n         \
    \                                                                       't' =>\
    \ array(\n                                                                   \
    \                 'u' => array(\n                                            \
    \                                            'v' => array(\n                 \
    \                                                                           'w'\
    \ => array(\n                                                                \
    \                                'x' => array(\n                             \
    \                                                                       'y' =>\
    \ array(\n                                                                   \
    \                                     'z' => array(\n                        \
    \                                                                            \
    \        'a' => array(\n                                                     \
    \                                                           'b' => array(\n  \
    \                                                                            \
    \                                      'c' => array(\n                       \
    \                                                                            \
    \                     'd' => array(\n                                        \
    \                                                                            \
    \        'e' => array(\n                                                     \
    \                                                                            \
    \                               'f' => array(\n                              \
    \                                                                            \
    \                                                          'g' => array(\n   \
    \                                                                            \
    \                                                                            \
    \             'h' => array(\n                                                \
    \                                                                            \
    \                                                'i' => array(\n             \
    \                                                                            \
    \                                                                            \
    \           'j' => array(\n                                                  \
    \                                                                            \
    \                                                      'k' => array(\n       \
    \                                                                            \
    \                                                                            \
    \                         'l' => array(\n                                    \
    \                                                                            \
    \                                                                            'm'\
    \ => array(\n                                                                \
    \                                                                            \
    \                                                                            \
    \        'n' => array(\n                                                     \
    \                                                                            \
    \                                                                            \
    \                       'o' => array(\n                                      \
    \                                                                            \
    \                                                                            \
    \                                          'p\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpl3nyhr2f.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$search = \"a\";\n$result = array_filter($array, function($value) use ($search)\
    \ {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\nprint_r($result);\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6dlze8i_.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    $result = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $result[] =\
    \ $string;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array\
    \ = array();\n$array[] = array('name' => 'John', 'age' => 25, 'city' => 'New York');\n\
    $array[] = array('name' => 'Jane', 'age' => 22, 'city' => 'New York');\n$array[]\
    \ = array('name' => 'Jack', 'age' => 25, 'city' => 'New York');\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jack', 'age' => 25,\
    \ 'city' => 'New York');\n$array[] = array('name' => 'Jill', 'age' => 25, 'city'\
    \ => 'New York');\n$array[] = array('name' => 'Jack', 'age' => 25, 'city' => 'New\
    \ York');\n$array[] = array('name' => 'Jill', 'age' => 25, 'city' => 'New York');\n\
    $array[] = array('name' => 'Jack', 'age' => 25, 'city' => 'New York');\n$array[]\
    \ = array('name' => 'Jill', 'age' => 25, 'city' => 'New York');\n$array[] = array('name'\
    \ => 'Jack', 'age' => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jill',\
    \ 'age' => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jack', 'age'\
    \ => 25, 'city' => 'New York');\n$array[] = array('name' => 'Jill', 'age' => 25,\
    \ 'city' => 'New York');\n$array[] = array('name' => 'Jack', 'age' => 25, 'city'\
    \ => 'New York');\n$array[] = array('name' => 'Jill', 'age' => 25, 'city' => 'New\
    \ York');\n$array[] = array('name' => 'Jack', 'age' => 25, 'city' => 'New York');\n\
    $array[] = array('name' => 'Jill', 'age' => 25, 'city' => '\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3ltn9lm9.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n</code>\n<|/ a tags=php,arrays,string |>\n\
    <| a |>\n<code>\n<?php\n$string = 'Hello World';\n$array = array('Hello World',\
    \ 'Hello World', 'Hello World', 'Hello World');\n$array = array_filter($array,\
    \ function($var) use ($string) {\n    return strpos($var, $string) !== FALSE;\n\
    });\nvar_dump($array);\n</code>\n<|/ a dscore=5 tags=php,arrays,string |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/ c |>\n\
    <| a |>\n<code>\n$string = 'Hello World';\n$array = array('Hello World', 'Hello\
    \ World', 'Hello World', 'Hello World');\n$array = array_filter($array, function($var)\
    \ use ($string) {\n    return strpos($var, $string) !== FALSE;\n});\n</code>\n\
    <|/ a dscore=5 tags=php,arrays,string |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| a tags=php,arrays,string |>\n\
    <code>\n$string = 'Hello World';\n$array = array('Hello World', 'Hello World',\
    \ 'Hello World', 'Hello World');\n$array = array_filter($array, function($var)\
    \ use ($string) {\n    return strpos($var, $string) !== FALSE;\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| a |>\n<code>\n$\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptco4e7dy.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThanks for your answer,\
    \ but this doesn't work if I try it with a multidimensional array. I've added\
    \ an example to my question.\n<|/ c |>\n<| c |>\nI've updated my answer to work\
    \ with multidimensional arrays. Please let me know if it works.\n<|/ c |>\n<|\
    \ c |>\nThanks for your answer! This works perfectly for my needs. I didn't know\
    \ you could use anonymous functions in PHP. Thanks again!\n<|/ c |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdfpjbtas.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = array();\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== false) {\n      $result[] = $string;\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== FALSE;\n  });\n}\n</code>\n<|/\
    \ a tags=arrays,php |>\n<| c |>\nI like your solution, however it only works if\
    \ the substring appears exactly once in the string. `filter_by_substring` should\
    \ return an empty array if the substring appears more than once in the string.\n\
    <|/ c |>\n<| c |>\nI added a solution that should do what you want.\n<|/ c |>\n\
    <| c |>\nThanks, I added a second solution that should do what you want.\n<|/\
    \ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$search = \"a\";\n\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== FALSE;\n});\n\nprint_r($result);\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if the substring appears\
    \ more than once in the string.\n<|/ c |>\n<| c |>\nI added a solution that should\
    \ do what you want.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== FALSE;\n\
    });\n\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== FALSE;\n});\n\nprint_r($result);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== FALSE;\n\
    });\n\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n\n$result\
    \ = array_filter\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8brcqqjj.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have a string that contains\
    \ a substring that matches a substring in the array. e.g. `filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"ab\")` returns `array(\"abc\", \"bacd\"\
    , \"array\")` instead of `array(\"abc\", \"bacd\")`\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have a string that contains a substring that matches a substring\
    \ in the array. e.g. `filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"\
    array\"), \"ab\")` returns `array(\"abc\", \"bacd\", \"array\")` instead of `array(\"\
    abc\", \"bacd\")`\n<|/ c |>\n<| c |>\nThis doesn't work if you have a string that\
    \ contains a substring that matches a substring in the array. e.g. `filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"ab\")` returns `array(\"abc\", \"bacd\"\
    , \"array\")` instead of `array(\"abc\", \"bacd\")`\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have a string that contains a substring that matches a substring\
    \ in the array. e.g. `filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"\
    array\"), \"ab\")` returns `array(\"abc\", \"bacd\", \"array\")` instead of `array(\"\
    abc\", \"bacd\")`\n<|/ c |>\n<| c |>\nThis doesn't work if you have a string that\
    \ contains a substring that matches a substring in the array. e.g. `filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"ab\")` returns `array(\"abc\", \"bacd\"\
    , \"array\")` instead of `array(\"abc\", \"bacd\")`\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplcfs1o_t.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nI like this answer because it doesn't require a loop.\
    \ Nice.\n<|/ c |>\n<| c |>\nI like this answer because it doesn't require a loop.\
    \ Nice.\n<|/ c |>\n<| c |>\nI like this answer because it doesn't require a loop.\
    \ Nice.\n<|/ c |>\n<| c |>\nI like this answer because it doesn't require a loop.\
    \ Nice.\n<|/ c |>\n<| c |>\nI like this answer because it doesn't require a loop.\
    \ Nice.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpc_tu02lr.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a tags=arrays,php |>\n<| c |>\nWhile this code may answer the question, providing\
    \ additional context regarding why and/or how this code answers the question improves\
    \ its long-term value.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($item) use ($search) {\n    return strpos($item,\
    \ $search) !== false;\n});\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code\
    \ may answer the question, providing additional context regarding why and/or how\
    \ this code answers the question improves its long-term value.\n<|/ c |>\n<| a\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a tags=arrays,php\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== \nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxm7pape6.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array(\n    'name' => 'John',\n    'age' => 30,\n    'city'\
    \ => 'New York'\n);\n\n$array = array(\n    'name' => 'John',\n    'age' => 30,\n\
    \    'city' => 'New York'\n);\n\n$array = array(\n    'name' => 'John',\n    'age'\
    \ => 30,\n    'city' => 'New York'\n);\n\n$array = array(\n    'name' => 'John',\n\
    \    'age' => 30,\n    'city' => 'New York'\n);\n\n$array = array(\n    'name'\
    \ => 'John',\n    'age' => 30,\n    'city' => 'New York'\n);\n\n$array = array(\n\
    \    'name' => 'John',\n    'age' => 30,\n    'city' => 'New York'\n);\n\n$array\
    \ = array(\n    'name' => 'John',\n    'age' => 30,\n    'city' => 'New York'\n\
    );\n\n$array = array(\n    'name' => 'John',\n    'age' => 30,\n    'city' =>\
    \ 'New York'\n);\n\n$array = array(\n    'name' => 'John',\n    'age' => 30,\n\
    \    'city' => 'New York'\n);\n\n$array = array(\n    'name' => 'John',\n    'age'\
    \ => 30,\n    'city' => 'New York'\n);\n\n$array = array(\n    'name' => 'John',\n\
    \    'age' => 30,\n    'city' => 'New York'\n);\n\n$array = array(\n    'name'\
    \ => 'John',\n    'age' => 30,\n    'city' => 'New York'\n);\n\n$array = array(\n\
    \    'name' => 'John',\n    'age' => 30,\n    'city' => 'New York'\n);\n\n$array\
    \ = array(\n    'name' => 'John',\n    'age' => 30,\n    'city' => 'New York'\n\
    );\n\n$array = array(\n    'name' => 'John',\n    'age' => 30,\n    'city' =>\
    \ 'New York'\n);\n\n$array = array(\n    'name' => 'John',\n    'age' => 30,\n\
    \    'city' => 'New York'\n);\n\n$array = array(\n    'name' => 'John',\n    'age'\
    \ => 30,\n    'city' => 'New York'\n);\n\n$array = array(\n    'name' => 'John',\n\
    \nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5ghrvd6z.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$string = 'This is a test string';\n\
    $search = 'is';\n$pos = strpos($string, $search);\nif ($pos !== false) {\n   \
    \ $result = substr($string, $pos);\n}\n</code>\n<|/ a tags=php,string |>\n<| a\
    \ tags=php,string |>\n<code>\n$string = 'This is a test string';\n$search = 'is';\n\
    $pos = strpos($string, $search);\nif ($pos !== false) {\n    $result = substr($string,\
    \ $pos);\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$string = 'This\
    \ is a test string';\n$search = 'is';\n$pos = strpos($string, $search);\nif ($pos\
    \ !== false) {\n    $result = substr($string, $pos);\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a tags=php,string |>\n<code>\n$string = 'This is a test string';\n$search\
    \ = 'is';\n$pos = strpos($string, $search);\nif ($pos !== false) {\n    $result\
    \ = substr($string, $pos);\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\n$string = 'This is a test string';\n$search = 'is';\n$pos = strpos($string,\
    \ $search);\nif ($pos !== false) {\n    $result = substr($string, $pos);\n}\n\
    </code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n$string =\
    \ 'This is a test string';\n$search = 'is';\n$pos = strpos($string, $search);\n\
    if ($pos !== false) {\n    $result = substr($string, $pos);\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>\n$string = 'This is a test string';\n\
    $search = 'is';\n$pos = strpos($string, $search);\nif ($pos !== false) {\n   \
    \ $result = substr($string, $pos);\n}\n</code>\n<|/ a tags=php,string |>\n<| a\
    \ |>\n<code>\n$string = 'This is a test string';\n$search = 'is';\n$pos = strpos($string,\
    \ $search);\nif ($pos !== false) {\n    $result = substr($\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpd_8cosg8.php on line 12

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== FALSE) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n\n$array = array_filter($array, function($var){\n\
    \    return strpos($var, \"a\") !== false;\n});\n\nprint_r($array);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n\n$array = array_filter($array, function($var){\n\
    \    return strpos($var, \"a\") !== false;\n});\n\nprint_r($array);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n\n$array = array_filter($array, function($var){\n\
    \    return strpos($var, \"a\") !== false;\n});\n\nprint_r($array);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$array = array_filter($array, function($var){\n\
    \    return strpos($var, \"a\") !== false;\n});\nprint_r($array);\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$array = array_filter($array, function($var){\n    return\
    \ strpos($var, \"a\") !== false;\n});\nprint_r($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$array = array_filter($array, function($var){\n    return strpos($var,\
    \ \"a\") !== false;\n});\nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nPlease add some explanation to your answer such that others can learn\
    \ from it\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\",\
    \ \"bacd\", \"cde\", \"array\");\n$array = array_filter($array, function($var){\n\
    \    return strpos($var, \"a\") !== false;\n});\nprint_r($\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphdxj40gz.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Much more elegant\
    \ than using array_filter and a closure.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Much more elegant than using array_filter and a closure.\n\
    <|/ c |>\n<| c |>\nI like this answer because it's more flexible and doesn't require\
    \ a closure. I'm going to use this in combination with array_walk_recursive to\
    \ remove empty arrays from an array.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Much more elegant than using array_filter and a closure.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Much more elegant than using array_filter\
    \ and a closure.\n<|/ c |>\n<| a tags=php,arrays,filter |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\");\n$result = array_filter($array, function($var) {\n\
    \    return strpos($var, \"a\") !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Much more elegant than using array_filter\
    \ and a closure.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much\
    \ more elegant than using array_filter and a closure.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Much more elegant than using array_filter and\
    \ a closure.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much more\
    \ elegant than using array_filter and a closure.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Much more elegant than using array_filter and a closure.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\"\
    );\n$result = array_filter($array, function($var) {\n    return strpos($var, \"\
    a\") !== false;\n});\n</code>\n<|/ a tags=php,arrays,filter |>\n<| c |>\nThis\
    \ should be the accepted answer. Much more elegant than using array_\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcs21ema_.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kcvef5_.php:19\n\
    Stack trace:\n#0 /tmp/tmp0kcvef5_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0kcvef5_.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynaynnea.php:18\n\
    Stack trace:\n#0 /tmp/tmpynaynnea.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpynaynnea.php\
    \ on line 18\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = array();\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== FALSE) {\n      $result[] = $string;\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $result = array();\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== FALSE) {\n      $result[] = $string;\n \
    \   }\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    Thanks so much! This was exactly what I was looking for!\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== FALSE;\n});\n</code>\n<|/ a dscore=4 |>\n\
    <| c |>\nThanks so much! This was exactly what I was looking for!\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== FALSE;\n});\n</code>\n<|/\
    \ a dscore=4 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== FALSE;\n});\n</code>\n\
    <|/ a dscore=3 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== FALSE;\n\
    });\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== FALSE;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== FALSE;\n});\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqya3ghwc.php on line 16

    '
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays,string |>\n<| c |>\nThanks, this works great! I added a little\
    \ bit of code to make it case insensitive.\n<|/ c |>\n<| c |>\nThanks, I added\
    \ a little bit of code to make it case insensitive.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n<?php\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n\
    $search = \"a\";\n$result = array_filter($array, function($value) use ($search)\
    \ {\n    return strpos($value, $search) !== false;\n});\nprint_r($result);\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Simple, concise\
    \ and effective.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple,\
    \ concise and effective.\n<|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\nprint_r($result);\n</code>\n<|/ a dscore=5 |>\n<|\
    \ c |>\nThis should be the accepted answer. Simple, concise and effective.\n<|/\
    \ c |>\n<| a dscore=4 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays,string |>\n<| a dscore=4 |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\nprint_r($result);\n</code>\n<|/ a tags=php,arrays,string |>\n<| a |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result\
    \ = array_\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbyfttl6i.php on line 12

    '
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmz3yb35.php:19\n\
    Stack trace:\n#0 /tmp/tmpbmz3yb35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbmz3yb35.php\
    \ on line 19\n"
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 0
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  $filtered = array();\n  foreach ($strings as $string) {\n \
    \   if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730705
- exit_code: 255
  program: "<?php\n// Filter an input array of strings only for ones that contain\
    \ given substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n//\
    \ >>> filter_by_substring(array(\"abc\", \"bacd\", \"cde\", \"array\"), \"a\"\
    )\n// array(\"abc\", \"bacd\", \"array\")\nfunction filter_by_substring($strings,\
    \ $substring) {\n  return array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThis doesn't work if you\
    \ have a string that has multiple occurrences of the substring.\n<|/ c |>\n<|\
    \ c |>\n: Yes, it does. I tested it before posting, and it works fine.\n<|/ c\
    \ |>\n<| c |>\n: I added a test case to my answer.\n<|/ c |>\n<| c |>\n: I added\
    \ a test case to my answer.\n<|/ c |>\n<| c |>\n: I added a test case to my answer.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThis doesn't work if\
    \ you have a string that has multiple occurrences of the substring.\n<|/ c |>\n\
    <| c |>\n: It does. I tested it before posting, and it works fine.\n<|/ c |>\n\
    <| c |>\n: I added a test case to my answer.\n<|/ c |>\n<| c |>\n: I added a test\
    \ case to my answer.\n<|/ c |>\n<| c |>\n: I added a test case to my answer.\n\
    <|/ c |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3funcetw.php on line 12

    '
  timestamp: 1659730705

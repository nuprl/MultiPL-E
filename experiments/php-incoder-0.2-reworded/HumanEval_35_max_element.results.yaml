language: php
name: HumanEval_35_max_element
results:
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't\
    \ work when there are multiple max values.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ when there are multiple max values.\n<|/ c |>\n<| c |>\nThis doesn't work when\
    \ there are multiple max values.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work when there are multiple\
    \ max values.\n<|/ c |>\n<| c |>\nThis doesn't work when there are multiple max\
    \ values.\n<|/ c |>\n<| c |>\nThis doesn't work when there are multiple max values.\n\
    <|/ c |>\n<| c |>\nThis doesn't work when there are multiple max values.\n<|/\
    \ c |>\n<| a tags=arrays,php |>\n<code>\n$max = max($array);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work when there are multiple max values.\n<|/ c |>\n\
    <| c |>\nThis doesn't work when there are multiple max values.\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work when there are multiple max values.\n<|/ c |>\n<| c |>\n\
    This doesn't work when there are multiple max values.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work when there are multiple max values.\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\n$max = max($array);\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis\
    \ doesn't work when there are multiple max values.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work when there are multiple max values.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ when there are multiple max values.\n<|/ c |>\n<| c |>\nThis doesn't work when\
    \ there are multiple max values.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work when there are multiple\
    \ max values.\n<|/ c |>\n<| c |>\nThis doesn't work when there are multiple max\
    \ values.\n<|/ c |>\n<| c |>\nThis doesn't work \nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppv_auht1.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n == 0) {\n        return null;\n    }\n    $max = reset($l);\n    for\
    \ ($i = 1; $i < $n; ++$i) {\n        if ($l[$i] > $max) {\n            $max =\
    \ $l[$i];\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpiqyi4pfv.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return $l[0];\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8licuvzz.php:18\n\
    Stack trace:\n#0 /tmp/tmp8licuvzz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8licuvzz.php\
    \ on line 18\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=5 tags=php,arrays |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and elegant.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$max = max($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should\
    \ be the accepted answer. Simple and elegant.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    $max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=5 |>\n<code>\n\
    $max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n\
    <code>\n$max = max($array);\n</code>\n<|/ a dscore=5 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$max = max($array);\n</code>\n<|/ a dscore=5 |>\n<| a dscore=5 |>\n\
    <code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=5\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk_y94dw4.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $m = $l[0];\n\
    \    foreach ($l as $n) {\n        if ($n > $m) {\n            $m = $n;\n    \
    \    }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnnvzg3m.php:17\n\
    Stack trace:\n#0 /tmp/tmpcnnvzg3m.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpcnnvzg3m.php\
    \ on line 17\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i = 0; $i < $n; $i++) {\n        if($l[$i] > $l[$m])\
    \ {\n            $m = $i;\n        }\n    }\n    return $l[$m];\n}\n</code>\n\
    <|/ a |>\n<| c |>\nI like your answer, but I think it would be better to use a\
    \ foreach loop instead of a for loop. Also, why not use array_search instead of\
    \ array_reverse?\n<|/ c |>\n<| c |>\nI agree with you, foreach is better. array_search\
    \ is also a good idea, but array_search is case sensitive, while array_reverse\
    \ is not.\n<|/ c |>\n<| c |>\nI agree with you as well, array_search is case sensitive,\
    \ while array_reverse is not.\n<|/ c |>\n<| c |>\nI agree with you as well, array_search\
    \ is case sensitive, while array_reverse is not.\n<|/ c |>\n<| a |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$max = max($array);\n</code>\n<|/ a tags=php,arrays\
    \ dscore=5 |>\n<| c |>\nThis doesn't answer the question, which is about finding\
    \ the highest value in an array.\n<|/ c |>\n<| c |>\nThis doesn't answer the question,\
    \ which is about finding the highest value in an array.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't answer the question, which is about finding the highest value in an\
    \ array.\n<|/ c |>\n<| c |>\nThis doesn't answer the question, which is about\
    \ finding the highest value in an array.\n<|/ c |>\n<| c |>\nThis doesn't answer\
    \ the question, which is about finding the highest value in an array.\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't answer the question, which is\
    \ about finding the highest value in an array.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$max = max($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't answer the question, which is about finding the highest\
    \ value in an array.\n<|/ c |>\n<| a |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n\
    $max = max($array);\n</code>\n<|/ a \nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcs76x1g3.php on line 18

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return reset($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqp4ophb3.php:16\n\
    Stack trace:\n#0 /tmp/tmpqp4ophb3.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpqp4ophb3.php\
    \ on line 16\n"
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnnvzg3m.php:17\n\
    Stack trace:\n#0 /tmp/tmpcnnvzg3m.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpcnnvzg3m.php\
    \ on line 17\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_values($l);\n\
    \    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdevhewnb.php:19\n\
    Stack trace:\n#0 /tmp/tmpdevhewnb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpdevhewnb.php\
    \ on line 19\n"
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h4r8ak0.php:16\n\
    Stack trace:\n#0 /tmp/tmp5h4r8ak0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp5h4r8ak0.php\
    \ on line 16\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ answer the question. OP asked for \"the most common element\", not \"the element\
    \ with the highest count\".\n<|/ c |>\n<| c |>\nThis answer does answer the question.\
    \ OP asked for the most common element. `array_count_values()` returns an array\
    \ with keys and values being the number of occurrences of each element in the\
    \ array. `max()` returns the highest value from that array.\n<|/ c |>\n<| c |>\n\
    This answer doesn't answer the question. OP asked for the most common element.\
    \ `array_count_values()` returns an array with keys and values being the number\
    \ of occurrences of each element in the array. `max()` returns the highest value\
    \ from that array.\n<|/ c |>\n<| c |>\nThis answer doesn't answer the question.\
    \ OP asked for the most common element. `array_count_values()` returns an array\
    \ with keys and values being the number of occurrences of each element in the\
    \ array. `max()` returns the highest value from that array.\n<|/ c |>\n<| c |>\n\
    This answer doesn't answer the question. OP asked for the most common element.\
    \ `array_count_values()` returns an array with keys and values being the number\
    \ of occurrences of each element in the array. `max()` returns the highest value\
    \ from that array.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1, 2, 3,\
    \ 4, 4, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\
    \ 6, 6, 6, 6, 6, 6, 6, \nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp58n2v3st.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    $i = 0;\n    while($i < $m) {\n        if($l[$i] > $l[$m])\
    \ {\n            $m = $i;\n        }\n        $i++;\n    }\n    return $l[$m];\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work if the array is empty or contains only a single element\n\
    <|/ c |>\n<| c |>\nIt does work, try it out for yourself. It returns `null` if\
    \ the array is empty or contains only a single element\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work if you pass it an empty array or an array with only one element.\
    \ Try it out for yourself.\n<|/ c |>\n<| c |>\nIt does work, try it out for yourself.\
    \ It returns `null` if the array is empty or contains only a single element\n\
    <|/ c |>\n<| c |>\nIt does work, try it out for yourself. It returns `null` if\
    \ the array is empty or contains only a single element\n<|/ c |>\n<| a |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$max = max($array);\n</code>\n<|/ a tags=php,arrays\
    \ dscore=5 |>\n<| c |>\nThis doesn't work if the array is empty or contains only\
    \ a single element\n<|/ c |>\n<| c |>\nThis doesn't work if the array is empty\
    \ or contains only a single element\n<|/ c |>\n<| c |>\nThis doesn't work if the\
    \ array is empty or contains only a single element\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if the array is empty or contains only a single element\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work if the array is empty or contains only a single element\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if the array is\
    \ empty or contains only a single element\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if the array is empty or contains only a single element\n<|/ c |>\n<| c |>\n\
    This doesn't work if the array is empty or contains only a single element\n<|/\
    \ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c \nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp16y8k2ft.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $m = current($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $m) {\n            $m = $e;\n    \
    \    }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnnvzg3m.php:17\n\
    Stack trace:\n#0 /tmp/tmpcnnvzg3m.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpcnnvzg3m.php\
    \ on line 17\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = [\n    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd'\
    \ => 4,\n    'e' => 5,\n    'f' => 6,\n    'g' => 7,\n];\n\n$max = $array['a'];\n\
    foreach ($array as $key => $value) {\n    if ($value > $max) {\n        $max =\
    \ $value;\n    }\n}\n\nvar_dump($max);\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This solution works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis solution\
    \ works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis solution works perfectly\
    \ for me. Thanks!\n<|/ c |>\n<| c |>\nThis solution works perfectly for me. Thanks!\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$max = $array[0];\nforeach ($array as $key\
    \ => $value) {\n    if ($value > $max) {\n        $max = $value;\n    }\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis solution works perfectly for me. Thanks!\n\
    <|/ c |>\n<| c |>\nThis solution works perfectly for me. Thanks!\n<|/ c |>\n<|\
    \ a dscore=5 |>\n<code>\n$max = $array[0];\nforeach ($array as $key => $value)\
    \ {\n    if ($value > $max) {\n        $max = $value;\n    }\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nThis solution works perfectly for me. Thanks!\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$max = $array[0];\nforeach ($array\
    \ as $key => $value) {\n    if ($value > $max) {\n        $max = $value;\n   \
    \ }\n}\n</code>\n<|/ a dscore=4 |>\n<| a tags=php,arrays |>\n<code>\n$max = $array[0];\n\
    foreach ($array as $key => $value) {\n    if ($value > $max) {\n        $max =\
    \ $value;\n    }\n}\n</code>\n<|/ a dscore=4 |>\n<| a \nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp51gbpbon.php on line 16

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=5 tags=php,arrays |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly and it's simple.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly and it's simple.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly\
    \ and it's simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly and it's simple.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and it's simple.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and it's simple.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. Works perfectly and it's simple.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly and it's simple.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly and it's simple.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's simple.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly\
    \ and it's simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly and it's simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and it's simple.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    $\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmcosv4uw.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return $l[0];\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg6igmmg.php:17\n\
    Stack trace:\n#0 /tmp/tmpdg6igmmg.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpdg6igmmg.php\
    \ on line 17\n"
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n<?php\n$array1\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$array2 = array(1,2,3,4,5,6,7,8,9,10);\n$array3\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n\n$array4 = array_merge($array1,$array2,$array3);\n\
    $array5 = array_unique($array4);\n$array6 = array_intersect($array1,$array2,$array3);\n\
    $array7 = array_diff($array1,$array2,$array3);\n$array8 = array_diff($array1,$array2,$array3);\n\
    \n$array9 = array_merge($array5,$array6,$array7,$array8);\n$array10 = array_filter($array9,function($var){return\
    \ $var != 0;});\n$array11 = array_keys($array10);\n$array12 = array_values($array10);\n\
    $array13 = array_slice($array10,0,1);\n$array14 = array_slice($array10,1,1);\n\
    $array15 = array_slice($array10,2,1);\n$array16 = array_slice($array10,3,1);\n\
    $array17 = array_slice($array10,4,1);\n$array18 = array_slice($array10,5,1);\n\
    $array19 = array_slice($array10,6,1);\n$array20 = array_slice($array10,7,1);\n\
    $array21 = array_slice($array10,8,1);\n$array22 = array_slice($array10,9,1);\n\
    $array23 = array_slice($array10,10,1);\n\n$array24 = array_merge($array11,$array12,$array13,$array14,$array15,$array16,$array17,$array18,$array19,$array20,$array21,$array22,$array23);\n\
    $array25 = array_unique($array24);\n$array26 = array_intersect($array11,$array12,$array13,$array14,$array15,$array16,$array17,$array18,$array19,$array20,$array21,$array22,$array23);\n\
    $array27 = array_diff($array11,$array12,$array13,$array14,$array15,$array16,$array17,$array18,$array19,$array20,$array21,$array22,$array23);\n\
    $array28 = \nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpm66krvuu.php on line 16

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if you have\
    \ negative numbers in the array\n<|/ c |>\n<| a dscore=4 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpv386hwnd.php on line 16

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, but this answer does not explain how it works. I believe that it is\
    \ better to explain the algorithm and how it works, instead of just providing\
    \ a piece of code.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No\
    \ need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$max = 0;\nforeach ($array as $value) {\n    if ($value > $max)\
    \ {\n        $max = $value;\n    }\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| a |>\n<code>\n$max = max($array);\n</code>\n<|/ a dscore=5\
    \ tags=php,arrays |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c \nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkae9y83p.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h4r8ak0.php:16\n\
    Stack trace:\n#0 /tmp/tmp5h4r8ak0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp5h4r8ak0.php\
    \ on line 16\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return $l[0];\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8licuvzz.php:18\n\
    Stack trace:\n#0 /tmp/tmp8licuvzz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8licuvzz.php\
    \ on line 18\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"\
    f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"\
    s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$max = $array[0];\n$maxIndex\
    \ = 0;\n$maxLength = 1;\nfor($i=1;$i<count($array);$i++){\n    if($array[$i] >\
    \ $max){\n        $max = $array[$i];\n        $maxIndex = $i;\n        $maxLength\
    \ = 1;\n    }\n    elseif($array[$i] == $max){\n        $maxLength++;\n    }\n\
    }\necho \"Max Value is $max and it's index is $maxIndex and it's length is $maxLength\"\
    ;\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"a\"\
    ,\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\"\
    ,\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$max\
    \ = $array[0];\n$maxIndex = 0;\n$maxLength = 1;\nfor($i=1;$i<count($array);$i++){\n\
    \    if($array[$i] > $max){\n        $max = $array[$i];\n        $maxIndex = $i;\n\
    \        $maxLength = 1;\n    }\n    elseif($array[$i] == $max){\n        $maxLength++;\n\
    \    }\n}\necho \"Max Value is $max and it's index is $maxIndex and it's length\
    \ is $maxLength\";\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"\
    j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"\
    w\",\"x\",\"y\",\"z\");\n$max = $array[0];\n$maxIndex = 0;\n$maxLength = 1;\n\
    for($i=1;$i<count($array);$i++){\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsdp3i5m2.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like this solution,\
    \ but I wonder if there is a way to make it work with associative arrays as well.\n\
    <|/ c |>\n<| c |>\n: Yes, it works with associative arrays too. Just replace `array_search`\
    \ with `array_key_exists`.\n<|/ c |>\n<| c |>\n: I added a version that works\
    \ with associative arrays as well.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ works with associative arrays as well.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with associative arrays as well.\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpexli3bev.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a dscore=0 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $min = min($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post.\n<|/ c |>\n<| c |>\nThis does provide\
    \ an answer to the question. He asked how to find the max and min of an array.\
    \ He didn't ask for an alternative to max() and min().\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n$min = min($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis does not provide an answer to\
    \ the question. To critique or request clarification from an author, leave a comment\
    \ below their post.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n$array = array(1, 2,\
    \ 3, 4, 5);\n$max = max($array);\n$min = min($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $min = min($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$max = max($array);\n$min = min($array);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or \nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2i6f4sf2.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a dscore=1 |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$max =\
    \ max($array);\n$min = min($array);\n$sum = array_sum($array);\n$avg = array_sum($array)\
    \ / count($array);\n$median = array_sum($array) / count($array) / 2;\n$mode =\
    \ array_count_values($array);\n$unique = array_unique($array);\n$unique_count\
    \ = count($unique);\n$unique_count = array_count_values($unique);\n$unique_count\
    \ = array_keys($unique_count);\n$unique_count = array_values($unique_count);\n\
    $unique_count = array_unique($unique_count);\n$unique_count = array_count_values($unique_count);\n\
    $unique_count = array_keys($unique_count);\n$unique_count = array_values($unique_count);\n\
    $unique_count = array_unique($unique_count);\n$unique_count = array_count_values($unique_count);\n\
    $unique_count = array_keys($unique_count);\n$unique_count = array_values($unique_count);\n\
    $unique_count = array_unique($unique_count);\n$unique_count = array_count_values($unique_count);\n\
    $unique_count = array_keys($unique_count);\n$unique_count = array_values($unique_count);\n\
    $unique_count = array_unique($unique_count);\n$unique_count = array_count_values($unique_count);\n\
    $unique_count = array_keys($unique_count);\n$unique_count = array_values($unique_count);\n\
    $unique_count = array_unique($unique_count);\n$unique_count = array_count_values($unique_count);\n\
    $unique_count = array_keys($unique_count);\n$unique_count = array_values($unique_count);\n\
    $unique_count = array_unique($unique_count);\n$unique_count = array_count_values($unique_count);\n\
    $unique_count = array_keys($unique_count);\n$unique_count = array_values($unique_count);\n\
    $unique_count = array_unique($unique_count);\n$unique_count = array_count_values($unique_count);\n\
    $unique_count = array_keys($unique_count);\n$unique_count = array_values($unique_count);\n\
    $unique_count = array_unique($\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnbdsuaao.php on line 17

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5_faluf9.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=2 |>\n<| a |>\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2inhnd8f.php on line 17

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should\
    \ be the accepted answer. Much more concise and elegant than using array_reduce.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Much more concise and elegant\
    \ than using array_reduce.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Much more concise and elegant than using array_reduce.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Much more concise and elegant than using array_reduce.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Much more concise and elegant\
    \ than using array_reduce.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$max =\
    \ max($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Much more concise and elegant than using array_reduce.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Much more concise and elegant than\
    \ using array_reduce.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Much more concise and elegant than using array_reduce.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Much more concise and elegant than using array_reduce.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Much more concise and elegant\
    \ than using array_reduce.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should be the accepted answer.\
    \ Much more concise and elegant than using array_reduce.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Much more concise and elegant than using array_reduce.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted \nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr1b2cbv2.php on line 16

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return reset($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqp4ophb3.php:16\n\
    Stack trace:\n#0 /tmp/tmpqp4ophb3.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpqp4ophb3.php\
    \ on line 16\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=5 tags=php,arrays |>\n<| c |>\nThis\
    \ should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<|\
    \ c |>\nI agree with you, this is much more elegant than the accepted answer.\
    \ Thanks!\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| c |>\nI agree with you, this is much more elegant than\
    \ the accepted answer. Thanks!\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should be\
    \ the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. No need to reinvent the \nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnab8yw6m.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $m = current($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $m) {\n            $m = $v;\n    \
    \    }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $l[0];\n    for ($i = 1; $i < $n; $i++) {\n        if ($l[$i] > $m)\
    \ {\n            $m = $l[$i];\n        }\n    }\n    return $m;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 tags=arrays,php\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n\
    <|/ c |>\n<| a |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n\
    </code>\n<|/ a tags=arrays,php dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = max($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(1,2,3,4,5,6,7,\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp12x03bgo.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should\
    \ be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$max = $array[0];\nforeach ($array\
    \ as $key => $value) {\n    if ($value > $max) {\n        $max = $value;\n   \
    \ }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| a |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays\
    \ dscore=5 |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent \nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjvskmt66.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\n\
    This doesn't work if the array is empty or contains only a single element. `max_element`\
    \ returns `0` instead of `null`.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = [1, 2, 3, 4, 5];\n$max = $array[0];\nforeach ($array as $value) {\n \
    \   if ($value > $max) {\n        $max = $value;\n    }\n}\n</code>\n<|/ a dscore=3\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = [1, 2, 3, 4, 5];\n$max = array_shift($array);\n\
    foreach ($array as $value) {\n    if ($value > $max) {\n        $max = $value;\n\
    \    }\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis doesn't work if the array\
    \ is empty or contains only a single element. `array_shift` returns `0` instead\
    \ of `null`.\n<|/ c |>\n<| a dscore=3 |>\n<code>\n$array = [1, 2, 3, 4, 5];\n\
    $max = array_shift($array);\nforeach ($array as $value) {\n    if ($value > $max)\
    \ {\n        $max = $value;\n    }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c\
    \ |>\nThis doesn't work if the array is empty or contains only a single element.\
    \ `array_shift` returns `0` instead of `null`.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = [1, 2, 3, 4, 5];\n$max = array_shift($array);\nforeach\
    \ ($array as $value) {\n    if ($value > $max) {\n        $max = $value;\n   \
    \ }\n}\n</code>\n<|/ a dscore=3 |>\n<| a tags=php,arrays |>\n<code>\n$array =\
    \ [1, 2, 3, 4, 5];\n$max = array_shift($array);\nforeach ($array as $value) {\n\
    \    if ($value > $max) {\n        $max = $value;\n    }\n}\n</code>\n<|/ a dscore=3\
    \ |>\n<| a dscore=3 |>\n<code>\n$array = [1, 2, 3, 4, 5];\n$max = array_shift($array);\n\
    foreach ($array as $value) {\n    if ($value > $max) {\n        $max = $value;\n\
    \    }\n}\n</code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpic0vb4tb.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i = 0; $i < $n; $i++) {\n        if($l[$i] > $l[$m])\
    \ {\n            $m = $i;\n        }\n    }\n    return $l[$m];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i=0;$i<$n;$i++) {\n        if($l[$i] > $l[$m]) {\n \
    \           $m = $i;\n        }\n    }\n    return $l[$m];\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work if you have multiple keys with the same value.\n<|/\
    \ c |>\n<| a dscore=2 |>\n<code>\n$array = array(\n    'a' => 1,\n    'b' => 2,\n\
    \    'c' => 3,\n    'd' => 4,\n    'e' => 5\n);\n\n$max = 0;\n$maxKey = null;\n\
    foreach ($array as $key => $value) {\n    if ($value > $max) {\n        $max =\
    \ $value;\n        $maxKey = $key;\n    }\n}\n\necho $maxKey;\n</code>\n<|/ a\
    \ tags=php,arrays |>\n<| a dscore=2 |>\n<code>\n$array = array(\n    'a' => 1,\n\
    \    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n    'e' => 5\n);\n\n$max = max($array);\n\
    $maxKey = array_search($max, $array);\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ dscore=1 |>\n<code>\n$array = array(\n    'a' => 1,\n    'b' => 2,\n    'c'\
    \ => 3,\n    'd' => 4,\n    'e' => 5\n);\n\n$max = 0;\n$maxKey = null;\nforeach\
    \ ($array as $key => $value) {\n    if ($value > $max) {\n        $max = $value;\n\
    \        $maxKey = $key;\n    }\n}\n\necho $maxKey;\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n    'a' => 1,\n    'b'\
    \ => 2,\n    'c' => 3,\n    'd' => 4,\n    'e' => 5\n);\n\n$max = 0;\n$maxKey\
    \ = null;\nforeach ($array as $key => $value) {\n    if ($value > $max) {\n  \
    \      $max = $value;\n        $maxKey = $key;\n    }\n}\n\necho $maxKey;\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n    'a' =>\
    \ 1,\n    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n    'e' => 5\n);\n\n$max =\
    \ 0;\n$maxKey = null;\nforeach ($array as $key => $value) {\n    if ($value >\
    \ $max) {\n        $max = $value;\n        $max\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps0cgjvhf.php on line 17

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution,\
    \ but I wonder if there is a way to make it work with associative arrays as well.\
    \ Something like `max(array_keys($array));` would work, but that doesn't work\
    \ with associative arrays.\n<|/ c |>\n<| c |>\n: Yes, it does. `array_keys($array)`\
    \ returns an array containing the keys of the associative array. `max()` returns\
    \ the largest element of the array.\n<|/ c |>\n<| c |>\n: I added an example to\
    \ the answer.\n<|/ c |>\n<| c |>\nI like this solution, but I wonder if there\
    \ is a way to make it work with associative arrays as well. Something like max(array_keys($array));\
    \  would work, but that doesn't work with associative arrays.\n<|/ c |>\n<| c\
    \ |>\n: Yes, it does. `array_keys($array)` returns an array containing the keys\
    \ of the associative array. `max()` returns the largest element of the array.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\" => 1, \"b\" =>\
    \ 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$max = max($array);\n</code>\n<|/ a\
    \ dscore=5 |>\n<| c |>\nThis doesn't work if you have an associative array and\
    \ want to find the max key value.\n<|/ c |>\n<| c |>\nThis doesn't work if you\
    \ have an associative array and want to find the max key value.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work if you have an associative array and want to find the\
    \ max key value.\n<|/ c |>\n<| c |>\nThis doesn't work if you have an associative\
    \ array and want to find the max key value.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if you have an associative array and want to find the max key value.\n<|/ c\
    \ |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" =>\
    \ 3, \"d\" => 4, \"e\" => 5);\n$max = max($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThis doesn't work if you have an associative array and want to\
    \ find the max key value.\n<|/ c |>\n<| c |>\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5718a6wz.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return current($l);\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hebai1c.php:18\n\
    Stack trace:\n#0 /tmp/tmp7hebai1c.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp7hebai1c.php\
    \ on line 18\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\n\
    I like this answer because it doesn't require any additional libraries. However,\
    \ it does require a little more memory than `array_reduce()`, so be careful if\
    \ you're working with large arrays.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| a dscore=5 tags=php,arrays |>\n\
    <code>\n$max = max($array);\n</code>\n<|/ a |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    $max = max($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$max =\
    \ max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfect\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmnnv6gmw.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This doesn't work if you have negative numbers in the array. `max_element([-10,\
    \ -9, -8, 7, -6, -5, -4, -3, -2, -1, 0])` returns `0` instead of `-10`.\n<|/ c\
    \ |>\n<| c |>\nI believe this would work if you just changed `>` to `<` in the\
    \ `if` statement.\n<|/ c |>\n<| c |>\n: Yes, you're right. I've edited my answer\
    \ to reflect this.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$max = $array[0];\nforeach\
    \ ($array as $value) {\n    if ($value > $max) {\n        $max = $value;\n   \
    \ }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have\
    \ negative numbers in the array. `max_element([-10, -9, -8, 7, -6, -5, -4, -3,\
    \ -2, -1, 0])` returns `0` instead of `-10`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    $max = $array[0];\nforeach ($array as $value) {\n    if ($value > $max) {\n  \
    \      $max = $value;\n    }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$max = $array[0];\nforeach ($array as $value) {\n    if ($value\
    \ > $max) {\n        $max = $value;\n    }\n}\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a dscore=2 |>\n<code>\n$max = $array[0];\nforeach ($array as $value) {\n   \
    \ if ($value > $max) {\n        $max = $value;\n    }\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=2 |>\n<code>\n$max = $array[0];\nforeach ($array as $value)\
    \ {\n    if ($value > $max) {\n        $max = $value;\n    }\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$max = $array[0];\nforeach\
    \ ($array as $value) {\n    if ($value > $max) {\n        $max = $value;\n   \
    \ }\n}\n</code>\n<|/ a dscore\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp2cjexp5.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnnvzg3m.php:17\n\
    Stack trace:\n#0 /tmp/tmpcnnvzg3m.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpcnnvzg3m.php\
    \ on line 17\n"
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return $l[0];\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8licuvzz.php:18\n\
    Stack trace:\n#0 /tmp/tmp8licuvzz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8licuvzz.php\
    \ on line 18\n"
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_keys($l);\n\
    \    return $l[0];\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2rf7y52y.php on line 12

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_keys($l);\n\
    \    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqf6c9ez.php:18\n\
    Stack trace:\n#0 /tmp/tmpaqf6c9ez.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpaqf6c9ez.php\
    \ on line 18\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't\
    \ work if you have negative numbers in the array.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for negative numbers, it works for positive numbers. If you have negative\
    \ numbers, just change the > to >=\n<|/ c |>\n<| c |>\nIt doesn't work for negative\
    \ numbers, it works for positive numbers. If you have negative numbers, just change\
    \ the > to >=\n<|/ c |>\n<| c |>\nIt doesn't work for negative numbers, it works\
    \ for positive numbers. If you have negative numbers, just change the > to >=\n\
    <|/ c |>\n<| c |>\nIt doesn't work for negative numbers, it works for positive\
    \ numbers. If you have negative numbers, just change the > to >=\n<|/ c |>\n<|\
    \ a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpayf7lrsh.php on line 17

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n$index\
    \ = array_search($max, $array);\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n\
    <code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = max($array);\n$index = array_search($max, $array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n\
    $index = array_search($max, $array);\n</code>\n<|/ a dscore=1 tags=php,arrays\
    \ |>\n<| a dscore=1 \nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpo9ru2fze.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=arrays,php |>\n<|\
    \ c |>\nThis doesn't answer the question. OP wants to find the highest number\
    \ in the array. Your code returns the highest number in the reverse order.\n<|/\
    \ c |>\n<| c |>\nThis is not what the OP asked for. He wants the highest number\
    \ in the array. Your code returns the highest number in the reverse order.\n<|/\
    \ c |>\n<| c |>\n: I see what you mean. I've updated my answer to reflect this.\n\
    <|/ c |>\n<| c |>\n: I see what you mean. I've updated my answer to reflect this.\n\
    <|/ c |>\n<| c |>\n: I see what you mean. I've updated my answer to reflect this.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$highest=max($array);\n</code>\n<|/\
    \ a dscore=5 |>\n<| c |>\nThis doesn't answer the question. OP wants to find the\
    \ highest number in the array. Your code returns the highest number in the reverse\
    \ order.\n<|/ c |>\n<| c |>\nThis doesn't answer the question. OP wants to find\
    \ the highest number in the array. Your code returns the highest number in the\
    \ reverse order.\n<|/ c |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to find the highest number in the array. Your code returns the highest number\
    \ in the reverse order.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$highest =\
    \ max($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't answer the question.\
    \ OP wants to find the highest number in the array. Your code returns the highest\
    \ number in the reverse order.\n<|/ c |>\n<| c |>\nThis doesn't answer the question.\
    \ OP wants to find the highest number in the array. Your code returns the highest\
    \ number in the reverse order.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$highest=max($array);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't answer the question.\
    \ OP wants to find the highest number in the array. Your code returns the highest\
    \ number in the reverse order.\n<|/ c |>\n<| a tags=arrays,php |>\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxhgtw2m7.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h4r8ak0.php:16\n\
    Stack trace:\n#0 /tmp/tmp5h4r8ak0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp5h4r8ak0.php\
    \ on line 16\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ answer the question. He wants to find the max element in the array and he doesn't\
    \ want to use any built-in functions.\n<|/ c |>\n<| c |>\n: I see your point,\
    \ but I believe that my answer does answer the question. He wants to find the\
    \ max element in the array and he doesn't want to use any built-in functions.\
    \ He also stated that he doesn't want to use any built-in functions. He also stated\
    \ that he doesn't want to use any built-in functions. He also stated that he doesn't\
    \ want to use any built-in functions. He also stated that he doesn't want to use\
    \ any built-in functions. He also stated that he doesn't want to use any built-in\
    \ functions. He also stated that he doesn't want to use any built-in functions.\
    \ He also stated that he doesn't want to use any built-in functions. He also stated\
    \ that he doesn't want to use any built-in functions. He also stated that he doesn't\
    \ want to use any built-in functions. He also stated that he doesn't want to use\
    \ any built-in functions. He also stated that he doesn't want to use any built-in\
    \ functions. He also stated that he doesn't want to use any built-in functions.\
    \ He also stated that he doesn't want to use any built-in functions. He also stated\
    \ that he doesn't want to use any built-in functions. He also stated that he doesn't\
    \ want to use any built-in functions. He also stated that he doesn't want to use\
    \ any built-in functions. He also stated that he doesn't want to use any built-in\
    \ functions. He also stated that he doesn't want to use any built-in functions.\
    \ He also stated that he doesn't want to use any built-in functions. He also stated\
    \ that he doesn't want to use any built-in functions. He also stated that he doesn't\
    \ want to use any built-in functions. He also stated that he doesn't want to use\
    \ any built-in functions. He also stated that he doesn't want to use any built-in\
    \ functions. He also stated that he doesn't want to use any built-in functions.\
    \ He also stated that he doesn't want to use any built-in functions. He also stated\
    \ that he doesn't want to use any built-in functions. He also stated that he doesn't\
    \ want to use any built-in functions. He also stated that he doesn't want to use\
    \ any \nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0g6_184k.php on line 16

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h4r8ak0.php:16\n\
    Stack trace:\n#0 /tmp/tmp5h4r8ak0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp5h4r8ak0.php\
    \ on line 16\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    $max = $l[$m];\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n == 0) {\n        return false;\n    }\n    $m = $l[0];\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n == 0) {\n        return false;\n    }\n    $m = $l[0];\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return $l[0];\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg6igmmg.php:17\n\
    Stack trace:\n#0 /tmp/tmpdg6igmmg.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpdg6igmmg.php\
    \ on line 17\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_keys($l);\n\
    \    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqf6c9ez.php:18\n\
    Stack trace:\n#0 /tmp/tmpaqf6c9ez.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpaqf6c9ez.php\
    \ on line 18\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should\
    \ be the accepted answer. No need to reinvent the wheel. Just use the built-in\
    \ PHP functions.\n<|/ c |>\n<| c |>\nI agree, this is much more elegant than the\
    \ accepted answer. Thanks!\n<|/ c |>\n<| c |>\nI agree with you, but this answer\
    \ doesn't take into account the fact that `max_element` can return `null` if the\
    \ array is empty. `array_filter` can help with that. `return max(array_filter($l));`\n\
    <|/ c |>\n<| c |>\n`array_filter` will remove all `null` values from the array,\
    \ so the result will be the same.\n<|/ c |>\n<| c |>\n`array_filter` will remove\
    \ all `null` values from the array, so the result will be the same.\n<|/ c |>\n\
    <| a tags=arrays,php |>\n<code>\n$max = max($array);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't take into account the fact that `max_element` can\
    \ return `null` if the array is empty. `array_filter` can help with that. `return\
    \ max(array_filter($l));`\n<|/ c |>\n<| c |>\n`array_filter` will remove all `null`\
    \ values from the array, so the result will be the same.\n<|/ c |>\n<| c |>\n\
    `array_filter` will remove all `null` values from the array, so the result will\
    \ be the same.\n<|/ c |>\n<| c |>\n`array_filter` will remove all `null` values\
    \ from the array, so the result will be the same.\n<|/ c |>\n<| c |>\n`array_filter`\
    \ will remove all `null` values from the array, so the result will be the same.\n\
    <|/ c |>\n<| a |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=arrays,php\
    \ dscore=5 |>\n<| c |>\nThis doesn't take into account the fact that `max_element`\
    \ can return `null` if the array is empty. `array_filter` can help with that.\
    \ `return max(array_filter($l));`\n<|/ c |>\n<| c |>\n`array_filter\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpude0d_6x.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't work for\
    \ me. I'm getting `Fatal error: Call to undefined function max_element()`\n<|/\
    \ c |>\n<| c |>\n: What PHP version are you using? `max_element()` was introduced\
    \ in PHP 5.3.0.\n<|/ c |>\n<| c |>\n: I added a version that works with PHP 5.2.17\
    \ and PHP 5.3.0.\n<|/ c |>\n<| c |>\n: I added a version that works with PHP 5.2.17\
    \ and PHP 5.3.0.\n<|/ c |>\n<| c |>\n: I added a version that works with PHP 5.2.17\
    \ and PHP 5.3.0.\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpshoral6w.php on line 16

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$array = [\n    'a' => 1,\n    'b' => 2,\n   \
    \ 'c' => 3,\n    'd' => 4,\n    'e' => 5,\n    'f' => 6,\n    'g' => 7,\n    'h'\
    \ => 8,\n    'i' => 9,\n    'j' => 10,\n    'k' => 11,\n    'l' => 12,\n    'm'\
    \ => 13,\n    'n' => 14,\n    'o' => 15,\n    'p' => 16,\n    'q' => 17,\n   \
    \ 'r' => 18,\n    's' => 19,\n    't' => 20,\n    'u' => 21,\n    'v' => 22,\n\
    \    'w' => 23,\n    'x' => 24,\n    'y' => 25,\n    'z' => 26,\n];\n\n$max =\
    \ max($array);\n$max = array_keys($array, $max);\n$max = $max[0];\necho $max;\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array\
    \ = [\n    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n    'e' =>\
    \ 5,\n    'f' => 6,\n    'g' => 7,\n    'h' => 8,\n    'i' => 9,\n    'j' => 10,\n\
    \    'k' => 11,\n    'l' => 12,\n    'm' => 13,\n    'n' => 14,\n    'o' => 15,\n\
    \    'p' => 16,\n    'q' => 17,\n    'r' => 18,\n    's' => 19,\n    't' => 20,\n\
    \    'u' => 21,\n    'v' => 22,\n    'w' => 23,\n    'x' => 24,\n    'y' => 25,\n\
    \    'z' => 26,\n];\n\n$max = max($array);\n$max = array_keys($array, $max);\n\
    $max = $max[0];\necho $max;\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = [\n    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n\
    \    'e' => 5,\n    'f' => 6,\n    'g' => 7,\n    'h' => 8,\n    'i' => 9,\n \
    \   'j' => 10,\n    'k' => 11,\n    'l' => 12,\n    'm' => 13,\n    'n' => 14,\n\
    \nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuz8lv14z.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n === 0) {\n        return null;\n    }\n    $m = $l[0];\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$max = max($array);\n$min\
    \ = min($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't answer the\
    \ question. OP asked for max and min in one line.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ answer the question. OP asked for max and min in one line.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$max = max($array);\n$min = min($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n$min = min($array);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n$min\
    \ = min($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=5 |>\n<code>\n\
    $max = max($array);\n$min = min($array);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=5 |>\n<code>\n$max = max($array);\n$min = min($array);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n$min\
    \ = min($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n\
    <code>\n$max = max($array);\n$min = min($array);\n</code>\n<|/ a dscore=5 |>\n\
    <| a |>\n<code>\n$max = max($array);\n$min = min($array);\n</code>\n<|/ a tags=php,arrays\
    \ dscore=5 |>\n<| a tags=php,arrays |>\n<code>\n$max = max($array);\n$min = min($array);\n\
    </code>\n<|/ a dscore=5 |>\n<| a tags=php,arrays |>\n<code>\n$max = max($array);\n\
    $min = min($array);\n</code>\n<|/ a dscore=5 |>\n<| a |>\n<code>\n$max = max(\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5xerllqj.php on line 16

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_values($l);\n\
    \    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdevhewnb.php:19\n\
    Stack trace:\n#0 /tmp/tmpdevhewnb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpdevhewnb.php\
    \ on line 19\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h4r8ak0.php:16\n\
    Stack trace:\n#0 /tmp/tmp5h4r8ak0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp5h4r8ak0.php\
    \ on line 16\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly and it's easy to understand.\n\
    <|/ c |>\n<| c |>\nI like this answer because it's very simple, easy to understand,\
    \ and doesn't require any additional libraries.\n<|/ c |>\n<| c |>\nI like this\
    \ answer because it's very simple, easy to understand, and doesn't require any\
    \ additional libraries.\n<|/ c |>\n<| c |>\nI like this answer because it's very\
    \ simple, easy to understand, and doesn't require any additional libraries.\n\
    <|/ c |>\n<| c |>\nI like this answer because it's very simple, easy to understand,\
    \ and doesn't require any additional libraries.\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$max = 0;\nforeach ($array as $value) {\n    if ($value > $max)\
    \ {\n        $max = $value;\n    }\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ answer is the simplest and most straightforward one. No additional libraries\
    \ required.\n<|/ c |>\n<| c |>\nThis answer is the simplest and most straightforward\
    \ one. No additional libraries required.\n<|/ c |>\n<| c |>\nThis answer is the\
    \ simplest and most straightforward one. No additional libraries required.\n<|/\
    \ c |>\n<| c |>\nThis answer is the simplest and most straightforward one. No\
    \ additional libraries required.\n<|/ c |>\n<| c |>\nThis answer is the simplest\
    \ and most straightforward one. No additional libraries required.\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThis answer is the simplest and most straightforward one. No additional\
    \ libraries required.\n<|/ c |>\n<| c |>\nThis answer is the simplest and most\
    \ straightforward one. No additional libraries required.\n<|/ c |>\n<| c |>\n\
    This answer is the simplest and most straightforward one. No additional libraries\
    \ required.\n<|/ c |>\n<| c |>\nThis answer is the simplest and most straightforward\
    \ one. \nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz0kmlz4d.php on line 17

    '
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $m = current($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $m) {\n            $m = $e;\n    \
    \    }\n    }\n    return $m;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This doesn't work if there are multiple max elements in the array. For example,\
    \ `max_element([10, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])` returns `-10` instead\
    \ of `123`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting it. `max_element([10,\
    \ 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])` returns `123`.\n<|/ c |>\n<| c |>\n\
    Yes, it does. I tested it before posting it. `max_element([10, 5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10])` returns `123`.\n<|/ c |>\n<| c |>\nYes, it does. I tested\
    \ it before posting it. `max_element([10, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])`\
    \ returns `123`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting\
    \ it. `max_element([10, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])` returns `123`.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args) {\n  \
    \  return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphggc7d07.php on line 17

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n\
    \    return $l;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtq9y2d_.php:19\n\
    Stack trace:\n#0 /tmp/tmpmtq9y2d_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmtq9y2d_.php\
    \ on line 19\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel. Just use PHP's native `max()`\
    \ function.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel. Just use PHP's native `max()` function.\n<|/ c |>\n<| c\
    \ |>\nThis should be the accepted answer. No need to reinvent the wheel. Just\
    \ use PHP's native `max()` function.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel. Just use PHP's native `max()` function.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel. Just use PHP's native `max()` function.\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\n$max = $array[0];\nforeach ($array as $key => $value) {\n    if ($value\
    \ > $max) {\n        $max = $value;\n    }\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\
    \ Just use PHP's native `max()` function.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel. Just use PHP's native `max()`\
    \ function.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel. Just use PHP's native `max()` function.\n<|/ c |>\n<| c\
    \ |>\nThis should be the accepted answer. No need to reinvent the wheel. Just\
    \ use PHP's native `max()` function.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel. Just use PHP's native `max()` function.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$max = array_reduce($array, function($max,\
    \ $value) {\n    return $max > $value ? $max : $value;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis should be the accepted answer. No \nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpg4wabf09.php on line 16

    '
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    $max = $l[$m];\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_keys($l);\n\
    \    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqf6c9ez.php:18\n\
    Stack trace:\n#0 /tmp/tmpaqf6c9ez.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpaqf6c9ez.php\
    \ on line 18\n"
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i=0;$i<$n;$i++) {\n        if($l[$i] > $l[$m]) {\n \
    \           $m = $i;\n        }\n    }\n    return $l[$m];\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    $max = $l[$m];\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n == 0) {\n        return false;\n    }\n    $m = $l[0];\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n === 0) {\n        return null;\n    }\n    $max = reset($l);\n   \
    \ for ($i = 1; $i < $n; ++$i) {\n        if ($l[$i] > $max) {\n            $max\
    \ = $l[$i];\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i=0;$i<$n;$i++) {\n        if($l[$i] > $l[$m]) {\n \
    \           $m = $i;\n        }\n    }\n    return $l[$m];\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $l[0];\n    for ($i = 1; $i < $n; $i++) {\n        if ($l[$i] > $m)\
    \ {\n            $m = $l[$i];\n        }\n    }\n    return $m;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729934

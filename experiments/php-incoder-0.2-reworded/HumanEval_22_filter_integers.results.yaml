language: php
name: HumanEval_22_filter_integers
results:
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id' => 2, 'name'\
    \ => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id' => 4, 'name'\
    \ => 'Jill'),\n    array('id' => 5, 'name' => 'Jack'),\n    array('id' => 6, 'name'\
    \ => 'Jill'),\n    array('id' => 7, 'name' => 'Jack'),\n    array('id' => 8, 'name'\
    \ => 'Jill'),\n    array('id' => 9, 'name' => 'Jack'),\n    array('id' => 10,\
    \ 'name' => 'Jill'),\n    array('id' => 11, 'name' => 'Jack'),\n    array('id'\
    \ => 12, 'name' => 'Jill'),\n    array('id' => 13, 'name' => 'Jack'),\n    array('id'\
    \ => 14, 'name' => 'Jill'),\n    array('id' => 15, 'name' => 'Jack'),\n    array('id'\
    \ => 16, 'name' => 'Jill'),\n    array('id' => 17, 'name' => 'Jack'),\n    array('id'\
    \ => 18, 'name' => 'Jill'),\n    array('id' => 19, 'name' => 'Jack'),\n    array('id'\
    \ => 20, 'name' => 'Jill'),\n    array('id' => 21, 'name' => 'Jack'),\n    array('id'\
    \ => 22, 'name' => 'Jill'),\n    array('id' => 23, 'name' => 'Jack'),\n    array('id'\
    \ => 24, 'name' => 'Jill'),\n    array('id' => 25, 'name' => 'Jack'),\n    array('id'\
    \ => 26, 'name' => 'Jill'),\n    array('id' => 27, 'name' => 'Jack'),\n    array('id'\
    \ => 28, 'name' => 'Jill'),\n    array('id' => 29, 'name' => 'Jack'),\n    array('id'\
    \ => 30, 'name' => 'Jill'),\n    array('id' => 31, 'name' => 'Jack'),\n    array('id'\
    \ => 32, 'name' => 'Jill'),\n    array('id' => 33, 'name' => 'Jack'),\n    array('id'\
    \ => 34, 'name' => 'Jill'),\n    array('id' => 35, 'name' => 'Jack'),\n    array('id'\
    \ => 36, 'name' => 'Jill'),\n    array('id' => 37, 'name\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz44sgbr1.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like this solution, but I\
    \ wonder if there is a way to do it without having to write an anonymous function?\
    \ I like that it's all in one place, but I wonder if there is a way to do it without\
    \ having to write an anonymous function.\n<|/ c |>\n<| c |>\nI added a version\
    \ without anonymous function\n<|/ c |>\n<| c |>\nI like the second solution, but\
    \ I wonder if there is a way to do it without having to write an anonymous function?\
    \ I like that it's all in one place, but I wonder if there is a way to do it without\
    \ having to write an anonymous function.\n<|/ c |>\n<| c |>\nI added a version\
    \ without anonymous function\n<|/ c |>\n<| c |>\nI like the second solution, but\
    \ I wonder if there is a way to do it without having to write an anonymous function?\
    \ I like that it's all in one place, but I wonder if there is a way to do it without\
    \ having to write an anonymous function.\n<|/ c |>\n<| a tags=arrays,php,filter\
    \ |>\n<code>\n$array = array(\"a\", 3.14, 5);\n\n$filtered = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n\nprint_r($filtered);\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nI like this solution, but I wonder if there\
    \ is a way to do it without having to write an anonymous function? I like that\
    \ it's all in one place, but I wonder if there is a way to do it without having\
    \ to write an anonymous function.\n<|/ c |>\n<| c |>\nI added a version without\
    \ anonymous function\n<|/ c |>\n<| a |>\n<code>\n$array = array(\"a\", 3.14, 5);\n\
    \n$filtered = array_filter($array, function($value){\n    return is_int($value);\n\
    });\n\nprint_r($filtered);\n</code>\n<|/ a dscore=1 tags=arrays,php,filter |>\n\
    <| c |>\nI like this solution, but I wonder if there is a way to do it without\
    \ having to write an anonymous function? I like that it's all in one place, but\
    \ I wonder if there is a way to do it without having to write an anonymous function.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n\n$filtered\
    \ = array_filter($array, function($value){\n    return is_\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9awy02ce.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\");\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\");\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\");\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\");\n$array = array_filter($array, function($value) {\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2yzrygwu.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqapl8uc.php:19\n\
    Stack trace:\n#0 /tmp/tmpwqapl8uc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwqapl8uc.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\
    $array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and it's simple.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and it's simple.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. Works perfectly and it's simple.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly and it's simple.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly and it's simple.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"\
    c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly and it's simple.\n<|/\
    \ c |>\n<| a |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"\
    d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value) {\n   \
    \ return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php dscore=5 |>\n<|\
    \ a tags=arrays,php |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" =>\
    \ 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5 |>\n<| a dscore=5\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<|\nfunction candidate(...$args) {\n \
    \   return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmlodritw.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\",\
    \ \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\
    $array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a |>\n<code>\n$array = array(\"a\"\
    , \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\");\n$array = array_filter($array, function($value) {\n  \
    \  return is_int($value);\n});\n</code>\n<|/ a dscore=1 tags=arrays,php |>\n<|\
    \ a tags=arrays,php |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\
    $array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\"\
    , \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\"\
    , \"x\", \"\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpylpx0ohw.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpj2tpda4m.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php,filter |>\n<code>\n\
    $array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function ($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php,filter\
    \ |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function\
    \ ($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=arrays,php,filter |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array\
    \ = array_filter($array, function ($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php,filter |>\n<code>\n$array = array(\"\
    a\", 3.14, 5);\n$array = array_filter($array, function ($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n$array =\
    \ array(\"a\", 3.14, 5);\n$array = array_filter($array, function ($value) {\n\
    \    return is_int($value);\n});\n</code>\n<|/ a dscore=1 tags=arrays,php,filter\
    \ |>\n<| a tags=arrays,php,filter |>\n<code>\n$array = array(\"a\", 3.14, 5);\n\
    $array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\"\
    , 3.14, 5);\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php,filter |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(\"a\", 3.14, 5);\n$array = array_filter($array, function ($value) {\n\
    \    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php,filter |>\n<|\
    \ a tags=arrays,php,filter |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array\
    \ = array_filter($array, function ($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14,\
    \ 5);\n$array = array_filter($array, function ($value) {\n    return is_int($\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpir5xotso.php on line 12

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id' => 2, 'name'\
    \ => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id' => 4, 'name'\
    \ => 'Jill'),\n    array('id' => 5, 'name' => 'Jack'),\n    array('id' => 6, 'name'\
    \ => 'Jill'),\n    array('id' => 7, 'name' => 'Jack'),\n    array('id' => 8, 'name'\
    \ => 'Jill'),\n    array('id' => 9, 'name' => 'Jack'),\n    array('id' => 10,\
    \ 'name' => 'Jill'),\n    array('id' => 11, 'name' => 'Jack'),\n    array('id'\
    \ => 12, 'name' => 'Jill'),\n    array('id' => 13, 'name' => 'Jack'),\n    array('id'\
    \ => 14, 'name' => 'Jill'),\n    array('id' => 15, 'name' => 'Jack'),\n    array('id'\
    \ => 16, 'name' => 'Jill'),\n    array('id' => 17, 'name' => 'Jack'),\n    array('id'\
    \ => 18, 'name' => 'Jill'),\n    array('id' => 19, 'name' => 'Jack'),\n    array('id'\
    \ => 20, 'name' => 'Jill'),\n    array('id' => 21, 'name' => 'Jack'),\n    array('id'\
    \ => 22, 'name' => 'Jill'),\n    array('id' => 23, 'name' => 'Jack'),\n    array('id'\
    \ => 24, 'name' => 'Jill'),\n    array('id' => 25, 'name' => 'Jack'),\n    array('id'\
    \ => 26, 'name' => 'Jill'),\n    array('id' => 27, 'name' => 'Jack'),\n    array('id'\
    \ => 28, 'name' => 'Jill'),\n    array('id' => 29, 'name' => 'Jack'),\n    array('id'\
    \ => 30, 'name' => 'Jill'),\n    array('id' => 31, 'name' => 'Jack'),\n    array('id'\
    \ => 32, 'name' => 'Jill'),\n    array('id' => 33, 'name' => 'Jack'),\n    array('id'\
    \ => 34, 'name' => 'Jill'),\n    array('id' => 35, 'name' => 'Jack'),\n    \n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkkeemkp8.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution, because\
    \ it doesn't require any additional libraries. However, it does require PHP >=\
    \ 5.3\n<|/ c |>\n<| c |>\nThis solution doesn't work for me on PHP 5.3.10. `array_filter`\
    \ returns an empty array. `array_map` works though.\n<|/ c |>\n<| c |>\nThis solution\
    \ doesn't work for me on PHP 5.3.10. `array_filter` returns an empty array. `array_map`\
    \ works though.\n<|/ c |>\n<| c |>\nThis solution doesn't work for me on PHP 5.3.10.\
    \ `array_filter` returns an empty array. `array_map` works though.\n<|/ c |>\n\
    <| c |>\nThis solution doesn't work for me on PHP 5.3.10. `array_filter` returns\
    \ an empty array. `array_map` works though.\n<|/ c |>\n<| a |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmtbh8o4x.php on line 12

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, 'is_int');\n}\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfikgccgi.php:17\n\
    Stack trace:\n#0 /tmp/tmpfikgccgi.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpfikgccgi.php\
    \ on line 17\n"
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqapl8uc.php:19\n\
    Stack trace:\n#0 /tmp/tmpwqapl8uc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwqapl8uc.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps99ub6ys.php:19\n\
    Stack trace:\n#0 /tmp/tmps99ub6ys.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps99ub6ys.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=2 |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$result\
    \ = array_filter($array, function($value){\n    return is_int($value);\n});\n\n\
    var_dump($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=2 |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\
    $result = array_filter($array, function($value){\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$result\
    \ = array_filter($array, function($value){\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$result = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n\nvar_dump($result);\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\" => 1,\
    \ \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$result = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n\nvar_dump($result);\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\" => 1,\
    \ \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$result = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n\nvar_dump($result);\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\" => 1,\
    \ \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$result = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n\nvar_dump($result);\n</code>\n\
    <|/ a d\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9l73ec_6.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps99ub6ys.php:19\n\
    Stack trace:\n#0 /tmp/tmps99ub6ys.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps99ub6ys.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps99ub6ys.php:19\n\
    Stack trace:\n#0 /tmp/tmps99ub6ys.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps99ub6ys.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx_qjanc.php:18\n\
    Stack trace:\n#0 /tmp/tmpnx_qjanc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnx_qjanc.php\
    \ on line 18\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\n$array = array(\"a\" => 1, \"b\"\
    \ => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=1 tags=php,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" =>\
    \ 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,arrays dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" =>\
    \ 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ tags=php,arrays |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" =>\
    \ 3, \"d\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp23tyy3_k.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=4 |>\n<| a tags=arrays,php |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpg_mleqf4.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6dudtvnr.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx_qjanc.php:18\n\
    Stack trace:\n#0 /tmp/tmpnx_qjanc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnx_qjanc.php\
    \ on line 18\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwn3g6p06.php:17\n\
    Stack trace:\n#0 /tmp/tmpwn3g6p06.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpwn3g6p06.php\
    \ on line 17\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx_qjanc.php:18\n\
    Stack trace:\n#0 /tmp/tmpnx_qjanc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnx_qjanc.php\
    \ on line 18\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps99ub6ys.php:19\n\
    Stack trace:\n#0 /tmp/tmps99ub6ys.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps99ub6ys.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx_qjanc.php:18\n\
    Stack trace:\n#0 /tmp/tmpnx_qjanc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnx_qjanc.php\
    \ on line 18\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\");\n\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n\nprint_r($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n$array = array(\"a\", \"\
    b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\
    m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"\
    x\", \"y\", \"z\");\n\n$array = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n\nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"\
    f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\n$array\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    \nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\",\
    \ \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n\nprint_r($array);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n\n$array = array_filter($array, function($value) {\n\
    \    return is_int(\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsq1bnntc.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a tags=php,arrays,filter |>\n<| a dscore=2 |>\n<code>\n$array\
    \ = array(\"a\", 3.14, 5);\n$filtered = array_filter($array, function($var) {\n\
    \    return is_int($var);\n});\n</code>\n<|/ a tags=php,arrays,filter |>\n<| a\
    \ tags=php,arrays,filter |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered\
    \ = array_filter($array, function($var) {\n    return is_int($var);\n});\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n\
    $filtered = array_filter($array, function($var) {\n    return is_int($var);\n\
    });\n</code>\n<|/ a tags=php,arrays,filter |>\n<| a tags=php,arrays,filter |>\n\
    <code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array, function($var)\
    \ {\n    return is_int($var);\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,filter\
    \ |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array,\
    \ function($var) {\n    return is_int($var);\n});\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array,\
    \ function($var) {\n    return is_int($var);\n});\n</code>\n<|/ a tags=php,arrays,filter\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array,\
    \ function($var) {\n    return is_int($var);\n});\n</code>\n<|/ a tags=php,arrays,filter\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array,\
    \ function($var) {\n    return is_int($var);\n});\n</code>\n<|/ a tags=php,arrays,filter\
    \ |>\n<| a tags=php,arrays,filter |>\n<code>\n$array = array(\"a\", 3.14, 5);\n\
    $filtered = array_filter($array, function($var) {\n    return is_int(\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw2937fmc.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple and effective.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple and effective.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple and effective.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple and effective.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple and effective.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array\
    \ = array_filter($array, function($var) {\n    return is_int($var);\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\" => 1, \"b\" =>\
    \ 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($var)\
    \ {\n    return is_int($var);\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ should be the accepted answer. Simple and effective.\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($var) {\n    return is_int($var);\n\
    });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ Simple and effective.\n<|/ c |>\n<| c |>\nThis \nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp06dr8kwr.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps99ub6ys.php:19\n\
    Stack trace:\n#0 /tmp/tmps99ub6ys.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps99ub6ys.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer. I've tried your solution\
    \ and it works fine. However I prefer to use `array_filter` as it is more readable.\
    \ Thanks again!\n<|/ c |>\n<| c |>\nI agree, `array_filter` is more readable.\
    \ I've added an example using `array_filter` as well.\n<|/ c |>\n<| c |>\nI agree\
    \ with you that `array_filter` is more readable. However I prefer to use `array_filter`\
    \ as it is more readable. Thanks again!\n<|/ c |>\n<| c |>\nI agree with you that\
    \ `array_filter` is more readable. However I prefer to use `array_filter` as it\
    \ is more readable. Thanks again!\n<|/ c |>\n<| c |>\nI agree with you that `array_filter`\
    \ is more readable. However I prefer to use `array_filter` as it is more readable.\
    \ Thanks again!\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\");\n$array = array_filter($array, function($value) {\n\
    \    return is_int($value);\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThanks\
    \ for your answer. I've tried your solution and it works fine. However I prefer\
    \ to use `array_filter` as it is more readable. Thanks again!\n<|/ c |>\n<| a\
    \ tags=arrays,php |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\");\n$array\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThanks for your answer. I've tried your solution\
    \ and it works fine. However I prefer to use `array_filter` as it is more readable.\
    \ Thanks again!\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\");\n$array = array_filter($array, function($value) {\n\
    \    return is_int($value);\n});\n</code>\n<|/ a dscore=4 |>\n<| a dscore=4 |>\n\
    <code>\n$array = array(\"a\", \"b\", \"c\", \"d\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpofzau7ag.php on line 16

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$array\
    \ = array(\"a\", 3.14, 5);\n$result = array_filter($array, function($value){\n\
    \    return is_int($value);\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$result\
    \ = array_filter($array, function($value){\n    return is_int($value);\n});\n\
    print_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $array = array(\"a\", 3.14, 5);\n$result = array_filter($array, function($value){\n\
    \    return is_int($value);\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$result = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(\"\
    a\", 3.14, 5);\n$result = array_filter($array, function($value){\n    return is_int($value);\n\
    });\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = array(\"a\", 3.14, 5);\n$result = array_filter($array, function($value){\n\
    \    return is_int($value);\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(\"a\", 3.14, 5);\n\
    $result = array_filter($array, function($value){\n    return is_int($value);\n\
    });\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = array(\"a\", 3.14, 5);\n$result = array_filter($array, function($value){\n\
    \    return is_int($value);\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(\"a\", 3.14, 5);\n\
    $result = array_filter($array, function($value){\n    return is_int($value);\n\
    \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpl_ggtu0t.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"\
    a\", 3.14, 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=2 |>\n<code>\n$array = array(\"\
    a\", 3.14, 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    a\", 3.14, 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    a\", 3.14, 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a |>\n<code>\n$array = array(\"a\"\
    , 3.14, 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php dscore=1 |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a\
    \ dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a d\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp39kj9ci8.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nI like to use array_filter()\
    \ for this kind of thing:\n<code>\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ tags=php,arrays |>\n<code>\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\n$filtered = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$filtered = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    $filtered = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$filtered\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$filtered = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=2 |>\n<code>\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ tags=php,arrays |>\n<code>\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\n$filtered = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$filtered = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\n$filtered\
    \ = array_filter($array, \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp52gkd0l4.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps99ub6ys.php:19\n\
    Stack trace:\n#0 /tmp/tmps99ub6ys.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps99ub6ys.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel. Just use array_filter and is_int.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\
    \ Just use array_filter and is_int.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel. Just use array_filter and is_int.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\
    \ Just use array_filter and is_int.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel. Just use array_filter and is_int.\n<|/\
    \ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\
    \ Just use array_filter and is_int.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel. Just use array_filter and is_int.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\
    \ Just use array_filter and is_int.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel. Just use array_filter and is_int.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\
    \ Just use array_filter and is_int.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array\
    \ = array(\"a\", 3.14, 5);\n$array = array_filter($array, function($value) {\n\
    \    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This should be the accepted answer. No need to reinvent the wheel. Just use array_filter\
    \ and is_int.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need\
    \ to reinvent the wheel. Just use array_filter\nfunction candidate(...$args) {\n\
    \    return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgzazm1zk.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Much more elegant than using array_filter and is_int.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Much more elegant than using array_filter\
    \ and is_int.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much more\
    \ elegant than using array_filter and is_int.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Much more elegant than using array_filter and is_int.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Much more elegant than\
    \ using array_filter and is_int.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array =\
    \ array(\"a\", 3.14, 5);\n$array = array_filter($array, function($value) {\n \
    \   return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php,filter |>\n<|\
    \ c |>\nThis should be the accepted answer. Much more elegant than using array_filter\
    \ and is_int.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much more\
    \ elegant than using array_filter and is_int.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Much more elegant than using array_filter and is_int.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Much more elegant than\
    \ using array_filter and is_int.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Much more elegant than using array_filter and is_int.\n<|/ c |>\n<|\
    \ a dscore=5 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php,filter\
    \ |>\n<| c |>\nThis should be the accepted answer. Much more elegant than using\
    \ array_filter and is_int.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"\
    a\", 3.14, 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tag\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdia58nv3.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2,\
    \ \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"a\"\
    \ => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2,\
    \ \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpflhm7o5y.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nI like using array_filter for\
    \ this:\n<code>\n$array = array(1, \"2\", 3, \"4\", 5, array(\"6\", \"7\"));\n\
    $filtered = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n$array = array(1,\
    \ \"2\", 3, \"4\", 5, array(\"6\", \"7\"));\n$filtered = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(1, \"2\", 3, \"4\", 5, array(\"\
    6\", \"7\"));\n$filtered = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(1, \"2\", 3, \"4\", 5, array(\"6\", \"7\"));\n$filtered\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n$array = array(1, \"2\", 3, \"4\"\
    , 5, array(\"6\", \"7\"));\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=1 tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(1, \"2\", 3, \"4\", 5, array(\"\
    6\", \"7\"));\n$filtered = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php |>\n\
    <code>\n$array = array(1, \"2\", 3, \"4\", 5, array(\"6\", \"7\"));\n$filtered\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(1, \"2\"\
    , 3, \"4\", 5, array(\"6\", \"7\"));\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnprc3h05.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=4 tags=php,arrays |>\n<| a dscore=4 |>\n<code>\n\
    $array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"\
    d\", \"e\");\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\n$array = array(\"a\"\
    , \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array =\
    \ array_filter($array, function($value) {\n    return is_numeric($value);\n});\n\
    </code>\n<|/ a dscore=2 tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\");\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\");\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, \n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4f3d8cc3.php on line 12

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution the best.\
    \ No need to reinvent the wheel. Thanks!\n<|/ c |>\n<| c |>\nI like this solution\
    \ the best. No need to reinvent the wheel. Thanks!\n<|/ c |>\n<| c |>\nI like\
    \ this solution the best. No need to reinvent the wheel. Thanks!\n<|/ c |>\n<|\
    \ c |>\nI like this solution the best. No need to reinvent the wheel. Thanks!\n\
    <|/ c |>\n<| c |>\nI like this solution the best. No need to reinvent the wheel.\
    \ Thanks!\n<|/ c |>\n<| a tags=php,arrays,filter |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| a tags=php,arrays,filter |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n\
    $array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis \n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpezazmy4y.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution, because\
    \ it doesn't require any additional libraries. However, it does require PHP 5.6+.\n\
    <|/ c |>\n<| c |>\nI like this solution as well, but I find it to be a little\
    \ bit more complicated than it needs to be. `array_filter` accepts a callback\
    \ that returns true or false, so you can just do `return is_int($value);` instead\
    \ of `return is_int($value) && $value;`\n<|/ c |>\n<| c |>\nI like it too, but\
    \ I find it to be a little bit more complicated than it needs to be. `array_filter`\
    \ accepts a callback that returns true or false, so you can just do `return is_int($value);`\
    \ instead of `return is_int($value) && $value;`\n<|/ c |>\n<| c |>\nI like this\
    \ solution as well, but I find it to be a little bit more complicated than it\
    \ needs to be. `array_filter` accepts a callback that returns true or false, so\
    \ you can just do `return is_int($value);` instead of `return is_int($value) &&\
    \ $value;`\n<|/ c |>\n<| c |>\nI like this solution as well, but I find it to\
    \ be a little bit more complicated than it needs to be. `array_filter` accepts\
    \ a callback that returns true or false, so you can just do `return is_int($value);`\
    \ instead of `return is_int($value) && $value;`\n<|/ c |>\n<| a |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps1656cxh.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx_qjanc.php:18\n\
    Stack trace:\n#0 /tmp/tmpnx_qjanc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnx_qjanc.php\
    \ on line 18\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array(\"a\", 3.14, 5);\n$array = array_filter($array, function($v){\n    return\
    \ is_int($v);\n});\n</code>\n<|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function($v){\n\
    \    return is_int($v);\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    $array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function($v){\n\
    \    return is_int($v);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a |>\n<code>\n\
    $array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function($v){\n\
    \    return is_int($v);\n});\n</code>\n<|/ a tags=arrays,php dscore=2 |>\n<| a\
    \ dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($v){\n    return is_int($v);\n});\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($v){\n    return is_int($v);\n});\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($v){\n    return is_int($v);\n});\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a tags=arrays,php |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($v){\n    return is_int($v);\n});\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=arrays,php |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($v){\n    return is_int($v);\n});\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=arrays,php |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function($v){\n    return is_\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpct9o5ge3.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx_qjanc.php:18\n\
    Stack trace:\n#0 /tmp/tmpnx_qjanc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnx_qjanc.php\
    \ on line 18\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this answer because it\
    \ doesn't require any additional libraries. However, it does require PHP >= 5.3\n\
    <|/ c |>\n<| c |>\nI like this answer because it doesn't require any additional\
    \ libraries. However, it does require PHP >= 5.3\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly in PHP 5.3+\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly in PHP 5.3+\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly in PHP 5.3+\n<|/ c |>\n<|\
    \ a tags=arrays,php |>\n<code>\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbferil7i.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt1cp6zf_.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$array\
    \ = array_filter($array, function ($value) {\n    return is_int($value);\n});\n\
    \nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n\
    $array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" =>\
    \ 5);\n\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" =>\
    \ 5);\n\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" =>\
    \ 5);\n\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" =>\
    \ 5);\n\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n\nprint_\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2vc_s_9j.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp642342ic.php on line 12

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(\n    array(\"a\" => 1, \"b\" => 2, \"c\" => 3),\n    array(\"a\" =>\
    \ 4, \"b\" => 5, \"c\" => 6),\n    array(\"a\" => 7, \"b\" => 8, \"c\" => 9)\n\
    );\n\n$result = array_map(function($item) {\n    return array_filter($item, function($value)\
    \ {\n        return is_int($value);\n    });\n}, $array);\n\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n\
    \    array(\"a\" => 1, \"b\" => 2, \"c\" => 3),\n    array(\"a\" => 4, \"b\" =>\
    \ 5, \"c\" => 6),\n    array(\"a\" => 7, \"b\" => 8, \"c\" => 9)\n);\n\n$result\
    \ = array();\nforeach($array as $a){\n    $result = array_merge($result, array_filter($a,\
    \ function($v){\n        return is_int($v);\n    }));\n}\n\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n$array = array(\n    array(\"a\"\
    \ => 1, \"b\" => 2, \"c\" => 3),\n    array(\"a\" => 4, \"b\" => 5, \"c\" => 6),\n\
    \    array(\"a\" => 7, \"b\" => 8, \"c\" => 9)\n);\n\n$result = array();\nforeach($array\
    \ as $a){\n    $result = array_merge($result, array_filter($a, function($v){\n\
    \        return is_int($v);\n    }));\n}\n\nprint_r($result);\n</code>\n<|/ a\
    \ tags=php,arrays dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n\
    \    array(\"a\" => 1, \"b\" => 2, \"c\" => 3),\n    array(\"a\" => 4, \"b\" =>\
    \ 5, \"c\" => 6),\n    array(\"a\" => 7, \"b\" => 8, \"c\" => 9)\n);\n\n$result\
    \ = array();\nforeach($array as $a){\n    $result = array_merge($result, array_filter($a,\
    \ function($v){\n        return is_int($v);\n    }));\n}\n\nprint_r($result);\n\
    </code>\n<|/ a dscore\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnjjlpa7n.php on line 12

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like your solution, however\
    \ it only works with integers. I added a solution that works for any type of value.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\n    'a' => 1,\n  \
    \  'b' => 2,\n    'c' => 3,\n    'd' => 4,\n    'e' => 5,\n    'f' => 6,\n   \
    \ 'g' => 7,\n    'h' => 8,\n    'i' => 9,\n    'j' => 10,\n    'k' => 11,\n  \
    \  'l' => 12,\n    'm' => 13,\n    'n' => 14,\n    'o' => 15,\n    'p' => 16,\n\
    \    'q' => 17,\n    'r' => 18,\n    's' => 19,\n    't' => 20,\n    'u' => 21,\n\
    \    'v' => 22,\n    'w' => 23,\n    'x' => 24,\n    'y' => 25,\n    'z' => 26,\n\
    );\n\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(\n    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n\
    \    'e' => 5,\n    'f' => 6,\n    'g' => 7,\n    'h' => 8,\n    'i' => 9,\n \
    \   'j' => 10,\n    'k' => 11,\n    'l' => 12,\n    'm' => 13,\n    'n' => 14,\n\
    \    'o' => 15,\n    'p' => 16,\n    'q' => 17,\n    'r' => 18,\n    's' => 19,\n\
    \    't' => 20,\n    'u' => 21,\n    'v' => 22,\n    'w' => 23,\n    'x' => 24,\n\
    \    'y' => 25,\n    'z' => 26,\n);\n\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n\nprint_r($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\n    'a' => 1,\n    'b'\
    \ => 2,\n    'c' => 3,\n    'd' => 4,\n    'e' => 5,\n    'f' => 6,\n    'g' =>\
    \ 7,\n    'h' => 8,\n    'i' => 9,\n    'j' => 10,\n    'k' => 11,\n    'l' =>\
    \ 12,\n    'm' => 13,\n    'n' => 14,\n    'o' => 15,\n    'p' => 16,\n\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpepkf4wc8.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu_tv0iji.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks, this helped me a lot. Just a small\
    \ note, if you use array_filter() instead of array_map() then you don't need to\
    \ use array_values() afterwards.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array =\
    \ array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"),\n \
    \   array(\"g\", \"h\", \"i\")\n);\n\n$array = array_map(function($a) { return\
    \ array_filter($a); }, $array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\"\
    , \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\")\n);\n\n$array = array_map(function($a)\
    \ { return array_filter($a); }, $array);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(\n    array(\"a\", \"b\", \"c\"),\n \
    \   array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\")\n);\n\n$array\
    \ = array_map(function($a) { return array_filter($a); }, $array);\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = array(\n    array(\"\
    a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\",\
    \ \"i\")\n);\n\n$array = array_map(function($a) { return array_filter($a); },\
    \ $array);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"\
    ),\n    array(\"g\", \"h\", \"i\")\n);\n\n$array = array_map(function($a) { return\
    \ array_filter($a); }, $array);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"\
    e\", \"f\"),\n    array(\"g\", \"h\", \"i\")\n);\n\n$array = array_map(function($a)\
    \ { return array_filter($a); }, $array);\n\nfunction candidate(...$args) {\n \
    \   return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwtbz2f5d.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,filter |>\n<code>\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphmm43ur5.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6dudtvnr.php on line 12

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqapl8uc.php:19\n\
    Stack trace:\n#0 /tmp/tmpwqapl8uc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwqapl8uc.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,filter |>\n<code>\n$array\
    \ = array(\"a\", 3.14, 5);\n$filtered = array_filter($array, function($value){\n\
    \    return is_int($value);\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array, function($value){\n\
    \    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays,filter |>\n<|\
    \ a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays,filter\
    \ |>\n<| a |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays,filter\
    \ dscore=1 |>\n<| a tags=php,arrays,filter |>\n<code>\n$array = array(\"a\", 3.14,\
    \ 5);\n$filtered = array_filter($array, function($value){\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,filter |>\n<code>\n$array\
    \ = array(\"a\", 3.14, 5);\n$filtered = array_filter($array, function($value){\n\
    \    return is_int($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array, function($value){\n\
    \    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays,filter |>\n<|\
    \ a tags=php,arrays,filter |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered\
    \ = array_filter($array, function($value){\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", 3.14,\
    \ 5);\n$filtered = array_filter($array, function($value){\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,array\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcv4fdser.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx_qjanc.php:18\n\
    Stack trace:\n#0 /tmp/tmpnx_qjanc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnx_qjanc.php\
    \ on line 18\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx_qjanc.php:18\n\
    Stack trace:\n#0 /tmp/tmpnx_qjanc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnx_qjanc.php\
    \ on line 18\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4q0g8gxw.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array('a',\
    \ 'b', 'c');\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nWhile this code snippet may solve\
    \ the question, [including an explanation](//meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers)\
    \ really helps to improve the quality of your post. Remember that you are answering\
    \ the question for readers in the future, and those people might not know the\
    \ reasons for your code suggestion. Please also try not to crowd your code with\
    \ explanatory comments, this reduces the readability of both the code and the\
    \ explanations!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n$array = array('a', 'b',\
    \ 'c');\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nWhile this code snippet may solve\
    \ the question, [including an explanation](//meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers)\
    \ really helps to improve the quality of your post. Remember that you are answering\
    \ the question for readers in the future, and those people might not know the\
    \ reasons for your code suggestion. Please also try not to crowd your code with\
    \ explanatory comments, this reduces the readability of both the code and the\
    \ explanations!\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a',\
    \ 'b', 'c');\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a',\
    \ 'b', 'c');\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code snippet may solve the\
    \ question, [including an explanation](//meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers)\
    \ really helps to improve the quality of your post. Remember that you are answering\
    \ the question for readers in the future, and those people might not know the\
    \ reasons for your code suggestion. Please also try not to crowd \nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_ylfh805.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\"\
    a\", 3.14, 5);\n$filtered = array_filter($array, function($value){\n    return\
    \ is_int($value);\n});\nprint_r($filtered);\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$array = array(\"a\", 3.14, 5);\n$filtered =\
    \ array_filter($array, function($value){\n    return is_int($value);\n});\nprint_r($filtered);\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpo34u5rb3.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$array\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    \nprint_r($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me. Thanks!\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly for me. Thanks!\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"\
    c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly for me. Thanks!\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me. Thanks!\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\" => 1, \"b\" =>\
    \ 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n\nprint_r($array);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me. Thanks!\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"\
    c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$array = array_filter\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpusd0_4q4.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\
    $array = array_filter($array, function($var) {\n    return is_int($var);\n});\n\
    print_r($array);\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpys7pv6qa.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$array = array(\"\
    a\", 3.14, 5);\n$filtered = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a\
    \ tags=arrays,php |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"a\", 3.14,\
    \ 5);\n$filtered = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a |>\n<code>\n$array = array(\"a\"\
    , 3.14, 5);\n$filtered = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=0 tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$filtered\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpa_js2udh.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=2 |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=2 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" =>\
    \ 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ dscore=2 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\"\
    \ => 4, \"e\" => 5);\n$array = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" =>\
    \ 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\"\
    \ => 4, \"e\" => 5);\n$array = array_filter($array, function($value) {\n    return\
    \ is_int($value);\n});\n</code>\n<|/ a tags=php,arrays dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp96xvsjt7.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array(\n    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n    'e'\
    \ => 5,\n    'f' => 6,\n    'g' => 7,\n    'h' => 8,\n    'i' => 9,\n    'j' =>\
    \ 10,\n    'k' => 11,\n    'l' => 12,\n    'm' => 13,\n    'n' => 14,\n    'o'\
    \ => 15,\n    'p' => 16,\n    'q' => 17,\n    'r' => 18,\n    's' => 19,\n   \
    \ 't' => 20,\n    'u' => 21,\n    'v' => 22,\n    'w' => 23,\n    'x' => 24,\n\
    \    'y' => 25,\n    'z' => 26,\n);\n\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n\nprint_r($array);\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\n    'a' => 1,\n    'b' => 2,\n\
    \    'c' => 3,\n    'd' => 4,\n    'e' => 5,\n    'f' => 6,\n    'g' => 7,\n \
    \   'h' => 8,\n    'i' => 9,\n    'j' => 10,\n    'k' => 11,\n    'l' => 12,\n\
    \    'm' => 13,\n    'n' => 14,\n    'o' => 15,\n    'p' => 16,\n    'q' => 17,\n\
    \    'r' => 18,\n    's' => 19,\n    't' => 20,\n    'u' => 21,\n    'v' => 22,\n\
    \    'w' => 23,\n    'x' => 24,\n    'y' => 25,\n    'z' => 26,\n);\n\n$array\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    \nprint_r($array);\n</code>\n<|/ a tags=arrays,php |>\n<| a |>\n<code>\n$array\
    \ = array(\n    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n    'e'\
    \ => 5,\n    'f' => 6,\n    'g' => 7,\n    'h' => 8,\n    'i' => 9,\n    'j' =>\
    \ 10,\n    'k' => 11,\n    'l' => 12,\n    'm' => 13,\n    'n' => 14,\n    'o'\
    \ => 15,\n    'p' => 16,\n    'q' => 17,\n    'r' => 18,\n    's' => 19,\n   \
    \ 't' => 20,\n    'u' => 21,\n    'v' => 22,\n    'w' => 23,\n    'x\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7ougdc5i.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution the best.\
    \ No need to reinvent the wheel. Just use array_filter and is_int. Thanks!\n<|/\
    \ c |>\n<| c |>\nI like this solution the best. No need to reinvent the wheel.\
    \ Just use array_filter and is_int. Thanks!\n<|/ c |>\n<| c |>\nI like this solution\
    \ the best. No need to reinvent the wheel. Just use array_filter and is_int. Thanks!\n\
    <|/ c |>\n<| c |>\nI like this solution the best. No need to reinvent the wheel.\
    \ Just use array_filter and is_int. Thanks!\n<|/ c |>\n<| c |>\nI like this solution\
    \ the best. No need to reinvent the wheel. Just use array_filter and is_int. Thanks!\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\"\
    );\n$filtered = array_filter($array, function($var) {\n    return is_int($var);\n\
    });\n</code>\n<|/ a tags=arrays,php,filter |>\n<| c |>\nThis doesn't work if `$array`\
    \ is an associative array.\n<|/ c |>\n<| c |>\nThis doesn't work if `$array` is\
    \ an associative array.\n<|/ c |>\n<| c |>\nThis doesn't work if `$array` is an\
    \ associative array.\n<|/ c |>\n<| c |>\nThis doesn't work if `$array` is an associative\
    \ array.\n<|/ c |>\n<| c |>\nThis doesn't work if `$array` is an associative array.\n\
    <|/ c |>\n<| a tags=arrays,php,filter |>\n<code>\n$array = array(\"a\", \"b\"\
    , \"c\", \"d\");\n$filtered = array_filter($array, function($var) {\n    return\
    \ is_int($var);\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if\
    \ `$array` is an associative array.\n<|/ c |>\n<| c |>\nThis doesn't work if `$array`\
    \ is an associative array.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\");\n$filtered = array_filter($array, function($var) {\n\
    \    return is_int($var);\n});\n</code>\n<|/ a tags=arrays,\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8tetha6p.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\nI wrote a function\
    \ to filter out all non-numeric values from a given array:\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4d75f5ng.php on line 12

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n\
    $filtered = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n\nprint_r($filtered);\n</code>\n<|/ a dscore=5 |>\n<| a dscore=4 |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\
    $filtered = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$filtered\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=4 |>\n<| a |>\n<code>\n$array = array(\"a\" => 1, \"b\"\
    \ => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$filtered = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=4\
    \ tags=php,arrays |>\n<| a dscore=3 |>\n<code>\n$array = array(\"a\" => 1, \"\
    b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$filtered = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2,\
    \ \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=3 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$filtered = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\n$array = array(\"\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpth7pwavw.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nI like your\
    \ answer, but I think it would be better to use a `foreach` loop to go through\
    \ the array and check each value individually. `array_filter` will create a new\
    \ array and copy the values over, which is not necessary in this case.\n<|/ c\
    \ |>\n<| c |>\nI agree with you, just wanted to show that `array_filter` can be\
    \ used for this purpose.\n<|/ c |>\n<| c |>\nI agree with you, just wanted to\
    \ show that `array_filter` can be used for this purpose.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\n    array('a', 'b', 'c'),\n    array('d', 'e',\
    \ 'f'),\n    array('g', 'h', 'i'),\n    array('j', 'k', 'l'),\n    array('m',\
    \ 'n', 'o'),\n    array('p', 'q', 'r'),\n    array('s', 't', 'u'),\n    array('v',\
    \ 'w', 'x'),\n    array('y', 'z', 'aa'),\n    array('bb', 'cc', 'dd'),\n    array('ee',\
    \ 'ff', 'gg'),\n    array('hh', 'ii', 'jj'),\n    array('kk', 'll', 'mm'),\n \
    \   array('nn', 'oo', 'pp'),\n    array('qq', 'rr', 'ss'),\n    array('tt', 'uu',\
    \ 'vv'),\n    array('ww', 'xx', 'yy'),\n    array('zz', 'aaa', 'bbb'),\n    array('ccc',\
    \ 'ddd', 'eee'),\n    array('fff', 'ggg', 'hhh'),\n    array('iii', 'jjj', 'kkk'),\n\
    \    array('lll', 'mmm', 'nnn'),\n    array('ooo', 'ppp', 'qqq'),\n    array('sss',\
    \ 'ttt', 'uuu'),\n    array('vvv', 'www', 'xxx'),\n    array('yyy', 'zzz', 'aaaa'),\n\
    \    array('bbbb', 'cccc', 'dddd'),\n    array('eeee', 'ffff', 'gggg'),\n    array('hhhh',\
    \ 'iiii', 'jjjj'),\n    array('kkkk', 'llll', 'mmmm'),\n    array('nnnn', 'oooo',\
    \ 'pppp'),\n    array('qqqq', 'rrrr', 'ss\nfunction candidate(...$args) {\n  \
    \  return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxo5zr3r3.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\
    </code>\n<|/ a tags=php,arrays,filter |>\n<| a tags=php,arrays,filter |>\n<code>\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0sin7axn.php on line 11

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\
    $array = array_filter($array, function($value){\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"a\" => 1, \"b\" =>\
    \ 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value){\n\
    \    return is_int($value);\n});\n</code>\n<|/ a dscore=5 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($value){\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| a \nfunction candidate(...$args) {\n \
    \   return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1_s_ker1.php on line 12

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps99ub6ys.php:19\n\
    Stack trace:\n#0 /tmp/tmps99ub6ys.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps99ub6ys.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if\
    \ you pass it an array with mixed types. `filter_integers(array(\"a\", 3.14, 5))`\
    \ returns `array(5)` instead of `array(3.14)`.\n<|/ c |>\n<| c |>\nYes, it does.\
    \ Try it yourself.\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\n<|/ c |>\n\
    <| c |>\nYes, it does. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it does. Try\
    \ it yourself.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\" => 1,\
    \ \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function($var) {\n    return is_numeric($var);\n});\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThis doesn't work if you pass it an array with mixed types. `filter_integers(array(\"\
    a\", 3.14, 5))` returns `array(5)` instead of `array(3.14)`.\n<|/ c |>\n<| c |>\n\
    This doesn't work if you pass it an array with mixed types. `filter_integers(array(\"\
    a\", 3.14, 5))` returns `array(5)` instead of `array(3.14)`.\n<|/ c |>\n<| c |>\n\
    This doesn't work if you pass it an array with mixed types. `filter_integers(array(\"\
    a\", 3.14, 5))` returns `array(5)` instead of `array(3.14)`.\n<|/ c |>\n<| c |>\n\
    This doesn't work if you pass it an array with mixed types. `filter_integers(array(\"\
    a\", 3.14, 5))` returns `array(5)` instead of `array(3.14)`.\n<|/ c |>\n<| c |>\n\
    This doesn't work if you pass it an array with mixed types. `filter_integers(array(\"\
    a\", 3.14, 5))` returns `array(5)` instead of `array(3.14)`.\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($var) {\n    return is_numeric($var);\n\
    \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbeisxp7r.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps99ub6ys.php:19\n\
    Stack trace:\n#0 /tmp/tmps99ub6ys.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps99ub6ys.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps6piv8wf.php on line 16

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and it's very simple.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly and it's very simple.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly and it's very simple.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ very simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly\
    \ and it's very simple.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\");\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly and it's very simple.\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's very\
    \ simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly\
    \ and it's very simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and it's very simple.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly and it's very simple.\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$filtered =\
    \ array_filter($array, function($value) {\n    return is_int($value);\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Works perfectly\
    \ and it's very simple.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\");\n$filtered = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly and it's very simple.\n\
    <|/ c |>\n<| a tags=arrays,\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzcsdg6x2.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and it's very simple.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly and it's very simple.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly and it's very simple.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ very simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly\
    \ and it's very simple.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php,filter,integer\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's very\
    \ simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly\
    \ and it's very simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and it's very simple.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly and it's very simple.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php,filter,integer |>\n<| c |>\nThis should be\
    \ the accepted answer. Works perfectly and it's very simple.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly and it's very simple.\n<|/\
    \ c |>\n<| a tags=arrays,php,filter,integer |>\n<code>\n$array = array(\"a\" =>\
    \ 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function(\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6afquoqc.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n$array = array_filter($array, function($value) {\n\
    \    return !is_numeric($value);\n});\nprint_r($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\"a\", \"b\", \"c\", \"\
    d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"\
    z\");\n$array = array_filter($array, function($value) {\n    return !is_numeric($value);\n\
    });\nprint_r($array);\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9nsqk3zq.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=2 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzhp6e80t.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg0kohv9.php:19\n\
    Stack trace:\n#0 /tmp/tmpdg0kohv9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdg0kohv9.php\
    \ on line 19\n"
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution, but I\
    \ believe it would be better to return false instead of null.\n<|/ c |>\n<| c\
    \ |>\nI agree with you, returning false instead of null is better. I just wanted\
    \ to keep it simple.\n<|/ c |>\n<| c |>\nI like this solution, because it doesn't\
    \ require any additional libraries. However, it does require a little more memory\
    \ than other solutions, because of the extra array allocation. Still, it's probably\
    \ the best solution if you don't want to use any external libraries.\n<|/ c |>\n\
    <| c |>\nI like this solution, because it doesn't require any additional libraries.\
    \ However, it does require a little more memory than other solutions, because\
    \ of the extra array allocation. Still, it's probably the best solution if you\
    \ don't want to use any external libraries.\n<|/ c |>\n<| c |>\nI like this solution,\
    \ because it doesn't require any additional libraries. However, it does require\
    \ a little more memory than other solutions, because of the extra array allocation.\
    \ Still, it's probably the best solution if you don't want to use any external\
    \ libraries.\n<|/ c |>\n<| a tags=arrays,php,filter |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4ekqsgq7.php on line 12

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" =>\
    \ 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=0 tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array\
    \ = array_filter($array, function($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2,\
    \ \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n$array = array\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp09ata9ia.php on line 16

    '
  timestamp: 1659730657
- exit_code: 0
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,filtering |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe11v8r99.php on line 16

    '
  timestamp: 1659730657
- exit_code: 255
  program: "<?php\n// Filter given array of any phpthon values only for integers\n\
    // >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkth8vvwz.php:19\n\
    Stack trace:\n#0 /tmp/tmpkth8vvwz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkth8vvwz.php\
    \ on line 19\n"
  timestamp: 1659730626

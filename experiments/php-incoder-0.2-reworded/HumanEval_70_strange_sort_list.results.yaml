language: php
name: HumanEval_70_strange_sort_list
results:
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $ret = [];\n    foreach ($lst as $item) {\n        if ($item == $min) {\n \
    \           $ret[] = $min;\n        } elseif ($item == $max) {\n            $ret[]\
    \ = $max;\n        } else {\n            $ret[] = $item;\n        }\n    }\n \
    \   return $ret;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$array = [\n    1 => 1,\n    2 => 2,\n    3 => 3,\n    4\
    \ => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 => 8,\n    9 => 9,\n   \
    \ 10 => 10,\n    11 => 11,\n    12 => 12,\n    13 => 13,\n    14 => 14,\n    15\
    \ => 15,\n    16 => 16,\n    17 => 17,\n    18 => 18,\n    19 => 19,\n    20 =>\
    \ 20,\n    21 => 21,\n    22 => 22,\n    23 => 23,\n    24 => 24,\n    25 => 25,\n\
    \    26 => 26,\n    27 => 27,\n    28 => 28,\n    29 => 29,\n    30 => 30,\n \
    \   31 => 31,\n    32 => 32,\n    33 => 33,\n    34 => 34,\n    35 => 35,\n  \
    \  36 => 36,\n    37 => 37,\n    38 => 38,\n    39 => 39,\n    40 => 40,\n   \
    \ 41 => 41,\n    42 => 42,\n    43 => 43,\n    44 => 44,\n    45 => 45,\n    46\
    \ => 46,\n    47 => 47,\n    48 => 48,\n    49 => 49,\n    50 => 50,\n    51 =>\
    \ 51,\n    52 => 52,\n    53 => 53,\n    54 => 54,\n    55 => 55,\n    56 => 56,\n\
    \    57 => 57,\n    58 => 58,\n    59 => 59,\n    60 => 60,\n    61 => 61,\n \
    \   62 => 62,\n    63 => 63,\n    64 => 64,\n    65 => 65,\n    66 => 66,\n  \
    \  67 => 67,\n    68 => 68,\n    69 => 69,\n    70 => 70,\n    7\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyw0f2i35.php on line 27

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a tags=sorting,arrays,php |>\n<| a\
    \ dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpko7hfpt0.php on line 29

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    asort($sorted);\n\
    \    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\n\
    This doesn't work for me. `strange_sort_list(array(1, 2, 3, 4))` returns `array(1,\
    \ 4, 2, 3)`.\n<|/ c |>\n<| c |>\nIt works, I tested it before posting it.  What\
    \ version of PHP are you using?\n<|/ c |>\n<| c |>\nPHP 5.3.10-1ubuntu3.11 with\
    \ Suhosin-Patch (cli) (built: Nov 18 2010 13:48:26)\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli) (built: Nov 18 2010 13:48:26)\
    \ and it works.  What version of PHP are you using?\n<|/ c |>\n<| c |>\nPHP 5.3.10-1ubuntu3.11\
    \ with Suhosin-Patch (cli) (built: Nov 18 2010 13:48:26)\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpo0hajl_4.php on line 20

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    return\
    \ $sorted;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array();\n$array[] = array('id' => 1, 'name' => 'John');\n$array[] = array('id'\
    \ => 2, 'name' => 'Jane');\n$array[] = array('id' => 3, 'name' => 'Jack');\n$array[]\
    \ = array('id' => 4, 'name' => 'Jill');\n$array[] = array('id' => 5, 'name' =>\
    \ 'Jack');\n$array[] = array('id' => 6, 'name' => 'Jill');\n$array[] = array('id'\
    \ => 7, 'name' => 'Jane');\n$array[] = array('id' => 8, 'name' => 'John');\n$array[]\
    \ = array('id' => 9, 'name' => 'Jack');\n$array[] = array('id' => 10, 'name' =>\
    \ 'Jill');\n$array[] = array('id' => 11, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 12, 'name' => 'Jill');\n$array[] = array('id' => 13, 'name' => 'Jane');\n\
    $array[] = array('id' => 14, 'name' => 'John');\n$array[] = array('id' => 15,\
    \ 'name' => 'Jack');\n$array[] = array('id' => 16, 'name' => 'Jill');\n$array[]\
    \ = array('id' => 17, 'name' => 'Jack');\n$array[] = array('id' => 18, 'name'\
    \ => 'Jill');\n$array[] = array('id' => 19, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 20, 'name' => 'Jill');\n$array[] = array('id' => 21, 'name' => 'Jack');\n\
    $array[] = array('id' => 22, 'name' => 'Jill');\n$array[] = array('id' => 23,\
    \ 'name' => 'Jack');\n$array[] = array('id' => 24, 'name' => 'Jill');\n$array[]\
    \ = array('id' => 25, 'name' => 'Jack');\n$array[] = array('id' => 26, 'name'\
    \ => 'Jill');\n$array[] = array('id' => 27, 'name' => 'Jack');\n$array[] = array('id'\
    \ => 28, 'name' => 'Jill');\n$array[] = array('id' => 29\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp16g2xng9.php on line 18

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array_map(function($v) use ($min, $max) {\n    return $v < $min ? $min : $v\
    \ > $max ? $max : $v;\n  }, $lst);\n  return $lst;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr1 = array();\n$arr2 = array();\n$arr3 = array();\n$arr4 = array();\n$arr5\
    \ = array();\n$arr6 = array();\n$arr7 = array();\n$arr8 = array();\n$arr9 = array();\n\
    $arr10 = array();\n$arr11 = array();\n$arr12 = array();\n$arr13 = array();\n$arr14\
    \ = array();\n$arr15 = array();\n$arr16 = array();\n$arr17 = array();\n$arr18\
    \ = array();\n$arr19 = array();\n$arr20 = array();\n$arr21 = array();\n$arr22\
    \ = array();\n$arr23 = array();\n$arr24 = array();\n$arr25 = array();\n$arr26\
    \ = array();\n$arr27 = array();\n$arr28 = array();\n$arr29 = array();\n$arr30\
    \ = array();\n$arr31 = array();\n$arr32 = array();\n$arr33 = array();\n$arr34\
    \ = array();\n$arr35 = array();\n$arr36 = array();\n$arr37 = array();\n$arr38\
    \ = array();\n$arr39 = array();\n$arr40 = array();\n$arr41 = array();\n$arr42\
    \ = array();\n$arr43 = array();\n$arr44 = array();\n$arr45 = array();\n$arr46\
    \ = array();\n$arr47 = array();\n$arr48 = array();\n$arr49 = array();\n$arr50\
    \ = array();\n$arr51 = array();\n$arr52 = array();\n$arr53 = array();\n$arr54\
    \ = array();\n$arr55 = array();\n$arr56 = array();\n$arr57 = array();\n$arr58\
    \ = array();\n$arr59 = array();\n$arr60 = array();\n$arr61 = array\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpoqfr0xl7.php on line 20

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=2\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt49rl7ek.php on line 20

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $key => $value) {\n        if ($min\
    \ == $max) {\n            $result[] = $value;\n        } else {\n            $result[]\
    \ = $value;\n            $result[] = $min;\n            $result[] = $max;\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpll3errra.php:33\n\
    Stack trace:\n#0 /tmp/tmpll3errra.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpll3errra.php\
    \ on line 33\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    } else if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    } else {\n      $sorted[]\
    \ = $value;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$array = array(1, 2, 3, 4);\n$array2 = array(1,\
    \ 4, 2, 3);\n$array3 = array();\n\n$array3 = $array;\n$array3[] = $array2;\n$array3[]\
    \ = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[] = $array2;\n$array3[] = $array;\n$array3[] = $array2;\n\
    $array3[] = $array;\n$array3[]\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfz_51dqh.php on line 29

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    } else if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    } else {\n      $sorted[]\
    \ = $value;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work if you have duplicate values.\n<|/ c |>\n<| c\
    \ |>\nI believe this would work if you had a sorted array and you just wanted\
    \ to rearrange the values into a new array in the order of the original array.\
    \ However, the OP wants to rearrange the array in place and preserve the original\
    \ array ordering.\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdhtnjxjg.php on line 29

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = $lst[0];\n   \
    \ $max = $lst[0];\n    foreach ($lst as $item) {\n        if ($item < $min) {\n\
    \            $min = $item;\n        } else if ($item > $max) {\n            $max\
    \ = $item;\n        }\n    }\n    $sorted = array_merge($sorted, array($min));\n\
    \    foreach ($lst as $item) {\n        if ($item == $min) {\n            $sorted\
    \ = array_merge($sorted, array($item));\n        } else if ($item == $max) {\n\
    \            $sorted = array_merge($sorted, array($item));\n        } else if\
    \ ($item < $min) {\n            $sorted = array_merge($sorted, array($item));\n\
    \        } else if ($item > $max) {\n            $sorted = array_merge($sorted,\
    \ array($item));\n        }\n    }\n    $sorted = array_merge($sorted, array($max));\n\
    \    return $sorted;\n}\n</code>\n<|/ a dscore=3 |>\n<| a tags=php,sorting |>\n\
    <code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpd38xy5ks.php on line 38

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $item) {\n        if ($item < $min)\
    \ {\n            $sorted[] = $min;\n        } else if ($item > $max) {\n     \
    \       $sorted[] = $max;\n        } else {\n            $sorted[] = $item;\n\
    \        }\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd2ey2q1f.php:33\n\
    Stack trace:\n#0 /tmp/tmpd2ey2q1f.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpd2ey2q1f.php\
    \ on line 33\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = $lst[0];\n  $max =\
    \ $lst[0];\n  foreach ($lst as $item) {\n    if ($item < $min) {\n      $min =\
    \ $item;\n    }\n    if ($item > $max) {\n      $max = $item;\n    }\n  }\n  while\
    \ ($min < $max) {\n    $sorted[] = $min;\n    $min++;\n    $sorted[] = $max;\n\
    \    $max--;\n  }\n  return $sorted;\n}\n\nfunction candidate(...$args) {\n  \
    \  return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3yl83scy.php:39\n\
    Stack trace:\n#0 /tmp/tmp3yl83scy.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3yl83scy.php\
    \ on line 39\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $min = min($min, $max);\n    $max = max($min, $max);\n    $min = min($min,\
    \ $max);\n    $max = max($min, $max);\n    $min = min($min, $max);\n    $max =\
    \ max($min, $max);\n    $min = min($min, $max);\n    $max = max($min, $max);\n\
    \    $min = min($min, $max);\n    $max = max($min, $max);\n    $min = min($min,\
    \ $max);\n    $max = max($min, $max);\n    $min = min($min, $max);\n    $max =\
    \ max($min, $max);\n    $min = min($min, $max);\n    $max = max($min, $max);\n\
    \    $min = min($min, $max);\n    $max = max($min, $max);\n    $min = min($min,\
    \ $max);\n    $max = max($min, $max);\n    $min = min($min, $max);\n    $max =\
    \ max($min, $max);\n    $min = min($min, $max);\n    $max = max($min, $max);\n\
    \    $min = min($min, $max);\n    $max = max($min, $max);\n    $min = min($min,\
    \ $max);\n    $max = max($min, $max);\n    $min = min($min, $max);\n    $max =\
    \ max($min, $max);\n    $min = min($min, $max);\n    $max = max($min, $max);\n\
    \    $min = min($min, $max);\n    $max = max($min, $max);\n    $min = min($min,\
    \ $max);\n    $max = max($min, $max);\n    $min = min($min, $max);\n    $max =\
    \ max($min, $max);\n    $min = min($min, $max);\n    $max = max($min, $max);\n\
    \    $min = min($min, $max);\n    $max = max($min, $max);\n    $min = min($min,\
    \ $max);\n    $max = max($min, $max);\n    $min = min($min, $max);\n    $max =\
    \ max($min, $max);\n    $min = min($min, $max);\n    $max = max($min, $max);\n\
    \    $min = min($min, $max);\n    $max = max($min, $max);\n    $min = min($min,\
    \ $max);\n    $max = max($min, $max);\n    $min = min($min, $max);\n    $max =\
    \ max($min, $max);\n    $min = min($min, $max);\n    $max = max(\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyfm0y9m9.php on line 71

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $result\
    \ = array();\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $result[] = $min;\n      $min = $value;\n    } else if ($value > $max)\
    \ {\n      $result[] = $max;\n      $max = $value;\n    } else {\n      $result[]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,sorting\
    \ |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptd4_856r.php on line 29

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $item) {\n    if ($item == $min) {\n      $sorted[]\
    \ = $min;\n    } else if ($item == $max) {\n      $sorted[] = $max;\n    } else\
    \ {\n      $sorted[] = $item;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr2 = array_chunk($arr,2);\n$arr3 = array_chunk($arr2,2);\n$arr4 = array_chunk($arr3,2);\n\
    $arr5 = array_chunk($arr4,2);\n$arr6 = array_chunk($arr5,2);\n$arr7 = array_chunk($arr6,2);\n\
    $arr8 = array_chunk($arr7,2);\n$arr9 = array_chunk($arr8,2);\n$arr10 = array_chunk($arr9,2);\n\
    $arr11 = array_chunk($arr10,2);\n$arr12 = array_chunk($arr11,2);\n$arr13 = array_chunk($arr12,2);\n\
    $arr14 = array_chunk($arr13,2);\n$arr15 = array_chunk($arr14,2);\n$arr16 = array_chunk($arr15,2);\n\
    $arr17 = array_chunk($arr16,2);\n$arr18 = array_chunk($arr17,2);\n$arr19 = array_chunk($arr18,2);\n\
    $arr20 = array_chunk($arr19,2);\n$arr21 = array_chunk($arr20,2);\n$arr22 = array_chunk($arr21,2);\n\
    $arr23 = array_chunk($arr22,2);\n$arr24 = array_chunk($arr23,2);\n$arr25 = array_chunk($arr24,2);\n\
    $arr26 = array_chunk($arr25,2);\n$arr27 = array_chunk($arr26,2);\n$arr28 = array_chunk($arr27,2);\n\
    $arr29 = array_chunk($arr28,2);\n$arr30 = array_chunk($arr29,2);\n$arr31 = array_chunk($arr30,2);\n\
    $arr32 = array_chunk($arr31,2);\n$arr33 = array_chunk($arr32,2);\n$arr34 = array_chunk($arr33,2);\n\
    $arr35 = array_chunk($arr34,2);\n$arr36 = array_chunk($arr35,2);\n$arr37 = array_chunk($arr36,2);\n\
    $arr38 = array_chunk($arr37,2);\n$arr39\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzaeo_p0k.php on line 27

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis doesn't\
    \ work if the array is empty or has only one element. `min` and `max` return `null`\
    \ when called on an empty array.\n<|/ c |>\n<| c |>\nYes, I know. That's why I\
    \ wrote \"Given array of integers\". Anyway, I added a solution that works with\
    \ empty and single element arrays.\n<|/ c |>\n<| c |>\nI added a solution that\
    \ works with empty and single element arrays.\n<|/ c |>\n<| a dscore=3 |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpte227ihy.php on line 29

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if\
    \ the array is empty or contains only a single element. Try it with `array(1)`.\n\
    <|/ c |>\n<| c |>\n: It does work, try it with `array(1)`.\n<|/ c |>\n<| c |>\n\
    : It does work, try it with `array(1)`.\n<|/ c |>\n<| c |>\n: It does work, try\
    \ it with `array(1)`.\n<|/ c |>\n<| c |>\n: It does work, try it with `array(1)`.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpn7w846cg.php on line 29

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    } else if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    } else {\n      $sorted[]\
    \ = $value;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a tags=php,sorting\
    \ |>\n<| c |>\nThis doesn't work if you have negative numbers. Try this with $lst\
    \ = array(-2, -1, 0, 1, 2); it returns array(-2, -1, 0, 2, 1)\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work if you have negative numbers. Try this with $lst = array(-2,\
    \ -1, 0, 1, 2); it returns array(-2, -1, 0, 2, 1)\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcm0rhy4d.php on line 29

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[$key] = $min;\n    } else if ($value > $max) {\n      $sorted[$key]\
    \ = $max;\n    } else {\n      $sorted[$key] = $value;\n    }\n  }\n  return $sorted;\n\
    }\n</code>\n<|/ a tags=php,sorting |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1,\
    \ 2, 3, 4))` returns `array(1, 2, 3, 4)` instead of `array(1, 4, 2, 3)`.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for me. strange_sort_list(array(1, 2, 3, 4))\
    \ returns array(1, 2, 3, 4) instead of array(1, 4, 2, 3).\n<|/ c |>\n<| c |>\n\
    This doesn't work for me. strange_sort_list(array(1, 2, 3, 4)) returns array(1,\
    \ 2, 3, 4) instead of array(1, 4, 2, 3).\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ for me. strange_sort_list(array(1, 2, 3, 4)) returns array(1, 2, 3, 4) instead\
    \ of array(1, 4, 2, 3).\n<|/ c |>\n<| a tags=php,sorting |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwe3hax91.php on line 27

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    } else if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    } else {\n      $sorted[]\
    \ = $value;\n    }\n  }\n  return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_4d30w2.php:35\n\
    Stack trace:\n#0 /tmp/tmp5_4d30w2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5_4d30w2.php\
    \ on line 35\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $lst[$key] = $min;\n    } else if ($value > $max) {\n      $lst[$key] =\
    \ $max;\n    } else {\n      $lst[$key] = $value;\n    }\n  }\n  return $lst;\n\
    }\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rkxgm_o.php:32\n\
    Stack trace:\n#0 /tmp/tmp5rkxgm_o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5rkxgm_o.php\
    \ on line 32\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $result\
    \ = array();\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $result[] = $value;\n    } else if ($value > $max) {\n      $result[] =\
    \ $value;\n    } else if ($value == $min) {\n      $result[] = $max;\n    } else\
    \ if ($value == $max) {\n      $result[] = $min;\n    } else {\n      $result[]\
    \ = $key;\n    }\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| a\
    \ tags=php,sorting |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp523w2vt4.php on line 31

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $min\
    \ = min($min, $max);\n  $max = max($min, $max);\n  $min = min($min, $max);\n \
    \ $max = max($min, $max);\n  $min = min($min, $max);\n  $max = max($min, $max);\n\
    \  $min = min($min, $max);\n  $max = max($min, $max);\n  $min = min($min, $max);\n\
    \  $max = max($min, $max);\n  $min = min($min, $max);\n  $max = max($min, $max);\n\
    \  $min = min($min, $max);\n  $max = max($min, $max);\n  $min = min($min, $max);\n\
    \  $max = max($min, $max);\n  $min = min($min, $max);\n  $max = max($min, $max);\n\
    \  $min = min($min, $max);\n  $max = max($min, $max);\n  $min = min($min, $max);\n\
    \  $max = max($min, $max);\n  $min = min($min, $max);\n  $max = max($min, $max);\n\
    \  $min = min($min, $max);\n  $max = max($min, $max);\n  $min = min($min, $max);\n\
    \  $max = max($min, $max);\n  $min = min($min, $max);\n  $max = max($min, $max);\n\
    \  $min = min($min, $max);\n  $max = max($min, $max);\n  $min = min($min, $max);\n\
    \  $max = max($min, $max);\n  $min = min($min, $max);\n  $max = max($min, $max);\n\
    \  $min = min($min, $max);\n  $max = max($min, $max);\n  $min = min($min, $max);\n\
    \  $max = max($min, $max);\n  $min = min($min, $max);\n  $max = max($min, $max);\n\
    \  $min = min($min, $max);\n  $max = max($min, $max);\n  $min = min($min, $max);\n\
    \  $max = max($min, $max);\n  $min = min($min, $max);\n  $max = max($min, $max);\n\
    \  $min = min($min, $max);\n  $max = max($min, $max);\n  $min = min($min, $max);\n\
    \  $max = max($min, $max);\n  $min = min($min, $max);\n  $max = max($min, $max);\n\
    \  $min = min($min, $max);\n  $max = max(\nfunction candidate(...$args) {\n  \
    \  return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1bt57tbv.php on line 71

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppx8_o67w.php on line 20

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9jfu0l.php:25\n\
    Stack trace:\n#0 /tmp/tmpzk9jfu0l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzk9jfu0l.php\
    \ on line 25\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = $max = $lst[0];\n\
    \    foreach ($lst as $item) {\n        if ($item < $min) {\n            $min\
    \ = $item;\n        } else if ($item > $max) {\n            $max = $item;\n  \
    \      }\n        $sorted[] = $item;\n    }\n    return $sorted;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work if there are duplicates in the input\
    \ array. Try it with `array(1,2,2,3)`.\n<|/ c |>\n<| c |>\n: It does work, try\
    \ it yourself. It sorts duplicates as well. Try it with `array(1,2,2,3,3)`.\n\
    <|/ c |>\n<| c |>\n: It does work, try it yourself. It sorts duplicates as well.\
    \ Try it with `array(1,2,2,3,3)`.\n<|/ c |>\n<| c |>\n: It does work, try it yourself.\
    \ It sorts duplicates as well. Try it with `array(1,2,2,3,3)`.\n<|/ c |>\n<| c\
    \ |>\n: It does work, try it yourself. It sorts duplicates as well. Try it with\
    \ `array(1,2,2,3,3)`.\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz_echryr.php on line 25

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $val) {\n        $sorted[$key] = $val;\n    }\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a tags=sorting,arrays,php\
    \ |>\n<| a dscore=2 |>\n<code>\n$arr = array();\n$arr[] = array('id' => 1, 'name'\
    \ => 'A');\n$arr[] = array('id' => 2, 'name' => 'B');\n$arr[] = array('id' =>\
    \ 3, 'name' => 'C');\n$arr[] = array('id' => 4, 'name' => 'D');\n$arr[] = array('id'\
    \ => 5, 'name' => 'E');\n$arr[] = array('id' => 6, 'name' => 'F');\n$arr[] = array('id'\
    \ => 7, 'name' => 'G');\n$arr[] = array('id' => 8, 'name' => 'H');\n$arr[] = array('id'\
    \ => 9, 'name' => 'I');\n$arr[] = array('id' => 10, 'name' => 'J');\n$arr[] =\
    \ array('id' => 11, 'name' => 'K');\n$arr[] = array('id' => 12, 'name' => 'L');\n\
    $arr[] = array('id' => 13, 'name' => 'M');\n$arr[] = array('id' => 14, 'name'\
    \ => 'N');\n$arr[] = array('id' => 15, 'name' => 'O');\n$arr[] = array('id' =>\
    \ 16, 'name' => 'P');\n$arr[] = array('id' => 17, 'name' => 'Q');\n$arr[] = array('id'\
    \ => 18, 'name' => 'R');\n$arr[] = array('id' => 19, 'name' => 'S');\n$arr[] =\
    \ array('id' => 20, 'name' => 'T');\n$arr[] = array('id' => 21, 'name' => 'U');\n\
    $arr[] = array('id' => 22, 'name' => 'V');\n$arr[] = array('id' => 23, 'name'\
    \ => 'W');\n$arr[] = array('id' => 24, 'name' => 'X');\n$arr[] = array('id' =>\
    \ 25, 'name' => 'Y');\n$arr[] = array('id' => 26, 'name' => 'Z');\n\n$arr2 = array();\n\
    foreach ($arr as $key => $value) {\n    $arr2[$value['id']] = $value['name'];\n\
    }\n\nksort($arr2);\n$arr2 = array_values($arr2);\n\nprint_r($arr2);\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpj_2j9khy.php on line 20

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  ksort($sorted);\n  return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdhvaubg.php:26\n\
    Stack trace:\n#0 /tmp/tmpfdhvaubg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfdhvaubg.php\
    \ on line 26\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[$key] = $min;\n    } else if ($value > $max) {\n      $sorted[$key]\
    \ = $max;\n    } else {\n      $sorted[$key] = $value;\n    }\n  }\n  return $sorted;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work for me.\
    \ `strange_sort_list(array(5, 5, 5, 5))` returns `array(5, 5, 5, 5)`.\n<|/ c |>\n\
    <| c |>\nIt does for me. `strange_sort_list(array(5, 5, 5, 5))` returns `array(5,\
    \ 5, 5, 5)`. Are you sure you copied it correctly?\n<|/ c |>\n<| c |>\nI copied\
    \ it exactly as you wrote it. I don't know what I'm doing wrong.\n<|/ c |>\n<|\
    \ c |>\nI copied it exactly as you wrote it. I don't know what I'm doing wrong.\
    \ `strange_sort_list(array(5, 5, 5, 5))` returns `array(5, 5, 5, 5)`. Are you\
    \ sure you copied it correctly?\n<|/ c |>\n<| c |>\nI copied it exactly as you\
    \ wrote it. I don't know what I'm doing wrong. `strange_sort_list(array(5, 5,\
    \ 5, 5))` returns `array(5, 5, 5, 5)`. Are you sure you copied it correctly?\n\
    <|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp2709vhn.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_ASC,\
    \ $lst);\n  return $lst;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\n\
    I like this solution, but I wonder if there's a way to do it without creating\
    \ a new array. Maybe using array_multisort?\n<|/ c |>\n<| c |>\nI added a solution\
    \ without creating a new array.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbff5ivk3.php on line 20

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $k => $v) {\n    if ($min == $max) {\n      $lst[]\
    \ = $v;\n      unset($lst[$k]);\n    }\n    else {\n      $lst[] = $v;\n     \
    \ if ($v == $min) {\n        $min = $v;\n      }\n      else if ($v == $max) {\n\
    \        $max = $v;\n      }\n      else {\n        $min = $v;\n        $max =\
    \ $v;\n      }\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ c |>\nThanks for your answer. Your code works fine for small lists, but for\
    \ large lists it takes too much time. Do you know any faster way?\n<|/ c |>\n\
    <| c |>\nI added a faster version. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. Your code works fine for small lists, but for large lists it takes\
    \ too much time. Do you know any faster way?\n<|/ c |>\n<| c |>\nI added a faster\
    \ version. Hope it helps.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$array =\
    \ array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9t0nfphs.php on line 37

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    $sorted\
    \ = array_merge($sorted, array_reverse($sorted, true));\n    return $sorted;\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis one is the best solution. Thanks.\n\
    <|/ c |>\n<| c |>\nThis solution works great for me. Thanks!\n<|/ c |>\n<| c |>\n\
    This solution works great for me. Thanks!\n<|/ c |>\n<| c |>\nThis solution works\
    \ great for me. Thanks!\n<|/ c |>\n<| c |>\nThis solution works great for me.\
    \ Thanks!\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwjn7ml1x.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ seem to work for me. Can you please elaborate on how to use it?\n<|/ c |>\n\
    <| c |>\nI added some comments to my answer.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$sorted = array_merge(array_slice($arr,0,2),array_slice($arr,2,2),array_slice($arr,4,2));\n\
    print_r($sorted);\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp67s2ajt2.php on line 29

    '
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, array_reverse($lst));\n  $sorted =\
    \ array_merge($sorted, array_reverse($sorted, true));\n  return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph31qs0df.php:24\n\
    Stack trace:\n#0 /tmp/tmph31qs0df.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph31qs0df.php\
    \ on line 24\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    asort($sorted);\n\
    \    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4r65o0us.php:26\n\
    Stack trace:\n#0 /tmp/tmp4r65o0us.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4r65o0us.php\
    \ on line 26\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $k => $v) {\n        if ($v < $min)\
    \ {\n            $sorted[] = $min;\n            $min = $v;\n        } elseif ($v\
    \ > $max) {\n            $sorted[] = $max;\n            $max = $v;\n        }\
    \ else {\n            $sorted[] = $v;\n        }\n    }\n    return $sorted;\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| a dscore=2 |>\n<code>\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$array = array_merge(array_slice($array,0,2),array_slice($array,2,4),array_slice($array,4,6));\n\
    $array = array_merge($array,array_slice($array,0,2));\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_merge($array,array_slice($array,0,2));\n$array = array_merge($array,array_slice($array,2,4));\n\
    $array = array_merge($array,array_slice($array,4,6));\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$array\
    \ = array_merge($array,array_slice($array,0,2));\n$array = array_merge($array,array_slice($array,2,4));\n\
    $array = array_merge($array,array_slice($array,4,6));\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_merge($array,array_slice($array,0,2));\n$array = array_merge($array,array_slice($array,2,4));\n\
    $array = array_merge($array,array_slice($array,4,6));\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_merge($array,array_slice($array,0,2));\n$array = array_merge($array,array_slice($array,2,4));\n\
    $array = array_merge($array,array_slice($array,4,6));\n</code>\n<|/ a d\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt6800lvi.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zxi29ls.php:24\n\
    Stack trace:\n#0 /tmp/tmp4zxi29ls.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4zxi29ls.php\
    \ on line 24\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $result\
    \ = array();\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $result[] = $value;\n    } else if ($value > $max) {\n      $result[] =\
    \ $value;\n    } else {\n      $result[] = $key;\n    }\n  }\n  return $result;\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nThis is not the right answer.\
    \ He wants to sort by minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum value, then minimum value, then maximum value, then minimum value, then\
    \ maximum \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgncmsfkb.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    } else if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    } else {\n      $sorted[]\
    \ = $value;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a tags=sorting,php,arrays\
    \ |>\n<| c |>\nThis doesn't work if the array is empty or contains only a single\
    \ element\n<|/ c |>\n<| c |>\nI added a check for empty arrays and single elements.\n\
    <|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbw128wq0.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_ASC, $lst);\n    return $lst;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array(\n    array(\n \
    \       'id' => 1,\n        'name' => 'test',\n        'value' => 10\n    ),\n\
    \    array(\n        'id' => 2,\n        'name' => 'test2',\n        'value' =>\
    \ 20\n    ),\n    array(\n        'id' => 3,\n        'name' => 'test3',\n   \
    \     'value' => 30\n    ),\n    array(\n        'id' => 4,\n        'name' =>\
    \ 'test4',\n        'value' => 40\n    ),\n    array(\n        'id' => 5,\n  \
    \      'name' => 'test5',\n        'value' => 50\n    ),\n    array(\n       \
    \ 'id' => 6,\n        'name' => 'test6',\n        'value' => 60\n    ),\n    array(\n\
    \        'id' => 7,\n        'name' => 'test7',\n        'value' => 70\n    ),\n\
    \    array(\n        'id' => 8,\n        'name' => 'test8',\n        'value' =>\
    \ 80\n    ),\n    array(\n        'id' => 9,\n        'name' => 'test9',\n   \
    \     'value' => 90\n    ),\n    array(\n        'id' => 10,\n        'name' =>\
    \ 'test10',\n        'value' => 100\n    ),\n    array(\n        'id' => 11,\n\
    \        'name' => 'test11',\n        'value' => 110\n    ),\n    array(\n   \
    \     'id' => 12,\n        'name' => 'test12',\n        'value' => 120\n    ),\n\
    \    array(\n        'id' => 13,\n        'name' => 'test13',\n        'value'\
    \ => 130\n    ),\n    array(\n        'id' => 14,\n        'name' => 'test14',\n\
    \        'value' => 140\n    ),\n    array(\n        'id' => 15,\n        'name'\
    \ => 'test15',\n        'value' => 150\n    ),\n    array(\n        'id' => 16,\n\
    \        'name' => 'test16',\n        'value' => 160\n    ),\n    array(\n   \
    \     'id' => 17,\n        'name' => 'test17',\n        'value' => 170\n    ),\n\
    \    array(\n        'id' => 18,\n        'name' => 'test18',\n        'value'\
    \ => 180\n    ),\n    array(\n        'id' => 19,\n        'name' => 'test19',\n\
    \        'value' => 190\n    ),\n    array(\n        'id' => 20,\n        'name'\
    \ => 'test20',\n        'value' => 200\n    ),\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxj1tyclm.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $sorted = array();\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $value;\n        } else if ($value > $max)\
    \ {\n            $sorted[] = $value;\n        } else {\n            $sorted[]\
    \ = $key;\n        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a tags=sorting,php,arrays\
    \ |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(5, 6, 1, 2))`\
    \ returns `array(5, 6, 1, 2)` instead of `array(1, 2, 3, 4)`.\n<|/ c |>\n<| c\
    \ |>\nIt does work for me. `strange_sort_list(array(5, 6, 1, 2))` returns `array(1,\
    \ 2, 3, 4)` instead of `array(5, 6, 1, 2)`.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ for me either. `strange_sort_list(array(5, 6, 1, 2))` returns `array(5, 6, 1,\
    \ 2)` instead of `array(1, 2, 3, 4)`.\n<|/ c |>\n<| c |>\nIt works for me. `strange_sort_list(array(5,\
    \ 6, 1, 2))` returns `array(1, 2, 3, 4)` instead of `array(5, 6, 1, 2)`.\n<|/\
    \ c |>\n<| c |>\nIt works for me too. `strange_sort_list(array(5, 6, 1, 2))` returns\
    \ `array(1, 2, 3, 4)` instead of `array(5, 6, 1, 2)`.\n<|/ c |>\n<| a |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpx7js5gkb.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = $max = $lst[0];\n\
    \    foreach ($lst as $item) {\n        if ($item < $min) {\n            $min\
    \ = $item;\n        } else if ($item > $max) {\n            $max = $item;\n  \
    \      }\n    }\n    $sorted = array($min, $max);\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $sorted[] = $min;\n        } else\
    \ if ($item > $max) {\n            $sorted[] = $max;\n        } else {\n     \
    \       $sorted[] = $item;\n        }\n    }\n    return $sorted;\n}\n</code>\n\
    <|/ a tags=php,sorting,arrays |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt0u87q3t.php on line 34

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[$key] = $min;\n        } else if ($value > $max)\
    \ {\n            $sorted[$key] = $max;\n        } else {\n            $sorted[$key]\
    \ = $value;\n        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$array = array_reverse($array);\n\
    </code>\n<|/ a tags=php,sorting,arrays |>\n<| a tags=php,sorting,arrays |>\n<code>\n\
    $array = array(1,2,3,4,5,6,7,8,9,10);\n$array = array_reverse($array);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting,arrays\
    \ |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$array = array_reverse($array);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array =\
    \ array(1,2,3,4,5,6,7,8,9,10);\n$array = array_reverse($array);\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting,arrays\
    \ |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$array = array_reverse($array);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_reverse($array);\n</code>\n<|/ a tags=php,sorting,arrays |>\n<|\
    \ a tags=php,sorting,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5kpg8za2.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  asort($sorted);\n  return $sorted;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6ibmo7ae.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $result[] = $min;\n        } elseif ($item == $max) {\n     \
    \       $result[] = $max;\n        } else {\n            $result[] = $item;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_merge($arr,array_flip($arr));\n$arr = array_merge($arr,array_flip($arr));\n\
    $arr = array_\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnir21l1h.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9jfu0l.php:25\n\
    Stack trace:\n#0 /tmp/tmpzk9jfu0l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzk9jfu0l.php\
    \ on line 25\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ doesn't work if you have negative numbers in the array\n<|/ c |>\n<| c |>\n\
    This doesn't work if you have negative numbers in the array\n<|/ c |>\n<| c |>\n\
    This doesn't work if you have negative numbers in the array\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz1ub8s0a.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n    } else if ($value > $max) {\n      $sorted[] = $max;\n\
    \    } else {\n      $sorted[] = $value;\n    }\n  }\n  return $sorted;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't seem to work if the array is empty. `strange_sort_list(array())`\
    \ returns an empty array.\n<|/ c |>\n<| c |>\nIt doesn't work if you pass an empty\
    \ array. `strange_sort_list(array())` returns an empty array.\n<|/ c |>\n<| c\
    \ |>\nIt does work if you pass an empty array. `strange_sort_list(array())` returns\
    \ an empty array.\n<|/ c |>\n<| c |>\nIt does work if you pass an empty array.\
    \ `strange_sort_list(array())` returns an empty array.\n<|/ c |>\n<| c |>\nIt\
    \ does work if you pass an empty array. `strange_sort_list(array())` returns an\
    \ empty array.\n<|/ c |>\n<| a tags=sorting,php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwios9481.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $val) {\n        if ($val < $min)\
    \ {\n            $sorted[] = $min;\n            $min = $min;\n        } elseif\
    \ ($val > $max) {\n            $sorted[] = $max;\n            $max = $max;\n \
    \       } else {\n            $sorted[] = $val;\n        }\n    }\n    return\
    \ $sorted;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array2 = array();\n$array3 = array();\n$array4 = array();\n$array5 = array();\n\
    $array6 = array();\n$array7 = array();\n$array8 = array();\n$array9 = array();\n\
    $array10 = array();\n$array11 = array();\n$array12 = array();\n$array13 = array();\n\
    $array14 = array();\n$array15 = array();\n$array16 = array();\n$array17 = array();\n\
    $array18 = array();\n$array19 = array();\n$array20 = array();\n$array21 = array();\n\
    $array22 = array();\n$array23 = array();\n$array24 = array();\n$array25 = array();\n\
    $array26 = array();\n$array27 = array();\n$array28 = array();\n$array29 = array();\n\
    $array30 = array();\n$array31 = array();\n$array32 = array();\n$array33 = array();\n\
    $array34 = array();\n$array35 = array();\n$array36 = array();\n$array37 = array();\n\
    $array38 = array();\n$array39 = array();\n$array40 = array();\n$array41 = array();\n\
    $array42 = array();\n$array43 = array();\n$array44 = array();\n$array45 = array();\n\
    $array46 = array();\n$array47 = array();\n$array48 = array();\n$array49 = array();\n\
    $array50 = array();\n$array51 = array();\n$array52 = array();\n$array53 = array();\n\
    $array54 = array();\n$array55 = array();\n$array56 = array();\n$array57 = array();\n\
    $array58 = array();\n$array59 = \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7gkg56co.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array_map(function($v) use ($min, $max) {\n    return $v < $min ? $min : $v\
    \ > $max ? $max : $v;\n  }, $lst);\n  return $lst;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfbi478re.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't work if there are duplicate keys in the array. For\
    \ example, `array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"a\" => 4)` will sort into\
    \ `array(\"a\" => 4, \"a\" => 1, \"b\" => 2, \"c\" => 3)`.\n<|/ c |>\n<| c |>\n\
    This doesn't work if there are duplicate keys in the array. For example, `array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"a\" => 4)` will sort into `array(\"a\" =>\
    \ 4, \"a\" => 1, \"b\" => 2, \"c\" => 3)`.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpavs39bov.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $result[] = $value;\n        } else if ($value > $max)\
    \ {\n            $result[] = $value;\n        } else {\n            $result[]\
    \ = $key;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprifrhxqj.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $v) {\n    $lst[] = $min + ($v - $min) * ($max\
    \ - $min) / ($v - $min);\n  }\n  return $lst;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr2\
    \ = array_chunk($arr, 2);\n$arr3 = array_chunk($arr, 3);\n$arr4 = array_chunk($arr,\
    \ 4);\n$arr5 = array_chunk($arr, 5);\n$arr6 = array_chunk($arr, 6);\n$arr7 = array_chunk($arr,\
    \ 7);\n$arr8 = array_chunk($arr, 8);\n$arr9 = array_chunk($arr, 9);\n$arr10 =\
    \ array_chunk($arr, 10);\n\n$arr2 = array_map(function($v){\n    return array_sum($v);\n\
    }, $arr2);\n$arr3 = array_map(function($v){\n    return array_sum($v);\n}, $arr3);\n\
    $arr4 = array_map(function($v){\n    return array_sum($v);\n}, $arr4);\n$arr5\
    \ = array_map(function($v){\n    return array_sum($v);\n}, $arr5);\n$arr6 = array_map(function($v){\n\
    \    return array_sum($v);\n}, $arr6);\n$arr7 = array_map(function($v){\n    return\
    \ array_sum($v);\n}, $arr7);\n$arr8 = array_map(function($v){\n    return array_sum($v);\n\
    }, $arr8);\n$arr9 = array_map(function($v){\n    return array_sum($v);\n}, $arr9);\n\
    $arr10 = array_map(function($v){\n    return array_sum($v);\n}, $arr10);\n\n$arr2\
    \ = array_map(function($v){\n    return array_sum($v);\n}, $arr2);\n$arr3 = array_map(function($v){\n\
    \    return array_sum($v);\n}, $arr3);\n$arr4 = array_map(function($v){\n    return\
    \ array_sum($v);\n}, $arr4);\n$arr5 = array_map(function($v){\n    return array_sum($v);\n\
    }, $arr5);\n$arr6 = array_map(function($v){\n    return array_sum($v);\n}, $arr6);\n\
    $arr7 = array_map(function($v){\n    return array_sum($v);\n}, $arr7);\n$arr8\
    \ = array_map(function($\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmtj5s73y.php on line 21

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zxi29ls.php:24\n\
    Stack trace:\n#0 /tmp/tmp4zxi29ls.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4zxi29ls.php\
    \ on line 24\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $result[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $result[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $result[] = $value;\n        }\n  \
    \  }\n    return $result;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c\
    \ |>\nThis doesn't work if the array is empty or contains only a single element.\
    \ Try it with `array(1)`.\n<|/ c |>\n<| c |>\n: Yes, it does. Try it with `array(1)`.\n\
    <|/ c |>\n<| c |>\n: Yes, it does. Try it with `array(1)`.\n<|/ c |>\n<| c |>\n\
    : Yes, it does. Try it with `array(1)`.\n<|/ c |>\n<| c |>\n: Yes, it does. Try\
    \ it with `array(1)`.\n<|/ c |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8hi_vzvi.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $val) {\n        if ($val == $min)\
    \ {\n            $sorted[] = $val;\n        } else if ($val == $max) {\n     \
    \       $sorted[] = $max;\n        } else {\n            $sorted[] = $min;\n \
    \           $sorted[] = $val;\n        }\n    }\n    return $sorted;\n}\n</code>\n\
    <|/ a |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't\
    \ work if your array has negative numbers. `array_reverse` will reverse the array\
    \ in place, and you end up with negative numbers in the array.\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work if your array has negative numbers. array_reverse will\
    \ reverse the array in place, and you end up with negative numbers in the array.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if your array has negative numbers. array_reverse\
    \ will reverse the array in place, and you end up with negative numbers in the\
    \ array.\n<|/ c |>\n<| c |>\nThis doesn't work if your array has negative numbers.\
    \ array_reverse will reverse the array in place, and you end up with negative\
    \ numbers in the array.\n<|/ c |>\n<| c |>\nThis doesn't work if your array has\
    \ negative numbers. array_reverse will reverse the array in place, and you end\
    \ up with negative numbers in the array.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n</code>\n<|/\
    \ a tags=php,sorting,arrays |>\n<| c |>\nThis doesn't work if your array has negative\
    \ numbers. array_reverse will reverse the array in place, and you end up with\
    \ negative numbers in the array.\n<|/ c |>\n<| c |>\nThis doesn't work if your\
    \ array has negative numbers. array_reverse will reverse the array in place, and\
    \ you end up with negative numbers in the array.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if your array has negative numbers. array_reverse will reverse the array\
    \ in place, and you end up with negative numbers in the array.\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work if your array has negative numbers. array_reverse will\
    \ reverse the array in place, and you end up with negative numbers in the array.\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkecrr_1x.php on line 28

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this\
    \ solution, it's simple and effective.\n<|/ c |>\n<| c |>\nI like this solution,\
    \ it's simple and effective.\n<|/ c |>\n<| c |>\nI like this solution, it's simple\
    \ and effective.\n<|/ c |>\n<| c |>\nI like this solution, it's simple and effective.\n\
    <|/ c |>\n<| c |>\nI like this solution, it's simple and effective.\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzox4g4dy.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $result[] = $min;\n        } elseif ($item == $max) {\n     \
    \       $result[] = $max;\n        } else {\n            $result[] = $item;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgm1un0hz.php:33\n\
    Stack trace:\n#0 /tmp/tmpgm1un0hz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgm1un0hz.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $lst = array_map(function($x) use ($min, $max) {\n        return $min > $x\
    \ ? $min : $x > $max ? $max : $x;\n    }, $lst);\n    return $lst;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4);\n\
    $array = array_reverse($array);\nprint_r($array);\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, 4);\n$array = array_reverse($array);\n\
    print_r($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\n$array =\
    \ array(1, 2, 3, 4);\n$array = array_reverse($array);\nprint_r($array);\n</code>\n\
    <|/ a tags=php,arrays dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,\
    \ 2, 3, 4);\n$array = array_reverse($array);\nprint_r($array);\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4);\n\
    $array = array_reverse($array);\nprint_r($array);\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, 4);\n$array = array_reverse($array);\n\
    print_r($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(1, 2, 3, 4);\n$array = array_reverse($array);\nprint_r($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,\
    \ 2, 3, 4);\n$array = array_reverse($array);\nprint_r($array);\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a |>\n<code>\n$array = array(1, 2, 3, 4);\n$array = array_reverse($array);\n\
    print_r($array);\n</code>\n<|/ a dscore=1 tags=php,arrays |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(1, 2, 3, 4);\n$array = array_reverse($array);\nprint_r($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,\
    \ 2, 3, 4);\n$array = array_reverse\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpx9k5f5xl.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $result[] = $min;\n        } else if ($item == $max) {\n    \
    \        $result[] = $max;\n        } else {\n            $result[] = $item;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcd1ni516.php:33\n\
    Stack trace:\n#0 /tmp/tmpcd1ni516.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpcd1ni516.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $i => $val) {\n        if ($val ==\
    \ $min) {\n            $sorted[] = $min;\n        } else if ($val == $max) {\n\
    \            $sorted[] = $max;\n        } else {\n            $sorted[] = $val;\n\
    \        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis solution doesn't work for me. Try it on `array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,22\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppxdcv2_7.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    sort($sorted);\n    return $sorted;\n}\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxrs7_ubd.php:23\n\
    Stack trace:\n#0 /tmp/tmpxrs7_ubd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxrs7_ubd.php\
    \ on line 23\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = [];\n    foreach ($lst as $item) {\n        if ($item == $min) {\n\
    \            $result[] = $min;\n        } elseif ($item == $max) {\n         \
    \   $result[] = $max;\n        } else {\n            $result[] = $item;\n    \
    \    }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$arr = [\n    1 => 1,\n    2 => 2,\n    3 => 3,\n    4 =>\
    \ 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 => 8,\n    9 => 9,\n    10\
    \ => 10\n];\n\n$arr1 = array_filter($arr, function($v) {\n    return $v != 10;\n\
    });\n$arr2 = array_filter($arr, function($v) {\n    return $v != 9;\n});\n$arr3\
    \ = array_filter($arr, function($v) {\n    return $v != 8;\n});\n$arr4 = array_filter($arr,\
    \ function($v) {\n    return $v != 7;\n});\n$arr5 = array_filter($arr, function($v)\
    \ {\n    return $v != 6;\n});\n$arr6 = array_filter($arr, function($v) {\n   \
    \ return $v != 5;\n});\n$arr7 = array_filter($arr, function($v) {\n    return\
    \ $v != 4;\n});\n$arr8 = array_filter($arr, function($v) {\n    return $v != 3;\n\
    });\n$arr9 = array_filter($arr, function($v) {\n    return $v != 2;\n});\n$arr10\
    \ = array_filter($arr, function($v) {\n    return $v != 1;\n});\n\n$arr1 = array_merge($arr1,\
    \ $arr2, $arr3, $arr4, $arr5, $arr6, $arr7, $arr8, $arr9, $arr10);\n\n$arr1 =\
    \ array_unique($arr1);\n$arr1 = array_values($arr1);\n$arr1 = array_flip($arr1);\n\
    \nprint_r($arr1);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$arr\
    \ = [\n    1 => 1,\n    2 => 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6\
    \ => 6,\n    7 => 7,\n    8 => 8,\n    9 => 9,\n    10 => 10\n];\n\n$arr1 = array_filter($arr,\
    \ function($v) {\n    return $v != 10;\n\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_eusikh0.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $result[] = $min;\n        } else if ($item == $max) {\n    \
    \        $result[] = $max;\n        } else {\n            $result[] = $item;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcd1ni516.php:33\n\
    Stack trace:\n#0 /tmp/tmpcd1ni516.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpcd1ni516.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    sort($sorted);\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_if4ls9g.php:24\n\
    Stack trace:\n#0 /tmp/tmp_if4ls9g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_if4ls9g.php\
    \ on line 24\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if\
    \ the array is empty or contains only a single element. `array_multisort` throws\
    \ an error when given an empty array.\n<|/ c |>\n<| c |>\nI tested it on empty\
    \ array and single element array. Works fine.\n<|/ c |>\n<| c |>\nI tested it\
    \ on empty array and single element array. Works fine.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work if the array is empty or contains only a single element. `array_multisort`\
    \ throws an error when given an empty array.\n<|/ c |>\n<| c |>\nI tested it on\
    \ empty array and single element array. Works fine.\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyp4wdbwo.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = $lst[0];\n   \
    \ $max = $lst[0];\n    foreach ($lst as $item) {\n        if ($item < $min) {\n\
    \            $min = $item;\n        } else if ($item > $max) {\n            $max\
    \ = $item;\n        }\n    }\n    foreach ($lst as $item) {\n        if ($item\
    \ == $min) {\n            $sorted[] = $min;\n        } else if ($item == $max)\
    \ {\n            $sorted[] = $max;\n        } else {\n            $sorted[] =\
    \ $item;\n        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a tags=php,arrays |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpve4sa_w3.php on line 34

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't work for me. `array_multisort` doesn't seem to sort\
    \ it properly. `var_dump($sorted);` shows `array(5) { [0]=> int(1) [1]=> int(2)\
    \ [2]=> int(3) [3]=> int(4) [4]=> int(5) }`\n<|/ c |>\n<| c |>\n: It works for\
    \ me. Maybe you didn't copy it correctly? http://codepad.org/4XujyYNg\n<|/ c |>\n\
    <| c |>\n: I added a link to a working example to my answer.\n<|/ c |>\n<| c |>\n\
    : I added a link to a working example to my answer.\n<|/ c |>\n<| c |>\n: I added\
    \ a link to a working example to my answer.\n<|/ c |>\n<| a tags=php,sorting,arrays\
    \ |>\n<code>\n$array = array();\n$array[] = '1';\n$array[] = '2';\n$array[] =\
    \ '3';\n$array[] = '4';\n$array[] = '5';\n$array[] = '6';\n$array[] = '7';\n$array[]\
    \ = '8';\n$array[] = '9';\n$array[] = '10';\n$array[] = '11';\n$array[] = '12';\n\
    $array[] = '13';\n$array[] = '14';\n$array[] = '15';\n$array[] = '16';\n$array[]\
    \ = '17';\n$array[] = '18';\n$array[] = '19';\n$array[] = '20';\n$array[] = '21';\n\
    $array[] = '22';\n$array[] = '23';\n$array[] = '24';\n$array[] = '25';\n$array[]\
    \ = '26';\n$array[] = '27';\n$array[] = '28';\n$array[] = '29';\n$array[] = '30';\n\
    $array[] = '31';\n$array[] = '32';\n$array[] = '33';\n$array[] = '34';\n$array[]\
    \ = '35';\n$array[] = '36';\n$array[] = '37';\n$array[] = '38';\n$array[]\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzx2r2mf9.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_ASC, $lst);\n    return $lst;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw0qoj_2s.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, array_reverse($lst));\n  return $sorted;\n\
    }\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuz7kai2j.php:23\n\
    Stack trace:\n#0 /tmp/tmpuz7kai2j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpuz7kai2j.php\
    \ on line 23\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $sorted[] = $min;\n        } else if ($item == $max) {\n    \
    \        $sorted[] = $max;\n        } else {\n            $sorted[] = $item;\n\
    \        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=sorting,php\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpv77fbcnt.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    $sorted\
    \ = array_merge($sorted, array_reverse($sorted, true));\n    return $sorted;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=2 |>\n<code>\n<?php\n\
    $array = array(\n    array(\n        'id' => 1,\n        'name' => 'John',\n \
    \       'age' => 25\n    ),\n    array(\n        'id' => 2,\n        'name' =>\
    \ 'Jane',\n        'age' => 30\n    ),\n    array(\n        'id' => 3,\n     \
    \   'name' => 'Jack',\n        'age' => 25\n    ),\n    array(\n        'id' =>\
    \ 4,\n        'name' => 'Jill',\n        'age' => 25\n    ),\n    array(\n   \
    \     'id' => 5,\n        'name' => 'Jack',\n        'age' => 25\n    ),\n   \
    \ array(\n        'id' => 6,\n        'name' => 'Jill',\n        'age' => 25\n\
    \    ),\n    array(\n        'id' => 7,\n        'name' => 'Jack',\n        'age'\
    \ => 25\n    ),\n    array(\n        'id' => 8,\n        'name' => 'Jill',\n \
    \       'age' => 25\n    ),\n    array(\n        'id' => 9,\n        'name' =>\
    \ 'Jack',\n        'age' => 25\n    ),\n    array(\n        'id' => 10,\n    \
    \    'name' => 'Jill',\n        'age' => 25\n    ),\n    array(\n        'id'\
    \ => 11,\n        'name' => 'Jack',\n        'age' => 25\n    ),\n    array(\n\
    \        'id' => 12,\n        'name' => 'Jill',\n        'age' => 25\n    ),\n\
    \    array(\n        'id' => 13,\n        'name' => 'Jack',\n        'age' =>\
    \ 25\n    ),\n    array(\n        'id' => 14,\n        'name' => 'Jill',\n   \
    \     'age' => 25\n    ),\n    array(\n        'id' => 15,\n        'name' =>\
    \ 'Jack',\n        'age' => 25\n    ),\n    array(\n        'id' => 16,\n    \
    \    'name' => 'Jill',\n        'age' => 25\n    ),\n    array(\n        'id'\
    \ => 17,\n        'name' => 'Jack',\n        'age' => 25\n    ),\n    array(\n\
    \        'id' => 18,\n        'name' => 'Jill',\n        'age' => 25\n    ),\n\
    \    array(\n        'id' => 19,\n        'name' => 'Jack',\n        'age' =>\
    \ 25\n    ),\n    array(\n        'id' => 20,\n        'name' => '\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0mf6qu2h.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $val) {\n        if ($val\
    \ == $min) {\n            $sorted[] = $min;\n            $sorted[] = $max;\n \
    \           $sorted[] = $val;\n        } else if ($val == $max) {\n          \
    \  $sorted[] = $max;\n            $sorted[] = $min;\n            $sorted[] = $val;\n\
    \        } else {\n            $sorted[] = $val;\n        }\n    }\n    return\
    \ $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis is not\
    \ the correct answer, the correct answer is `array(1, 4, 2, 3)`\n<|/ c |>\n<|\
    \ c |>\nThe question was about sorting an array in strange order. Your answer\
    \ does not do that. Your answer sorts the array in ascending order.\n<|/ c |>\n\
    <| c |>\nI see what you mean. I've updated my answer to reflect this.\n<|/ c |>\n\
    <| c |>\nI see what you mean. I've updated my answer to reflect this.\n<|/ c |>\n\
    <| c |>\nI see what you mean. I've updated my answer to reflect this.\n<|/ c |>\n\
    <| a dscore=2 |>\n<code>\n<?php\n$array = array(1, 2, 3, 4);\n$array = array_reverse($array);\n\
    print_r($array);\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgxd49f2a.php on line 31

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $item) {\n    if ($item == $min) {\n      $sorted[]\
    \ = $min;\n    } else if ($item == $max) {\n      $sorted[] = $max;\n    } else\
    \ {\n      $sorted[] = $item;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptygensel.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $value;\n    } else if ($value > $max) {\n      $sorted[] =\
    \ $value;\n    } else {\n      $sorted[] = $key;\n    }\n  }\n  return $sorted;\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| a tags=php,sorting,arrays |>\n\
    <code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpoezox5jg.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $val) {\n        $sorted[$key] = $val;\n    }\n    asort($sorted);\n    return\
    \ $sorted;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2tfax_3.php:26\n\
    Stack trace:\n#0 /tmp/tmpw2tfax_3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpw2tfax_3.php\
    \ on line 26\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return array();\n  }\n\
    \  $min = reset($lst);\n  $max = end($lst);\n  $ret = array();\n  foreach ($lst\
    \ as $key => $value) {\n    if ($value < $min) {\n      $ret[] = $value;\n   \
    \ } else if ($value > $max) {\n      $ret[] = $value;\n    } else {\n      $ret[]\
    \ = $key;\n    }\n  }\n  return $ret;\n}\n\nfunction candidate(...$args) {\n \
    \   return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeflshjoc.php:36\n\
    Stack trace:\n#0 /tmp/tmpeflshjoc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeflshjoc.php\
    \ on line 36\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $val) {\n    if ($val < $min) {\n      $lst[]\
    \ = $min;\n    } else if ($val > $max) {\n      $lst[] = $max;\n    } else {\n\
    \      $lst[] = $val;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(1, 2, 3, 4, 5);\n$array\
    \ = str_replace(array_keys($array), array_values($array), $array);\nprint_r($array);\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp77qhc81s.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $val) {\n    if ($val < $min) {\n      $lst[]\
    \ = $min;\n    } else if ($val > $max) {\n      $lst[] = $max;\n    } else {\n\
    \      $lst[] = $val;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't work if you have duplicate values.\n<|/ c |>\n<| c\
    \ |>\nIt does work if you have duplicate values. Try it yourself.\n<|/ c |>\n\
    <| c |>\nIt does work if you have duplicate values. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it your\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyy_khc9m.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't seem to work.\
    \ `strange_sort_list(array(1, 2, 3, 4))` returns `array(1, 2, 3, 4)` instead of\
    \ `array(1, 4, 2, 3)`.\n<|/ c |>\n<| c |>\nI tested it and it works. I tested\
    \ it on PHP 5.3.10 and PHP 5.2.17. Maybe you have a different version?\n<|/ c\
    \ |>\n<| c |>\nI tested it on PHP 5.3.10 and PHP 5.2.17. Maybe you have a different\
    \ version?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10 and PHP 5.2.17. Maybe\
    \ you have a different version?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10\
    \ and PHP 5.2.17. Maybe you have a different version?\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\n    1 => 2,\n    2 => 1,\n    3 => 4,\n    4 =>\
    \ 3,\n    5 => 6\n);\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmtvojp5o.php on line 18

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpiqphg9wf.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $i => $v) {\n    if ($v == $min) {\n      $lst[$i]\
    \ = $max;\n    } else if ($v == $max) {\n      $lst[$i] = $min;\n    } else {\n\
    \      $lst[$i] = $v;\n    }\n  }\n  return $lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ft_pjql.php:33\n\
    Stack trace:\n#0 /tmp/tmp4ft_pjql.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4ft_pjql.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    } else if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    } else {\n      $sorted[]\
    \ = $value;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis code doesn't work if there are duplicate values in the array.\
    \ For example, `strange_sort_list(array(5, 5, 5, 5))` returns `array(5, 5, 5,\
    \ 5)`.\n<|/ c |>\n<| c |>\n: Yes, it does. Try it yourself.\n<|/ c |>\n<| c |>\n\
    : I added a version that works with duplicate values.\n<|/ c |>\n<| c |>\n: I\
    \ added a version that works with duplicate values.\n<|/ c |>\n<| c |>\n: I added\
    \ a version that works with duplicate values.\n<|/ c |>\n<| a dscore=3 |>\n<code>\n\
    $array = array(\n    array(\n        'id' => 1,\n        'name' => 'John',\n \
    \       'age' => 25,\n    ),\n    array(\n        'id' => 2,\n        'name' =>\
    \ 'Jane',\n        'age' => 28,\n    ),\n    array(\n        'id' => 3,\n    \
    \    'name' => 'Jack',\n        'age' => 22,\n    ),\n);\n\nusort($array, function($a,\
    \ $b) {\n    return $a['age'] - $b['age'];\n});\n\nvar_dump($array);\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| c |>\nThis code doesn't work if there are\
    \ duplicate values in the array. For example, `usort($array, function($a, $b)\
    \ {\n    return $a['age'] - $b['age'];\n});` returns `array(5, 5, 5, 5)`.\n<|/\
    \ c |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5cqrf3w1.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $k => $v) {\n    if ($v < $min) {\n      $lst[$k]\
    \ = $min;\n    } else if ($v > $max) {\n      $lst[$k] = $max;\n    } else {\n\
    \      $lst[$k] = $v;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work if the array is empty or has only one element.\
    \ `min` and `max` return `0`.\n<|/ c |>\n<| c |>\nThis doesn't work if the array\
    \ is empty or has only one element. min and max return 0.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgo2qo3zw.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $k => $v) {\n        if ($v == $min)\
    \ {\n            $sorted[] = $v;\n            unset($lst[$k]);\n        } else\
    \ if ($v == $max) {\n            $sorted[] = $v;\n            unset($lst[$k]);\n\
    \        } else {\n            $sorted[] = $v;\n        }\n    }\n    return $sorted;\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| a dscore=2 |>\n<code>\n<?php\n\
    $arr = array(5,4,3,2,1);\n$sorted = array_intersect_key($arr, array_flip($arr));\n\
    print_r($sorted);\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbym2l9le.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $sorted[] = $min;\n        } else if ($item == $max) {\n    \
    \        $sorted[] = $max;\n        } else {\n            $sorted[] = $item;\n\
    \        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1\
    \ |>\n<code>\n<?php\n$arr = array(1, 2, 3, 4);\n$sorted = array_flip($arr);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n$sorted = array_flip($sorted);\n\
    $sorted = array_\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz62z83gd.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c\
    \ |>\nThis doesn't seem to work. `strange_sort_list(array(1,2,3,4,5,6,7,8,9,10));`\
    \ returns `array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1)`\n<|/ c |>\n<| c |>\n: Yes, it\
    \ does. I tested it before posting it. I just tested it again and it works fine.\
    \ Try it again.\n<|/ c |>\n<| c |>\n: It works fine for me. Try it again. `strange_sort_list(array(1,2,3,4,5,6,7,8,9,10));`\
    \ returns `array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1)`.\n<|/ c |>\n<| c |>\n: I tested\
    \ it again and it works fine. Try it again.\n<|/ c |>\n<| c |>\n: I tested it\
    \ again and it works fine. Try it again.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4c21tiza.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $ret\
    \ = [];\n  foreach ($lst as $i => $v) {\n    if ($v < $min) {\n      $ret[] =\
    \ $min;\n    } else if ($v > $max) {\n      $ret[] = $max;\n    } else {\n   \
    \   $ret[] = $v;\n    }\n  }\n  return $ret;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't work if you have two equal numbers in the array. e.g.\
    \ `strange_sort_list(array(1,1,2,3,4))` returns `array(1,2,3,4,1)`\n<|/ c |>\n\
    <| c |>\nThis doesn't work if you have two equal numbers in the array. e.g. `strange_sort_list(array(1,1,2,3,4))`\
    \ returns `array(1,2,3,4,1)`\n<|/ c |>\n<| c |>\nThis doesn't work if you have\
    \ two equal numbers in the array. e.g. `strange_sort_list(array(1,1,2,3,4))` returns\
    \ `array(1,2,3,4,1)`\n<|/ c |>\n<| c |>\nThis doesn't work if you have two equal\
    \ numbers in the array. e.g. `strange_sort_list(array(1,1,2,3,4))` returns `array(1,2,3,4,1)`\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpoy7alb87.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This doesn't seem to work. `strange_sort_list(array(1,2,3,4,5,6,7,8,9))` returns\
    \ `array(9, 7, 8, 6, 5, 3, 2, 4, 1)` instead of `array(9, 7, 8, 6, 5, 4, 3, 2,\
    \ 1)`\n<|/ c |>\n<| c |>\n: I tested it and it works. I added a test case to my\
    \ answer.\n<|/ c |>\n<| c |>\n: I added a test case to my answer.\n<|/ c |>\n\
    <| c |>\n: I added a test case to my answer.\n<|/ c |>\n<| c |>\n: I added a test\
    \ case to my answer.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph76wqyv_.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $sorted[] = $min;\n        } else if ($item == $max) {\n    \
    \        $sorted[] = $max;\n        } else {\n            $sorted[] = $item;\n\
    \        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph1uiwngc.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = [];\n    foreach ($lst as $item) {\n        if ($item == $min) {\n\
    \            $result[] = $min;\n        } else if ($item == $max) {\n        \
    \    $result[] = $max;\n        } else {\n            $result[] = $item;\n   \
    \     }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1, 2, 3, 4))`\
    \ returns `array(1, 4, 2, 3)` instead of `array(1, 2, 3, 4)`.\n<|/ c |>\n<| c\
    \ |>\nI tested it on PHP 5.6 and it works. What PHP version are you using?\n<|/\
    \ c |>\n<| c |>\nI'm using PHP 7.2.17. I'm on Windows 10. Could this be the problem?\n\
    <|/ c |>\n<| c |>\nNo, I don't think so. I've tested it on PHP 7.2.17 and it works.\
    \ What PHP version are you using?\n<|/ c |>\n<| c |>\nI'm using PHP 7.2.17. I'm\
    \ on Windows 10. Could this be the problem?\n<|/ c |>\n<| a tags=php,sorting,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9o8przut.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $k => $v) {\n    if ($min > $v) {\n      $sorted[]\
    \ = $v;\n      $min = $v;\n    } else if ($max < $v) {\n      $sorted[] = $v;\n\
    \      $max = $v;\n    } else {\n      $sorted[] = $k;\n    }\n  }\n  return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2qz1nub.php:35\n\
    Stack trace:\n#0 /tmp/tmpy2qz1nub.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpy2qz1nub.php\
    \ on line 35\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    return\
    \ $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2igck4_0.php on line 18

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    sort($sorted);\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_if4ls9g.php:24\n\
    Stack trace:\n#0 /tmp/tmp_if4ls9g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_if4ls9g.php\
    \ on line 24\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_2xmz2p.php:25\n\
    Stack trace:\n#0 /tmp/tmpc_2xmz2p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc_2xmz2p.php\
    \ on line 25\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this\
    \ solution, but I wonder if there is a way to do this without having to loop through\
    \ the array twice?\n<|/ c |>\n<| c |>\n: No, there isn't. `array_multisort` sorts\
    \ in-place, so it has to loop through the array twice. `usort` on the other hand\
    \ can sort in-place and doesn't have to loop through the array twice.\n<|/ c |>\n\
    <| c |>\n: I added a version that doesn't loop through the array twice. `usort`\
    \ doesn't have this limitation.\n<|/ c |>\n<| c |>\n: I added a version that doesn't\
    \ loop through the array twice. `usort` doesn't have this limitation.\n<|/ c |>\n\
    <| c |>\n: I added a version that doesn't loop through the array twice. `usort`\
    \ doesn't have this limitation.\n<|/ c |>\n<| a tags=php,sorting,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdhhmysul.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $ret\
    \ = $min;\n  foreach ($lst as $i => $v) {\n    if ($v < $min) {\n      $ret[]\
    \ = $min;\n      $min = $v;\n    } else if ($v > $max) {\n      $ret[] = $max;\n\
    \      $max = $v;\n    } else {\n      $ret[] = $v;\n    }\n  }\n  return $ret;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10];\n$arr1 = array_chunk($arr, 2);\n$arr2 = array_chunk($arr, 3);\n\
    $arr3 = array_chunk($arr, 4);\n$arr4 = array_chunk($arr, 5);\n$arr5 = array_chunk($arr,\
    \ 6);\n$arr6 = array_chunk($arr, 7);\n$arr7 = array_chunk($arr, 8);\n$arr8 = array_chunk($arr,\
    \ 9);\n$arr9 = array_chunk($arr, 10);\n$arr10 = array_chunk($arr, 11);\n$arr11\
    \ = array_chunk($arr, 12);\n$arr12 = array_chunk($arr, 13);\n$arr13 = array_chunk($arr,\
    \ 14);\n$arr14 = array_chunk($arr, 15);\n$arr15 = array_chunk($arr, 16);\n$arr16\
    \ = array_chunk($arr, 17);\n$arr17 = array_chunk($arr, 18);\n$arr18 = array_chunk($arr,\
    \ 19);\n$arr19 = array_chunk($arr, 20);\n$arr20 = array_chunk($arr, 21);\n$arr21\
    \ = array_chunk($arr, 22);\n$arr22 = array_chunk($arr, 23);\n$arr23 = array_chunk($arr,\
    \ 24);\n$arr24 = array_chunk($arr, 25);\n$arr25 = array_chunk($arr, 26);\n$arr26\
    \ = array_chunk($arr, 27);\n$arr27 = array_chunk($arr, 28);\n$arr28 = array_chunk($arr,\
    \ 29);\n$arr29 = array_chunk($arr, 30);\n$arr30 = array_chunk($arr, 31);\n$arr31\
    \ = array_chunk($arr, 32);\n$arr32 = array_chunk($arr, 33);\n$arr33 = array_chunk($arr,\
    \ 34);\n$arr34 = array_chunk($arr, 35);\n$arr35 = array_chunk($arr, 36);\n$arr36\
    \ = array_chunk($arr, 37);\n$arr37 = array_chunk($arr, 38);\n$arr38 = array_chunk($arr,\
    \ 39);\n$arr39 = array_chunk\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph74xi6jn.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $val) {\n    if ($val < $min) {\n \
    \     $sorted[] = $min;\n      $min = $val;\n    } else if ($val > $max) {\n \
    \     $sorted[] = $max;\n      $max = $val;\n    } else {\n      $sorted[] = $val;\n\
    \    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| c |>\nThis doesn't work for me. `strange_sort_list(array())` returns an empty\
    \ array.\n<|/ c |>\n<| c |>\nThis doesn't work for me either. `strange_sort_list(array())`\
    \ returns an empty array.\n<|/ c |>\n<| c |>\nThis doesn't work for me either.\
    \ `strange_sort_list(array())` returns an empty array.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work for me either. `strange_sort_list(array())` returns an empty array.\n\
    <|/ c |>\n<| c |>\nThis doesn't work for me either. `strange_sort_list(array())`\
    \ returns an empty array.\n<|/ c |>\n<| a dscore=5 tags=php,arrays,sorting |>\n\
    <code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpg5v30tl5.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, array_reverse($lst));\n  return $sorted;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$array = array(1,\
    \ 2, 3, 4);\n$array = str_repeat('0', count($array) - 1) . $array;\n$array = str_split($array);\n\
    $array = array_reverse($array);\n$array = array_merge($array);\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0wxevmx8.php on line 18

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < $min) {\n      $lst[]\
    \ = $min;\n    } else if ($item > $max) {\n      $lst[] = $max;\n    } else {\n\
    \      $lst[] = $item;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a tags=php,sorting\
    \ |>\n<| a tags=php,sorting |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp162d5q99.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $val) {\n        if ($val\
    \ == $min) {\n            $sorted[] = $min;\n            unset($lst[$key]);\n\
    \        } else if ($val == $max) {\n            $sorted[] = $max;\n         \
    \   unset($lst[$key]);\n        } else {\n            $sorted[] = $val;\n    \
    \    }\n    }\n    return $sorted;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$arr = [1, 2, 3, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n\
    $sorted = array_merge(array_slice($arr, 1), array_slice($arr, 0, -1));\nprint_r($sorted);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$arr = [1, 2, 3,\
    \ 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n$sorted = array_merge(array_slice($arr,\
    \ 1), array_slice($arr, 0, -1));\nprint_r($sorted);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1, 2, 3, 10, 20, 30, 40, 50, 60,\
    \ 70, 80, 90, 100];\n$sorted = array_merge(array_slice($arr, 1), array_slice($arr,\
    \ 0, -1));\nprint_r($sorted);\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp69e1k4pk.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  natsort($sorted);\n  return $sorted;\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr1 = array();\n$arr2 = array();\n$arr3 = array();\n$arr4 = array();\n$arr5\
    \ = array();\n$arr6 = array();\n$arr7 = array();\n$arr8 = array();\n$arr9 = array();\n\
    $arr10 = array();\n$arr11 = array();\n$arr12 = array();\n$arr13 = array();\n$arr14\
    \ = array();\n$arr15 = array();\n$arr16 = array();\n$arr17 = array();\n$arr18\
    \ = array();\n$arr19 = array();\n$arr20 = array();\n$arr21 = array();\n$arr22\
    \ = array();\n$arr23 = array();\n$arr24 = array();\n$arr25 = array();\n$arr26\
    \ = array();\n$arr27 = array();\n$arr28 = array();\n$arr29 = array();\n$arr30\
    \ = array();\n$arr31 = array();\n$arr32 = array();\n$arr33 = array();\n$arr34\
    \ = array();\n$arr35 = array();\n$arr36 = array();\n$arr37 = array();\n$arr38\
    \ = array();\n$arr39 = array();\n$arr40 = array();\n$arr41 = array();\n$arr42\
    \ = array();\n$arr43 = array();\n$arr44 = array();\n$arr45 = array();\n$arr46\
    \ = array();\n$arr47 = array();\n$arr48 = array();\n$arr49 = array();\n$arr50\
    \ = array();\n$arr51 = array();\n$arr52 = array();\n$arr53 = array();\n$arr54\
    \ = array();\n$arr55 = array();\n$arr56 = array();\n$arr57 = array();\n$arr58\
    \ = array();\n$arr59 = array();\n$arr60 = array();\n$arr61 = array();\n$arr62\
    \ = array();\n$arr63 = array();\n$arr64 = array();\n$arr65\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdsgrvbgw.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return array();\n  }\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $lst = array();\n  foreach ($lst\
    \ as $key => $value) {\n    if ($value < $min) {\n      $lst[$key] = $min;\n \
    \   } else if ($value > $max) {\n      $lst[$key] = $max;\n    } else {\n    \
    \  $lst[$key] = $value;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=sorting,php,arrays |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz15tugfu.php on line 30

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = reset($lst);\n  $max = end($lst);\n  $result\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < $min) {\n      $result[]\
    \ = $min;\n      $min = $item;\n    } elseif ($item > $max) {\n      $result[]\
    \ = $max;\n      $max = $item;\n    } else {\n      $result[] = $item;\n    }\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a tags=php,sorting |>\n<| c |>\nThis\
    \ is not the right answer. Try it with `array(1,2,3,4,5,6,7,8,9,10)` and you will\
    \ see that it is wrong.\n<|/ c |>\n<| c |>\n: I see what you mean. I've updated\
    \ the answer to account for this.\n<|/ c |>\n<| c |>\n: I see what you mean. I've\
    \ updated the answer to account for this.\n<|/ c |>\n<| c |>\n: I see what you\
    \ mean. I've updated the answer to account for this.\n<|/ c |>\n<| c |>\n: I see\
    \ what you mean. I've updated the answer to account for this.\n<|/ c |>\n<| a\
    \ tags=php,sorting |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmiekqlxp.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    $sorted\
    \ = array_merge($sorted, array_reverse($sorted, true));\n    return $sorted;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $array = array(\n    array(\n        'id' => 1,\n        'name' => 'John',\n \
    \       'age' => 30,\n    ),\n    array(\n        'id' => 2,\n        'name' =>\
    \ 'Jane',\n        'age' => 25,\n    ),\n    array(\n        'id' => 3,\n    \
    \    'name' => 'Jack',\n        'age' => 28,\n    ),\n    array(\n        'id'\
    \ => 4,\n        'name' => 'Jill',\n        'age' => 31,\n    ),\n    array(\n\
    \        'id' => 5,\n        'name' => 'Jack',\n        'age' => 29,\n    ),\n\
    \    array(\n        'id' => 6,\n        'name' => 'Jill',\n        'age' => 30,\n\
    \    ),\n    array(\n        'id' => 7,\n        'name' => 'Jane',\n        'age'\
    \ => 25,\n    ),\n    array(\n        'id' => 8,\n        'name' => 'Jack',\n\
    \        'age' => 28,\n    ),\n    array(\n        'id' => 9,\n        'name'\
    \ => 'Jill',\n        'age' => 31,\n    ),\n    array(\n        'id' => 10,\n\
    \        'name' => 'Jack',\n        'age' => 29,\n    ),\n    array(\n       \
    \ 'id' => 11,\n        'name' => 'Jill',\n        'age' => 30,\n    ),\n    array(\n\
    \        'id' => 12,\n        'name' => 'Jane',\n        'age' => 25,\n    ),\n\
    \    array(\n        'id' => 13,\n        'name' => 'Jack',\n        'age' =>\
    \ 28,\n    ),\n    array(\n        'id' => 14,\n        'name' => 'Jill',\n  \
    \      'age' => 31,\n    ),\n    array(\n        'id' => 15,\n        'name' =>\
    \ 'Jack',\n        'age' => 29,\n    ),\n    array(\n        'id' => 16,\n   \
    \     'name' => 'Jill',\n        'age' => 30,\n    ),\n    array(\n        'id'\
    \ => 17,\n        'name' => 'Jane',\n        'age' => 25,\n    ),\n    array(\n\
    \        'id' => 18,\n        'name' => 'Jack',\n        'age' => 28,\n    ),\n\
    \    array(\n        'id' => 19,\n        'name' => 'Jill',\n        'age' =>\
    \ 31,\n    ),\n    array(\n        'id' => 20,\n        'name' => '\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzkyg5ngq.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return array();\n  }\n\
    \  $min = reset($lst);\n  $max = end($lst);\n  $result = array();\n  foreach ($lst\
    \ as $key => $value) {\n    if ($value < $min) {\n      $result[] = $min;\n  \
    \    $min = $value;\n    } else if ($value > $max) {\n      $result[] = $max;\n\
    \      $max = $value;\n    } else {\n      $result[] = $value;\n    }\n  }\n \
    \ $result[] = $min;\n  $result[] = $max;\n  return $result;\n}\n</code>\n<|/ a\
    \ tags=php,sorting,arrays |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1,\
    \ 2, 3, 4))` returns `array(4, 2, 3, 1)`.\n<|/ c |>\n<| c |>\nI tested it on PHP\
    \ 5.5.9 and it works fine. Are you sure you copied it correctly?\n<|/ c |>\n<|\
    \ c |>\nYes, I copied it correctly. I'm running PHP 5.5.9 on a Mac.\n<|/ c |>\n\
    <| c |>\nI tested it on PHP 5.5.9 and it works fine. Are you sure you copied it\
    \ correctly?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and it works fine. Are\
    \ you sure you copied it correctly?\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjpsx5j50.php on line 34

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_2xmz2p.php:25\n\
    Stack trace:\n#0 /tmp/tmpc_2xmz2p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc_2xmz2p.php\
    \ on line 25\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $min_pos\
    \ = array_search($min, $lst);\n  $max_pos = array_search($max, $lst);\n  $lst[$min_pos]\
    \ = $min;\n  $lst[$max_pos] = $max;\n  array_splice($lst, $min_pos, 1);\n  array_splice($lst,\
    \ $max_pos, 1);\n  return $lst;\n}\n</code>\n<|/ a tags=php,sorting |>\n<| c |>\n\
    This doesn't seem to work if the array is empty or contains only a single value.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if the array contains only a single value.\
    \ It works if there are two or more values.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if the array contains only a single value. It works if there are two or more\
    \ values.\n<|/ c |>\n<| c |>\nThis doesn't work if the array contains only a single\
    \ value. It works if there are two or more values.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if the array contains only a single value. It works if there are two or\
    \ more values.\n<|/ c |>\n<| a tags=php,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph8ba8htw.php on line 23

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $value;\n    } else if ($value > $max) {\n      $sorted[] =\
    \ $value;\n    } else {\n      $sorted[] = $key;\n    }\n  }\n  return $sorted;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=sorting,php,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp59wxhvxd.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $key => $value) {\n        if ($min\
    \ === $max) {\n            $result[] = $value;\n        } else {\n           \
    \ $result[] = $value;\n            $result[] = $min;\n            $result[] =\
    \ $max;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsr0bzbm3.php:33\n\
    Stack trace:\n#0 /tmp/tmpsr0bzbm3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsr0bzbm3.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    $sorted\
    \ = array_merge($sorted, array_reverse($sorted, true));\n    return $sorted;\n\
    }\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1,\
    \ 2, 3, 4))` returns `array(1, 4, 2, 3)` instead of `array(1, 2, 3, 4)`\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work for me either. `strange_sort_list(array(1, 2,\
    \ 3, 4))` returns `array(1, 4, 2, 3)` instead of `array(1, 2, 3, 4)`\n<|/ c |>\n\
    <| c |>\nThis doesn't work for me either. `strange_sort_list(array(1, 2, 3, 4))`\
    \ returns `array(1, 4, 2, 3)` instead of `array(1, 2, 3, 4)`\n<|/ c |>\n<| c |>\n\
    This doesn't work for me either. `strange_sort_list(array(1, 2, 3, 4))` returns\
    \ `array(1, 4, 2, 3)` instead of `array(1, 2, 3, 4)`\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work for me either. `strange_sort_list(array(1, 2, 3, 4))` returns `array(1,\
    \ 4, 2, 3)` instead of `array(1, 2, 3, 4)`\n<|/ c |>\n<| a dscore=4 |>\nI wrote\
    \ a PHP function which sorts an array in strange order. \n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjrdfyh2_.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = $max = $min_index\
    \ = null;\n    foreach ($lst as $k => $v) {\n        if ($min === null || $v <\
    \ $min) {\n            $min = $v;\n            $min_index = $k;\n        }\n \
    \       if ($max === null || $v > $max) {\n            $max = $v;\n        }\n\
    \    }\n    $sorted[$min_index] = $min;\n    $sorted[$min_index + 1] = $max;\n\
    \    $sorted = array_merge($sorted, array_reverse($lst));\n    return $sorted;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ numbers in the list. Try it with [1,2,2,3,4] or [1,2,2,3,5,6].\n<|/ c |>\n<|\
    \ c |>\n: I tested it and it works. I added a test case to my answer.\n<|/ c |>\n\
    <| c |>\n: I added a test case to my answer. Does it work for you?\n<|/ c |>\n\
    <| c |>\n: I added a test case to my answer. Does it work for you?\n<|/ c |>\n\
    <| c |>\n: I added a test case to my answer. Does it work for you?\n<|/ c |>\n\
    <| a tags=php,sorting |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpehvzelgf.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $result[] = $min;\n        } elseif ($item == $max) {\n     \
    \       $result[] = $max;\n        } else {\n            $result[] = $item;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\n\
    I like your solution, very elegant. However it only works with sorted arrays.\
    \ I added a solution that works with unsorted arrays as well.\n<|/ c |>\n<| a\
    \ tags=sorting,arrays,php |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4tfx30j1.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_ASC,\
    \ $lst);\n  return $lst;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4t0vfs5i.php:26\n\
    Stack trace:\n#0 /tmp/tmp4t0vfs5i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4t0vfs5i.php\
    \ on line 26\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_ASC,\
    \ $lst);\n  return $lst;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4t0vfs5i.php:26\n\
    Stack trace:\n#0 /tmp/tmp4t0vfs5i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4t0vfs5i.php\
    \ on line 26\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  return $sorted;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpop8zwqrl.php:24\n\
    Stack trace:\n#0 /tmp/tmpop8zwqrl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpop8zwqrl.php\
    \ on line 24\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = $lst[0];\n  $max =\
    \ $lst[0];\n  foreach ($lst as $item) {\n    if ($item < $min) {\n      $min =\
    \ $item;\n    } else if ($item > $max) {\n      $max = $item;\n    }\n  }\n  $sorted\
    \ = array_merge($sorted, array($min));\n  foreach ($lst as $item) {\n    if ($item\
    \ < $min) {\n      $sorted = array_merge($sorted, array($item));\n    } else if\
    \ ($item > $max) {\n      $sorted = array_merge($sorted, array($item, $max));\n\
    \    }\n  }\n  $sorted = array_merge($sorted, array($max));\n  return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifji13np.php:40\n\
    Stack trace:\n#0 /tmp/tmpifji13np.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpifji13np.php\
    \ on line 40\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $item) {\n    if ($item == $min) {\n      $sorted[]\
    \ = $min;\n    } else if ($item == $max) {\n      $sorted[] = $max;\n    } else\
    \ {\n      $sorted[] = $item;\n    }\n  }\n  return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0hxxbkw.php:33\n\
    Stack trace:\n#0 /tmp/tmpj0hxxbkw.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj0hxxbkw.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    sort($sorted);\n    return $sorted;\n}\n</code>\n<|/ a |>\n<| c\
    \ |>\nThis doesn't work for me. `strange_sort_list(array(1,2,3,4,5))` returns\
    \ `array(1,2,3,4,5)` instead of `array(1,5,2,4,3)`\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for me. `strange_sort_list(array(1,2,3,4,5))` returns `array(1,2,3,4,5)`\
    \ instead of `array(1,5,2,4,3)`\n<|/ c |>\n<| c |>\nThis doesn't work for me.\
    \ `strange_sort_list(array(1,2,3,4,5))` returns `array(1,2,3,4,5)` instead of\
    \ `array(1,5,2,4,3)`\n<|/ c |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1,2,3,4,5))`\
    \ returns `array(1,2,3,4,5)` instead of `array(1,5,2,4,3)`\n<|/ c |>\n<| c |>\n\
    This doesn't work for me. `strange_sort_list(array(1,2,3,4,5))` returns `array(1,2,3,4,5)`\
    \ instead of `array(1,5,2,4,3)`\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp11jlvuvy.php on line 18

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a |>\n<| c |>\nI like this\
    \ solution, but I wonder if there is a way to do it without having to use array_multisort.\
    \ Maybe using usort?\n<|/ c |>\n<| c |>\nI added a solution without array_multisort.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$arr2\
    \ = array();\n$arr2[] = $arr[0];\n$arr2[] = $arr[1];\n$arr2[] = $arr[2];\n$arr2[]\
    \ = $arr[3];\n$arr2[] = $arr[4];\n$arr2[] = $arr[5];\n$arr2[] = $arr[6];\n$arr2[]\
    \ = $arr[7];\n$arr2[] = $arr[8];\n$arr2[] = $arr[9];\n$arr2[] = $arr[10];\n$arr2[]\
    \ = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n\
    $arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n\
    $arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n\
    $arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n\
    $arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n\
    $arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n\
    $arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n\
    $arr2[] = $arr[10];\n$arr2[] = $arr[10];\n$arr2[] = $arr[10];\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpm3cjxfpc.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if\
    \ you have negative numbers in the array. Try it with `array(-10, -9, -8, -7,\
    \ -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)`\n<|/ c |>\n<| c |>\n\
    : Yes, I know. That's why I wrote \"Given array of integers, return array in strange\
    \ order.\"\n<|/ c |>\n<| c |>\n: I added a version that works with negative numbers.\
    \ I hope you find it useful.\n<|/ c |>\n<| c |>\n: I added a version that works\
    \ with negative numbers. I hope you find it useful.\n<|/ c |>\n<| c |>\n: I added\
    \ a version that works with negative numbers. I hope you find it useful.\n<|/\
    \ c |>\n<| a tags=sorting,php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpreijtsqm.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  return $sorted;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpop8zwqrl.php:24\n\
    Stack trace:\n#0 /tmp/tmpop8zwqrl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpop8zwqrl.php\
    \ on line 24\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    return\
    \ $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=1 |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1egge2rv.php on line 18

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $k => $v) {\n        if ($v < $min)\
    \ {\n            $sorted[] = $min;\n            $min = $v;\n        } elseif ($v\
    \ > $max) {\n            $sorted[] = $max;\n            $max = $v;\n        }\
    \ else {\n            $sorted[] = $v;\n        }\n    }\n    return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf7cuix2.php:35\n\
    Stack trace:\n#0 /tmp/tmpcf7cuix2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpcf7cuix2.php\
    \ on line 35\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    } elseif ($value > $max) {\n\
    \      $sorted[] = $max;\n      $max = $value;\n    } else {\n      $sorted[]\
    \ = $value;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a tags=sorting,php,arrays\
    \ |>\n<| a tags=sorting,php,arrays |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxrh1lwbo.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_ASC, $lst);\n    return $lst;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array(\n    array('name'\
    \ => 'John', 'age' => 25),\n    array('name' => 'Jane', 'age' => 26),\n    array('name'\
    \ => 'Jack', 'age' => 25),\n    array('name' => 'Jill', 'age' => 25),\n    array('name'\
    \ => 'Jack', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('name' => 'Jill', 'age' => 26),\n    array('name'\
    \ => 'Jill', 'age' => 26),\n    array('\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr3mtrlou.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return array();\n  }\n\
    \  $min = reset($lst);\n  $max = end($lst);\n  $lst = array_slice($lst, 1);\n\
    \  return array_merge(\n    strange_sort_list($min),\n    strange_sort_list($max),\n\
    \    $lst\n  );\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_9bi55no.php on line 25

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = $lst[0];\n  $max =\
    \ $lst[0];\n  foreach ($lst as $item) {\n    if ($item < $min) {\n      $min =\
    \ $item;\n    }\n    if ($item > $max) {\n      $max = $item;\n    }\n  }\n  while\
    \ ($min < $max) {\n    $sorted[] = $min;\n    $min++;\n  }\n  while ($min > $max)\
    \ {\n    $sorted[] = $max;\n    $max--;\n  }\n  return $sorted;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ numbers in the array. For example, `strange_sort_list(array(1,1,2,3,5,5,5,6,7,8,9))`\
    \ returns `array(1,2,3,4,5,6,7,8,9,5)` instead of `array(1,2,3,4,5,6,7,8,9)`\n\
    <|/ c |>\n<| a dscore=4 |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuokui9yg.php on line 34

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item == $min) {\n      $lst[]\
    \ = $max;\n    } else if ($item == $max) {\n      $lst[] = $min;\n    } else {\n\
    \      $lst[] = $item;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1, 2, 3, 4))`\
    \ returns `array(1, 4, 2, 3)`.\n<|/ c |>\n<| c |>\n: It works fine for me. `strange_sort_list(array(1,\
    \ 2, 3, 4))` returns `array(1, 4, 2, 3)`.\n<|/ c |>\n<| c |>\n: I added a link\
    \ to my answer that shows it working. Maybe you didn't realize you were using\
    \ PHP 5.3.\n<|/ c |>\n<| c |>\n: I added a link to my answer that shows it working.\
    \ Maybe you didn't realize you were using PHP 5.3.\n<|/ c |>\n<| c |>\n: I added\
    \ a link to my answer that shows it working. Maybe you didn't realize you were\
    \ using PHP 5.3.\n<|/ c |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp14mgz7w6.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array_map(function ($x) use ($min, $max) {\n    return $min > $x ? $min :\
    \ $x > $max ? $max : $x;\n  }, $lst);\n  return $lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzlnc6d2h.php:26\n\
    Stack trace:\n#0 /tmp/tmpzlnc6d2h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzlnc6d2h.php\
    \ on line 26\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    }\n    if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    }\n    $sorted[] = $value;\n\
    \  }\n  return $sorted;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ seem to work. `strange_sort_list(array(1, 2, 3, 4))` returns `array(1, 4, 2,\
    \ 3)`\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and it works. I added a link\
    \ to my test case in the answer.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9\
    \ and it works. I added a link to my test case in the answer.\n<|/ c |>\n<| c\
    \ |>\nI tested it on PHP 5.5.9 and it works. I added a link to my test case in\
    \ the answer.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and it works. I added\
    \ a link to my test case in the answer.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6a88fxwj.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $new_lst = array();\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $new_lst[$key] = $min;\n        } elseif ($value > $max)\
    \ {\n            $new_lst[$key] = $max;\n        } else {\n            $new_lst[$key]\
    \ = $value;\n        }\n    }\n    return $new_lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfr5v7k0.php:33\n\
    Stack trace:\n#0 /tmp/tmpnfr5v7k0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnfr5v7k0.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n    } else if ($value > $max) {\n      $sorted[] = $max;\n\
    \    } else {\n      $sorted[] = $value;\n    }\n  }\n  return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0f3yzfib.php:33\n\
    Stack trace:\n#0 /tmp/tmp0f3yzfib.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0f3yzfib.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $k => $v) {\n    if ($v == $min) {\n      $lst[$k]\
    \ = $min;\n    } else if ($v == $max) {\n      $lst[$k] = $max;\n    } else {\n\
    \      $lst[$k] = $v;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$array =\
    \ str_replace(range(1,10),'',$array);\n$array = str_replace(range(11,20),'',$array);\n\
    $array = str_replace(range(21,30),'',$array);\n$array = str_replace(range(31,40),'',$array);\n\
    $array = str_replace(range(41,50),'',$array);\n$array = str_replace(range(51,60),'',$array);\n\
    $array = str_replace(range(61,70),'',$array);\n$array = str_replace(range(71,80),'',$array);\n\
    $array = str_replace(range(81,90),'',$array);\n$array = str_replace(range(91,100),'',$array);\n\
    $array = str_replace(range(101,110),'',$array);\n$array = str_replace(range(111,120),'',$array);\n\
    $array = str_replace(range(121,130),'',$array);\n$array = str_replace(range(131,140),'',$array);\n\
    $array = str_replace(range(141,150),'',$array);\n$array = str_replace(range(151,160),'',$array);\n\
    $array = str_replace(range(161,170),'',$array);\n$array = str_replace(range(171,180),'',$array);\n\
    $array = str_replace(range(181,190),'',$array);\n$array = str_replace(range(191,200),'',$array);\n\
    $array = str_replace(range(201,210),'',$array);\n$array = str_replace(range(211,220),'',$array);\n\
    $array = str_replace(range(221,230),'',$array);\n$array = str_replace(range(231,240),'',$array);\n\
    $array = str_replace(range(241,250),'',$array);\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqrlb5747.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,sorting |>\n<| c |>\nThis\
    \ doesn't work for me. I'm getting `array(5) { [0]=> int(1) [1]=> int(2) [2]=>\
    \ int(3) [3]=> int(4) [4]=> int(5) }`\n<|/ c |>\n<| c |>\nIt does work. I've tested\
    \ it before posting. What PHP version are you using?\n<|/ c |>\n<| c |>\nI'm using\
    \ PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli) (built: Jan 30 2012 16:57:49)\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli)\
    \ (built: Jan 30 2012 16:57:49) and it works. What PHP version are you using?\n\
    <|/ c |>\n<| c |>\nI'm using PHP 5.3.10-1ubuntu3.11 with Suhosin-Patch (cli) (built:\
    \ Jan 30 2012 16:57:49)\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5lyah3o5.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9jfu0l.php:25\n\
    Stack trace:\n#0 /tmp/tmpzk9jfu0l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzk9jfu0l.php\
    \ on line 25\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpora1m_l8.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = $lst[0];\n  $max =\
    \ $lst[0];\n  foreach ($lst as $item) {\n    if ($item < $min) {\n      $min =\
    \ $item;\n    }\n    if ($item > $max) {\n      $max = $item;\n    }\n  }\n  foreach\
    \ ($lst as $item) {\n    if ($item == $min) {\n      $sorted[] = $item;\n    }\n\
    \    if ($item == $max) {\n      $sorted[] = $item;\n    }\n    if ($item < $min)\
    \ {\n      $sorted[] = $item;\n    }\n    if ($item > $max) {\n      $sorted[]\
    \ = $item;\n    }\n  }\n  return $sorted;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpme31bagt.php:46\n\
    Stack trace:\n#0 /tmp/tmpme31bagt.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpme31bagt.php\
    \ on line 46\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item == $min) {\n      $lst[]\
    \ = $max;\n    } else if ($item == $max) {\n      $lst[] = $min;\n    } else {\n\
    \      $lst[] = $item;\n    }\n  }\n  return $lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zvnl07u.php:33\n\
    Stack trace:\n#0 /tmp/tmp9zvnl07u.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9zvnl07u.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    $sorted\
    \ = array_merge($sorted, array_reverse($sorted, true));\n    return $sorted;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis does not provide an\
    \ answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post.\n<|/ c |>\n<| c |>\nI believe this does answer\
    \ the question. He wants to sort an array in such a way that he can get the minimum\
    \ value first, then the maximum value, then minimum and so on. He also wants to\
    \ do this without using any built-in PHP functions.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1cgpeayw.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $sorted = array();\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[$key] = $min;\n        } elseif ($value > $max)\
    \ {\n            $sorted[$key] = $max;\n        } else {\n            $sorted[$key]\
    \ = $value;\n        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = array(\n    0 => 1,\n  \
    \  1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n\
    \    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12\
    \ => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 =>\
    \ 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n\
    \    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n \
    \   28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n  \
    \  33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n   \
    \ 38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43\
    \ => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 =>\
    \ 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n\
    \    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n \
    \   59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n  \
    \  64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n   \
    \ 69 => 70,\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdba_itof.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_2xmz2p.php:25\n\
    Stack trace:\n#0 /tmp/tmpc_2xmz2p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc_2xmz2p.php\
    \ on line 25\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    $sorted\
    \ = array_merge($sorted, array_reverse($sorted, true));\n    return $sorted;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=2 |>\n<code>\n$array\
    \ = array(\n    array(\n        'name' => 'John',\n        'age' => 25,\n    \
    \    'city' => 'New York'\n    ),\n    array(\n        'name' => 'Jane',\n   \
    \     'age' => 30,\n        'city' => 'London'\n    ),\n    array(\n        'name'\
    \ => 'Jack',\n        'age' => 25,\n        'city' => 'Paris'\n    ),\n    array(\n\
    \        'name' => 'Jill',\n        'age' => 25,\n        'city' => 'London'\n\
    \    )\n);\n\nusort($array, function($a, $b) {\n    return $a['age'] - $b['age'];\n\
    });\n\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\n    array(\n        'name' => 'John',\n       \
    \ 'age' => 25,\n        'city' => 'New York'\n    ),\n    array(\n        'name'\
    \ => 'Jane',\n        'age' => 30,\n        'city' => 'London'\n    ),\n    array(\n\
    \        'name' => 'Jack',\n        'age' => 25,\n        'city' => 'Paris'\n\
    \    ),\n    array(\n        'name' => 'Jill',\n        'age' => 25,\n       \
    \ 'city' => 'London'\n    )\n);\n\nusort($array, function($a, $b) {\n    return\
    \ $a['age'] - $b['age'];\n});\n\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptgz3si4x.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } else if ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7gcduo4n.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This doesn't work for me. `array_multisort` sorts by the first element in the\
    \ array, not the second. `strange_sort_list` sorts by the second element in the\
    \ array, not the first.\n<|/ c |>\n<| c |>\nIt does work for me. `strange_sort_list`\
    \ sorts by the second element in the array, not the first.\n<|/ c |>\n<| c |>\n\
    I see what you mean. `array_multisort` sorts by the first element in the array,\
    \ not the second. `strange_sort_list` sorts by the second element in the array,\
    \ not the first.\n<|/ c |>\n<| c |>\nYes, I see what you mean. `array_multisort`\
    \ sorts by the first element in the array, not the second. `strange_sort_list`\
    \ sorts by the second element in the array, not the first.\n<|/ c |>\n<| c |>\n\
    I see what you mean. `array_multisort` sorts by the first element in the array,\
    \ not the second. `strange_sort_list` sorts by the second element in the array,\
    \ not the first.\n<|/ c |>\n<| a tags=sorting,php,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkk7roml8.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a tags=sorting,arrays,php |>\n<| a\
    \ dscore=0 |>\n<code>\n$array = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n\
    \    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n\
    \    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n    13 => 14,\n  \
    \  14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n    18 => 19,\n   \
    \ 19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n    24\
    \ => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n    29 =>\
    \ 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n\
    \    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n \
    \   40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n    44 => 45,\n  \
    \  45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n    49 => 50,\n   \
    \ 50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n    55\
    \ => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n    60 =>\
    \ 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n\
    \    66 => 67,\n    67 => 68,\n    68 => 69,\n    \nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5f5b81x0.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = [];\n    foreach ($lst as $key => $value) {\n        if ($min ===\
    \ $max) {\n            $result[] = $value;\n        } else {\n            $result[]\
    \ = $value;\n            $result[] = $min;\n            $result[] = $max;\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjaui779.php:33\n\
    Stack trace:\n#0 /tmp/tmpbjaui779.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpbjaui779.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_ASC, $lst);\n    return $lst;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This is not the correct answer, the OP wants to sort by descending order not ascending\n\
    <|/ c |>\n<| c |>\nThis is not the correct answer, the OP wants to sort by descending\
    \ order not ascending\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(\n \
    \   array('name' => 'John', 'age' => 25),\n    array('name' => 'Jane', 'age' =>\
    \ 26),\n    array('name' => 'Jack', 'age' => 24),\n    array('name' => 'Jill',\
    \ 'age' => 23),\n    array('name' => 'Jack', 'age' => 22),\n    array('name' =>\
    \ 'Jill', 'age' => 22),\n    array('name' => 'Jane', 'age' => 25),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('name'\
    \ => 'Jack', 'age' => 22),\n    array('name' => 'Jill', 'age' => 22),\n    array('\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu4egm12n.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$array = array(1, 2, 3, 4);\n$array = str_repeat('0', count($array)\
    \ - 1) . $array;\n$array = str_split($array);\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_merge($array,\
    \ array_reverse($array));\n$array = array_merge($array, array_reverse($array));\n\
    $array = array_merge\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyk0sh6uj.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplvz0v2ze.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n\
    <| a |>\n<code>\n$array = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3\
    \ => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n   \
    \ 9 => 10\n);\n\n$array = array_chunk($array, 3);\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$array = array_map(function($v){\n\
    \    return array_sum($v);\n}, $array);\n\n$\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk74scudu.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $result[] = $value;\n        } else if ($value > $max)\
    \ {\n            $result[] = $value;\n        } else {\n            $result[]\
    \ = $key;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a tags=sorting,php,arrays |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpi52o4fzg.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item == $min) {\n      $lst[]\
    \ = $max;\n    } else if ($item == $max) {\n      $lst[] = $min;\n    } else {\n\
    \      $lst[] = $item;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThis doesn't work if there are multiple equal numbers in the list.\
    \ Try `strange_sort_list(array(2, 2, 2, 2))`\n<|/ c |>\n<| c |>\nYes, I know.\
    \ That's why I said \"Strange sorting\". I just wanted to show that you can do\
    \ that with PHP. :)\n<|/ c |>\n<| c |>\nI didn't mean to offend you, just wanted\
    \ to point out that your answer doesn't work if there are multiple equal numbers\
    \ in the list.\n<|/ c |>\n<| c |>\nI didn't offend you. :) I didn't know that\
    \ there were multiple equal numbers in the list. Thanks for pointing that out.\
    \ I've updated my answer to reflect that.\n<|/ c |>\n<| c |>\nI see what you mean.\
    \ I've updated my answer to reflect that.\n<|/ c |>\n<| a tags=php,sorting,arrays\
    \ |>\n<code>\n$array = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 =>\
    \ 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 =>\
    \ 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n\
    \    15 => 16,\n    16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n \
    \   20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n  \
    \  25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n   \
    \ 30 => 31,\n    31 => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35\
    \ => 36,\n    36 => 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 =>\
    \ 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbn3nwkxs.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_ASC,\
    \ $lst);\n  return $lst;\n}\n</code>\n<|/ a |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppep9ae30.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $min\
    \ = min($min, $max);\n  $max = max($min, $max);\n  $lst = array();\n  foreach\
    \ ($lst as $key => $value) {\n    if ($value < $min) {\n      $lst[$key] = $min;\n\
    \    } else if ($value > $max) {\n      $lst[$key] = $max;\n    } else {\n   \
    \   $lst[$key] = $value;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=sorting,php,arrays |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpiv55bnit.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  ksort($sorted);\n  return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdhvaubg.php:26\n\
    Stack trace:\n#0 /tmp/tmpfdhvaubg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfdhvaubg.php\
    \ on line 26\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $value;\n    } else if ($value > $max) {\n      $sorted[] =\
    \ $value;\n    } else {\n      $sorted[] = $key;\n    }\n  }\n  return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6y9pmnc.php:33\n\
    Stack trace:\n#0 /tmp/tmpq6y9pmnc.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpq6y9pmnc.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,sorting,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpufq3urw8.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $lst = array();\n    foreach ($lst as $i => $v) {\n        if ($v == $min)\
    \ {\n            $lst[] = $min;\n        } else if ($v == $max) {\n          \
    \  $lst[] = $max;\n        } else {\n            $lst[] = $v;\n        }\n   \
    \ }\n    return $lst;\n}\n</code>\n<|/ a tags=php,sorting |>\n<| c |>\nThis doesn't\
    \ work if you have two equal numbers. Try `strange_sort_list(array(1,1,2,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppf1e6upw.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $min_pos\
    \ = array_search($min, $lst);\n  $max_pos = array_search($max, $lst);\n  array_splice($lst,\
    \ $min_pos, $max_pos - $min_pos + 1);\n  return $lst;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThis works great for me. Thanks for sharing!\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n$arr = [1, 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a |>\n<code>\n$arr = [1, 2, 3, 4, 5];\n$arr2\
    \ = array_reverse($arr);\n</code>\n<|/ a tags=php,arrays,sorting dscore=2 |>\n\
    <| a |>\n<code>\n$arr = [1, 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n</code>\n\
    <|/ a dscore=2 tags=php,arrays,sorting |>\n<| a dscore=1 |>\n<code>\n$arr = [1,\
    \ 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = [1, 2, 3, 4, 5];\n$arr2\
    \ = array_reverse($arr);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = [1, 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = [1, 2, 3, 4,\
    \ 5];\n$arr2 = array_reverse($arr);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = [1, 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = [1, 2, 3, 4,\
    \ 5];\n$arr2 = array_reverse($arr);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$arr = [1, 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a dscore=1 |>\n<code>\n$arr = [1, 2, 3, 4,\
    \ 5];\n$\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptoe9y8fd.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_s7fl0_g.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    $sorted\
    \ = array_merge($sorted, array_reverse($sorted, true));\n    return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07plq7s9.php:25\n\
    Stack trace:\n#0 /tmp/tmp07plq7s9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp07plq7s9.php\
    \ on line 25\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $i => $v) {\n    if ($v < $min) {\n      $lst[$i]\
    \ = $min;\n    } else if ($v > $max) {\n      $lst[$i] = $max;\n    } else {\n\
    \      $lst[$i] = $v;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\n    array(\n        'name' =>\
    \ 'John',\n        'age' => 25,\n        'city' => 'New York'\n    ),\n    array(\n\
    \        'name' => 'Jane',\n        'age' => 22,\n        'city' => 'London'\n\
    \    ),\n    array(\n        'name' => 'Jack',\n        'age' => 20,\n       \
    \ 'city' => 'Paris'\n    ),\n    array(\n        'name' => 'Jill',\n        'age'\
    \ => 25,\n        'city' => 'London'\n    ),\n    array(\n        'name' => 'Jack',\n\
    \        'age' => 20,\n        'city' => 'Paris'\n    ),\n    array(\n       \
    \ 'name' => 'Jill',\n        'age' => 25,\n        'city' => 'London'\n    ),\n\
    \    array(\n        'name' => 'Jack',\n        'age' => 20,\n        'city' =>\
    \ 'Paris'\n    ),\n    array(\n        'name' => 'Jill',\n        'age' => 25,\n\
    \        'city' => 'London'\n    ),\n    array(\n        'name' => 'Jack',\n \
    \       'age' => 20,\n        'city' => 'Paris'\n    ),\n    array(\n        'name'\
    \ => 'Jill',\n        'age' => 25,\n        'city' => 'London'\n    ),\n    array(\n\
    \        'name' => 'Jack',\n        'age' => 20,\n        'city' => 'Paris'\n\
    \    ),\n    array(\n        'name' => 'Jill',\n        'age' => 25,\n       \
    \ 'city' => 'London'\n    ),\n    array(\n        'name' => 'Jack',\n        'age'\
    \ => 20,\n        'city' => 'Paris'\n    ),\n    array(\n        'name' => 'Jill',\n\
    \        'age' => 25,\n        'city' => 'London'\n    ),\n    array(\n      \
    \  'name' => 'Jack',\n        'age' => 20,\n        'city' => 'Paris'\n    ),\n\
    \    array(\n        'name' => 'Jill',\n        'age' => 25,\n        'city' =>\
    \ 'London'\n    ),\n    array(\n        'name' => 'Jack',\n        'age' => 20,\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpo9zo8jde.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9jfu0l.php:25\n\
    Stack trace:\n#0 /tmp/tmpzk9jfu0l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzk9jfu0l.php\
    \ on line 25\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $v) {\n    if ($v == $min) {\n      $lst[] =\
    \ $v;\n    } else if ($v == $max) {\n      $lst[] = $v;\n    } else {\n      $lst[]\
    \ = $min;\n      $lst[] = $max;\n    }\n  }\n  return $lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5m4ddikm.php:34\n\
    Stack trace:\n#0 /tmp/tmp5m4ddikm.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5m4ddikm.php\
    \ on line 34\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_2xmz2p.php:25\n\
    Stack trace:\n#0 /tmp/tmpc_2xmz2p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc_2xmz2p.php\
    \ on line 25\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = $lst[0];\n  $max =\
    \ $lst[0];\n  foreach ($lst as $item) {\n    if ($item < $min) {\n      $min =\
    \ $item;\n    }\n    if ($item > $max) {\n      $max = $item;\n    }\n  }\n  while\
    \ ($min != $max) {\n    $sorted[] = $min;\n    $min = $lst[array_search($min,\
    \ $lst)];\n    $max = $lst[array_search($max, $lst)];\n  }\n  return $sorted;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks, I used this and added a sort by\
    \ date function to the end. Works great!\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5ze1yus6.php on line 31

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_2xmz2p.php:25\n\
    Stack trace:\n#0 /tmp/tmpc_2xmz2p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc_2xmz2p.php\
    \ on line 25\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\n\
    This solution doesn't work for me. `array_multisort` returns `bool(false)`\n<|/\
    \ c |>\n<| c |>\nThis solution doesn't work for me. `array_multisort` returns\
    \ `bool(false)`\n<|/ c |>\n<| c |>\nThis solution doesn't work for me. `array_multisort`\
    \ returns `bool(false)`\n<|/ c |>\n<| c |>\nThis solution doesn't work for me.\
    \ `array_multisort` returns `bool(false)`\n<|/ c |>\n<| c |>\nThis solution doesn't\
    \ work for me. `array_multisort` returns `bool(false)`\n<|/ c |>\n<| a dscore=4\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis solution doesn't work\
    \ for me. `array_reverse` returns `bool(false)`\n<|/ c |>\n<| c |>\nThis solution\
    \ doesn't work for me. `array_reverse` returns `bool(false)`\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n\
    </code>\n<|/ a dscore=4 |>\n<| c |>\nThis solution doesn't work for me. `array_reverse`\
    \ returns `bool(false)`\n<|/ c |>\n<| c |>\nThis solution doesn't work for me.\
    \ `array_reverse` returns `bool(false)`\n<|/ c |>\n<| a |>\n<code>\n$array = array(1,\
    \ 2, 3, 4, 5);\n$array = array_reverse($array);\n</code>\n<|/ a dscore=3 tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis solution doesn't work for me. `array_reverse` returns `bool(false)`\n\
    <|/ c |>\n<| a |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n\
    </code>\n<|/ a tags=php,arrays,sorting dscore=3 |>\n<| c |>\nThis solution doesn't\
    \ work for me. `array_reverse` returns `bool(false)`\n<|/ c |>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplaj6mvx3.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return array();\n  }\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $range = range($min, $max);\n  $result\
    \ = array();\n  foreach ($range as $value) {\n    $result[] = $value;\n  }\n \
    \ foreach ($lst as $key => $value) {\n    if ($value < $min) {\n      $result[]\
    \ = $value;\n    }\n    if ($value > $max) {\n      $result[] = $value;\n    }\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\n\
    This doesn't work for me. `strange_sort_list(array(1, 2, 3, 4))` returns `array(1,\
    \ 4, 2, 3)` instead of `array(1, 2, 3, 4)`\n<|/ c |>\n<| c |>\nI tested it on\
    \ PHP 5.6 and it works. I guess you have a different PHP version. Try `var_dump(strange_sort_list(array(1,\
    \ 2, 3, 4)));` on PHP 5.6 and see what it returns.\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.6 and it works. I guess you have a different PHP version. Try `var_dump(strange_sort_list(array(1,\
    \ 2, 3, 4)));` on PHP 5.6 and see what it returns.\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.6 and it works. I guess you have a different PHP version. Try `var_dump(strange_sort_list(array(1,\
    \ 2, 3, 4)));` on PHP 5.6 and see what it returns.\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.6 and it works. I guess you have a different PHP version. Try `var_dump(strange_sort_list(array(1,\
    \ 2, 3, 4)));` on PHP 5.6 and see what it returns.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(1, 2, 3, 4);\n$array = array_reverse($array);\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1,\
    \ 2, 3, 4))` returns `array(1, 4, 2, 3)` instead of `array(1, 2, 3, 4)`\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1, 2, 3, 4))`\
    \ returns `array(1, 4, 2, 3)` instead of `array(1, 2, 3, 4)`\n<|/ c |>\n<| c |>\n\
    This doesn't work for me\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzzfndygo.php on line 33

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    }\n    if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    }\n    $sorted[] = $value;\n\
    \  }\n  return $sorted;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work for\
    \ me. `strange_sort_list(array(1,2,3,4,5))` returns `array(1,2,3,4,5)`\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work for me. strange_sort_list(array(1,2,3,4,5)) returns\
    \ array(1,2,3,4,5)\n<|/ c |>\n<| c |>\nThis doesn't work for me. strange_sort_list(array(1,2,3,4,5))\
    \ returns array(1,2,3,4,5)\n<|/ c |>\n<| c |>\nThis doesn't work for me. strange_sort_list(array(1,2,3,4,5))\
    \ returns array(1,2,3,4,5)\n<|/ c |>\n<| c |>\nThis doesn't work for me. strange_sort_list(array(1,2,3,4,5))\
    \ returns array(1,2,3,4,5)\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpibbku34c.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $item) {\n    if ($item == $min) {\n      $sorted[]\
    \ = $min;\n    } else if ($item == $max) {\n      $sorted[] = $max;\n    } else\
    \ {\n      $sorted[] = $item;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphus22crx.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array_map(function ($x) use ($min, $max) {\n    return $min > $x ? $min :\
    \ $x;\n  }, $lst);\n  $lst = array_map(function ($x) use ($max) {\n    return\
    \ $max < $x ? $max : $x;\n  }, $lst);\n  return $lst;\n}\n</code>\n<|/ a tags=php,sorting\
    \ |>\n<| c |>\nI like your solution, however it fails for arrays with more than\
    \ 2 elements. I added a solution that works for arrays with more than 2 elements.\
    \ Thanks!\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp03uslw1l.php on line 23

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $val) {\n    if ($val < $min) {\n \
    \     $sorted[] = $min;\n    } else if ($val > $max) {\n      $sorted[] = $max;\n\
    \    } else {\n      $sorted[] = $val;\n    }\n  }\n  return $sorted;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xfj5pef.php:33\n\
    Stack trace:\n#0 /tmp/tmp2xfj5pef.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2xfj5pef.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return array();\n  }\n\n\
    \  $min_value = min($lst);\n  $max_value = max($lst);\n  $min_key = array_search($min_value,\
    \ $lst);\n  $max_key = array_search($max_value, $lst);\n\n  $lst = array_merge(array_slice($lst,\
    \ 0, $min_key),\n                     array_slice($lst, $max_key + 1),\n     \
    \                array_slice($lst, 0, $max_key));\n\n  return $lst;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr1 = array();\n$arr2 = array();\n$arr3 = array();\n$arr4 = array();\n$arr5\
    \ = array();\n$arr6 = array();\n$arr7 = array();\n$arr8 = array();\n$arr9 = array();\n\
    $arr10 = array();\n$arr11 = array();\n$arr12 = array();\n$arr13 = array();\n$arr14\
    \ = array();\n$arr15 = array();\n$arr16 = array();\n$arr17 = array();\n$arr18\
    \ = array();\n$arr19 = array();\n$arr20 = array();\n$arr21 = array();\n$arr22\
    \ = array();\n$arr23 = array();\n$arr24 = array();\n$arr25 = array();\n$arr26\
    \ = array();\n$arr27 = array();\n$arr28 = array();\n$arr29 = array();\n$arr30\
    \ = array();\n$arr31 = array();\n$arr32 = array();\n$arr33 = array();\n$arr34\
    \ = array();\n$arr35 = array();\n$arr36 = array();\n$arr37 = array();\n$arr38\
    \ = array();\n$arr39 = array();\n$arr40 = array();\n$arr41 = array();\n$arr42\
    \ = array();\n$arr43 = array();\n$arr44 = array();\n$arr45 = array();\n$arr46\
    \ = array();\n$arr47 = array();\n$arr48 = array();\n$arr49 = array();\n$arr50\
    \ = array();\n$arr51 = array();\n$arr52 = array();\n$arr53 = array();\n$arr54\
    \ = array();\n$arr55 = array();\n$arr5\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvd22hccc.php on line 28

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $result[] = $min;\n            $min = $value;\n     \
    \   } elseif ($value > $max) {\n            $result[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $result[] = $value;\n        }\n  \
    \  }\n    return $result;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c\
    \ |>\nI like this solution, but I wonder if it will perform well on large arrays.\
    \ I wonder if it will perform well on large arrays of integers, as opposed to\
    \ large arrays of strings.\n<|/ c |>\n<| c |>\nIt will perform well on large arrays\
    \ of integers, as opposed to large arrays of strings. I tested it on large arrays\
    \ of integers and it performed well on large arrays of integers. I tested it on\
    \ large arrays of strings and it performed well on large arrays of strings.\n\
    <|/ c |>\n<| c |>\nI tested it on large arrays of integers and it performed well\
    \ on large arrays of integers. I tested it on large arrays of strings and it performed\
    \ well on large arrays of strings.\n<|/ c |>\n<| c |>\nI tested it on large arrays\
    \ of integers and it performed well on large arrays of integers. I tested it on\
    \ large arrays of strings and it performed well on large arrays of strings.\n\
    <|/ c |>\n<| c |>\nI tested it on large arrays of integers and it performed well\
    \ on large arrays of integers. I tested it on large arrays of strings and it performed\
    \ well on large arrays of strings.\n<|/ c |>\n<| a dscore=4 |>\n<code>\n$array\
    \ = array(1, 2, 3, 4, 5);\n$array = array_merge($array, array_reverse($array));\n\
    </code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nThis doesn't work if you have\
    \ duplicate values in your array\n<|/ c |>\n<| c |>\nThis doesn't work if you\
    \ have duplicate values in your array\n<|/ c |>\n<| a dscore=4 |>\n<code>\n$array\
    \ = array(1, 2, 3, 4, 5);\n$array = array_merge($array, array_reverse($array));\n\
    </code>\n<|/ a tags=php,sorting,arrays |>\n<| a dscore=4 |>\n<code>\n$array =\
    \ array(1, 2, 3, 4, 5);\n$array = array_merge($array, array_reverse($array));\n\
    </code>\n<|/ a \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptb46chn6.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    } else if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    } else {\n      $sorted[]\
    \ = $value;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a dscore=1 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphzrrjlv1.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    return\
    \ $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps5zgsbuv.php on line 18

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqhug28y.php:26\n\
    Stack trace:\n#0 /tmp/tmpkqhug28y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkqhug28y.php\
    \ on line 26\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = $max = $lst[0];\n\
    \    foreach ($lst as $item) {\n        if ($item < $min) {\n            $min\
    \ = $item;\n        } else if ($item > $max) {\n            $max = $item;\n  \
    \      }\n    }\n    $sorted = array_merge(array($min), $lst);\n    $sorted =\
    \ array_merge($sorted, array($max));\n    return $sorted;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>\n<?php\n$array = array(1, 2, 3, 4);\n$array = str_replace(array_keys($array),\
    \ array_values($array), $array);\nprint_r($array);\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpoxovmsqb.php on line 26

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp096p_u1g.php on line 18

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_ASC, $lst);\n    return $lst;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjnx1ciqo.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = reset($lst);\n  $max = end($lst);\n  $lst\
    \ = array_map(function($v) use ($min, $max) {\n    return $v < $min ? $min : $v\
    \ > $max ? $max : $v;\n  }, $lst);\n  return $lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7d_h15n.php:26\n\
    Stack trace:\n#0 /tmp/tmpc7d_h15n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc7d_h15n.php\
    \ on line 26\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  ksort($sorted);\n  return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdhvaubg.php:26\n\
    Stack trace:\n#0 /tmp/tmpfdhvaubg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfdhvaubg.php\
    \ on line 26\n"
  timestamp: 1659730697
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $i => $v) {\n    if ($min == $max) {\n      $lst[]\
    \ = $v;\n    } else if ($v < $min) {\n      $lst[] = $min;\n      $min = $v;\n\
    \    } else if ($v > $max) {\n      $lst[] = $max;\n      $max = $v;\n    }\n\
    \  }\n  return $lst;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_aghfk71.php:35\n\
    Stack trace:\n#0 /tmp/tmp_aghfk71.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_aghfk71.php\
    \ on line 35\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  asort($sorted);\n  return $sorted;\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Very\
    \ elegant and simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Very elegant and simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Very elegant and simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Very elegant and simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Very elegant and simple.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprrax2rkh.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  natsort($sorted);\n  return $sorted;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp35rw1zxt.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[$key] = $min;\n    } else if ($value > $max) {\n      $sorted[$key]\
    \ = $max;\n    } else {\n      $sorted[$key] = $value;\n    }\n  }\n  return $sorted;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1,2,3,4,5,6,7,8,9,10))\
    \ => array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1)`\n<|/ c |>\n<| c |>\nIt works for me\
    \ - see my comment on OP's question. Maybe you didn't reload the page after you\
    \ added the code?\n<|/ c |>\n<| c |>\nYes, I did reload the page. I'm running\
    \ PHP 5.3.10. Maybe it's an issue with my PHP version?\n<|/ c |>\n<| c |>\nI tested\
    \ it on 5.3.10 and 5.3.8 - both worked fine. Maybe try upgrading PHP?\n<|/ c |>\n\
    <| c |>\nI tested it on 5.3.10 and 5.3.8 - both worked fine. Maybe try upgrading\
    \ PHP?\n<|/ c |>\n<| a tags=sorting,php |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp00uraev1.php on line 27

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    asort($sorted);\n\
    \    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4r65o0us.php:26\n\
    Stack trace:\n#0 /tmp/tmp4r65o0us.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4r65o0us.php\
    \ on line 26\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9r4p7om8.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  foreach ($lst as $key =>\
    \ $value) {\n    $sorted[$key] = $value;\n  }\n  array_multisort($sorted, SORT_DESC,\
    \ $lst);\n  return $lst;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqhug28y.php:26\n\
    Stack trace:\n#0 /tmp/tmpkqhug28y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkqhug28y.php\
    \ on line 26\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr = array_merge($arr,array_reverse($arr));\nprint_r($arr);\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9y5wvex0.php on line 18

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return array();\n  }\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $lst = array_map(function($v) use\
    \ ($min, $max) {\n    return $v < $min ? $min : $v > $max ? $max : $v;\n  }, $lst);\n\
    \  sort($lst);\n  return $lst;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    I used the above solutions to solve my problem. \nI wanted to sort a list by its\
    \ values ascending and descending. \nI used the below code to sort my list by\
    \ ascending and descending order \n<code>\n$list = array(\"A\",\"B\",\"C\",\"\
    D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"\
    Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\");\n$list = strange_sort_list($list);\n\
    $list = array_reverse($list);\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| a\
    \ dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9u2a4rfu.php on line 24

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    foreach ($lst as $key\
    \ => $value) {\n        $sorted[$key] = $value;\n    }\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp42dqrg8k.php on line 20

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, array_reverse($lst));\n    $sorted\
    \ = array_merge($sorted, array_reverse($sorted, true));\n    return $sorted;\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis works great for me. Thanks!\n<|/\
    \ c |>\n<| c |>\nThis works great, but I needed to reverse the order of the array\
    \ before returning it (as opposed to just reversing it after returning). So I\
    \ added a line that looks like this: `return array_reverse($sorted);`\n<|/ c |>\n\
    <| c |>\nThis works great for me. Thanks!\n<|/ c |>\n<| c |>\nThis works great\
    \ for me. Thanks!\n<|/ c |>\n<| c |>\nThis works great for me. Thanks!\n<|/ c\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgf0fchg4.php on line 19

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  foreach ($lst as $key => $value) {\n    if ($value < $min) {\n\
    \      $sorted[] = $min;\n      $min = $value;\n    } else if ($value > $max)\
    \ {\n      $sorted[] = $max;\n      $max = $value;\n    } else {\n      $sorted[]\
    \ = $value;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't work for me. `strange_sort_list(array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpv2jwtgjv.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $min = min($lst);\n  $max = max($lst);\n  $lst\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < $min) {\n      $lst[]\
    \ = $min;\n    } else if ($item > $max) {\n      $lst[] = $max;\n    } else {\n\
    \      $lst[] = $item;\n    }\n  }\n  return $lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_c5i6dad.php:33\n\
    Stack trace:\n#0 /tmp/tmp_c5i6dad.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_c5i6dad.php\
    \ on line 33\n"
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $val) {\n        if ($val < $min)\
    \ {\n            $sorted[] = $min;\n            $min = $min;\n        } elseif\
    \ ($val > $max) {\n            $sorted[] = $max;\n            $max = $max;\n \
    \       } else {\n            $sorted[] = $val;\n        }\n    }\n    return\
    \ $sorted;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nI like this\
    \ solution, because it doesn't require a sorting algorithm to be implemented.\n\
    <|/ c |>\n<| c |>\nI like this solution as well, but I feel like it would be more\
    \ efficient to just sort the array in place and just swap the min and max values\
    \ when they are equal.  That way you don't have to rebuild the array each time.\n\
    <|/ c |>\n<| c |>\n: Yes, I agree. That's why I added the comment \"Strange sorting,\
    \ is when you start with the minimum value, then maximum of the remaining integers,\
    \ then minimum and so on.\"\n<|/ c |>\n<| c |>\nI like this solution as well,\
    \ but I feel like it would be more efficient to just sort the array in place and\
    \ just swap the min and max values when they are equal.  That way you don't have\
    \ to rebuild the array each time.\n<|/ c |>\n<| c |>\n: Yes, I agree. That's why\
    \ I added the comment \"Strange sorting, is when you start with the minimum value,\
    \ then maximum of the remaining integers, then minimum and so on.\"\n<|/ c |>\n\
    <| a tags=php,sorting,arrays |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpaw11mujy.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ < $min) {\n            $sorted[] = $min;\n            $min = $value;\n     \
    \   } else if ($value > $max) {\n            $sorted[] = $max;\n            $max\
    \ = $value;\n        } else {\n            $sorted[] = $value;\n        }\n  \
    \  }\n    return $sorted;\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$min = min($array);\n$max = max($array);\n\
    $result = array();\nforeach($array as $key => $value){\n    if($value < $min){\n\
    \        $result[] = $min;\n        $min = $value;\n    }\n    if($value > $max){\n\
    \        $result[] = $max;\n        $max = $value;\n    }\n    $result[] = $value;\n\
    }\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$min = min($array);\n$max = max($array);\n\
    $result = array();\nforeach($array as $key => $value){\n    if($value < $min){\n\
    \        $result[] = $min;\n        $min = $value;\n    }\n    if($value > $max){\n\
    \        $result[] = $max;\n        $max = $value;\n    }\n    $result[] = $value;\n\
    }\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$min = min($array);\n\
    $max = max($array);\n$result = array();\nforeach($array as $key => $value){\n\
    \    if($value < $min){\n        $result[] = $min;\n        $min = $value;\n \
    \   }\n    if($value > $max){\n        $result[] = $max;\n        $max = $value;\n\
    \    }\n    $result[] = $value;\n}\nprint_r($result);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $min = min($array);\n$max = max($array);\n$result = array();\nforeach($array as\
    \ $key => $value\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkwjldydo.php on line 29

    '
  timestamp: 1659730698
- exit_code: 255
  program: "<?php\n// Given array of integers, return array in strange order.\n//\
    \ Strange sorting, is when you start with the minimum value,\n// then maximum\
    \ of the remaining integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return array();\n  }\n\n\
    \  $min = reset($lst);\n  $max = end($lst);\n\n  $result = array();\n  foreach\
    \ ($lst as $key => $value) {\n    if ($value < $min) {\n      $result[] = $value;\n\
    \    } else if ($value > $max) {\n      $result[] = $value;\n    } else if ($value\
    \ == $min) {\n      $result[] = $max;\n    } else if ($value == $max) {\n    \
    \  $result[] = $min;\n    } else {\n      $result[] = $min;\n      $result[] =\
    \ $max;\n    }\n  }\n\n  return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ dscore=1 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplwu0yw1r.php on line 38

    '
  timestamp: 1659730698

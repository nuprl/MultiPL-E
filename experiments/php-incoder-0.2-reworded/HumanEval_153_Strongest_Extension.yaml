name: HumanEval_153_Strongest_Extension
language: php
prompt: "<?php\n// You will be given the name of a class (a string) and an array of\
  \ extensions.\n// The extensions are to be used to load additional classes to the\
  \ class. The\n// strength of the extension is as follows: Let CAP be the number\
  \ of the uppercase\n// letters in the extension's name, and let SM be the number\
  \ of lowercase letters \n// in the extension's name, the strength is given by the\
  \ fraction CAP - SM. \n// You should find the strongest extension and return a string\
  \ in this \n// format: ClassName.StrongestExtensionName.\n// If there are two or\
  \ more extensions with the same strength, you should\n// choose the one that comes\
  \ first in the array.\n// For example, if you are given \"Slices\" as the class\
  \ and an array of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then\
  \ you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest\
  \ extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
  my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
  \ $extensions) {\n"
tests: "function candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\"\
  , \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\"\
  , \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\", \"\
  zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"Ta\", \"TAR\"\
  , \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\"\
  )) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !==\
  \ \"YameRore.okIWILL123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  finNNalLLly\", array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"\
  Bb\", \"91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(\"Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new\
  \ Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $extension_strength = -1;\n        for ($i =\
    \ 0; $i < $extension_length; $i++) {\n            $extension_letter = substr($extension,\
    \ $i, 1);\n            $extension_letter_upper = strtoupper($extension_letter);\n\
    \            $extension_letter_lower = strtolower($extension_letter);\n      \
    \      $extension_letter_count = substr_count($class_name, $extension_letter_upper)\
    \ - substr_count($class_name, $extension_letter_lower);\n            $extension_strength\
    \ += $extension_letter_count;\n        }\n        $extensions_strength[$extension]\
    \ = $extension_strength;\n    }\n    ksort($extensions_strength);\n    $extensions_strength\
    \ = array_reverse($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, $extensions_count);\n    $extensions_strength = array_map(function($extension)\
    \ {\n        return substr($extension, 0, strlen($class_name) + 1);\n    }, $extensions_strength);\n\
    \    $extensions_strength = array_combine($extensions_strength, $extensions);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_search($extensions_strength, $extensions_strength);\n    if ($extensions_strength\
    \ === false) {\n        return $class_name;\n    }\n    $extensions_strength =\
    \ array_values($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, $extensions_count);\n    $extensions_strength = array_map(function($extension)\
    \ {\n        return substr($extension, 0, strlen($class_name) + 1);\n    }, $extensions_strength);\n\
    \    $extensions_strength = array_combine($extensions_strength, $extensions);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_search($extensions_strength, $extensions_strength);\n    if ($extensions_strength\
    \ === false) {\n        return $class_name;\n    }\n    $extensions_strength =\
    \ array_values($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, $extensions_count);\n    $extensions_strength = array_map(function($extension)\
    \ {\n        return substr($extension, 0, strlen($class_name) + 1);\n    }, $extensions_strength);\n\
    \    $extensions_strength = array_combine($extensions_strength, $extensions);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_search($extensions_strength, $extensions_strength);", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_length = strlen($extension);\n    $extension_strength\
    \ = -1;\n    for ($i = 0; $i < $extension_length; $i++) {\n      $char = strtoupper($extension[$i]);\n\
    \      $char_strength = strlen($char);\n      $extension_strength += $char_strength;\n\
    \    }\n    $extensions_strength[$extension] = $extension_strength;\n  }\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_values($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extension", "    $strengths = array();\n\
    \    foreach ($extensions as $extension) {\n        $name = strtolower($extension);\n\
    \        $strengths[$name] = substr_count($name, $class_name) / strlen($name);\n\
    \    }\n    arsort($strengths);\n    return $class_name . \".\" . key($strengths);\n\
    }\n</code>\n<|/ a tags=php,string,arrays,sorting |>\n<| c |>\nI like your answer\
    \ but I'm having trouble understanding how it works. Could you please explain\
    \ how it works?\n<|/ c |>\n<| c |>\nI added some comments to my answer.\n<|/ c\
    \ |>\n<| c |>\nThanks for your answer. I'm still having trouble understanding\
    \ how it works. Could you please explain how it works?\n<|/ c |>\n<| c |>\nI added\
    \ some comments to my answer.\n<|/ c |>\n<| c |>\nThanks for your answer. I'm\
    \ still having trouble understanding how it works. Could you please explain how\
    \ it works?\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(\"AA\", \"Be\"\
    , \"CC\");\n$array = array_count_values($array);\narsort($array);\n$array = array_keys($array);\n\
    $array = implode('.', $array);\n</code>\n<|/ a tags=php,string,arrays,sorting\
    \ |>\n<| c |>\nThanks for your answer. I'm still having trouble understanding\
    \ how it works. Could you please explain how it works?\n<|/ c |>\n<| c |>\nI added\
    \ some comments to my answer.\n<|/ c |>\n<| a tags=php,string,arrays,sorting |>\n\
    <code>\n$array = array(\"AA\", \"Be\", \"CC\");\n$array = array_count_values($array);\n\
    arsort($array);\n$array = array_keys($array);\n$array = implode('.', $array);\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I'm still having\
    \ trouble understanding how it works. Could you please explain how it works?\n\
    <|/ c |>\n<| c |>\nI added some comments to my answer.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\"AA\", \"Be\", \"CC\");\n$array = array_count_values($array);\n\
    arsort($array);\n$array = array_keys($array);\n$array = ", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_upper = strtoupper($extension);\n     \
    \   $extension_lower = strtolower($extension);\n        $extensions_strength[$extension_upper]\
    \ = $extension_lower;\n        $extensions_strength[$extension_lower] = $extension_upper;\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    arsort($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_values($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength", "    $strongest_extension\
    \ = null;\n    $strongest_extension_strength = -1;\n    foreach ($extensions as\
    \ $extension) {\n        $extension_strength = strlen($extension) - strlen(strtoupper($extension));\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThanks for your answer. Your code\
    \ works perfectly but i can't understand why it works. Can you please explain\
    \ it to me?\n<|/ c |>\n<| c |>\nI added some comments to my answer. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Your code works perfectly but i can't\
    \ understand why it works. Can you please explain it to me?\n<|/ c |>\n<| c |>\n\
    I added some comments to my answer. Hope it helps.\n<|/ c |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php\n$string = \"Hello World\";\n$string = str_replace(\"Hello\"\
    , \"\", $string);\n$string = str_replace(\"World\", \"\", $string);\necho $string;",
  "    $class_name = strtolower($class_name);\n    $extensions = array_map('strtolower',\
    \ $extensions);\n    $extensions = array_filter($extensions, function($extension)\
    \ {\n        return preg_match('/^[A-Z]/', $extension);\n    });\n    $extensions\
    \ = array_filter($extensions, function($extension) {\n        return preg_match('/^[a-z]/',\
    \ $extension);\n    });\n    $extensions = array_count_values($extensions);\n\
    \    $extensions = array_filter($extensions, function($extension) {\n        return\
    \ $extension > 1;\n    });\n    $extensions = array_keys($extensions);\n    $extensions\
    \ = array_shift($extensions);\n    $extensions = array_shift($extensions);\n \
    \   $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extension", "  $extensions_count = count($extensions);\n  $extensions_count\
    \ = max($extensions_count);\n  $extensions_count = min($extensions_count);\n \
    \ $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = substr_count(strtoupper($class_name), strtoupper($extensions[$i]));\n\
    \  }\n  $extensions_strength = array_count_values($extensions_strength);\n  $extensions_strength\
    \ = array_filter($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift(", "    $strongest_extension = null;\n \
    \   foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $class_length = strlen($class_name);\n        $strength = $extension_length\
    \ - $class_length;\n        if ($strength > 0) {\n            if ($strongest_extension\
    \ == null || $strength < $strongest_extension->strength) {\n                $strongest_extension\
    \ = new Extension($extension, $strength);\n            }\n        }\n    }\n \
    \   return $strongest_extension->extension;\n}\n", "    $strongest = -1;\n   \
    \ foreach ($extensions as $extension) {\n        $extension_strength = strlen($extension)\
    \ - strlen(strtoupper($extension));\n        if ($extension_strength > $strongest)\
    \ {\n            $strongest = $extension_strength;\n        }\n    }\n    return\
    \ $class_name . '.' . array_shift($extensions);\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't seem to work when there are multiple extensions with\
    \ the same strength.\n<|/ c |>\n<| c |>\nI added an example to my answer. Does\
    \ that help?\n<|/ c |>\n<| c |>\nI added an example to my answer. Does that help?\n\
    <|/ c |>\n<| c |>\nI added an example to my answer. Does that help?\n<|/ c |>\n\
    <| c |>\nI added an example to my answer. Does that help?\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n$extensions = array(\"AA\", \"Be\", \"CC\");\n$class_name = \"my_class\"\
    ;\n\n$strongest = -1;\nforeach ($extensions as $extension) {\n    $extension_strength\
    \ = strlen($extension) - strlen(strtoupper($extension));\n    if ($extension_strength\
    \ > $strongest) {\n        $strongest = $extension_strength;\n    }\n}\n\n$class_name\
    \ .= '.' . array_shift($extensions);\n</code>\n<|/ a tags=php,string |>\n<| a\
    \ dscore=2 |>\n<code>\n$extensions = array(\"AA\", \"Be\", \"CC\");\n$class_name\
    \ = \"my_class\";\n\n$strongest = -1;\nforeach ($extensions as $extension) {\n\
    \    $extension_strength = strlen($extension) - strlen(strtoupper($extension));\n\
    \    if ($extension_strength > $strongest) {\n        $strongest = $extension_strength;\n\
    \    }\n}\n\n$class_name .= '.' . array_shift($extensions);\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a dscore=1 |>\n<code>\n$extensions = array(\"AA\", \"Be\", \"CC\");\n\
    $class_name = \"my_class\";\n\n$strongest = -1;\nforeach ($extensions as $extension)\
    \ {\n    $extension_strength = strlen($extension) - strlen(strtoupper($extension));\n\
    \    if ($extension_strength > $strongest) {\n        $strongest = $extension_strength;\n",
  "    $strengths = array();\n    foreach ($extensions as $extension) {\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = array_count_values($extensions)[$i];\n    }\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_search(-1, $extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_fli",
  "    $class_name = strtolower($class_name);\n    $extensions = array_map('strtolower',\
    \ $extensions);\n    $extensions = array_filter($extensions, function($ext) {\n\
    \        return strlen($ext) > 0;\n    });\n    $extensions = array_count_values($extensions);\n\
    \    $extensions = array_filter($extensions, function($ext, $count) {\n      \
    \  return $count > 1;\n    });\n    $extensions = array_keys($extensions);\n \
    \   $extensions = array_shift($extensions);\n    $strength = 0;\n    foreach ($extensions\
    \ as $ext) {\n        $strength += $ext;\n    }\n    $strength = round($strength\
    \ / count($extensions), 2);\n    return $class_name . '.' . $extensions[0] . '.'\
    \ . $strength;\n}\n</code>\n<|/ a tags=php,algorithm,string |>\n<| c |>\nThis\
    \ doesn't seem to work. `Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\"))` returns `my_class.CC` instead of `my_class.Be`.\n<|/ c |>\n<| c |>\n\
    I tested it and it works. I used PHP 5.3.10\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works. I used PHP 5.3.10\n<|/ c |>\n<| c |>\nI tested it and it works. I\
    \ used PHP 5.3.10\n<|/ c |>\n<| c |>\nI tested it and it works. I used PHP 5.3.10\n\
    <|/ c |>\n<| a dscore=1 |>\nI believe this should work:\n<code>", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_upper = strtoupper($extension);\n    $extension_lower\
    \ = strtolower($extension);\n    $extension_strength = count(array_filter(\n \
    \     str_split($extension_upper),\n      function($char) {\n        return $char\
    \ == $extension_lower;\n      }\n    ));\n    $extensions_strength[$extension_strength][]\
    \ = $extension;\n  }\n  arsort($extensions_strength);\n  $extensions_strength\
    \ = array_keys($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_", "    $extensions_count = count($extensions);\n  \
    \  $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $strength = -1;\n    foreach ($extensions as $extension) {\n        $extension\
    \ = strtolower($extension);\n        $extension = preg_replace('/[^A-Z]/', '',\
    \ $extension);\n        $extension = preg_replace('/[^a-z]/', '', $extension);\n\
    \        $extension = preg_replace('/[^0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);", "  $extensions_count = count($extensions);\n\
    \  $extensions_count = max($extensions_count);\n  $extensions_count = min($extensions_count);\n\
    \  $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = substr_count($class_name, $extensions[$i]);\n\
    \  }\n  $extensions_strength = array_count_values($extensions_strength);\n  $extensions_strength\
    \ = array_filter($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_", "    $class_name = strtolower($class_name);\n\
    \    $extensions = array_map('strtolower', $extensions);\n    $extensions = array_unique($extensions);\n\
    \    $extensions = array_filter($extensions);\n    $extensions = array_count_values($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_intersect($extensions,\
    \ array(''));\n    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_letter = strtoupper($extension[$i]);\n     \
    \       $extension_letter_count = str_count($extension_letter);\n            $extension_letter_strength\
    \ = $extension_letter_count - $i;\n            if ($extension_letter_strength\
    \ > $extension_strength) {\n                $extension_strength = $extension_letter_strength;\n\
    \            }\n        }\n        $extensions_strength[$extension] = $extension_strength;\n\
    \    }\n    arsort($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_values($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extension",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = substr_count($extensions[$i], 'A') - substr_count($extensions[$i], 'a');\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_search(-1, $extensions_strength);\n    $extensions_strength\
    \ = array_search(0, $extensions_strength);\n    $extensions_strength = array_search(1,\
    \ $extensions_strength);\n    $extensions_strength = array_search(2, $extensions_strength);\n\
    \    $extensions_strength = array_search(3, $extensions_strength);\n    $extensions_strength\
    \ = array_search(4, $extensions_strength);\n    $extensions_strength = array_search(5,\
    \ $extensions_strength);\n    $extensions_strength = array_search(6, $extensions_strength);\n\
    \    $extensions_strength = array_search(7, $extensions_strength);\n    $extensions_strength\
    \ = array_search(8, $extensions_strength);\n    $extensions_strength = array_search(9,\
    \ $extensions_strength);\n    $extensions_strength = array_search(10, $extensions_strength);\n\
    \    $extensions_strength = array_search(11, $extensions_strength);\n    $extensions_strength\
    \ = array_search(12, $extensions_strength);\n    $extensions_strength = array_search(13,\
    \ $extensions_strength);\n    $extensions_strength = array_search(14, $extensions_strength);\n\
    \    $extensions_strength = array_search(15, $extensions_strength);\n    $extensions_strength\
    \ = array_search(16, $extensions_strength);\n    $extensions_strength = array_search(17,\
    \ $extensions_strength);\n    $extensions_strength = array_search(18, $extensions_strength);\n\
    \    $extensions_strength = array_search(19, $extensions_strength);\n    $extensions_strength\
    \ = array_search(20, $extensions_strength);\n    $extensions_strength = array_search(21,\
    \ $extensions_strength);\n    $extensions_strength = array_search(22, $extensions_strength);\n\
    \    $extensions_strength = array_search(23, $extensions_strength);\n    $extensions_strength\
    \ = array_search(24, $extensions_strength);\n    $extensions_strength = array_search(25,\
    \ $extensions_strength);\n    $extensions_strength = array_search(26, $extensions_strength);\n\
    \    $extensions_strength", "    $strengths = array();\n    foreach ($extensions\
    \ as $extension) {\n        $name = strtolower($extension);\n        $cap = strlen($name)\
    \ - 1;\n        $sm = strlen($name) - 2;\n        $strengths[$cap - $sm] = $extension;\n\
    \    }\n    arsort($strengths);\n    return $class_name . '.' . $strengths[0];\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI really appreciate your effort but this\
    \ doesn't work. I'm getting this error: Parse error: syntax error, unexpected\
    \ '$extension' (T_VARIABLE) in /Applications/MAMP/htdocs/strongest_extension.php\
    \ on line 5\n<|/ c |>\n<| c |>\nI forgot to add the closing parenthesis on the\
    \ `foreach` line. Try it now.\n<|/ c |>\n<| c |>\nNow I'm getting this error:\
    \ Parse error: syntax error, unexpected '$extension' (T_VARIABLE) in /Applications/MAMP/htdocs/strongest_extension.php\
    \ on line 5\n<|/ c |>\n<| c |>\nI fixed the syntax error and added a test case\
    \ to my answer.\n<|/ c |>\n<| c |>\nI really appreciate your effort but I'm getting\
    \ this error: Parse error: syntax error, unexpected '$extension' (T_VARIABLE)\
    \ in /Applications/MAMP/htdocs/strongest_extension.php on line 5\n<|/ c |>\n<|\
    \ a tags=php,arrays,string |>\n<code>\n<?php", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = substr_count($class_name, $extensions[$i]);\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extension",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_upper = strtoupper($extension);\n\
    \        $extension_lower = strtolower($extension);\n        $extension_strength\
    \ = strlen($extension_upper) - strlen($extension_lower);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extension",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    $extensions_strength_counter = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = substr($extension, $i, 1);\n            $extension_letter_upper = strtoupper($extension_letter);\n\
    \            $extension_letter_lower = strtolower($extension_letter);\n      \
    \      $extension_letter_counter = $extension_letter_upper - $extension_letter_lower;\n\
    \            if ($extension_strength < $extension_letter_counter) {\n        \
    \        $extension_strength = $extension_letter_counter;\n            }\n   \
    \     }\n        $extensions_strength[$extension] = $extension_strength;\n   \
    \     $extensions_strength_counter[$extension] = $extensions_strength_counter[$extension]\
    \ + 1;\n    }\n    $extensions_strength_counter = array_count_values($extensions_strength_counter);\n\
    \    arsort($extensions_strength_counter);\n    $extensions_strength_counter =\
    \ array_keys($extensions_strength_counter);\n    $extensions_strength = array_values($extensions_strength);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, $extensions_count);\n\
    \    $extensions_strength = array_combine($extensions_strength, $extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip(", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = $extensions[$i][0];\n    }\n   \
    \ $extensions_strength = array_count_values($extensions_strength);\n    arsort($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = ", " \
    \ $strengths = array();\n  foreach ($extensions as $extension) {\n    $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n    $class_name = preg_replace('/([0-9])/', '\\\\1',\
    \ $class_name);\n    $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n    $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n    $class_name = preg_replace('/([a-z])/', '\\\\1',\
    \ $class_name);\n    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \    $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    $class_name\
    \ = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    $class_name = preg_replace('/([0-9])/',\
    \ '\\\\1', $class_name);\n    $class_name = preg_replace('/([A-Z])/', '\\\\1',\
    \ $class_name);\n    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n    $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n    $class_name = preg_replace('/([0-9])/', '\\\\1',\
    \ $class_name);\n    $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n    $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n    $class_name = preg_replace('/([a-z])/', '\\\\1',\
    \ $class_name);\n    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \    $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    $class_name\
    \ = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    $class_name = preg_replace('/([0-9])/',\
    \ '\\\\1', $class_name);\n    $class_name = preg_replace('/([A-Z])/', '\\\\1',\
    \ $class_name);\n    $class_", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extension_strength = strlen($extension_upper)\
    \ - strlen($extension_lower);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $max_strength = max($extensions_strength);\n    $max_strength_extension\
    \ = array_search($max_strength, $extensions_strength);\n    return $class_name\
    \ . \".\" . $extensions_strength[$max_strength_extension];\n}", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = intval($extension_length / 2);\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_fli",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_fli",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_upper = strtoupper($extension);\n\
    \        $extension_lower = strtolower($extension);\n        $extension_strength\
    \ = strlen($extension_upper) - strlen($extension_lower);\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    arsort($extensions_strength);\n    $strongest_extension\
    \ = array_shift($extensions_strength);\n    $strongest_extension = array_shift($strongest_extension);\n\
    \    $strongest_extension = implode('.', $strongest_extension);\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n</code>\n<|/ a tags=php,algorithm,string |>\n\
    <| c |>\nThis doesn't seem to work. `Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"))` returns `\"my_class.Be\"` instead of `\"my_class.AA\"\
    `.\n<|/ c |>\n<| c |>\n: It works. I tested it before posting. What PHP version\
    \ are you using?\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10 and PHP 5.4.3.\
    \ What PHP version are you using?\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10\
    \ and PHP 5.4.3. What PHP version are you using?\n<|/ c |>\n<| c |>\n: I tested\
    \ it on PHP 5.3.10 and PHP 5.4.3. What PHP version are you using?\n<|/ c |>\n\
    <| a |>\n<code>\n<?php\n$string = 'my_class';\n$extensions = array('AA', 'Be',\
    \ 'CC');\n$strongest_extension = str_replace($string, $string[0].$extensions[0],\
    \ $string);\necho $strongest_extension;\n</code>\n<|/ a tags=php,algorithm,string\
    \ dscore=1 |>\n<| c |>\nThis doesn't seem to work. `Strongest_Extension(\"my_class\"\
    , array(\"AA\", \"Be\", \"CC\"))` returns `\"my_class.Be\"` instead of `\"my_class.AA\"\
    `.\n<|/ c |>\n<| c |>\n: It works. I tested it before posting. What PHP version\
    \ are you using?\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10 and PHP 5.4.3.\
    \ What PHP version are you using", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extension_strength = strlen($extension_upper)\
    \ - strlen($extension_lower);\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    arsort($extensions_strength);\n    $strongest_extension\
    \ = array_shift($extensions_strength);\n    $strongest_extension = array_pop($strongest_extension);\n\
    \    $strongest_extension = implode('.', $strongest_extension);\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,algorithm,string\
    \ |>\n<code>\n<?php\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n$string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $string = 'ABCDEFGHIJK", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extensions_strength[$extension_upper] = $extension_lower;\n        $extensions_strength[$extension_lower]\
    \ = $extension_upper;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n",
  "    $strengths = array();\n    foreach ($extensions as $extension) {\n        $extension\
    \ = strtolower($extension);\n        $cap = preg_replace('/(.)([A-Z])/', '$1',\
    \ $extension);\n        $sm = preg_replace('/([a-z])([A-Z])/', '$1-$2', $extension);\n\
    \        $strengths[$cap] = $sm;\n    }\n    $max_strength = -1;\n    foreach\
    \ ($extensions as $extension) {\n        $extension = strtolower($extension);\n\
    \        $cap = preg_replace('/(.)([A-Z])/', '$1', $extension);\n        $sm =\
    \ preg_replace('/([a-z])([A-Z])/', '$1-$2', $extension);\n        $strength =\
    \ $strengths[$cap] - $strengths[$sm];\n        if ($strength > $max_strength)\
    \ {\n            $max_strength = $strength;\n        }\n    }\n    return $class_name\
    \ . '.' . $max_strength;\n}\n", "    $class_name = strtolower($class_name);\n\
    \    $extensions = array_map('strtolower', $extensions);\n    $strengths = array_count_values($extensions);\n\
    \    arsort($strengths);\n    $strongest_extension = key($strengths);\n    return\
    \ $class_name . '.' . $strongest_extension;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ c |>\nThanks for your answer. I'm going to try this out and see how it goes.\
    \ I appreciate it.\n<|/ c |>\n<| c |>\nI added a test case to my original post\
    \ to show how it works. I hope this helps.\n<|/ c |>\n<| c |>\nI added a test\
    \ case to my original post to show how it works. I hope this helps.\n<|/ c |>\n\
    <| c |>\nI added a test case to my original post to show how it works. I hope\
    \ this helps.\n<|/ c |>\n<| c |>\nI added a test case to my original post to show\
    \ how it works. I hope this helps.\n<|/ c |>\n<| a dscore=0 |>\nI wrote a function\
    \ that will do what you want.\n<code>", "  $extensions_count = count($extensions);\n\
    \  $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = preg_match('/[A-Z]/', $extensions[$i]) ?\n\
    \      preg_replace('/[A-Z]/', '', $extensions[$i]) - preg_replace('/[a-z]/',\
    \ '', $extensions[$i]) : -1;\n  }\n  $extensions_strength = array_count_values($extensions_strength);\n\
    \  arsort($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_slice($extensions_strength, 0, $extensions_count);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);",
  "    $strongest = -1;\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $class_length = strlen($class_name);\n      \
    \  $strongest = ($extension_length < $class_length) ? $extension_length : $class_length;\n\
    \    }\n    return $class_name . \".\" . implode(\".\", array_slice($extensions,\
    \ 0, $strongest));\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your\
    \ efforts, but the code you posted does not work. Try it yourself and see for\
    \ yourself.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test case\
    \ to my answer. Maybe you missed something in your tests?\n<|/ c |>\n<| c |>\n\
    I tested it and it works. I added a test case to my answer. Maybe you missed something\
    \ in your tests?\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test\
    \ case to my answer. Maybe you missed something in your tests?\n<|/ c |>\n<| c\
    \ |>\nI tested it and it works. I added a test case to my answer. Maybe you missed\
    \ something in your tests?\n<|/ c |>\n<| a tags=php,algorithm |>\nI wrote a solution\
    \ that is based on a greedy algorithm. \nThe algorithm is as follows:\n\nFind\
    \ the longest extension of the class (excluding the class name)\nFind the longest\
    \ extension of the class (excluding the class name)\nFind the longest extension\
    \ of the class (excluding the class name)\nFind the longest extension of the class\
    \ (excluding the class name)\nFind the longest extension of the class (excluding\
    \ the class name)\nFind the longest extension of the class (excluding the class\
    \ name)\nFind the longest extension of the class (excluding the class name)\n\
    Find the longest extension of the class (excluding the class name)\nFind the longest\
    \ extension of the class (excluding the class name)\nFind the longest extension\
    \ of the class (excluding the class name)\nFind the longest extension of the class\
    \ (excluding the class name)\nFind the longest extension of the class (excluding\
    \ the class name)\nFind the longest extension of the class (excluding the class\
    \ name)\nFind the longest extension of the class (excluding the class name)\n\
    Find the longest extension of the class (excluding the class name)\nFind the longest\
    \ extension of the class (excluding the class name)\nFind the longest extension\
    \ of the class (excluding the class name)\nFind the longest extension of the class\
    \ (excluding the class name)\n", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extensions_strength[$extension_upper] =\
    \ $extension_lower - $extension_upper;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $strongest_extension = null;\n    foreach ($extensions_strength as $extension_upper\
    \ => $extension_lower) {\n        if ($extension_lower == 0) {\n            continue;\n\
    \        }\n        $extensions_count = count($extensions);\n        $extension_strength\
    \ = $extension_lower / $extensions_count;\n        if ($extension_strength > 0)\
    \ {\n            $strongest_extension = $extension_upper;\n            break;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = preg_match('/[A-Z]/', $extensions[$i]) ?\n            preg_match('/[a-z]/',\
    \ $extensions[$i]) ?\n            preg_match('/[0-9]/', $extensions[$i]) ?\n \
    \           -1 :\n            0 :\n            1;\n    }\n    $extensions_strength\
    \ = array_count_values($extensions_strength);\n    $extensions_strength = array_filter($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extension", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = array_count_values(str_split($extensions[$i]));\n\
    \    }\n    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extension", "    $extensions_count = count($extensions);\n   \
    \ $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = preg_replace('/[^A-Z]/', '', $extensions[$i]);\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_search($class_name, $extensions_strength);\n\
    \    $extensions_strength = array_search(-1, $extensions_strength);\n    $extensions_strength\
    \ = array_search(0, $extensions_strength);\n    $extensions_strength = array_search(1,\
    \ $extensions_strength);\n    $extensions_strength = array_search(2, $extensions_strength);\n\
    \    $extensions_strength = array_search(3, $extensions_strength);\n    $extensions_strength\
    \ = array_search(4, $extensions_strength);\n    $extensions_strength = array_search(5,\
    \ $extensions_strength);\n    $extensions_strength = array_search(6, $extensions_strength);\n\
    \    $extensions_strength = array_search(7, $extensions_strength);\n    $extensions_strength\
    \ = array_search(8, $extensions_strength);\n    $extensions_strength = array_search(9,\
    \ $extensions_strength);\n    $extensions_strength = array_search(10, $extensions_strength);\n\
    \    $extensions_strength = array_search(11, $extensions_strength);\n    $extensions_strength\
    \ = array_search(12, $extensions_strength);\n    $extensions_strength = array_search(13,\
    \ $extensions_strength);\n    $extensions_strength = array_search(14, $extensions_strength);\n\
    \    $extensions_strength = array_search(15, $extensions_strength);\n    $extensions_strength\
    \ = array_search(16, $extensions_strength);\n    $extensions_strength = array_search(17,\
    \ $extensions_strength);\n    $extensions_strength = array_search(18, $extensions_strength);\n\
    \    $extensions_strength = array_search(19, $extensions_strength);\n    $extensions_strength\
    \ = array_search(20, $extensions_strength);\n    $extensions_strength = array_search(21,\
    \ $extensions_strength);\n    $extensions_strength = array_search(22, $extensions_strength);\n\
    \    $extensions_strength = array_search(23, $extensions_strength);\n    $extensions_strength\
    \ = array_search(24, $extensions_strength);\n    $extensions_strength = ", " \
    \   $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $class_name =\
    \ preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_", "  $extensions_count = count($extensions);\n  $extensions_strength\
    \ = array();\n  foreach ($extensions as $extension) {\n    $extension_upper =\
    \ strtoupper($extension);\n    $extension_lower = strtolower($extension);\n  \
    \  $extension_strength = array_search($extension_upper, $extensions_strength);\n\
    \    if ($extension_strength === false) {\n      $extensions_strength[$extension_upper]\
    \ = -1;\n    }\n    $extensions_strength[$extension_upper] += 1;\n    $extension_strength\
    \ = array_search($extension_lower, $extensions_strength);\n    if ($extension_strength\
    \ === false) {\n      $extensions_strength[$extension_lower] = -1;\n    }\n  \
    \  $extensions_strength[$extension_lower] += 1;\n  }\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_slice($extensions_strength, 0, $extensions_count);\n  $extensions_strength\
    \ = array_unique($extensions_strength);\n  $extensions_strength = array_values($extensions_strength);\n\
    \  $extensions_strength = array_combine($extensions_strength, $extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $", "    $strongest_extension = null;\n\
    \    $class_name_length = strlen($class_name);\n    $extensions_length = count($extensions);\n\
    \    $strength_length = strlen($class_name_length) - strlen($extensions_length);\n\
    \    $strength_counter = array();\n    for ($i = 0; $i < $extensions_length; $i++)\
    \ {\n        $extension_length = strlen($extensions[$i]);\n        $strength_counter[$extensions[$i]]\
    \ = $extension_length - $strength_length;\n    }\n    asort($strength_counter);\n\
    \    foreach ($strength_counter as $key => $value) {\n        if ($value == $extensions_length)\
    \ {\n            $strongest_extension = $key;\n            break;\n        }\n\
    \    }\n    return $class_name . $strongest_extension;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThanks for your answer. Your code works fine for most of the cases,\
    \ but fails for some cases. For example: Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\")) returns \"my_class.Be\" instead of \"my_class.AA\"\n<|/\
    \ c |>\n<| c |>\nI edited the answer to fix the problem. Now it works fine for\
    \ all cases.\n<|/ c |>\n<| a tags=php,algorithm |>\nI wrote a solution that is\
    \ based on a modified version of the algorithm described in my book Programming\
    \ Pearls, by Mark Allen Weiss. I used the algorithm to find the longest common\
    \ prefix of two strings. I then used the longest common prefix to find the longest\
    \ common suffix of two strings. I then compared the two suffixes and found the\
    \ longest common substring.\n<code>\n<?php\n", "  $extensions_count = count($extensions);\n\
    \  $extensions_count = max($extensions_count);\n  $extensions_count = min($extensions_count);\n\
    \  $extensions_strength = array();\n  foreach ($extensions as $extension) {\n\
    \    $extension_letters = str_split($extension);\n    $extension_letters_count\
    \ = count($extension_letters);\n    $extension_letters_count = max($extension_letters_count);\n\
    \    $extension_letters_count = min($extension_letters_count);\n    $extension_letters_strength\
    \ = array();\n    for ($i = 0; $i < $extension_letters_count; $i++) {\n      $extension_letter\
    \ = $extension_letters[$i];\n      $extension_letters_strength[$extension_letter]\
    \ = $i;\n    }\n    $extensions_strength[$extension] = $extension_letters_strength;\n\
    \  }\n  $extensions_strength = array_count_values($extensions_strength);\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($", "    $strengths = array();\n    foreach\
    \ ($extensions as $extension) {\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_", "    $strengths = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension = strtolower($extension);\n        $strengths[$extension]\
    \ = substr_count($class_name, $extension) / strlen($class_name);\n    }\n    ksort($strengths);\n\
    \    $strongest = array_shift($strengths);\n    foreach ($strengths as $extension\
    \ => $strength) {\n        if ($strength > $strongest) {\n            $strongest\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks so much for your help! I appreciate\
    \ it! I did try this and it didn't work. I'm still getting a blank page when I\
    \ try to run it. I think it's because I'm missing something in my code. Do you\
    \ know what it is? Thanks again!\n<|/ c |>\n<| c |>\nI added the code I used above.\
    \ I'm still getting a blank page when I try to run it. I think it's because I'm\
    \ missing something in my code. Do you know what it is? Thanks again!\n<|/ c |>\n\
    <| c |>\nI added the code I used above. I'm still getting a blank page when I\
    \ try to run it. I think it's because I'm missing something in my code. Do you\
    \ know what it is? Thanks again!\n<|/ c |>\n<| c |>\nI added the code I used above.\
    \ I'm still getting a blank page when I try to run it. I think it's because I'm\
    \ missing something in my code. Do you know what it is? Thanks again!\n<|/ c |>\n\
    <| c |>\nI added the code I used above. I'm still getting a blank page when I\
    \ try to run it. I think it's because I'm missing something in my code. Do you\
    \ know what it is? Thanks again!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $class_name = strtolower($class_name);\n    $extensions = array_map('strtolower',\
    \ $extensions);\n    $strengths = array_count_values($extensions);\n    arsort($strengths);\n\
    \    $strongest = array_shift($strengths);\n    $strongest = substr($strongest,\
    \ strlen($class_name) + 1);\n    $strongest = substr($strongest, 0, -strlen($strongest));\n\
    \    return $class_name . $strongest;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    Thanks so much for your help and explanation! I really appreciate it!\n<|/ c |>\n\
    <| c |>\nNo problem. Glad I could help.\n<|/ c |>\n<| a dscore=0 |>\nI wrote a\
    \ PHP script that does this for you. \n<code>\n<?php\n$extensions = array(\"php\"\
    , \"html\", \"css\", \"js\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\", \"php\"\
    , \"php\", \"php", "    $class_name = strtolower($class_name);\n    $extensions\
    \ = array_map('strtolower', $extensions);\n    $extensions = array_filter($extensions,\
    \ function($ext) {\n        return strlen($ext) > 0;\n    });\n    $extensions\
    \ = array_count_values($extensions);\n    $extensions = array_filter($extensions,\
    \ function($ext, $count) {\n        return $count > 1;\n    });\n    $extensions\
    \ = array_keys($extensions);\n    $extensions = array_shift($extensions);\n  \
    \  $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift(", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extension_strength = strlen($extension_upper)\
    \ - strlen($extension_lower);\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    $max_strength = -1;\n    $max_extension = NULL;\n\
    \    foreach ($extensions_strength as $strength => $extensions) {\n        if\
    \ ($strength > $max_strength) {\n            $max_strength = $strength;\n    \
    \        $max_extension = $extensions[0];\n        }\n    }\n    return $class_name\
    \ . '.' . $max_extension;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis\
    \ doesn't seem to work. `Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\"))` returns `\"my_class.Be\"` instead of `\"my_class.AA\"`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works fine. Can you please post the code you are using?\n\
    <|/ c |>\n<| c |>\nI added the code to the question. Thanks.\n<|/ c |>\n<| c |>\n\
    I added the code to the question. Thanks.\n<|/ c |>\n<| c |>\nI added the code\
    \ to the question. Thanks.\n<|/ c |>\n<| a tags=php,string |>\n<code>", "    $strength\
    \ = -1;\n    $extensions_count = count($extensions);\n    foreach ($extensions\
    \ as $extension) {\n        $extension_length = strlen($extension);\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extension_upper_capped = $extension_upper - $extension_lower;\n    \
    \    $extension_lower_capped = $extension_lower - $extension_upper;\n        $extension_strength\
    \ = $extension_upper_capped - $extension_lower_capped;\n        if ($extension_strength\
    \ > $strength) {\n            $strength = $extension_strength;\n        }\n  \
    \  }\n    return $class_name . \".\" . array_shift($extensions) . \".\" . $strength;\n\
    }\n", "  $class_name = strtolower($class_name);\n  $extensions = array_map('strtolower',\
    \ $extensions);\n  $strengths = array_count_values($extensions);\n  arsort($strengths);\n\
    \  $strongest = array_shift($strengths);\n  $class_name = $class_name . '.' .\
    \ $strongest;\n  return $class_name;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    $extensions_strength_length = array();\n    $extensions_strength_length\
    \ = array_count_values($extensions_strength);\n    foreach ($extensions_strength_length\
    \ as $key => $value) {\n        $extensions_strength[$key] = $value;\n    }\n\
    \    foreach ($extensions as $key => $value) {\n        $extensions_strength[$key]\
    \ = $extensions_strength[$key] - strlen($value);\n    }\n    arsort($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, $extensions_count);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($", "    $strengths = array();\n    foreach\
    \ ($extensions as $extension) {\n        $class_name = preg_replace('/([A-Z])/',\
    \ \"$1_\", $class_name);\n        $class_name = preg_replace('/([a-z])/', \"$1_\"\
    , $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/_/', '', $class_name);\n        $class_name = preg_replace('/[^A-Z]/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^a-z]/', '', $class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/', '',\
    \ $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n\
    \        $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n    \
    \    $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/', '',\
    \ $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n\
    \        $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n    \
    \    $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/', '',\
    \ $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n\
    \        $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n    \
    \    $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/', '',\
    \ $class_name);\n        $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n\
    \        $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n    \
    \    $class_name = preg_replace('/[^A-Za-z0-9]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^A-Za-z0-9", "    $class_name = strtolower($class_name);\n\
    \    $extensions = array_map('strtolower', $extensions);\n    $extensions = array_filter($extensions,\
    \ function($ext) {\n        return preg_match('/^[a-z]/', $ext);\n    });\n  \
    \  $extensions = array_count_values($extensions);\n    $extensions = array_filter($extensions,\
    \ function($ext, $count) {\n        return $count > 1;\n    });\n    $extensions\
    \ = array_keys($extensions);\n    $extensions = array_shift($extensions);\n  \
    \  $extensions = array_map('ucfirst', $extensions);\n    $extensions = implode('.',\
    \ $extensions);\n    return $class_name . '.' . $extensions;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,algorithm,string |>\n<code>", "    $strengths =\
    \ array();\n    foreach ($extensions as $extension) {\n        $name = strtolower($extension);\n\
    \        $cap = preg_replace('/[^A-Z]/', '', $name);\n        $sm = preg_replace('/[^a-z]/',\
    \ '', $name);\n        $strengths[$cap - $sm] = $extension;\n    }\n    $max_strength\
    \ = max($strengths);\n    foreach ($extensions as $extension) {\n        $name\
    \ = strtolower($extension);\n        $cap = preg_replace('/[^A-Z]/', '', $name);\n\
    \        $sm = preg_replace('/[^a-z]/', '', $name);\n        if ($cap - $sm ==\
    \ $max_strength) {\n            return $class_name . '.' . $extension;\n     \
    \   }\n    }\n}\n", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extensions_strength[$extension_upper] = $extension_lower;\n        $extensions_strength[$extension_lower]\
    \ = $extension_upper;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_filter($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_values($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = preg_replace('/[^A-Z]/', '', $extensions[$i]);\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($",
  "    $strength = -1;\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $class_length = strlen($class_name);\n      \
    \  $strength += ($extension_length - $class_length) / $extension_length;\n   \
    \ }\n    if ($strength > 0) {\n        return $class_name . substr($class_name,\
    \ 0, $strength) . \".\" . array_shift($extensions);\n    }\n    return $class_name;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nI like your solution, however it fails when the\
    \ class name has more than one uppercase letter. For example: `Strongest_Extension(\"\
    MyClass\", array(\"AA\", \"Be\", \"CC\"))` returns `MyClass.AA` instead of `MyClass.Be`.\n\
    <|/ c |>\n<| c |>\nI added a fix for that case to the answer.\n<|/ c |>\n<| c\
    \ |>\nThanks for the fix. I was wondering if there was a way to do this without\
    \ having to use an array. I'm sure there's a way but I'm just not seeing it.\n\
    <|/ c |>\n<| c |>\nI added a solution without using an array.\n<|/ c |>\n<| a\
    \ tags=php,string,regex |>\n<code>", "    $strongest_extension = -1;\n    $extension_count\
    \ = count($extensions);\n    foreach ($extensions as $extension) {\n        $extension_letters\
    \ = str_split($extension, 1);\n        $extension_letters_count = count($extension_letters);\n\
    \        $extension_strength = pow(2, $extension_letters_count - 1);\n       \
    \ if ($extension_strength > $strongest_extension) {\n            $strongest_extension\
    \ = $extension_strength;\n        }\n    }\n    return $class_name . '.' . implode('.',\
    \ $extensions);\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI appreciate your efforts,\
    \ but the code does not work as expected. `Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"))` returns `my_class.AA` instead of `my_class.Be`.\n<|/ c\
    \ |>\n<| c |>\nI fixed the bug, sorry about that. Now it works as expected.\n\
    <|/ c |>\n<| c |>\nThanks for your efforts, but the code does not work as expected.\
    \ `Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))` returns `my_class.AA`\
    \ instead of `my_class.Be`.\n<|/ c |>\n<| c |>\nI fixed the bug, sorry about that.\
    \ Now it works as expected.\n<|/ c |>\n<| a dscore=1 |>\nI wrote a PHP script\
    \ that does this for you. \n<code>\n<?php\n", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = strtoupper($extension[$i]);\n            $extension_letter_count = strlen($extension_letter);\n\
    \            $extension_letter_strength = -1;\n            for ($j = 0; $j < $extension_letter_count;\
    \ $j++) {\n                $extension_letter_letter_count = strlen($extension_letter[$j]);\n\
    \                $extension_letter_letter_strength = -1;\n                for\
    \ ($k = 0; $k < $extension_letter_letter_count; $k++) {\n                    $extension_letter_letter_letter_count\
    \ = strlen($extension_letter[$j][$k]);\n                    $extension_letter_letter_letter_strength\
    \ = -1;\n                    for ($l = 0; $l < $extension_letter_letter_letter_count;\
    \ $l++) {\n                        $extension_letter_letter_letter_letter_letter_count\
    \ = strlen($extension_letter[$j][$k][$l]);\n                        $extension_letter_letter_letter_letter_strength\
    \ = -1;\n                        for ($m = 0; $m < $extension_letter_letter_letter_letter_count;\
    \ $m++) {\n                            $extension_letter_letter_letter_letter_letter_count\
    \ = strlen($extension_letter[$j][$k][$l][$m]);\n                            $extension_letter_letter_letter_letter_letter_strength\
    \ = -1;\n                            for ($n = 0; $n < $extension_letter_letter_letter_letter_letter_count;\
    \ $n++) {\n                                $extension_letter_letter_letter_letter_letter_letter_count\
    \ = strlen($extension_letter[$j][$k][$l][$m][$n]);\n                         \
    \       $extension_letter_letter_letter_letter_letter_letter_strength = -1;\n\
    \                                for ($o = 0; $o < $extension_letter_letter_letter_letter_letter_letter_count;\
    \ $o++) {\n                                    $extension_letter_letter_letter_letter_letter_letter_letter_count\
    \ = strlen($extension_letter[$j][$k][$l][$m][$n][$o]);\n                     \
    \               $extension_letter_letter_letter_letter_letter_letter_letter_strength\
    \ = -1;\n                                    for ($p = 0; $p < $extension_letter_letter_letter_letter_letter_letter_letter_count;\
    \ $p++) {\n                                        $extension_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = strlen($extension_letter[$j][$k][$l][$m][$n][$o][$p]);\n                 \
    \                       $extension_", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_strength\
    \ += ord($extension[$i]) - ord('A');\n        }\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $max_strength = -1;\n    $max_extension = null;\n\
    \    foreach ($extensions_strength as $strength => $extension) {\n        if ($strength\
    \ > $max_strength) {\n            $max_strength = $strength;\n            $max_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . $max_extension;\n\
    }\n</code>\n<|/ a tags=php,string,algorithm |>\n<| a dscore=1 |>\nI wrote a PHP\
    \ script that does this for you. \n<code>\n<?php\n$string = \"Hello World\";\n\
    $extensions = array(\"php\", \"html\", \"css\", \"js\");\n$extensions_count =\
    \ count($extensions);\n$extensions_strength = array();\nforeach ($extensions as\
    \ $extension) {\n    $extension_length = strlen($extension);\n    $extension_strength\
    \ = -1;\n    for ($i = 0; $i < $extension_length; $i++) {\n        $extension_strength\
    \ += ord($extension[$i]) - ord('A');\n    }\n    $extensions_strength[$extension_strength]\
    \ = $extension;\n}\n$max_strength = -1;\n$max_extension = null;\nforeach ($extensions_strength\
    \ as $strength => $extension) {\n    if ($strength > $max_strength) {\n      \
    \  $max_strength = $strength;\n        $max_extension = $extension;\n    }\n}\n\
    echo $string . \".\" . $max_extension;", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extension_strength = count($extension) -\
    \ strlen($extension_upper) - strlen($extension_lower);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_", " \
    \   $strongest_extension = array();\n    foreach ($extensions as $extension) {\n\
    \        $cap = preg_match('/[A-Z]/', $extension);\n        $sm = preg_match('/[a-z]/',\
    \ $extension);\n        $strength = abs($cap - $sm);\n        if ($strength >\
    \ 0) {\n            $strongest_extension[] = $class_name . '.' . $extension;\n\
    \        }\n    }\n    sort($strongest_extension);\n    return $strongest_extension[0];\n\
    }\n", "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ max($extensions_count);\n    $extensions_count = min($extensions_count);\n \
    \   $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = max($extensions_count);\n    $extensions_count\
    \ = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ max($extensions_count);\n    $extensions_count = min($extensions_count);\n \
    \   $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = max($extensions_count);\n    $extensions_count\
    \ = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ max($extensions_count);\n    $extensions_count = min($extensions_count);\n \
    \   $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = max($extensions_count);\n    $extensions_count\
    \ = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ max($extensions_count);\n    $extensions_count = min($extensions_count);\n \
    \   $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = max($extensions_count);\n    $extensions_count\
    \ = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ max($extensions_count);\n    $extensions_count = min($extensions_count);\n \
    \   $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = max($extensions_count);\n    $extensions_count\
    \ = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ max($extensions_count);\n    $extensions_count = min($extensions_count);\n \
    \   $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = max($extensions_count);\n    $", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    $extensions_strength_length = count($extensions_strength);\n    $extensions_strength_length\
    \ = max($extensions_strength_length);\n    $extensions_strength_length = min($extensions_strength_length);\n\
    \    $extensions_strength_strength = array();\n    $extensions_strength_strength_length\
    \ = count($extensions_strength_strength);\n    $extensions_strength_strength_length\
    \ = max($extensions_strength_strength_length);\n    $extensions_strength_strength_length\
    \ = min($extensions_strength_strength_length);\n    $extensions_strength_strength_strength\
    \ = array();\n    $extensions_strength_strength_strength_length = count($extensions_strength_strength_strength);\n\
    \    $extensions_strength_strength_strength_length = max($extensions_strength_strength_strength_length);\n\
    \    $extensions_strength_strength_strength_length = min($extensions_strength_strength_strength_length);\n\
    \    $extensions_strength_strength_strength_strength = array();\n    $extensions_strength_strength_strength_strength_length\
    \ = count($extensions_strength_strength_strength_strength);\n    $extensions_strength_strength_strength_strength_length\
    \ = max($extensions_strength_strength_strength_strength_length);\n    $extensions_strength_strength_strength_strength_length\
    \ = min($extensions_strength_strength_strength_strength_length);\n    $extensions_strength_strength_strength_strength_strength\
    \ = array();\n    $extensions_strength_strength_strength_strength_strength_length\
    \ = count($extensions_strength_strength_strength_strength_strength);\n    $extensions_strength_strength_strength_strength_strength_length\
    \ = max($extensions_strength_strength_strength_strength_strength_length);\n  \
    \  $extensions_strength_strength_strength_strength_strength_length = min($extensions_strength_strength_strength_strength_strength_length);\n\
    \    $extensions_strength_strength_strength_strength_strength_strength = array();\n\
    \    $extensions_strength_strength_strength_strength_strength_strength_length\
    \ = count($extensions_strength_strength_strength_strength_strength_strength);\n\
    \    $extensions_strength_strength_strength_strength_strength_strength_length\
    \ = max($extensions_strength_strength_strength_strength_strength_strength_length);\n\
    \    $extensions_strength_strength_strength_strength_strength_", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_upper = strtoupper($extension);\n     \
    \   $extension_lower = strtolower($extension);\n        $extension_strength =\
    \ count($extension) - strlen($extension_lower);\n        $extensions_strength[$extension_upper]\
    \ = $extension_strength;\n    }\n    $extensions_strength = array_reverse($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_values($extensions_strength);\n    $extensions_strength = array_unique($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_search($class_name, $extensions_strength);\n    $extensions_strength\
    \ = array_search(-1, $extensions_strength);\n    $extensions_strength = array_search(0,\
    \ $extensions_strength);\n    $extensions_strength = array_search(1, $extensions_strength);\n\
    \    $extensions_strength = array_search(2, $extensions_strength);\n    $extensions_strength\
    \ = array_search(3, $extensions_strength);\n    $extensions_strength = array_search(4,\
    \ $extensions_strength);\n    $extensions_strength = array_search(5, $extensions_strength);\n\
    \    $extensions_strength = array_search(6, $extensions_strength);\n    $extensions_strength\
    \ = array_search(7, $extensions_strength);\n    $extensions_strength = array_search(8,\
    \ $extensions_strength);\n    $extensions_strength = array_search(9, $extensions_strength);\n\
    \    $extensions_strength = array_search(10, $extensions_strength);\n    $extensions_strength\
    \ = array_search(11, $extensions_strength);\n    $extensions_strength = array_search(12,\
    \ $extensions_strength);\n    $extensions_strength = array_search(13, $extensions_strength);\n\
    \    $extensions_strength = array_search(14, $extensions_strength);\n    $extensions_strength\
    \ = array_search(15, $extensions_strength);\n    $extensions_strength = array_search(16,\
    \ $extensions_strength);\n    $extensions_strength = array_search(17, $extensions_strength);\n\
    \    $extensions_strength = array_search(18, $extensions_strength);\n    $extensions_strength\
    \ = array_search(19, $extensions_strength);\n    $extensions_strength = array_search(20,\
    \ $extensions_strength);\n    $extensions_strength = array_search(21, $extensions_strength);\n\
    \    $extensions_strength = array_search(22, $extensions_strength);\n    $extensions_strength\
    \ = array_search(23, $extensions_strength", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extensions_strength[$extension_upper] =\
    \ $extension_lower - $extension_upper;\n    }\n    $max_strength = -1;\n    $max_extension\
    \ = null;\n    foreach ($extensions_strength as $extension_upper => $extension_lower)\
    \ {\n        if ($extension_upper > $max_strength) {\n            $max_strength\
    \ = $extension_upper;\n            $max_extension = $extension_lower;\n      \
    \  }\n    }\n    return $class_name . '.' . $max_extension;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nI like your solution, but I feel like it could be improved.\
    \ For example the function should return null if there are no extensions found.\
    \ Also the function should return null if there are two extensions with the same\
    \ strength. Also the function should return null if there are two extensions with\
    \ the same strength but different cases. I tried to fix these issues, but I couldn't\
    \ get it working as expected.\n<|/ c |>\n<| c |>\nI added some comments to the\
    \ code above. Hope it helps.\n<|/ c |>\n<| a dscore=1 |>\nI wrote a function that\
    \ does exactly what you need:\n<code>", "    $strongest = -1;\n    $extensions_count\
    \ = count($extensions);\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extension_upper = substr($extension_upper, 0, 1);\n        $extension_lower\
    \ = substr($extension_lower, 0, 1);\n        $extension_strength = strlen($extension)\
    \ - strlen($extension_upper) - strlen($extension_lower);\n        if ($extension_strength\
    \ > $strongest) {\n            $strongest = $extension_strength;\n        }\n\
    \    }\n    return $class_name . '.' . implode('.', array_slice($extensions, 0,\
    \ $strongest));\n}\n", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = count(preg_grep(\"/^$class_name\\\
    ./\", $extensions[$i]));\n    }\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extension", "  $extensions_count =\
    \ count($extensions);\n  $extensions_count = max($extensions_count);\n  $extensions_count\
    \ = min($extensions_count, count($class_name) - 1);\n  $extensions_count = pow($extensions_count,\
    \ 2);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = preg_replace('/[^A-Z]/', '', $extensions[$i]);\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_search(-1, $extensions_strength);\n    $extensions_strength\
    \ = array_search(0, $extensions_strength);\n    $extensions_strength = array_search(1,\
    \ $extensions_strength);\n    $extensions_strength = array_search(2, $extensions_strength);\n\
    \    $extensions_strength = array_search(3, $extensions_strength);\n    $extensions_strength\
    \ = array_search(4, $extensions_strength);\n    $extensions_strength = array_search(5,\
    \ $extensions_strength);\n    $extensions_strength = array_search(6, $extensions_strength);\n\
    \    $extensions_strength = array_search(7, $extensions_strength);\n    $extensions_strength\
    \ = array_search(8, $extensions_strength);\n    $extensions_strength = array_search(9,\
    \ $extensions_strength);\n    $extensions_strength = array_search(10, $extensions_strength);\n\
    \    $extensions_strength = array_search(11, $extensions_strength);\n    $extensions_strength\
    \ = array_search(12, $extensions_strength);\n    $extensions_strength = array_search(13,\
    \ $extensions_strength);\n    $extensions_strength = array_search(14, $extensions_strength);\n\
    \    $extensions_strength = array_search(15, $extensions_strength);\n    $extensions_strength\
    \ = array_search(16, $extensions_strength);\n    $extensions_strength = array_search(17,\
    \ $extensions_strength);\n    $extensions_strength = array_search(18, $extensions_strength);\n\
    \    $extensions_strength = array_search(19, $extensions_strength);\n    $extensions_strength\
    \ = array_search(20, $extensions_strength);\n    $extensions_strength = array_search(21,\
    \ $extensions_strength);\n    $extensions_strength = array_search(22, $extensions_strength);\n\
    \    $extensions_strength = array_search(23, $extensions_strength);\n    $extensions_strength\
    \ = array_search(24, $extensions_strength);\n    $extensions_strength = array_search(25,\
    \ $extensions_strength);\n    $extensions_strength = array_search(26, $extensions_strength);\n\
    \    $extensions_strength = array_search(27, $extensions_strength);", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_letters = str_split($extension);\n    \
    \    $extension_letters_count = count($extension_letters);\n        $extension_letters_strength\
    \ = array();\n        for ($i = 0; $i < $extension_letters_count; $i++) {\n  \
    \          $letter = $extension_letters[$i];\n            $letter_capitalized\
    \ = strtoupper($letter);\n            $letter_lowercase = strtolower($letter);\n\
    \            $letter_capitalized_index = array_search($letter_capitalized, $extensions_strength);\n\
    \            $letter_lowercase_index = array_search($letter_lowercase, $extensions_strength);\n\
    \            if ($letter_capitalized_index === false && $letter_lowercase_index\
    \ === false) {\n                $extension_letters_strength[$i] = -1;\n      \
    \      } else {\n                $extension_letters_strength[$i] = $letter_capitalized_index\
    \ - $letter_lowercase_index;\n            }\n        }\n        $extensions_strength\
    \ = array_merge($extensions_strength, $extension_letters_strength);\n    }\n \
    \   $extensions_strength = array_count_values($extensions_strength);\n    $extensions_strength\
    \ = array_filter($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_unique($extensions_strength);\n    $extensions_strength\
    \ = array_values($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $", "    $strengths = array();\n    foreach ($extensions as $extension) {\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = count(preg_grep(\"/^$class_name/\"\
    , $extensions)) - count(preg_grep(\"/^$class_name/\", array_reverse($extensions)));\n\
    \    }\n    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extension", "    $class_name = strtolower($class_name);\n    $extensions\
    \ = array_map('strtolower', $extensions);\n    $extensions = array_filter($extensions,\
    \ function($e){\n        return preg_match('/[A-Z]/', $e);\n    });\n    $extensions\
    \ = array_filter($extensions, function($e){\n        return preg_match('/[a-z]/',\
    \ $e);\n    });\n    $extensions = array_count_values($extensions);\n    $extensions\
    \ = array_filter($extensions, function($e){\n        return $e > 1;\n    });\n\
    \    $extensions = array_keys($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($",
  "    $strongest_extension = array();\n    $class_name_length = strlen($class_name);\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = strlen($extension) - $class_name_length;\n    \
    \    if ($extension_strength > 0) {\n            $strongest_extension[$extension]\
    \ = $extension_strength;\n        }\n    }\n    ksort($strongest_extension);\n\
    \    foreach ($strongest_extension as $extension => $strength) {\n        if ($strength\
    \ == $class_name_length) {\n            return $class_name . '.' . $extension;\n\
    \        }\n    }\n}\n</code>\n<|/ a tags=php,string |>\n<| a dscore=0 |>\n<code>\n\
    $string = 'Hello World';\n$array = array('Hello', 'World');\n$string = str_replace($array,\
    \ '', $string);\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis would replace\
    \ all occurrences of \"Hello\" and \"World\" in the string. Not what the OP wants.\n\
    <|/ c |>\n<| c |>\n: Yes, but that wasn't the question. He wants to replace all\
    \ occurrences of \"Hello\" and \"World\" in the string, not just the first one.\n\
    <|/ c |>\n<| c |>\n: I know, that's why I added the comment \"This would replace\
    \ all occurrences of \"Hello\" and \"World\" in the string\"\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n$string = 'Hello World';\n$array = array('Hello', 'World');\n$string\
    \ = str_replace($array, '', $string);\n</code>\n<|/ a tags=php,string |>\n<| a\
    \ |>\n<code>\n$string = 'Hello World';\n$array = array('Hello', 'World');\n$string\
    \ = str_replace($array, '', $string);\n</code>\n<|/ a tags=php,string dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n$string = 'Hello World';\n$array = array('Hello',\
    \ 'World');\n$string = str_replace($array, '', $string);\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a tags=php,string |>\n<code>\n$string = 'Hello World';\n$array = array('Hello',\
    \ 'World');\n$string = str_replace($array, '', $string);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n$string = 'Hello World';\n$array = array('Hello',\
    \ 'World');\n", "    $strongest = -1;\n    $extensions_count = count($extensions);\n\
    \    foreach ($extensions as $extension) {\n        $extension_upper = strtoupper($extension);\n\
    \        $extension_lower = strtolower($extension);\n        $extension_upper\
    \ = strlen($extension_upper);\n        $extension_lower = strlen($extension_lower);\n\
    \        $strength = $extension_upper - $extension_lower;\n        if ($strength\
    \ > $strongest) {\n            $strongest = $strength;\n        }\n    }\n   \
    \ return $class_name . \".\" . array_shift($extensions) . \".\" . $strongest;\n\
    }\n</code>\n<|/ a tags=php,algorithm,string |>\n<| c |>\nThis doesn't seem to\
    \ work. `Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))` returns\
    \ `\"my_class.Be\"` instead of `\"my_class.AA\"`.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I added an example to the answer.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I added an example to the answer.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I added an example to the answer.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I added an example to the answer.\n<|/ c |>\n<| a tags=php,algorithm,string\
    \ |>\n<code>\n<?php\n$string = \"my_class\";\n$extensions = array(\"AA\", \"Be\"\
    , \"CC\");\n$strongest = -1;\nforeach ($extensions as $extension) {\n    $extension_upper\
    \ = strtoupper($extension);\n    $extension_lower = strtolower($extension);\n\
    \    $extension_upper = strlen($extension_upper);\n    $extension_lower = strlen($extension_lower);\n\
    \    $strength = $extension_upper - $extension_lower;\n    if ($strength > $strongest)\
    \ {\n        $strongest = $strength;\n    }\n}\n$strongest = substr($string, 0,\
    \ strlen($string) - strlen($strongest)) . $strongest;\necho $strongest;\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't seem to work. `Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))` returns `\"my_class.Be\"` instead\
    \ of `\"my_class.AA\"`.\n<|/ c |>\n<| c |>", "    $strength = -1;\n    foreach\
    \ ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $class_length = strlen($class_name);\n        $strength += ($extension_length\
    \ - $class_length) / $extension_length;\n    }\n    return $class_name . \".\"\
    \ . array_shift($extensions) . \".\" . $strength;\n}\n", "    $strongest = -1;\n\
    \    foreach ($extensions as $extension) {\n        $cap = preg_replace('/[^A-Z]/',\
    \ '', $extension);\n        $sm = preg_replace('/[^a-z]/', '', $extension);\n\
    \        $strength = strlen($cap) - strlen($sm);\n        if ($strength > $strongest)\
    \ {\n            $strongest = $strength;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest . '.' . array_shift($extensions);\n}\n</code>\n<|/ a tags=php,algorithm,string\
    \ |>\n<| c |>\nThis doesn't work. Try it with the example I gave in the question.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added a test case to my answer.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with the example I gave in the question.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added a test case to my answer.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with the example I gave in the question.\n\
    <|/ c |>\n<| a tags=php,algorithm,string |>\n<code>\n<?php\n$string = \"abc\"\
    ;\n$string2 = \"abc\";\n$string3 = \"abc\";\n$string4 = \"abc\";\n$string5 = \"\
    abc\";\n$string6 = \"abc\";\n$string7 = \"abc\";\n$string8 = \"abc\";\n$string9\
    \ = \"abc\";\n$string10 = \"abc\";\n$string11 = \"abc\";\n$string12 = \"abc\"\
    ;\n$string13 = \"abc\";\n$string14 = \"abc\";\n$string15 = \"abc\";\n$string16\
    \ = \"abc\";\n$string17 = \"abc\";\n$string18 = \"abc\";\n$string19 = \"abc\"\
    ;\n$string20 = \"abc\";\n$string21 = \"abc\";\n$string22 = \"abc\";\n$string23\
    \ = \"abc\";\n$string24 = \"abc\";\n$string25 = \"abc\";\n$string26 = \"abc\"\
    ;\n$string27 = \"abc\";\n$string28 = \"abc\";\n$string29 = \"abc\";\n$string30\
    \ = \"abc\";\n$string31 = \"abc\";\n$string32 = \"abc\";\n$string33 = \"abc\"\
    ;\n$string34 = \"abc\";\n$string35 = \"abc\";\n$string36 = \"abc\";\n$string37\
    \ = \"", "    $strengths = array();\n    foreach ($extensions as $extension) {\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = strtolower($class_name);\n   \
    \     $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = strtolower($class_name);\n   \
    \     $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = strtolower($class_name);\n   \
    \     $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_",
  "  $strengths = array();\n  $class_name = strtolower($class_name);\n  foreach ($extensions\
    \ as $extension) {\n    $extension = strtolower($extension);\n    $cap = strlen($extension)\
    \ - strlen(preg_replace('/[^A-Z]/', '', $extension));\n    $sm = strlen($extension)\
    \ - strlen(preg_replace('/[^a-z]/', '', $extension));\n    $strengths[$cap][$sm]\
    \ = $extension;\n  }\n  $strength = -1;\n  foreach ($strengths as $cap => $sm)\
    \ {\n    foreach ($sm as $sm => $extension) {\n      if ($cap > $strength) {\n\
    \        $strength = $cap;\n      }\n    }\n  }\n  return $class_name . '.' .\
    \ $strengths[$strength][$strength];\n}\n", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    $extensions_strength_max = -1;\n   \
    \ $extensions_strength_min = -1;\n    $extensions_strength_sum = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = intval($extension_length / 2);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n        $extensions_strength_sum += $extension_strength;\n  \
    \      if ($extension_strength > $extensions_strength_max) {\n            $extensions_strength_max\
    \ = $extension_strength;\n        }\n        if ($extension_strength < $extensions_strength_min)\
    \ {\n            $extensions_strength_min = $extension_strength;\n        }\n\
    \    }\n    $extensions_strength_avg = intval($extensions_strength_sum / $extensions_count);\n\
    \    $extensions_strength_max = max($extensions_strength_max, $extensions_strength_min);\n\
    \    $extensions_strength_avg = max($extensions_strength_avg, $extensions_strength_min);\n\
    \    $extensions_strength_avg = min($extensions_strength_avg, $extensions_strength_max);\n\
    \    $extensions_strength_avg = abs($extensions_strength_avg);\n    $extensions_strength_avg\
    \ = intval($extensions_strength_avg);\n    $extensions_strength_avg = max($extensions_strength_avg,\
    \ 0);\n    $extensions_strength_avg = min($extensions_strength_avg, $extensions_strength_max);\n\
    \    $extensions_strength_avg = abs($extensions_strength_avg);\n    $extensions_strength_avg\
    \ = intval($extensions_strength_avg);\n    $extensions_strength_avg = max($extensions_strength_avg,\
    \ 0);\n    $extensions_strength_avg = min($extensions_strength_avg, $extensions_strength_max);\n\
    \    $extensions_strength_avg = abs($extensions_strength_avg);\n    $extensions_strength_avg\
    \ = intval($extensions_strength_avg);\n    $extensions_strength_avg = max($extensions_strength_avg,\
    \ 0);\n    $extensions_strength_avg = min($extensions_strength_avg, $extensions_strength_max);\n\
    \    $extensions_strength_avg = abs($extensions_strength_avg);\n    $extensions_strength_avg\
    \ = intval($extensions_", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = pow($extensions_count, 2);\n    $extensions_count\
    \ = pow($extensions_count, 2);\n    $extensions_count = pow($extensions_count,\
    \ 2);", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extension_strength = strlen($extension_upper) - strlen($extension_lower);\n\
    \        $extensions_strength[$extension_strength] = $extension;\n    }\n    $max_strength\
    \ = max($extensions_strength);\n    $max_strength_extension = array_search($max_strength,\
    \ $extensions_strength);\n    return $class_name . \".\" . $extensions_strength[$max_strength_extension];\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your answer, but I'm afraid I didn't\
    \ make myself clear. I'm not looking for a way to find the strongest extension,\
    \ I'm looking for a way to find the extension with the highest strength. I'll\
    \ update my question to make it more clear.\n<|/ c |>\n<| c |>\nOkay, I updated\
    \ my answer to reflect your updated question. Let me know if that works for you.\n\
    <|/ c |>\n<| c |>\nThanks for your answer! I tested it and it works. However,\
    \ I realized that my question was a bit unclear. I'm sorry about that. I've updated\
    \ my question to make it more clear.\n<|/ c |>\n<| c |>\nOkay, I updated my answer\
    \ to reflect your updated question. Let me know if that works for you.\n<|/ c\
    \ |>\n<| c |>\nThanks for your answer! I tested it and it works. However, I realized\
    \ that my question was a bit unclear. I'm sorry about that. I've updated my question\
    \ to make it more clear.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$extensions\
    \ = array(\"AA\", \"Be\", \"CC\");\n$extensions_count = count($extensions);\n\
    $extensions_strength = array();\nforeach ($extensions as $extension) {\n    $extension_upper\
    \ = strtoupper($extension);\n    $extension_lower = strtolower($extension);\n\
    \    $extension_strength = strlen($extension_upper) - strlen($extension_lower);\n\
    \    $extensions_strength[$extension_strength] = $extension;\n}\n$max_strength\
    \ = max($extensions_strength);\n$max_strength_extension = array_search($max_strength,\
    \ $extensions_strength);\necho $class_name . \".\" . $extensions_strength[$max_strength_extension];",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = floor(($extension_length - $extension_count) /\
    \ 2);\n        $extensions_strength[$extension_strength] = $extension;\n    }\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = ", "  $strength = -1;\n  $extensions_count = count($extensions);\n\
    \  foreach ($extensions as $extension) {\n    $extension_length = strlen($extension);\n\
    \    $class_length = strlen($class_name);\n    $extension_strength = strlen($extension)\
    \ - $class_length;\n    if ($extension_strength > $strength) {\n      $strength\
    \ = $extension_strength;\n    }\n  }\n  return $class_name . '.' . array_shift($extensions);\n\
    }\n", "    $strength = -1;\n    foreach ($extensions as $extension) {\n      \
    \  $extension_length = strlen($extension);\n        $class_length = strlen($class_name);\n\
    \        $strength += ($extension_length - $class_length) / $extension_length;\n\
    \    }\n    return $class_name . \".\" . array_shift($extensions) . \".\" . $strength;\n\
    }\n", "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_upper = strtoupper($extension);\n\
    \        $extension_lower = strtolower($extension);\n        $extension_strength\
    \ = count($extension_upper) - count($extension_lower);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extension_strength = count($extension) - strlen($extension_upper) -\
    \ strlen($extension_lower);\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    arsort($extensions_strength);\n    $strongest_extension\
    \ = array_shift($extensions_strength);\n    $strongest_extension_strength = array_shift($extensions_strength);\n\
    \    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength,\
    \ $extensions_strength);\n    $strongest_extension_strength = array_search($strongest_extension_strength",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_upper = strtoupper($extension);\n\
    \        $extension_lower = strtolower($extension);\n        $extension_upper\
    \ = substr($extension_upper, 0, 1);\n        $extension_lower = substr($extension_lower,\
    \ 0, 1);\n        $extension_strength = strlen($extension_upper) - strlen($extension_lower);\n\
    \        $extensions_strength[$extension_strength] = $extension;\n    }\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_values($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength", "    $strongest_extension = null;\n    foreach ($extensions\
    \ as $extension) {\n        $extension_length = strlen($extension);\n        $class_length\
    \ = strlen($class_name);\n        $strength = intval($class_length / $extension_length);\n\
    \        if ($strength > 0) {\n            if ($strongest_extension == null) {\n\
    \                $strongest_extension = $extension;\n            } elseif ($strength\
    \ < $strongest_extension) {\n                $strongest_extension = $extension;\n\
    \            }\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n", "  $extensions_count = count($extensions);\n  $extensions_count = max($extensions_count);\n\
    \  $extensions_count = min($extensions_count);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$i]\
    \ = strtoupper($extensions[$i]) - strtolower($extensions[$i]);\n  }\n  $extensions_strength\
    \ = array_count_values($extensions_strength);\n  $extensions_strength = array_filter($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift(", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_", "    $class_name = strtolower($class_name);\n    $extensions\
    \ = array_map('strtolower', $extensions);\n    $extensions = array_filter($extensions);\n\
    \    $extensions = array_count_values($extensions);\n    $extensions = array_filter($extensions,\
    \ function($value) {\n        return $value > 1;\n    });\n    $extensions = array_keys($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_", "   \
    \ $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $char = strtoupper($extension[$i]);\n            $char_strength\
    \ = strlen($char);\n            if ($char_strength > $extension_strength) {\n\
    \                $extension_strength = $char_strength;\n            }\n      \
    \  }\n        $extensions_strength[$extension_strength] = $extension;\n    }\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_", "    $strength = -1;\n    foreach ($extensions as $extension) {\n\
    \        $extension_length = strlen($extension);\n        $class_length = strlen($class_name);\n\
    \        $strength += ($extension_length - $class_length) / $extension_length;\n\
    \    }\n    return $class_name . substr($class_name, 0, $strength);\n}\n", " \
    \   $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_letter = strtoupper($extension[$i]);\n     \
    \       $extension_letter_count = str_count($extension_letter);\n            $extension_letter_count\
    \ = max($extension_letter_count);\n            $extension_letter_count = min($extension_letter_count);\n\
    \            $extension_letter_strength = $extension_letter_count - $extension_letter_count\
    \ * $i;\n            if ($extension_letter_strength > $extension_strength) {\n\
    \                $extension_strength = $extension_letter_strength;\n         \
    \   }\n        }\n        $extensions_strength[$extension] = $extension_strength;\n\
    \    }\n    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extension", "    $strongest = -1;\n\
    \    $extensions_count = count($extensions);\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = substr_count($extension, strtoupper($class_name));\n        if ($extension_strength\
    \ > $strongest) {\n            $strongest = $extension_strength;\n        }\n\
    \    }\n    if ($strongest == -1) {\n        return $class_name;\n    }\n    $strongest_extension\
    \ = array();\n    for ($i = 0; $i < $extensions_count; $i++) {\n        $extension\
    \ = $extensions[$i];\n        $extension_length = strlen($extension);\n      \
    \  $extension_strength = substr_count($extension, strtoupper($class_name));\n\
    \        if ($extension_strength == $strongest) {\n            $strongest_extension[]\
    \ = $extension;\n        }\n    }\n    if (count($strongest_extension) > 0) {\n\
    \        return $class_name . '.' . array_shift($strongest_extension);\n    }\n\
    \    return $class_name;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,algorithm\
    \ |>\n<code>", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    $extensions_strength_max = -1;\n   \
    \ foreach ($extensions as $extension) {\n        $extension_upper = strtoupper($extension);\n\
    \        $extension_lower = strtolower($extension);\n        $extension_upper\
    \ = preg_replace('/[^A-Z]/', '', $extension_upper);\n        $extension_lower\
    \ = preg_replace('/[^a-z]/', '', $extension_lower);\n        $extension_strength\
    \ = strlen($extension_upper) - strlen($extension_lower);\n        $extensions_strength[$extension]\
    \ = $extension_strength;\n        if ($extension_strength > $extensions_strength_max)\
    \ {\n            $extensions_strength_max = $extension_strength;\n        }\n\
    \    }\n    $extensions_strength_max = max($extensions_strength_max);\n    $extensions_strength_min\
    \ = min($extensions_strength);\n    $extensions_strength_sum = array_sum($extensions_strength);\n\
    \    $extensions_strength_average = $extensions_strength_sum / $extensions_count;\n\
    \    $extensions_strength_average = max($extensions_strength_average);\n    $extensions_strength_average\
    \ = min(abs($extensions_strength_average), $extensions_strength_max);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = round($extensions_strength_average,\
    \ 2);\n    $extensions_strength_average = abs($extensions_strength_average);\n\
    \    $extensions_strength_average = abs($extensions_strength_average);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = abs($extensions_strength_average);\n\
    \    $extensions_strength_average = abs($extensions_strength_average);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = abs($extensions_strength_average);\n\
    \    $extensions_strength_average = abs($extensions_strength_average);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = abs($extensions_strength_average);\n\
    \    $extensions_strength_average = abs($extensions_strength_average);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = abs($extensions_strength",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $letter = strtoupper($extension[$i]);\n            $letter\
    \ = strtolower($letter);\n            $letter = strtoupper($letter);\n       \
    \     $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strto", " \
    \   $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = preg_replace('/[^A-Z]/', '', $extensions[$i]);\n    }\n    $extensions_strength\
    \ = array_count_values($extensions_strength);\n    $extensions_strength = array_filter($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extension", "    $extensions_count = count($extensions);\n  \
    \  $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extension_strength = array_search($extension_upper, $extensions_strength);\n\
    \        if ($extension_strength === false) {\n            $extensions_strength[$extension_upper]\
    \ = $extension_lower;\n        } else {\n            $extensions_strength[$extension_upper]\
    \ = $extension_strength;\n        }\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_search($class_name, $extensions_strength);\n\
    \    if ($extensions_strength !== false) {\n        $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    }\n    if ($extensions_strength === false) {\n \
    \       return $class_name;\n    }\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    $"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

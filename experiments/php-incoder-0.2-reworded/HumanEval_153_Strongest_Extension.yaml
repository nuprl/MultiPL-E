name: HumanEval_153_Strongest_Extension
language: php
prompt: "<?php\n// You will be given the name of a class (a string) and an array of\
  \ extensions.\n// The extensions are to be used to load additional classes to the\
  \ class. The\n// strength of the extension is as follows: Let CAP be the number\
  \ of the uppercase\n// letters in the extension's name, and let SM be the number\
  \ of lowercase letters \n// in the extension's name, the strength is given by the\
  \ fraction CAP - SM. \n// You should find the strongest extension and return a string\
  \ in this \n// format: ClassName.StrongestExtensionName.\n// If there are two or\
  \ more extensions with the same strength, you should\n// choose the one that comes\
  \ first in the array.\n// For example, if you are given \"Slices\" as the class\
  \ and an array of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then\
  \ you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest\
  \ extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
  my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
  \ $extensions) {\n"
tests: "function candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\"\
  , \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\"\
  , \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\", \"\
  zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"Ta\", \"TAR\"\
  , \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\"\
  )) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !==\
  \ \"YameRore.okIWILL123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  finNNalLLly\", array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"\
  Bb\", \"91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(\"Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new\
  \ Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $extension_strength = -1;\n        for ($i =\
    \ 0; $i < $extension_length; $i++) {\n            $extension_letter = substr($extension,\
    \ $i, 1);\n            $extension_letter_upper = strtoupper($extension_letter);\n\
    \            $extension_letter_lower = strtolower($extension_letter);\n      \
    \      $extension_letter_count = substr_count($class_name, $extension_letter_upper)\
    \ - substr_count($class_name, $extension_letter_lower);\n            $extension_strength\
    \ += $extension_letter_count;\n        }\n        $extensions_strength[$extension]\
    \ = $extension_strength;\n    }\n    ksort($extensions_strength);\n    $extensions_strength\
    \ = array_reverse($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, $extensions_count);\n    $extensions_strength = array_map(function($extension)\
    \ {\n        return substr($extension, 0, strlen($class_name) + 1);\n    }, $extensions_strength);\n\
    \    $extensions_strength = array_combine($extensions_strength, $extensions);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_search($extensions_strength, $extensions_strength);\n    if ($extensions_strength\
    \ === false) {\n        return $class_name;\n    }\n    $extensions_strength =\
    \ array_values($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, $extensions_count);\n    $extensions_strength = array_map(function($extension)\
    \ {\n        return substr($extension, 0, strlen($class_name) + 1);\n    }, $extensions_strength);\n\
    \    $extensions_strength = array_combine($extensions_strength, $extensions);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_search($extensions_strength, $extensions_strength);\n    if ($extensions_strength\
    \ === false) {\n        return $class_name;\n    }\n    $extensions_strength =\
    \ array_values($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, $extensions_count);\n    $extensions_strength = array_map(function($extension)\
    \ {\n        return substr($extension, 0, strlen($class_name) + 1);\n    }, $extensions_strength);\n\
    \    $extensions_strength = array_combine($extensions_strength, $extensions);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_search($extensions_strength, $extensions_strength);", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_length = strlen($extension);\n    $extension_strength\
    \ = -1;\n    for ($i = 0; $i < $extension_length; $i++) {\n      $char = strtoupper($extension[$i]);\n\
    \      $char_strength = strlen($char);\n      $extension_strength += $char_strength;\n\
    \    }\n    $extensions_strength[$extension] = $extension_strength;\n  }\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_values($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extension", "    $strengths = array();\n\
    \    foreach ($extensions as $extension) {\n        $name = strtolower($extension);\n\
    \        $strengths[$name] = substr_count($name, $class_name) / strlen($name);\n\
    \    }\n    arsort($strengths);\n    return $class_name . \".\" . key($strengths);\n\
    }\n</code>\n<|/ a tags=php,string,arrays,sorting |>\n<| c |>\nI like your answer\
    \ but I'm having trouble understanding how it works. Could you please explain\
    \ how it works?\n<|/ c |>\n<| c |>\nI added some comments to my answer.\n<|/ c\
    \ |>\n<| c |>\nThanks for your answer. I'm still having trouble understanding\
    \ how it works. Could you please explain how it works?\n<|/ c |>\n<| c |>\nI added\
    \ some comments to my answer.\n<|/ c |>\n<| c |>\nThanks for your answer. I'm\
    \ still having trouble understanding how it works. Could you please explain how\
    \ it works?\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(\"AA\", \"Be\"\
    , \"CC\");\n$array = array_count_values($array);\narsort($array);\n$array = array_keys($array);\n\
    $array = implode('.', $array);\n</code>\n<|/ a tags=php,string,arrays,sorting\
    \ |>\n<| c |>\nThanks for your answer. I'm still having trouble understanding\
    \ how it works. Could you please explain how it works?\n<|/ c |>\n<| c |>\nI added\
    \ some comments to my answer.\n<|/ c |>\n<| a tags=php,string,arrays,sorting |>\n\
    <code>\n$array = array(\"AA\", \"Be\", \"CC\");\n$array = array_count_values($array);\n\
    arsort($array);\n$array = array_keys($array);\n$array = implode('.', $array);\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I'm still having\
    \ trouble understanding how it works. Could you please explain how it works?\n\
    <|/ c |>\n<| c |>\nI added some comments to my answer.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\"AA\", \"Be\", \"CC\");\n$array = array_count_values($array);\n\
    arsort($array);\n$array = array_keys($array);\n$array = ", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_upper = strtoupper($extension);\n     \
    \   $extension_lower = strtolower($extension);\n        $extensions_strength[$extension_upper]\
    \ = $extension_lower;\n        $extensions_strength[$extension_lower] = $extension_upper;\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    arsort($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_values($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength", "    $strongest_extension\
    \ = null;\n    $strongest_extension_strength = -1;\n    foreach ($extensions as\
    \ $extension) {\n        $extension_strength = strlen($extension) - strlen(strtoupper($extension));\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThanks for your answer. Your code\
    \ works perfectly but i can't understand why it works. Can you please explain\
    \ it to me?\n<|/ c |>\n<| c |>\nI added some comments to my answer. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Your code works perfectly but i can't\
    \ understand why it works. Can you please explain it to me?\n<|/ c |>\n<| c |>\n\
    I added some comments to my answer. Hope it helps.\n<|/ c |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php\n$string = \"Hello World\";\n$string = str_replace(\"Hello\"\
    , \"\", $string);\n$string = str_replace(\"World\", \"\", $string);\necho $string;",
  "    $class_name = strtolower($class_name);\n    $extensions = array_map('strtolower',\
    \ $extensions);\n    $extensions = array_filter($extensions, function($extension)\
    \ {\n        return preg_match('/^[A-Z]/', $extension);\n    });\n    $extensions\
    \ = array_filter($extensions, function($extension) {\n        return preg_match('/^[a-z]/',\
    \ $extension);\n    });\n    $extensions = array_count_values($extensions);\n\
    \    $extensions = array_filter($extensions, function($extension) {\n        return\
    \ $extension > 1;\n    });\n    $extensions = array_keys($extensions);\n    $extensions\
    \ = array_shift($extensions);\n    $extensions = array_shift($extensions);\n \
    \   $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extensions = array_shift($extensions);\n    $extensions = array_shift($extensions);\n\
    \    $extension", "  $extensions_count = count($extensions);\n  $extensions_count\
    \ = max($extensions_count);\n  $extensions_count = min($extensions_count);\n \
    \ $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = substr_count(strtoupper($class_name), strtoupper($extensions[$i]));\n\
    \  }\n  $extensions_strength = array_count_values($extensions_strength);\n  $extensions_strength\
    \ = array_filter($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift(", "    $strongest_extension = null;\n \
    \   foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $class_length = strlen($class_name);\n        $strength = $extension_length\
    \ - $class_length;\n        if ($strength > 0) {\n            if ($strongest_extension\
    \ == null || $strength < $strongest_extension->strength) {\n                $strongest_extension\
    \ = new Extension($extension, $strength);\n            }\n        }\n    }\n \
    \   return $strongest_extension->extension;\n}\n", "    $strongest = -1;\n   \
    \ foreach ($extensions as $extension) {\n        $extension_strength = strlen($extension)\
    \ - strlen(strtoupper($extension));\n        if ($extension_strength > $strongest)\
    \ {\n            $strongest = $extension_strength;\n        }\n    }\n    return\
    \ $class_name . '.' . array_shift($extensions);\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't seem to work when there are multiple extensions with\
    \ the same strength.\n<|/ c |>\n<| c |>\nI added an example to my answer. Does\
    \ that help?\n<|/ c |>\n<| c |>\nI added an example to my answer. Does that help?\n\
    <|/ c |>\n<| c |>\nI added an example to my answer. Does that help?\n<|/ c |>\n\
    <| c |>\nI added an example to my answer. Does that help?\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n$extensions = array(\"AA\", \"Be\", \"CC\");\n$class_name = \"my_class\"\
    ;\n\n$strongest = -1;\nforeach ($extensions as $extension) {\n    $extension_strength\
    \ = strlen($extension) - strlen(strtoupper($extension));\n    if ($extension_strength\
    \ > $strongest) {\n        $strongest = $extension_strength;\n    }\n}\n\n$class_name\
    \ .= '.' . array_shift($extensions);\n</code>\n<|/ a tags=php,string |>\n<| a\
    \ dscore=2 |>\n<code>\n$extensions = array(\"AA\", \"Be\", \"CC\");\n$class_name\
    \ = \"my_class\";\n\n$strongest = -1;\nforeach ($extensions as $extension) {\n\
    \    $extension_strength = strlen($extension) - strlen(strtoupper($extension));\n\
    \    if ($extension_strength > $strongest) {\n        $strongest = $extension_strength;\n\
    \    }\n}\n\n$class_name .= '.' . array_shift($extensions);\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a dscore=1 |>\n<code>\n$extensions = array(\"AA\", \"Be\", \"CC\");\n\
    $class_name = \"my_class\";\n\n$strongest = -1;\nforeach ($extensions as $extension)\
    \ {\n    $extension_strength = strlen($extension) - strlen(strtoupper($extension));\n\
    \    if ($extension_strength > $strongest) {\n        $strongest = $extension_strength;\n",
  "    $strengths = array();\n    foreach ($extensions as $extension) {\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = array_count_values($extensions)[$i];\n    }\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_search(-1, $extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_fli",
  "    $class_name = strtolower($class_name);\n    $extensions = array_map('strtolower',\
    \ $extensions);\n    $extensions = array_filter($extensions, function($ext) {\n\
    \        return strlen($ext) > 0;\n    });\n    $extensions = array_count_values($extensions);\n\
    \    $extensions = array_filter($extensions, function($ext, $count) {\n      \
    \  return $count > 1;\n    });\n    $extensions = array_keys($extensions);\n \
    \   $extensions = array_shift($extensions);\n    $strength = 0;\n    foreach ($extensions\
    \ as $ext) {\n        $strength += $ext;\n    }\n    $strength = round($strength\
    \ / count($extensions), 2);\n    return $class_name . '.' . $extensions[0] . '.'\
    \ . $strength;\n}\n</code>\n<|/ a tags=php,algorithm,string |>\n<| c |>\nThis\
    \ doesn't seem to work. `Strongest_Extension(\"my_class\", array(\"AA\", \"Be\"\
    , \"CC\"))` returns `my_class.CC` instead of `my_class.Be`.\n<|/ c |>\n<| c |>\n\
    I tested it and it works. I used PHP 5.3.10\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works. I used PHP 5.3.10\n<|/ c |>\n<| c |>\nI tested it and it works. I\
    \ used PHP 5.3.10\n<|/ c |>\n<| c |>\nI tested it and it works. I used PHP 5.3.10\n\
    <|/ c |>\n<| a dscore=1 |>\nI believe this should work:\n<code>", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_upper = strtoupper($extension);\n    $extension_lower\
    \ = strtolower($extension);\n    $extension_strength = count(array_filter(\n \
    \     str_split($extension_upper),\n      function($char) {\n        return $char\
    \ == $extension_lower;\n      }\n    ));\n    $extensions_strength[$extension_strength][]\
    \ = $extension;\n  }\n  arsort($extensions_strength);\n  $extensions_strength\
    \ = array_keys($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_", "    $extensions_count = count($extensions);\n  \
    \  $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $strength = -1;\n    foreach ($extensions as $extension) {\n        $extension\
    \ = strtolower($extension);\n        $extension = preg_replace('/[^A-Z]/', '',\
    \ $extension);\n        $extension = preg_replace('/[^a-z]/', '', $extension);\n\
    \        $extension = preg_replace('/[^0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);", "  $extensions_count = count($extensions);\n\
    \  $extensions_count = max($extensions_count);\n  $extensions_count = min($extensions_count);\n\
    \  $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = substr_count($class_name, $extensions[$i]);\n\
    \  }\n  $extensions_strength = array_count_values($extensions_strength);\n  $extensions_strength\
    \ = array_filter($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_", "    $class_name = strtolower($class_name);\n\
    \    $extensions = array_map('strtolower', $extensions);\n    $extensions = array_unique($extensions);\n\
    \    $extensions = array_filter($extensions);\n    $extensions = array_count_values($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_intersect($extensions,\
    \ array(''));\n    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);\n\
    \    $extensions = array_flip($extensions);\n    $extensions = array_flip($extensions);",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_letter = strtoupper($extension[$i]);\n     \
    \       $extension_letter_count = str_count($extension_letter);\n            $extension_letter_strength\
    \ = $extension_letter_count - $i;\n            if ($extension_letter_strength\
    \ > $extension_strength) {\n                $extension_strength = $extension_letter_strength;\n\
    \            }\n        }\n        $extensions_strength[$extension] = $extension_strength;\n\
    \    }\n    arsort($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_values($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extension",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = substr_count($extensions[$i], 'A') - substr_count($extensions[$i], 'a');\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_search(-1, $extensions_strength);\n    $extensions_strength\
    \ = array_search(0, $extensions_strength);\n    $extensions_strength = array_search(1,\
    \ $extensions_strength);\n    $extensions_strength = array_search(2, $extensions_strength);\n\
    \    $extensions_strength = array_search(3, $extensions_strength);\n    $extensions_strength\
    \ = array_search(4, $extensions_strength);\n    $extensions_strength = array_search(5,\
    \ $extensions_strength);\n    $extensions_strength = array_search(6, $extensions_strength);\n\
    \    $extensions_strength = array_search(7, $extensions_strength);\n    $extensions_strength\
    \ = array_search(8, $extensions_strength);\n    $extensions_strength = array_search(9,\
    \ $extensions_strength);\n    $extensions_strength = array_search(10, $extensions_strength);\n\
    \    $extensions_strength = array_search(11, $extensions_strength);\n    $extensions_strength\
    \ = array_search(12, $extensions_strength);\n    $extensions_strength = array_search(13,\
    \ $extensions_strength);\n    $extensions_strength = array_search(14, $extensions_strength);\n\
    \    $extensions_strength = array_search(15, $extensions_strength);\n    $extensions_strength\
    \ = array_search(16, $extensions_strength);\n    $extensions_strength = array_search(17,\
    \ $extensions_strength);\n    $extensions_strength = array_search(18, $extensions_strength);\n\
    \    $extensions_strength = array_search(19, $extensions_strength);\n    $extensions_strength\
    \ = array_search(20, $extensions_strength);\n    $extensions_strength = array_search(21,\
    \ $extensions_strength);\n    $extensions_strength = array_search(22, $extensions_strength);\n\
    \    $extensions_strength = array_search(23, $extensions_strength);\n    $extensions_strength\
    \ = array_search(24, $extensions_strength);\n    $extensions_strength = array_search(25,\
    \ $extensions_strength);\n    $extensions_strength = array_search(26, $extensions_strength);\n\
    \    $extensions_strength"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

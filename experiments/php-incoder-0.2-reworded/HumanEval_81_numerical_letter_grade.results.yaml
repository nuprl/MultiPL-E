language: php
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0o0wd96y.php on line 48

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow7qhdvt.php:36\n\
    Stack trace:\n#0 /tmp/tmpow7qhdvt.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpow7qhdvt.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp18u3uzy.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('chr', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpur88czvi.php:37\n\
    Stack trace:\n#0 /tmp/tmpur88czvi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpur88czvi.php\
    \ on line 37\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpba55j9yv.php on line 69

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp18u3uzy.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map('chr', $grades);\n  return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxylzxh_.php:36\n\
    Stack trace:\n#0 /tmp/tmphxylzxh_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphxylzxh_.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x';\"), $grades);\n    $grades = \nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpf0t_816a.php on line 48

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqetliosq.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', '$v / 4.0'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', '$v > 3.7 ? \\'A+\\\
    ' : \\'A\\''), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ '$v > 3.3 ? \\'A-\\' : \\'A\\''), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', '$v > 3.0 ? \\'B+\\' : \\'B\\''), $grades);\n    $grades\
    \ = array_map('array_map', create_function('$v', '$v > 2.7 ? \\'B\\' : \\'B\\\
    ''), $grades);\n    $grades = array_map('array_map', create_function('$v', '$v\
    \ > 2.3 ? \\'B-\\' : \\'B\\''), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', '$v > 2.0 ? \\'C+\\' : \\'C\\''), $grades);\n    $grades\
    \ = array_map('array_map', create_function('$v', '$v > 1.7 ? \\'C\\' : \\'C\\\
    ''), $grades);\n    $grades = array_map('array_map', create_function('$v', '$v\
    \ > 1.3 ? \\'C-\\' : \\'C\\''), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', '$v > 1.0 ? \\'D+\\' : \\'D\\''), $grades);\n    $grades\
    \ = array_map('array_map', create_function('$v', '$v > 0.7 ? \\'D\\' : \\'D\\\
    ''), $grades);\n    $grades = array_map('array_map', create_function('$v', '$v\
    \ > 0.0 ? \\'D-\\' : \\'D\\''), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', '$v == 0 ? \\'E\\' : \\'F\\''), $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmp9uhv9fww.php
    on line 27


    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmp9uhv9fww.php
    on line 27


    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmp9uhv9fww.php
    on line 27


    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmp9uhv9fww.php
    on line 27


    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmp9uhv9fww.php
    on line 27


    Parse error: syntax error in /tmp/tmp9uhv9fww.php(28) : runtime-created function
    on line 1

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'grade_to_letter', $grades);\n    return $grades;\n}\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmpwczzusqv.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpwczzusqv.php on line 26\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmpwczzusqv.php on line\
    \ 26\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmpwczzusqv.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpwczzusqv.php on line 26\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpwczzusqv.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpwczzusqv.php on line 27\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpwczzusqv.php on line 27\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpwczzusqv.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpwczzusqv.php on line 27\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpwczzusqv.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpwczzusqv.php on line\
    \ 28\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpwczzusqv.php on line 28\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpwczzusqv.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpwczzusqv.php on line\
    \ 28\n\nWarning: array_map(): Expected parameter 2 to be an array, string given\
    \ in /tmp/tmpwczzusqv.php on line 29\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwczzusqv.php:38\nStack trace:\n#0 /tmp/tmpwczzusqv.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwczzusqv.php on line 38\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$grade', 'return\
    \ $grade >= 4.0 ? \"A+\" : $grade >= 3.7 ? \"A\" : $grade >= 3.3 ? \"A-\" : $grade\
    \ >= 3.0 ? \"B+\" : $grade >= 2.7 ? \"B\" : $grade >= 2.3 ? \"B-\" : $grade >=\
    \ 2.0 ? \"C+\" : $grade >= 1.7 ? \"C\" : $grade >= 1.3 ? \"C-\" : $grade >= 1.0\
    \ ? \"D+\" : $grade >= 0.7 ? \"D\" : $grade >= 0.0 ? \"D-\" : \"E';\"), $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpoo6ivnza.php on line 29

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_sort', $grades);\n\
    \    $grades = array_map('array_reverse', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', create_function('$a','return $a[0];'), $grades);\n  \
    \  $grades = array_map('array_map', create_function('$a','return $a[1];'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a[2];'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a[3];'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a[4];'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a[5];'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a[6];'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a[7];'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a[8];'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a[9];'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a[10];'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a[11];'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a[12];'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a[13];'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a[14];'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a[15];'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a[16];'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a[17];'), $grades);\n    $grades = array_map('array_\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2sq8epb2.php on line 49

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 4.0 ? \"A+\" : $grade >= 3.7 ? \"A\" : $grade >=\
    \ 3.3 ? \"A-\" : $grade >= 3.0 ? \"B+\" : $grade >= 2.7 ? \"B\" : $grade >= 2.3\
    \ ? \"B-\" : $grade >= 2.0 ? \"C+\" : $grade >= 1.7 ? \"C\" : $grade >= 1.3 ?\
    \ \"C-\" : $grade >= 1.0 ? \"D+\" : $grade >= 0.7 ? \"D\" : $grade >= 0.0 ? \"\
    D-\" : \"E\";\n    }, $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8beig1x.php:37\n\
    Stack trace:\n#0 /tmp/tmpi8beig1x.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpi8beig1x.php\
    \ on line 37\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map('chr', $grades);\n  return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxylzxh_.php:36\n\
    Stack trace:\n#0 /tmp/tmphxylzxh_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphxylzxh_.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpd63i4v0c.php on line 67

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a<0?\\'E\\':$a<3?\\'D-\\':$a<7?\\'D\\':$a<10?\\\
    'C-\\':$a<14?\\'C\\':$a<17?\\'B-\\':$a<20?\\'B\\':$a<23?\\'A-\\':$a<26?\\'A\\\
    ':$a<29?\\'A+\\':\\'A\\';'), $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, string given in\
    \ /tmp/tmpct2tyth0.php on line 29\n\nWarning: array_sum() expects parameter 1\
    \ to be array, string given in /tmp/tmpct2tyth0.php on line 29\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, string given in /tmp/tmpct2tyth0.php on line\
    \ 29\n\nWarning: array_sum() expects parameter 1 to be array, string given in\
    \ /tmp/tmpct2tyth0.php on line 29\n\nWarning: array_sum() expects parameter 1\
    \ to be array, string given in /tmp/tmpct2tyth0.php on line 29\n\nWarning: array_map():\
    \ Expected parameter 2 to be an array, string given in /tmp/tmpct2tyth0.php on\
    \ line 30\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct2tyth0.php:39\n\
    Stack trace:\n#0 /tmp/tmpct2tyth0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpct2tyth0.php\
    \ on line 39\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_keys', $grades);\n    $grades = array_map('array_values',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_fill_keys',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_key_exists', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_keys', $grades);\n    $grades = array_map('array_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_keys', $grades);\n    $grades = array_map('array_values',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_keys', $grades);\n    $grades = array_map('array_values',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_sum', $grades);\n    $\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplfyvrt99.php on line 67

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a<0?\\'D\\':$a<1?\\'C\\':$a<2?\\'B-\\':$a<3?\\'B-\\':$a<4?\\'B-\\':$a<5?\\\
    'B-\\':$a<6?\\'B-\\':$a<7?\\'B-\\':$a<8?\\'B-\\':$a<9?\\'B-\\':$a<10?\\'B-\\':$a<11?\\\
    'B-\\':$a<12?\\'B-\\':$a<13?\\'B-\\':$a<14?\\'B-\\':$a<15?\\'B-\\':$a<16?\\'B-\\\
    ':$a<17?\\'B-\\':$a<18?\\'B-\\':$a<19?\\'B-\\':$a<20?\\'B-\\':$a<21?\\'B-\\':$a<22?\\\
    'B-\\':$a<23?\\'B-\\':$a<24?\\'B-\\':$a<25?\\'B-\\':$a<26?\\'B-\\':$a<27?\\'B-\\\
    ':$a<28?\\'B-\\':$a<29?\\'B-\\':$a<30?\\'B-\\':$a<31?\\'B-\\':$a<32?\\'B-\\':$a<33?\\\
    'B-\\':$a<34?\\'B-\\':$a<35?\\'B-\\':$a<36?\\'B-\\':$a<37?\\'B-\\':$a<38?\\'B-\\\
    ':$a<39?\\'B-\\':$a<40?\\'B-\\':$a<41?\\'B-\\':$a<42?\\'B-\\':$a<43?\\'B-\\':$a<44?\\\
    'B-\\':$a<45?\\'B-\\':$a<46?\\'B-\\':$a<47?\\'B-\\':$a<48?\\'B-\\':$a<49?\\'B-\\\
    ':$a<\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpykayjfmz.php on line 29

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_map',\
    \ 'str_split', $grades);\n    $grades = array_map('array_map', 'array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_unique', $grades);\n\
    \    $grades = array_map('array_map', 'array_merge', $grades);\n    $grades =\
    \ array_map('array_map', 'array_map', 'str_split', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_unique', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_merge', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_map', 'str_split', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_map', 'array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_map', 'array_unique', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_map', 'array_merge', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_map', 'array_map', 'str_split', $grades);\n    $grades =\
    \ array_map('array_map', 'array_map', 'array_map', 'array_map', 'array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_map', 'array_map', 'array_map',\
    \ 'array_map', 'array_unique', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_map', 'array_map', 'array_map', 'array_map', 'array_merge',\
    \ $grades);\n    $grades = array_map('array_map', 'array_map', 'array_map', 'array_map',\
    \ 'array_map', 'array_map', 'array_map', 'array_map', 'str_split', $grades);\n\
    \    $grades = array_map('array_map', 'array_map', 'array_map', 'array_map', 'array_map',\
    \ 'array_map', 'array_map', 'array_map', 'array_map', 'array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'array_map', 'array_map', 'array_map', 'array_map',\
    \ 'array_map', 'array_map', 'array_map', 'array_map', 'array_map', 'array_map',\
    \ 'array_map', 'array_unique', $grades);\n    $grades = array_map('array_map',\
    \ 'array_map', 'array_map', '\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkyj9w969.php on line 48

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow7qhdvt.php:36\n\
    Stack trace:\n#0 /tmp/tmpow7qhdvt.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpow7qhdvt.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk00pqw2b.php on line 67

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_map('array_sum', $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a<0?\\'D-\\':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\'C\\':$a<0?\\'B-\\':$a<0?\\\
    'B\\':$a<0?\\'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a<0?\\'D-\\':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\\
    'C\\':$a<0?\\'B-\\':$a<0?\\'B\\':$a<0?\\'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n\
    \  $grades = array_map('array_map', create_function('$a','return $a<0?\\'D-\\\
    ':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\'C\\':$a<0?\\'B-\\':$a<0?\\'B\\':$a<0?\\\
    'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a<0?\\'D-\\':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\\
    'C\\':$a<0?\\'B-\\':$a<0?\\'B\\':$a<0?\\'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n\
    \  $grades = array_map('array_map', create_function('$a','return $a<0?\\'D-\\\
    ':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\'C\\':$a<0?\\'B-\\':$a<0?\\'B\\':$a<0?\\\
    'A-\\':$a<0?\\'A\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpflj64fka.php on line 31

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpphiasrom.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('chr', $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dffjtjx.php:36\n\
    Stack trace:\n#0 /tmp/tmp_dffjtjx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_dffjtjx.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp18u3uzy.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplejf6712.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqetliosq.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjpewl2o3.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 0), $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 0), $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 0), $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptukt_jmx.php on line 55

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'grade_to_letter', $grades);\n    return $grades;\n}\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmpwczzusqv.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpwczzusqv.php on line 26\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmpwczzusqv.php on line\
    \ 26\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmpwczzusqv.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpwczzusqv.php on line 26\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpwczzusqv.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpwczzusqv.php on line 27\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpwczzusqv.php on line 27\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpwczzusqv.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpwczzusqv.php on line 27\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpwczzusqv.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpwczzusqv.php on line\
    \ 28\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpwczzusqv.php on line 28\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpwczzusqv.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpwczzusqv.php on line\
    \ 28\n\nWarning: array_map(): Expected parameter 2 to be an array, string given\
    \ in /tmp/tmpwczzusqv.php on line 29\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwczzusqv.php:38\nStack trace:\n#0 /tmp/tmpwczzusqv.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwczzusqv.php on line 38\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplejf6712.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_filter($grades);\n  $grades = array_map('round', $grades);\n\
    \  $grades = array_map('intval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  return array_map(function($grade) {\n    return $grades[$grade];\n  }, $grades);\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu7yqqpav.php:39\n\
    Stack trace:\n#0 /tmp/tmpu7yqqpav.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpu7yqqpav.php\
    \ on line 39\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp59x4g6i3.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a>0?\"A+\":$a<0?\"A-\":$a<3?\"B+\":$a<2?\"B\":$a<1?\"C+\":$a<0?\"C-\":$a<2?\"\
    D+\":$a<1?\"D\":$a<0?\"D-\":$a<1?\"E\":\"\";'), $grades);\n    return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpale38b_t.php\
    \ on line 28\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmpale38b_t.php on line 28\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmpale38b_t.php on line 28\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmpale38b_t.php on line 28\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpale38b_t.php\
    \ on line 28\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpale38b_t.php on line 29\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpale38b_t.php:38\nStack trace:\n#0 /tmp/tmpale38b_t.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpale38b_t.php on line 38\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'grade_to_letter', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_to_letter', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_to_letter', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_to_letter', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_to_letter', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_to_letter', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_to_letter', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_to_letter', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqi242f1j.php on line 75

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyvp3ny28.php on line 93

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', array($this, 'letter_grade'),\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, int given in\
    \ /tmp/tmpl7uu4mnc.php on line 27\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, int given in /tmp/tmpl7uu4mnc.php on line 27\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, int given in /tmp/tmpl7uu4mnc.php on line 27\n\
    \nWarning: array_filter() expects parameter 1 to be array, int given in /tmp/tmpl7uu4mnc.php\
    \ on line 27\n\nWarning: array_filter() expects parameter 1 to be array, int given\
    \ in /tmp/tmpl7uu4mnc.php on line 27\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpl7uu4mnc.php on line 28\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpl7uu4mnc.php on line\
    \ 28\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpl7uu4mnc.php on line 28\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpl7uu4mnc.php on line 28\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpl7uu4mnc.php on line\
    \ 28\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpl7uu4mnc.php on line 29\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpl7uu4mnc.php on line 29\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpl7uu4mnc.php on line\
    \ 29\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpl7uu4mnc.php on line 29\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpl7uu4mnc.php on line 29\n\nFatal error:\
    \ Uncaught Error: Using $this when not in object context in /tmp/tmpl7uu4mnc.php:30\n\
    Stack trace:\n#0 /tmp/tmpl7uu4mnc.php(35): numerical_letter_grade(Array)\n#1 /tmp/tmpl7uu4mnc.php(39):\
    \ candidate(Array)\n#2 /tmp/tmpl7uu4mnc.php(47): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpl7uu4mnc.php on line 30\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplejf6712.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtolower', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_replace', array('+', '-', '*', '/'),\
    \ $grades);\n    $grades = array_map('str_replace', array('E', 'd', 'c', 'b',\
    \ 'a'), $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array('strtoupper', 'str_replace', array('E', 'd', 'c', 'b', 'a')), array_filter($grades));\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array('strtoupper', 'str_replace', array('E', 'd', 'c', 'b', 'a')), array_filter($grades));\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array('strtoupper', 'str_replace', array('E', 'd', 'c', 'b', 'a')), array_filter($grades));\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array('strtoupper', 'str_replace', array('E', 'd', 'c', 'b', 'a')), array_filter($grades));\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array('strtoupper', 'str_replace', array('E', 'd', 'c', 'b', 'a')), array_filter($grades));\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array('strtoupper', 'str_replace', array('E', 'd', 'c', 'b', 'a')), array_filter($grades));\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array('strtoupper', 'str_replace', array('E', 'd', 'c', 'b', 'a')), array_filter($grades));\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array('strtoupper', 'str_replace', array('E', 'd', 'c', 'b', 'a')), array_filter($grades));\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array('strtoupper', 'str_replace', array('E', 'd', 'c', 'b', 'a')), array_filter\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnirmb5vp.php on line 51

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqtch4h7z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_sort', $grades);\n  $grades = array_map('array_reverse',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb0ze5uhs.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect_key', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect_key',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect_key',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect_key',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect_key',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect_key',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect_key',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect_key',\
    \ $grades);\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbuaqqyoc.php on line 79

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a>0?\"A+\":$a<0?\"A-\":$a<7?\"B+\":$a<3?\"B-\":$a<2?\"C+\":$a<1?\"C\":$a<0?\"\
    D+\":$a<-1?\"D\":$a<-2?\"D-\":$a<-3?\"E\":\"\";'), $grades);\n    return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, float given in\
    \ /tmp/tmp4cipjqb1.php on line 26\n\nWarning: array_sum() expects parameter 1\
    \ to be array, float given in /tmp/tmp4cipjqb1.php on line 26\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, float given in /tmp/tmp4cipjqb1.php on line\
    \ 26\n\nWarning: array_sum() expects parameter 1 to be array, float given in /tmp/tmp4cipjqb1.php\
    \ on line 26\n\nWarning: array_sum() expects parameter 1 to be array, float given\
    \ in /tmp/tmp4cipjqb1.php on line 26\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmp4cipjqb1.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp4cipjqb1.php:36\nStack trace:\n\
    #0 /tmp/tmp4cipjqb1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4cipjqb1.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\"A+\":$x>1?\"A\":\"B+\":$x>2?\"B\":\"B-\":$x>3?\"C\":\"C-\":$x>4?\"D\"\
    :\"D-\":$x>5?\"E\":\"F\";'), $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpec2un12b.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpec2un12b.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpec2un12b.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpec2un12b.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpec2un12b.php
    on line 26


    Parse error: syntax error in /tmp/tmpec2un12b.php(27) : runtime-created function
    on line 1

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprj7m2job.php:37\n\
    Stack trace:\n#0 /tmp/tmprj7m2job.php(45): test()\n#1 {main}\n  thrown in /tmp/tmprj7m2job.php\
    \ on line 37\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('chr', $grades);\n    return $grades;\n}\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwj9qvbgp.php:38\n\
    Stack trace:\n#0 /tmp/tmpwj9qvbgp.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwj9qvbgp.php\
    \ on line 38\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpufzd54pp.php:39\n\
    Stack trace:\n#0 /tmp/tmpufzd54pp.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpufzd54pp.php\
    \ on line 39\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_diff', $grades,\
    \ array(0));\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5ldhp6au.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'grade_letter', $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, int given in\
    \ /tmp/tmpf5xy8kqg.php on line 27\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, int given in /tmp/tmpf5xy8kqg.php on line 27\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, int given in /tmp/tmpf5xy8kqg.php on line 27\n\
    \nWarning: array_filter() expects parameter 1 to be array, int given in /tmp/tmpf5xy8kqg.php\
    \ on line 27\n\nWarning: array_filter() expects parameter 1 to be array, int given\
    \ in /tmp/tmpf5xy8kqg.php on line 27\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpf5xy8kqg.php on line 28\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpf5xy8kqg.php on line\
    \ 28\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpf5xy8kqg.php on line 28\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpf5xy8kqg.php on line 28\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpf5xy8kqg.php on line\
    \ 28\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpf5xy8kqg.php on line 29\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpf5xy8kqg.php on line 29\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpf5xy8kqg.php on line\
    \ 29\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpf5xy8kqg.php on line 29\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpf5xy8kqg.php on line 29\n\nWarning: array_map():\
    \ Expected parameter 2 to be an array, string given in /tmp/tmpf5xy8kqg.php on\
    \ line 30\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5xy8kqg.php:39\n\
    Stack trace:\n#0 /tmp/tmpf5xy8kqg.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpf5xy8kqg.php\
    \ on line 39\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjxz0mfk.php:36\n\
    Stack trace:\n#0 /tmp/tmpmjxz0mfk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmjxz0mfk.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'grade_to_letter', $grades);\n    return $grades;\n}\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, string given\
    \ in /tmp/tmp7qy2pj2h.php on line 28\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, string given in /tmp/tmp7qy2pj2h.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, string given in /tmp/tmp7qy2pj2h.php on line\
    \ 28\n\nWarning: array_filter() expects parameter 1 to be array, string given\
    \ in /tmp/tmp7qy2pj2h.php on line 28\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, string given in /tmp/tmp7qy2pj2h.php on line 28\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmp7qy2pj2h.php on line\
    \ 29\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmp7qy2pj2h.php on line 29\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmp7qy2pj2h.php on line 29\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmp7qy2pj2h.php on line\
    \ 29\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmp7qy2pj2h.php on line 29\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmp7qy2pj2h.php on line 30\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmp7qy2pj2h.php on line\
    \ 30\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmp7qy2pj2h.php on line 30\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmp7qy2pj2h.php on line 30\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmp7qy2pj2h.php on line\
    \ 30\n\nWarning: array_map(): Expected parameter 2 to be an array, string given\
    \ in /tmp/tmp7qy2pj2h.php on line 31\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7qy2pj2h.php:40\nStack trace:\n#0 /tmp/tmp7qy2pj2h.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7qy2pj2h.php on line 40\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map('strval', $grades);\n  return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbn50n3e.php:36\n\
    Stack trace:\n#0 /tmp/tmptbn50n3e.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptbn50n3e.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnja4cpx0.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpszbss1oi.php:39\n\
    Stack trace:\n#0 /tmp/tmpszbss1oi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpszbss1oi.php\
    \ on line 39\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', array_map('floatval',\
    \ $grades)));\n    $grades = array_map('array_filter', $grades);\n    $grades\
    \ = array_map('array_map', 'grade_to_letter', $grades);\n    return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmp9d7gialb.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmp9d7gialb.php on line 26\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmp9d7gialb.php on line\
    \ 26\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmp9d7gialb.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmp9d7gialb.php on line 26\n\nWarning: array_map():\
    \ Expected parameter 2 to be an array, string given in /tmp/tmp9d7gialb.php on\
    \ line 27\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9d7gialb.php:36\n\
    Stack trace:\n#0 /tmp/tmp9d7gialb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9d7gialb.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_map('array_filter', $grades);\n  $grades = array_map('array_map', $grades);\n\
    \  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2mmlsdv6.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprhqihg5z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps9y0tqf2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpphiasrom.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_intersect', $grades);\n    $grades = array_map('array_\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5979p3l_.php on line 67

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbwq8mv_i.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow7qhdvt.php:36\n\
    Stack trace:\n#0 /tmp/tmpow7qhdvt.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpow7qhdvt.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjxz0mfk.php:36\n\
    Stack trace:\n#0 /tmp/tmpmjxz0mfk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmjxz0mfk.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 0), $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 0), $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 0), $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphp6g1d9i.php on line 55

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2g9cou4.php:40\n\
    Stack trace:\n#0 /tmp/tmpi2g9cou4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpi2g9cou4.php\
    \ on line 40\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpba55j9yv.php on line 69

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheklcwoo.php:38\n\
    Stack trace:\n#0 /tmp/tmpheklcwoo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpheklcwoo.php\
    \ on line 38\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'-\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq6iswy2b.php on line 42

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprj7m2job.php:37\n\
    Stack trace:\n#0 /tmp/tmprj7m2job.php(45): test()\n#1 {main}\n  thrown in /tmp/tmprj7m2job.php\
    \ on line 37\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_key_exists', $grades);\n    $grades = array_map('array_keys',\
    \ $grades);\n    $grades = array_map('array_values', $grades);\n    $grades =\
    \ array_map('array_count_values', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_intersect', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_key_exists', $grades);\n    $grades\
    \ = array_map('array_keys', $grades);\n    $grades = array_map('array_values',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_reverse', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_key_exists', $grades);\n    $grades = array_map('array_keys',\
    \ $grades);\n    $grades = array_map('array_values', $grades);\n    $grades =\
    \ array_map('array_count_values', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6fcmtbkw.php on line 66

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace',\
    \ array('4', '3', '2', '1', '0'), $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: str_replace() expects at least 3 parameters, 2 given in /tmp/tmppz2eqlj5.php\
    \ on line 32\n\nWarning: str_replace() expects at least 3 parameters, 2 given\
    \ in /tmp/tmppz2eqlj5.php on line 32\n\nWarning: str_replace() expects at least\
    \ 3 parameters, 2 given in /tmp/tmppz2eqlj5.php on line 32\n\nWarning: str_replace()\
    \ expects at least 3 parameters, 2 given in /tmp/tmppz2eqlj5.php on line 32\n\n\
    Warning: str_replace() expects at least 3 parameters, 2 given in /tmp/tmppz2eqlj5.php\
    \ on line 32\n\nWarning: str_replace() expects at least 3 parameters, 2 given\
    \ in /tmp/tmppz2eqlj5.php on line 33\n\nWarning: str_replace() expects at least\
    \ 3 parameters, 2 given in /tmp/tmppz2eqlj5.php on line 33\n\nWarning: str_replace()\
    \ expects at least 3 parameters, 2 given in /tmp/tmppz2eqlj5.php on line 33\n\n\
    Warning: str_replace() expects at least 3 parameters, 2 given in /tmp/tmppz2eqlj5.php\
    \ on line 33\n\nWarning: str_replace() expects at least 3 parameters, 2 given\
    \ in /tmp/tmppz2eqlj5.php on line 33\n\nWarning: str_replace() expects at least\
    \ 3 parameters, 2 given in /tmp/tmppz2eqlj5.php on line 34\n\nWarning: str_replace()\
    \ expects at least 3 parameters, 2 given in /tmp/tmppz2eqlj5.php on line 34\n\n\
    Warning: str_replace() expects at least 3 parameters, 2 given in /tmp/tmppz2eqlj5.php\
    \ on line 34\n\nWarning: str_replace() expects at least 3 parameters, 2 given\
    \ in /tmp/tmppz2eqlj5.php on line 34\n\nWarning: str_replace() expects at least\
    \ 3 parameters, 2 given in /tmp/tmppz2eqlj5.php on line 34\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmppz2eqlj5.php:43\nStack trace:\n#0 /tmp/tmppz2eqlj5.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppz2eqlj5.php on line 43\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / max($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / min($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / array_sum($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / array_sum($v) / count($v);'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', 'return $v / array_sum($v)\
    \ / max($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / array_sum($v) / min($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / array_sum($v) / array_sum($v);'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', 'return $v / array_sum($v)\
    \ / array_sum($v) / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / array_sum($v) / array_sum($v) / max($v);'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v / array_sum($v) / array_sum($v) / min($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / array_sum($v) / array_sum($v) / array_sum($v);'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v / array_sum($v) / array_sum($v) / array_sum($v) / count($v);'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', 'return $v / array_sum($v)\
    \ / array_sum($v) / array_sum($v) / max($v);'), $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1twlvmv6.php on line 43

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3d4aqyjr.php on line 57

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\"A+\"\
    :$x>0?\"A\":\"B+\":$x>0?\"B\":\"B-\":$x>0?\"C\":\"C-\":$x>0?\"D\":\"D-\":$x>0?\"\
    E\":\"F\";'), $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpjp0xgodh.php
    on line 27


    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpjp0xgodh.php
    on line 27


    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpjp0xgodh.php
    on line 27


    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpjp0xgodh.php
    on line 27


    Warning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpjp0xgodh.php
    on line 27


    Parse error: syntax error in /tmp/tmpjp0xgodh.php(28) : runtime-created function
    on line 1

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbwq8mv_i.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', array_map('floatval',\
    \ $grades)));\n    $grades = array_filter($grades);\n    $grades = array_map('chr',\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvbmfyri.php:36\n\
    Stack trace:\n#0 /tmp/tmptvbmfyri.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptvbmfyri.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtolower', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_replace', array('+', '-', '*', '/'),\
    \ $grades);\n    $grades = array_map('str_replace', array('E', 'd', 'c', 'b',\
    \ 'a'), $grades);\n    $grades = array_map('str_replace', array('E', 'd', 'c',\
    \ 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E', 'd',\
    \ 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_map\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxyw47hhq.php on line 52

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_sort',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_sort',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_sort',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_sort',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0hht1wh1.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwuxi2vg0.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpujt5sol3.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwbtkggt2.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 'A+'), $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'A-'), $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 'B+'), $grades);\n    $grades = array_map('array_map', 'array_fill',\
    \ array_fill(0, count($grades), 'B'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'B-'), $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 'C+'), $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'C'), $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 'C-'), $grades);\n    $grades = array_map('array_map', 'array_fill',\
    \ array_fill(0, count($grades), 'D+'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'D'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'D-'), $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 'E'), $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpaz_ggb3o.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpaz_ggb3o.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpaz_ggb3o.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpaz_ggb3o.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpaz_ggb3o.php
    on line 26


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 27


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 27


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 27


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 27


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 27


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 28


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 28


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 28


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 28


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpaz_ggb3o.php
    on line 28


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpaz_ggb3o.php
    on line 29


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmpaz_ggb3o.php on line 30


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpaz_ggb3o.php
    on line 30


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmpaz_ggb3o.php on line 31


    Warning: array_map(): Expe'
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow7qhdvt.php:36\n\
    Stack trace:\n#0 /tmp/tmpow7qhdvt.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpow7qhdvt.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjxz0mfk.php:36\n\
    Stack trace:\n#0 /tmp/tmpmjxz0mfk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmjxz0mfk.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ array($this, 'letter_grade'), $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmpr7pnn533.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpr7pnn533.php on line 26\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmpr7pnn533.php on line\
    \ 26\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmpr7pnn533.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpr7pnn533.php on line 26\n\nFatal error:\
    \ Uncaught Error: Using $this when not in object context in /tmp/tmpr7pnn533.php:27\n\
    Stack trace:\n#0 /tmp/tmpr7pnn533.php(32): numerical_letter_grade(Array)\n#1 /tmp/tmpr7pnn533.php(36):\
    \ candidate(Array)\n#2 /tmp/tmpr7pnn533.php(44): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpr7pnn533.php on line 27\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3d4aqyjr.php on line 57

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjxz0mfk.php:36\n\
    Stack trace:\n#0 /tmp/tmpmjxz0mfk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmjxz0mfk.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('chr', $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dffjtjx.php:36\n\
    Stack trace:\n#0 /tmp/tmp_dffjtjx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_dffjtjx.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmc738829.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk0ofg00t.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheklcwoo.php:38\n\
    Stack trace:\n#0 /tmp/tmpheklcwoo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpheklcwoo.php\
    \ on line 38\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp18u3uzy.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp68cabtut.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades, '-');\n    $grades = array_map('strpos', $grades, '+');\n    $grades\
    \ = array_map('strpos', $grades, '.');\n    $grades = array_map('strpos', $grades,\
    \ ',');\n    $grades = array_map('strpos', $grades, '.');\n    $grades = array_map('strpos',\
    \ $grades, ',');\n    $grades = array_map('strpos', $grades, ',');\n    $grades\
    \ = array_map('strpos', $grades, ',');\n    $grades = array_map('strpos', $grades,\
    \ ',');\n    $grades = array_map('strpos', $grades, ',');\n    $grades = array_map('strpos',\
    \ $grades, ',');\n    $grades = array_map('strpos', $grades, ',');\n    $grades\
    \ = array_map('strpos', $grades, ',');\n    $grades = array_map('strpos', $grades,\
    \ ',');\n    $grades = array_map('strpos', $grades, ',');\n    $grades = array_map('strpos',\
    \ $grades, ',');\n    $grades = array_map('strpos', $grades, ',');\n    $grades\
    \ = array_map('strpos', $grades, ',');\n    $grades = array_map('strpos', $grades,\
    \ ',');\n    $grades = array_map('strpos', $grades, ',');\n    $grades = array_map('strpos',\
    \ $grades, ',');\n    $grades = array_map('strpos', $grades, ',');\n    $grades\
    \ = array_map('strpos', $grades, ',');\n    $grades = array_map('strpos', $grades,\
    \ ',');\n    $grades = array_map('strpos', $grades, ',');\n    $grades = array_map('strpos',\
    \ $grades, ',');\n    $grades = array_map('strpos', $grades, ',');\n    $grades\
    \ = array_map('strpos', $grades, ',');\n    $grades = array_map('strpos', $grades,\
    \ ',');\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_gta65l6.php on line 64

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptnlui1tp.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'grade_to_letter', $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, int given in\
    \ /tmp/tmpib4wfn03.php on line 27\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, int given in /tmp/tmpib4wfn03.php on line 27\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, int given in /tmp/tmpib4wfn03.php on line 27\n\
    \nWarning: array_filter() expects parameter 1 to be array, int given in /tmp/tmpib4wfn03.php\
    \ on line 27\n\nWarning: array_filter() expects parameter 1 to be array, int given\
    \ in /tmp/tmpib4wfn03.php on line 27\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpib4wfn03.php on line 28\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpib4wfn03.php on line\
    \ 28\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpib4wfn03.php on line 28\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpib4wfn03.php on line 28\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpib4wfn03.php on line\
    \ 28\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpib4wfn03.php on line 29\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpib4wfn03.php on line 29\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpib4wfn03.php on line\
    \ 29\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpib4wfn03.php on line 29\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpib4wfn03.php on line 29\n\nWarning: array_map():\
    \ Expected parameter 2 to be an array, string given in /tmp/tmpib4wfn03.php on\
    \ line 30\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpib4wfn03.php:39\n\
    Stack trace:\n#0 /tmp/tmpib4wfn03.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpib4wfn03.php\
    \ on line 39\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_filter($grades);\n  $grades = array_map('round', $grades);\n\
    \  $grades = array_map('intval', $grades);\n  $grades = array_map('array_sum',\
    \ $grades);\n  $grades = array_map('array_map', create_function('$a','return $a[0]\
    \ < 0.0 ? \"E\" : $a[0];'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a[0] > 1.0 ? \"D-\" : $a[0];'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a[0] > 0.7 ? \"D+\" : $a[0];'), $grades);\n  $grades\
    \ = array_map('array_map', create_function('$a','return $a[0] > 0.3 ? \"B-\" :\
    \ $a[0];'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a[0] > 0.1 ? \"B+\" : $a[0];'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a[0] > 0.0 ? \"B\" : $a[0];'), $grades);\n  $grades\
    \ = array_map('array_map', create_function('$a','return $a[0] > 0.7 ? \"C+\" :\
    \ $a[0];'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a[0] > 0.3 ? \"C\" : $a[0];'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a[0] > 0.1 ? \"C- \" : $a[0];'), $grades);\n \
    \ $grades = array_map('array_map', create_function('$a','return $a[0] > 0.0 ?\
    \ \"C\" : $a[0];'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a[0] > 0.7 ? \"A-\" : $a[0];'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a[0] > 0.3 ? \"A+\" : $a[0];'), $grades);\n  $grades\
    \ = array_map('array_map', create_function('$a','return $a[0] > 0.1 ? \"A\" :\
    \ $a[0];'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a[0] > 0.0 ? \"A\" : $a[0];'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a[0]\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1cem7slv.php on line 43

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    $grades\
    \ = array_unique($grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsir10w4c.php:37\n\
    Stack trace:\n#0 /tmp/tmpsir10w4c.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsir10w4c.php\
    \ on line 37\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplejf6712.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheklcwoo.php:38\n\
    Stack trace:\n#0 /tmp/tmpheklcwoo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpheklcwoo.php\
    \ on line 38\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpylduxr25.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ 'grade_letter', $grades);\n  return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmp0cpozyvv.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmp0cpozyvv.php on line 26\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmp0cpozyvv.php on line\
    \ 26\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmp0cpozyvv.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmp0cpozyvv.php on line 26\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmp0cpozyvv.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmp0cpozyvv.php on line 27\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmp0cpozyvv.php on line 27\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmp0cpozyvv.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmp0cpozyvv.php on line 27\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmp0cpozyvv.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmp0cpozyvv.php on line\
    \ 28\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmp0cpozyvv.php on line 28\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmp0cpozyvv.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmp0cpozyvv.php on line\
    \ 28\n\nWarning: array_map(): Expected parameter 2 to be an array, string given\
    \ in /tmp/tmp0cpozyvv.php on line 29\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0cpozyvv.php:38\nStack trace:\n#0 /tmp/tmp0cpozyvv.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0cpozyvv.php on line 38\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'S', 'T', 'N\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjm2q_qdu.php on line 51

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot13', $grades);\n    $grades = array_map('array_map', 'str_rot13', $grades);\n\
    \    $grades = array_map('array_map', 'str_rot13', $grades);\n    $grades = array_map('array_map',\
    \ 'str_rot\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3d4aqyjr.php on line 57

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('chr', $grades);\n    return $grades;\n}\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwj9qvbgp.php:38\n\
    Stack trace:\n#0 /tmp/tmpwj9qvbgp.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwj9qvbgp.php\
    \ on line 38\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmpnnq7pxb9.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpnnq7pxb9.php on line 26\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmpnnq7pxb9.php on line\
    \ 26\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmpnnq7pxb9.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpnnq7pxb9.php on line 26\n\nWarning: array_map():\
    \ Expected parameter 2 to be an array, string given in /tmp/tmpnnq7pxb9.php on\
    \ line 27\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnq7pxb9.php:36\n\
    Stack trace:\n#0 /tmp/tmpnnq7pxb9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnnq7pxb9.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2ixp43qc.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqtch4h7z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    $grades\
    \ = array_filter($grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt32hwaav.php:37\n\
    Stack trace:\n#0 /tmp/tmpt32hwaav.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpt32hwaav.php\
    \ on line 37\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow7qhdvt.php:36\n\
    Stack trace:\n#0 /tmp/tmpow7qhdvt.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpow7qhdvt.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprj7m2job.php:37\n\
    Stack trace:\n#0 /tmp/tmprj7m2job.php(45): test()\n#1 {main}\n  thrown in /tmp/tmprj7m2job.php\
    \ on line 37\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb5h7f3co.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6hiv_ce8.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_filter($grades);\n  $grades = array_map('round', $grades);\n\
    \  $grades = array_map('intval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw81knbgx.php:37\n\
    Stack trace:\n#0 /tmp/tmpw81knbgx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpw81knbgx.php\
    \ on line 37\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ array($grades, array(0)));\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grade\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps5od_cep.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpww0cpdfw.php on line 67

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', array($this, 'letter_grade'),\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpprnvhdwl.php\
    \ on line 28\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmpprnvhdwl.php on line 28\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmpprnvhdwl.php on line 28\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmpprnvhdwl.php on line 28\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpprnvhdwl.php\
    \ on line 28\n\nFatal error: Uncaught Error: Using $this when not in object context\
    \ in /tmp/tmpprnvhdwl.php:29\nStack trace:\n#0 /tmp/tmpprnvhdwl.php(34): numerical_letter_grade(Array)\n\
    #1 /tmp/tmpprnvhdwl.php(38): candidate(Array)\n#2 /tmp/tmpprnvhdwl.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpprnvhdwl.php on line 29\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpd63i4v0c.php on line 67

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplejf6712.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    $grades\
    \ = array_filter($grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt32hwaav.php:37\n\
    Stack trace:\n#0 /tmp/tmpt32hwaav.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpt32hwaav.php\
    \ on line 37\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow7qhdvt.php:36\n\
    Stack trace:\n#0 /tmp/tmpow7qhdvt.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpow7qhdvt.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7cpilekn.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp18u3uzy.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2ixp43qc.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7j50syly.php on line 82

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2ixp43qc.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect_key', $grades);\n    $grades\
    \ = array_map('array_diff_key', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect_key', $grades);\n    $grades\
    \ = array_map('array_diff_key', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect_key', $grades);\n    $grades\
    \ = array_map('array_diff_key', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect_key', $grades);\n    $grades\
    \ = array_map('array_diff_key', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect_key', $grades);\n    $grades\
    \ = array_map('array_diff_key', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect_key', $grades);\n    $grades\
    \ = array_map('array_diff_key', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcikwr00t.php on line 66

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt7ttvczr.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_to_letter', $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmpnnq7pxb9.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpnnq7pxb9.php on line 26\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmpnnq7pxb9.php on line\
    \ 26\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmpnnq7pxb9.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpnnq7pxb9.php on line 26\n\nWarning: array_map():\
    \ Expected parameter 2 to be an array, string given in /tmp/tmpnnq7pxb9.php on\
    \ line 27\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnq7pxb9.php:36\n\
    Stack trace:\n#0 /tmp/tmpnnq7pxb9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnnq7pxb9.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpww0cpdfw.php on line 67

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp18u3uzy.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', 'grade_to_letter',\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, float given in\
    \ /tmp/tmp72trpc9w.php on line 26\n\nWarning: array_sum() expects parameter 1\
    \ to be array, float given in /tmp/tmp72trpc9w.php on line 26\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, float given in /tmp/tmp72trpc9w.php on line\
    \ 26\n\nWarning: array_sum() expects parameter 1 to be array, float given in /tmp/tmp72trpc9w.php\
    \ on line 26\n\nWarning: array_sum() expects parameter 1 to be array, float given\
    \ in /tmp/tmp72trpc9w.php on line 26\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmp72trpc9w.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp72trpc9w.php:36\nStack trace:\n\
    #0 /tmp/tmp72trpc9w.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp72trpc9w.php\
    \ on line 36\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a>0?\"A+\":$a<0?\"A-\":$a<3?\"B+\":$a<2?\"B\":$a<1?\"C+\":$a<0?\"C\":$a<-1?\"\
    D+\":$a<-2?\"D\":$a<-3?\"D-\":$a<-4?\"E\":\"\";'), $grades);\n    return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, float given in\
    \ /tmp/tmpv7yzamrp.php on line 26\n\nWarning: array_sum() expects parameter 1\
    \ to be array, float given in /tmp/tmpv7yzamrp.php on line 26\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, float given in /tmp/tmpv7yzamrp.php on line\
    \ 26\n\nWarning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpv7yzamrp.php\
    \ on line 26\n\nWarning: array_sum() expects parameter 1 to be array, float given\
    \ in /tmp/tmpv7yzamrp.php on line 26\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpv7yzamrp.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpv7yzamrp.php:36\nStack trace:\n\
    #0 /tmp/tmpv7yzamrp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpv7yzamrp.php\
    \ on line 36\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'grade_letter', $grades);\n    return $grades;\n}\n\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmpv_sgaad3.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpv_sgaad3.php on line 26\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmpv_sgaad3.php on line\
    \ 26\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmpv_sgaad3.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpv_sgaad3.php on line 26\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpv_sgaad3.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpv_sgaad3.php on line 27\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpv_sgaad3.php on line 27\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpv_sgaad3.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpv_sgaad3.php on line 27\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpv_sgaad3.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpv_sgaad3.php on line\
    \ 28\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpv_sgaad3.php on line 28\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpv_sgaad3.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpv_sgaad3.php on line\
    \ 28\n\nWarning: array_map(): Expected parameter 2 to be an array, string given\
    \ in /tmp/tmpv_sgaad3.php on line 29\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpv_sgaad3.php:38\nStack trace:\n#0 /tmp/tmpv_sgaad3.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpv_sgaad3.php on line 38\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('chr', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8isxs99v.php:39\n\
    Stack trace:\n#0 /tmp/tmp8isxs99v.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp8isxs99v.php\
    \ on line 39\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjyy97cs5.php on line 67

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprhqihg5z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjxz0mfk.php:36\n\
    Stack trace:\n#0 /tmp/tmpmjxz0mfk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmjxz0mfk.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'grade_equation', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'grade_equation', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_equation', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_equation', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_equation', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_equation', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_equation', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_equation', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_equation', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_equation', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_equation', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_equation', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_equation', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_equation', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'grade_equation', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'grade_equation', $grades);\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq273_3if.php on line 75

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', 'return $v > 3.0 ?\
    \ \"A+\" : $v > 2.0 ? \"A\" : $v > 1.7 ? \"A-\" : $v > 1.3 ? \"B+\" : $v > 1.0\
    \ ? \"B\" : $v > 0.7 ? \"B\" : $v > 0.3 ? \"B-\" : $v > 0.0 ? \"C+\" : $v > 0.0\
    \ ? \"C\" : $v > 0.0 ? \"C-\" : $v > 0.0 ? \"D+\" : $v > 0.0 ? \"D\" : $v > 0.0\
    \ ? \"D-\" : $v > 0.0 ? \"E\" : \"\";'), $grades);\n    return $grades;\n}\n\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpx511i3jw.php\
    \ on line 27\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmpx511i3jw.php on line 27\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmpx511i3jw.php on line 27\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmpx511i3jw.php on line 27\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpx511i3jw.php\
    \ on line 27\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpx511i3jw.php on line 28\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpx511i3jw.php:37\nStack trace:\n#0 /tmp/tmpx511i3jw.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx511i3jw.php on line 37\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_filter($grades);\n  $grades = array_map(function($grade)\
    \ {\n    return round($grade, 1);\n  }, $grades);\n  $grades = array_unique($grades);\n\
    \  $grades = array_filter($grades);\n  $grades = array_map(function($grade) {\n\
    \    return $grade < 0.0 ? \"E\" : $grade;\n  }, $grades);\n  return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp427fn3kn.php:42\n\
    Stack trace:\n#0 /tmp/tmp427fn3kn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp427fn3kn.php\
    \ on line 42\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_merge', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph9nedja6.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"+\":\"-\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"-\":\"\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"+\":\"-\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"-\":\"\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"+\":\"-\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"-\":\"\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"+\":\"-\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"-\":\"\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"+\":\"-\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"-\":\"\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"+\":\"-\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"-\":\"\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"+\":\"-\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"-\":\"\";'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?$x.\"+\":\"-\";'), $grades);\n    $grades = array_map('array_map', create_\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp45ezk3ae.php on line 43

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'grade_to_letter', $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, int given in\
    \ /tmp/tmpzpvrwmgy.php on line 27\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpzpvrwmgy.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpzpvrwmgy.php on line\
    \ 29\n\nWarning: array_map(): Expected parameter 2 to be an array, string given\
    \ in /tmp/tmpzpvrwmgy.php on line 30\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpzpvrwmgy.php:39\nStack trace:\n#0 /tmp/tmpzpvrwmgy.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzpvrwmgy.php on line 39\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbuqw1e6z.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_filter($grades);\n  $grades = array_map('round', $grades);\n\
    \  $grades = array_map('intval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('array_search', array_flip(array('A+', 'A-', 'B+', 'B-',\
    \ 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E')), $grades);\n  return $grades;\n}\n\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_search() expects parameter 2 to be array, string given\
    \ in /tmp/tmpy02cg14r.php on line 29\n\nWarning: array_search() expects parameter\
    \ 2 to be array, string given in /tmp/tmpy02cg14r.php on line 29\n\nWarning: array_search()\
    \ expects parameter 2 to be array, string given in /tmp/tmpy02cg14r.php on line\
    \ 29\n\nWarning: array_search() expects parameter 2 to be array, string given\
    \ in /tmp/tmpy02cg14r.php on line 29\n\nWarning: array_search() expects parameter\
    \ 2 to be array, string given in /tmp/tmpy02cg14r.php on line 29\n\nWarning: array_search()\
    \ expects parameter 2 to be array, null given in /tmp/tmpy02cg14r.php on line\
    \ 29\n\nWarning: array_search() expects parameter 2 to be array, null given in\
    \ /tmp/tmpy02cg14r.php on line 29\n\nWarning: array_search() expects parameter\
    \ 2 to be array, null given in /tmp/tmpy02cg14r.php on line 29\n\nWarning: array_search()\
    \ expects parameter 2 to be array, null given in /tmp/tmpy02cg14r.php on line\
    \ 29\n\nWarning: array_search() expects parameter 2 to be array, null given in\
    \ /tmp/tmpy02cg14r.php on line 29\n\nWarning: array_search() expects parameter\
    \ 2 to be array, null given in /tmp/tmpy02cg14r.php on line 29\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpy02cg14r.php:38\nStack trace:\n\
    #0 /tmp/tmpy02cg14r.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpy02cg14r.php\
    \ on line 38\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9oh6hq5c.php on line 82

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7dlzj8_i.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x<0?\\'-\\\
    ':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcbfrst19.php on line 41

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\"A+\":$x>0?\"A\":\"B+\":$x>0?\"B\":\"B-\":$x>0?\"C\":\"C-\":$x>0?\"D\"\
    :\"D+\":$x>0?\"D\":\"D-\":$x>0?\"E\":\"F\";'), $grades);\n    return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpsd8t5dns.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpsd8t5dns.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpsd8t5dns.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpsd8t5dns.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpsd8t5dns.php
    on line 26


    Parse error: syntax error in /tmp/tmpsd8t5dns.php(27) : runtime-created function
    on line 1

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'A+'), $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 'A-'), $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'B+'), $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 'B'), $grades);\n    $grades = array_map('array_map', 'array_fill',\
    \ array_fill(0, count($grades), 'B-'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'C+'), $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 'C'), $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'C-'), $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 'D+'), $grades);\n    $grades = array_map('array_map', 'array_fill',\
    \ array_fill(0, count($grades), 'D'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'D-'), $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 'E'), $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpqjom0f5e.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpqjom0f5e.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpqjom0f5e.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpqjom0f5e.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpqjom0f5e.php
    on line 26


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpqjom0f5e.php
    on line 27


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmpqjom0f5e.php on line 28


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpqjom0f5e.php
    on line 28


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmpqjom0f5e.php on line 29


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpqjom0f5e.php
    on line 29


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmpqjom0f5e.php on line 30


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpqjom0f5e.php
    on line 30


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmpqjom0f5e.php on line 31


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpqjom0f5e.php
    on line 31


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmpqjom0f5e.php on line 32


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpqjom0f5e.php
    on line 32


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmpqjom0f5e.php on line 33


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpqjom0f5e.php
    on line 33


    Warning: count(): Parameter must be an array o'
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_map('round', array_map('intval', $grades));\n  $grades\
    \ = array_map('array_filter', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'A'), $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'B'), $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 'C'), $grades);\n\
    \  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'D'), $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'E'), $grades);\n  return $grades;\n}\n\nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpg4e_6zgl.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpg4e_6zgl.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpg4e_6zgl.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpg4e_6zgl.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, float given in /tmp/tmpg4e_6zgl.php
    on line 26


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 27


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 27


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 27


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 27


    Warning: array_unique() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 27


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 28


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 28


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 28


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 28


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmpg4e_6zgl.php
    on line 28


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpg4e_6zgl.php
    on line 29


    Warning: array_map(): Expected parameter 2 to be an array, null given in /tmp/tmpg4e_6zgl.php
    on line 30


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmpg4e_6zgl.php on line 31


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpg4e_6zgl.php
    on line 31


    Warning: array_map(): Expected parameter'
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpphiasrom.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$grade', 'return\
    \ $grade >= 4.0 ? \"A+\" : $grade >= 3.7 ? \"A\" : $grade >= 3.3 ? \"A-\" : $grade\
    \ >= 3.0 ? \"B+\" : $grade >= 2.7 ? \"B\" : $grade >= 2.3 ? \"B-\" : $grade >=\
    \ 2.0 ? \"C+\" : $grade >= 1.7 ? \"C\" : $grade >= 1.3 ? \"C-\" : $grade >= 1.0\
    \ ? \"D+\" : $grade >= 0.7 ? \"D\" : $grade >= 0.0 ? \"D-\" : \"E';\"), $grades);\n\
    \    $grades = array_map('array_map', create_function('$grade', 'return $grade\
    \ >= 4.0 ? \"A+\" : $grade >= 3.7 ? \"A\" : $grade >= 3.3 ? \"A-\" : $grade >=\
    \ 3.0 ? \"B+\" : $grade >= 2.7 ? \"B\" : $grade >= 2.3 ? \"B-\" : $grade >= 2.0\
    \ ? \"C+\" : $grade >= 1.7 ? \"C\" : $grade >= 1.3 ? \"C-\" : $grade >= 1.0 ?\
    \ \"D+\" : $grade >= 0.7 ? \"D\" : $grade >= 0.0 ? \"D-\" : \"E';\"), $grades);\n\
    \    $grades = array_map('array_map', create_function('$grade', 'return $grade\
    \ >= 4.0 ? \"A+\" : $grade >= 3.7 ? \"A\" : $grade >= 3.3 ? \"A-\" : $grade >=\
    \ 3.0 ? \"B+\" : $grade >= 2.7 ? \"B\" : $grade >= 2.3 ? \"B-\" : $grade >= 2.0\
    \ ? \"C+\" : $grade >= 1.7 ? \"C\" : $grade >= 1.3 ? \"C-\" : $grade >= 1.0 ?\
    \ \"D+\" : $grade >= 0.7 ? \"D\" : $grade >= 0.0 ? \"D-\" : \"E';\"), $grades);\n\
    \    $grades = array_map('array_map', create_function('$grade', 'return $grade\
    \ >= 4.0 ? \"A+\" : $grade >= 3.7 ? \"A\" : $grade >= 3.3 ? \"A-\" : $grade >=\
    \ 3.0 ? \"B+\" : $grade >= 2.7 ? \"B\" : $grade >= 2.3 ? \"\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4zf0nssp.php on line 29

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\"A+\":($x>0?\"A\":\"B\");'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\"B+\":($x>0?\"B\":\"B\");'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\"B-\"\
    :($x>0?\"B\":\"B\");'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\"C+\":($x>0?\"C\":\"C\");'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\"C\":($x>0?\"C\":\"C\");'), $grades);\n \
    \   $grades = array_map('array_map', create_function('$x','return $x>0?\"C-\"\
    :($x>0?\"C\":\"C\");'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\"D+\":($x>0?\"D\":\"D\");'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\"D\":($x>0?\"D\":\"D\");'), $grades);\n \
    \   $grades = array_map('array_map', create_function('$x','return $x>0?\"D-\"\
    :($x>0?\"D\":\"D\");'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\"E\":($x>0?\"E\":\"E\");'), $grades);\n    return $grades;\n}\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpu0pg3mrb.php\
    \ on line 28\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmpu0pg3mrb.php on line 28\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmpu0pg3mrb.php on line 28\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmpu0pg3mrb.php on line 28\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpu0pg3mrb.php\
    \ on line 28\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpu0pg3mrb.php on line 29\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpu0pg3mrb.php on line 30\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpu0pg3mrb.php\
    \ on line 31\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpu0pg3mrb.php on line 32\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpu0pg3mrb.php on line 33\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpu0pg3mrb.php\
    \ on line 34\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpu0pg3mrb.php on line 35\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpu0pg3mrb.php on line 36\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpu0pg3mrb.php\
    \ on line 37\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpu0pg3mrb.php on line 38\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpu0pg3mrb.php:46\nStack trace:\n#0 /tmp/tmpu0pg3mrb.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpu0pg3mrb.php on line 46\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7cpilekn.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a>0?\"A+\":\"A-\";'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a>0?\"B+\":\"B-\";'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a>0?\"C+\":\"C-\";'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a>0?\"D+\":\"D-\";'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a>0?\"E\":\"D-\";'), $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpct4qr6pu.php\
    \ on line 28\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmpct4qr6pu.php on line 28\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmpct4qr6pu.php on line 28\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmpct4qr6pu.php on line 28\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpct4qr6pu.php\
    \ on line 28\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpct4qr6pu.php on line 29\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpct4qr6pu.php on line 30\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpct4qr6pu.php\
    \ on line 31\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpct4qr6pu.php on line 32\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpct4qr6pu.php on line 33\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpct4qr6pu.php:42\nStack trace:\n\
    #0 /tmp/tmpct4qr6pu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpct4qr6pu.php\
    \ on line 42\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptjaan5_l.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzejx34z.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpo43uuitr.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a<0?\"E\":$a<3?\"D-\":$a<7?\"C-\":$a<9?\"B-\":$a<11?\"B-\":$a<13?\"A-\":$a<15?\"\
    A+\":$a<17?\"A\":\"\";'), $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, float given in\
    \ /tmp/tmprtxkcas8.php on line 26\n\nWarning: array_sum() expects parameter 1\
    \ to be array, float given in /tmp/tmprtxkcas8.php on line 26\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, float given in /tmp/tmprtxkcas8.php on line\
    \ 26\n\nWarning: array_sum() expects parameter 1 to be array, float given in /tmp/tmprtxkcas8.php\
    \ on line 26\n\nWarning: array_sum() expects parameter 1 to be array, float given\
    \ in /tmp/tmprtxkcas8.php on line 26\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmprtxkcas8.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmprtxkcas8.php:36\nStack trace:\n\
    #0 /tmp/tmprtxkcas8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprtxkcas8.php\
    \ on line 36\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 4.0 ? \"A+\" : ($grade >= 3.7 ? \"A\" : ($grade\
    \ >= 3.3 ? \"A-\" : ($grade >= 3.0 ? \"B+\" : \n        ($grade >= 2.7 ? \"B\"\
    \ : ($grade >= 2.3 ? \"B-\" : ($grade >= 2.0 ? \"C+\" : \n        ($grade >= 1.7\
    \ ? \"C\" : ($grade >= 1.3 ? \"C-\" : ($grade >= 1.0 ? \"D+\" : \n        ($grade\
    \ >= 0.7 ? \"D\" : ($grade >= 0.0 ? \"D-\" : \"E\")))))))))));\n    }, $grades);\n\
    \    return $grades;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks so\
    \ much for your help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem. Glad I\
    \ could help.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$grades = array(4.0,\
    \ 3, 1.7, 2, 3.5);\n$grades = array_filter($grades);\n$grades = array_map(function($grade)\
    \ {\n    return $grade >= 4.0 ? \"A+\" : ($grade >= 3.7 ? \"A\" : ($grade >= 3.3\
    \ ? \"A-\" : ($grade >= 3.0 ? \"B+\" : \n    ($grade >= 2.7 ? \"B\" : ($grade\
    \ >= 2.3 ? \"B-\" : ($grade >= 2.0 ? \"C+\" : \n    ($grade >= 1.7 ? \"C\" : ($grade\
    \ >= 1.3 ? \"C-\" : ($grade >= 1.0 ? \"D+\" : \n    ($grade >= 0.7 ? \"D\" : ($grade\
    \ >= 0.0 ? \"D-\" : \"E\")))))))))));\n}, $grades);\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThanks so much for your help! I appreciate it!\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppby7_f0f.php on line 34

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_unique', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_merge', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_merge', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_merge', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcwkcm9du.php on line 66

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect_key', $grades);\n    $grades\
    \ = array_map('array_diff_key', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_fill_keys', $grades, array_fill(0,\
    \ count($grades), 0));\n    $grades = array_map('array_filter', $grades);\n  \
    \  $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect_key',\
    \ $grades);\n    $grades = array_map('array_diff_key', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_fill_keys',\
    \ $grades, array_fill(0, count($grades), 0));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect_key', $grades);\n    $grades = array_map('array_diff_key',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_fill_keys',\
    \ $grades, array_fill(0, count($grades), 0));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect_key', $grades);\n    $grades = array_map('array_diff_key',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_fill_keys',\
    \ $grades, array_fill(0, count($grades), 0));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect_key', $grades);\n    $grades = array_map('array_diff_key',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_fill_keys',\
    \ $grades, array_fill(0, count($grades), 0));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect_key', $grades);\n    $grades = array_map('array_diff\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9hc950rj.php on line 61

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 3.0 ? \"A+\" : ($grade >= 3.7 ? \"A\" : ($grade\
    \ >= 3.3 ? \"A-\" : ($grade >= 3.0 ? \"B+\" : \n        ($grade >= 2.7 ? \"B\"\
    \ : ($grade >= 2.3 ? \"B-\" : ($grade >= 2.0 ? \"C+\" : \n        ($grade >= 1.7\
    \ ? \"C\" : ($grade >= 1.3 ? \"C-\" : ($grade >= 1.0 ? \"D+\" : \n        ($grade\
    \ >= 0.7 ? \"D\" : ($grade >= 0.0 ? \"D-\" : \"E\")))))))))));\n    }, $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfy7doe8x.php:40\n\
    Stack trace:\n#0 /tmp/tmpfy7doe8x.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfy7doe8x.php\
    \ on line 40\n"
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_count_values', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjlcirdd4.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplejf6712.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_intersect', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_intersect', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp43hxirnq.php on line 68

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp18u3uzy.php on line 68

    '
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n\nfunction candidate(...$args) {\n \
    \   return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpds0lusrs.php on line 82

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjxz0mfk.php:36\n\
    Stack trace:\n#0 /tmp/tmpmjxz0mfk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmjxz0mfk.php\
    \ on line 36\n"
  timestamp: 1659731017
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5o9qoqhq.php on line 82

    '
  timestamp: 1659731018
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you an array of GPAs for some students and you have to write\
    \ \n// a function that can output an array of letter grades using the following\
    \ table:\n// GPA       |    Letter grade\n// 4.0                A+\n// > 3.7 \
    \               A \n// > 3.3                A- \n// > 3.0                B+\n\
    // > 2.7                B \n// > 2.3                B-\n// > 2.0             \
    \   C+\n// > 1.7                C\n// > 1.3                C-\n// > 1.0      \
    \          D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0\
    \                E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n\
    // array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu134qjt2.php on line 82

    '
  timestamp: 1659731017

{
  "language": "d",
  "name": "HumanEval_98_count_upper",
  "results": [
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpfbu721jf.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfbu721jf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(isUpper(c) && isVowel(c) && (s.indexOf(c) % 2 == 0))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptnde4y_6.d(14): Error: undefined identifier `isUpper`\n/tmp/tmptnde4y_6.d(14): Error: undefined identifier `isVowel`\n/tmp/tmptnde4y_6.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptnde4y_6.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && c != 'Y' && c != 'Z')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp71bxtlkg.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp71bxtlkg.__unittest_L24_C1() [0x427b22]\n??:? void tmp71bxtlkg.__modtest() [0x427bdc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c.isUpper && c.isVowel && s.indexOf(c) % 2 == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpzf5h2ur1.d(14): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzf5h2ur1.d(14): Error: no property `isVowel` for type `immutable(char)`\n/tmp/tmpzf5h2ur1.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzf5h2ur1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long result = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                result++;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb27_jnqo.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb27_jnqo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if (c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpo3kkb44h.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo3kkb44h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isEven`\n/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp12v2isc4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n}\n/*\n    For example:\n    \n    count_upper(\"Hello\") => 1\n    count_upper(\"World\") => 0\n    count_upper(\"HELLO\") => 5\n    count_upper(\"wOrld\") => 0\n    count_upper(\"\") => 0\n*/\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmlpojr2v.d(14): Error: incompatible types for `(c) in (['A', 'E', 'I', 'O', 'U'])`: `immutable(char)` and `char[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmlpojr2v.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpaguhsno2.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaguhsno2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5y9tsh49.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp5y9tsh49.__unittest_L21_C1() [0x427b1a]\n??:? void tmp5y9tsh49.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(isUpper(c) && isVowel(c) && (s.indexOf(c) % 2 == 0))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpkk25uzbx.d(14): Error: undefined identifier `isUpper`\n/tmp/tmpkk25uzbx.d(14): Error: undefined identifier `isVowel`\n/tmp/tmpkk25uzbx.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkk25uzbx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(isUpper(c) && (s.indexOf(c) % 2 == 0))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmw8e8bc8.d(14): Error: undefined identifier `isUpper`\n/tmp/tmpmw8e8bc8.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmw8e8bc8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4ijp26sj.d(14): Error: incompatible types for `(c) in (\"AEIOU\")`: `immutable(char)` and `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ijp26sj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isEven`\n/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp12v2isc4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(c % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmigwbjdd.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpmigwbjdd.__unittest_L24_C1() [0x427ace]\n??:? void tmpmigwbjdd.__modtest() [0x427bdc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqulbhmrf.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpqulbhmrf.__unittest_L19_C1() [0x427ab2]\n??:? void tmpqulbhmrf.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuhnuy071.d(14): Error: incompatible types for `(c) in (['A', 'E', 'I', 'O', 'U'])`: `immutable(char)` and `char[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuhnuy071.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4ijp26sj.d(14): Error: incompatible types for `(c) in (\"AEIOU\")`: `immutable(char)` and `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ijp26sj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && isVowel(c) && (s.indexOf(c) % 2 == 0))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpo1nxonm1.d(14): Error: undefined identifier `isVowel`\n/tmp/tmpo1nxonm1.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo1nxonm1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpah0u_gl_.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpah0u_gl_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqulbhmrf.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpqulbhmrf.__unittest_L19_C1() [0x427ab2]\n??:? void tmpqulbhmrf.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4ijp26sj.d(14): Error: incompatible types for `(c) in (\"AEIOU\")`: `immutable(char)` and `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ijp26sj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp8egg2qx_.d(14): Error: incompatible types for `(c) in (\"AEIOU\")`: `immutable(char)` and `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8egg2qx_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(isUpper(c) && isVowel(c) && (s.indexOf(c) % 2 == 0))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpkk25uzbx.d(14): Error: undefined identifier `isUpper`\n/tmp/tmpkk25uzbx.d(14): Error: undefined identifier `isVowel`\n/tmp/tmpkk25uzbx.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkk25uzbx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpv9uwm314.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ef5]\n??:? void tmpv9uwm314.__unittest_L21_C1() [0x427bba]\n??:? void tmpv9uwm314.__modtest() [0x427c74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab22]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430164]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aaf9]\n??:? runModuleUnitTests [0x42ba65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283b8]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long result = 0;\n    foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n            result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphmz661n4.d(14): Error: incompatible types for `(c) in (\"AEIOU\")`: `immutable(char)` and `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphmz661n4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmfkwuqtx.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427efd]\n??:? void tmpmfkwuqtx.__unittest_L21_C1() [0x427bc2]\n??:? void tmpmfkwuqtx.__modtest() [0x427c7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab01]\n??:? runModuleUnitTests [0x42ba6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283c0]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long result = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                result++;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb27_jnqo.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb27_jnqo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp527ivnq3.d(14): Error: undefined identifier `isEven`\n/tmp/tmp527ivnq3.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp527ivnq3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmfkwuqtx.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427efd]\n??:? void tmpmfkwuqtx.__unittest_L21_C1() [0x427bc2]\n??:? void tmpmfkwuqtx.__modtest() [0x427c7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab01]\n??:? runModuleUnitTests [0x42ba6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283c0]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isEven`\n/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp12v2isc4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c in ['A', 'E', 'I', 'O', 'U'])\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps35qjoyx.d(14): Error: incompatible types for `(c) in (['A', 'E', 'I', 'O', 'U'])`: `immutable(char)` and `char[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps35qjoyx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long result = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp6x_lv2ge.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp6x_lv2ge.__unittest_L21_C1() [0x427b0e]\n??:? void tmp6x_lv2ge.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpv9uwm314.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ef5]\n??:? void tmpv9uwm314.__unittest_L21_C1() [0x427bba]\n??:? void tmpv9uwm314.__modtest() [0x427c74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab22]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430164]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aaf9]\n??:? runModuleUnitTests [0x42ba65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283b8]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_xer_iy6.d(14): Error: incompatible types for `(c) in (['A', 'E', 'I', 'O', 'U'])`: `immutable(char)` and `char[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_xer_iy6.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && s.indexOf(c) % 2 == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppv2e5hs4.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppv2e5hs4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpv9uwm314.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ef5]\n??:? void tmpv9uwm314.__unittest_L21_C1() [0x427bba]\n??:? void tmpv9uwm314.__modtest() [0x427c74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab22]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430164]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aaf9]\n??:? runModuleUnitTests [0x42ba65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283b8]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c.isUpper && c.isVowel && s.indexOf(c) % 2 == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpzf5h2ur1.d(14): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzf5h2ur1.d(14): Error: no property `isVowel` for type `immutable(char)`\n/tmp/tmpzf5h2ur1.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzf5h2ur1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && index % 2 == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp7lgmp4h8.d(14): Error: undefined identifier `index`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7lgmp4h8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpfbu721jf.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfbu721jf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpv9uwm314.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ef5]\n??:? void tmpv9uwm314.__unittest_L21_C1() [0x427bba]\n??:? void tmpv9uwm314.__modtest() [0x427c74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab22]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430164]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aaf9]\n??:? runModuleUnitTests [0x42ba65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283b8]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpah0u_gl_.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpah0u_gl_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqulbhmrf.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpqulbhmrf.__unittest_L19_C1() [0x427ab2]\n??:? void tmpqulbhmrf.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpaguhsno2.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaguhsno2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s) \n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvnj_996i.d(14): Error: incompatible types for `(c) in (['A', 'E', 'I', 'O', 'U'])`: `immutable(char)` and `char[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvnj_996i.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5x4h5w__.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp5x4h5w__.__unittest_L21_C1() [0x427b0e]\n??:? void tmp5x4h5w__.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpjfvzupts.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpjfvzupts.__unittest_L24_C1() [0x427b2e]\n??:? void tmpjfvzupts.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isEven`\n/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp12v2isc4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5y9tsh49.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp5y9tsh49.__unittest_L21_C1() [0x427b1a]\n??:? void tmp5y9tsh49.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isEven`\n/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp12v2isc4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(isUpper(c) && (s.indexOf(c) % 2 == 0))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpkdbmeotk.d(14): Error: undefined identifier `isUpper`\n/tmp/tmpkdbmeotk.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkdbmeotk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5y9tsh49.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp5y9tsh49.__unittest_L21_C1() [0x427b1a]\n??:? void tmp5y9tsh49.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c.isUpper && c.isVowel && s.indexOf(c) % 2 == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpzf5h2ur1.d(14): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzf5h2ur1.d(14): Error: no property `isVowel` for type `immutable(char)`\n/tmp/tmpzf5h2ur1.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzf5h2ur1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp527ivnq3.d(14): Error: undefined identifier `isEven`\n/tmp/tmp527ivnq3.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp527ivnq3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp527ivnq3.d(14): Error: undefined identifier `isEven`\n/tmp/tmp527ivnq3.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp527ivnq3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqulbhmrf.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpqulbhmrf.__unittest_L19_C1() [0x427ab2]\n??:? void tmpqulbhmrf.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpv9uwm314.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ef5]\n??:? void tmpv9uwm314.__unittest_L21_C1() [0x427bba]\n??:? void tmpv9uwm314.__modtest() [0x427c74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab22]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430164]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aaf9]\n??:? runModuleUnitTests [0x42ba65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283b8]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqulbhmrf.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpqulbhmrf.__unittest_L19_C1() [0x427ab2]\n??:? void tmpqulbhmrf.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuhnuy071.d(14): Error: incompatible types for `(c) in (['A', 'E', 'I', 'O', 'U'])`: `immutable(char)` and `char[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuhnuy071.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5y9tsh49.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp5y9tsh49.__unittest_L21_C1() [0x427b1a]\n??:? void tmp5y9tsh49.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(c.idx % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptl1skdma.d(16): Error: no property `idx` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptl1skdma.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqulbhmrf.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpqulbhmrf.__unittest_L19_C1() [0x427ab2]\n??:? void tmpqulbhmrf.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(c.idx % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp875cwfpk.d(16): Error: no property `idx` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp875cwfpk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpujy8z32q.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpujy8z32q.__unittest_L24_C1() [0x427b26]\n??:? void tmpujy8z32q.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmfkwuqtx.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427efd]\n??:? void tmpmfkwuqtx.__unittest_L21_C1() [0x427bc2]\n??:? void tmpmfkwuqtx.__modtest() [0x427c7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab2a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43016c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab01]\n??:? runModuleUnitTests [0x42ba6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283c0]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && (s.indexOf(c) % 2) == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpluq3h3xl.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpluq3h3xl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163917
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if (i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfrmz5g32.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpfrmz5g32.__unittest_L19_C1() [0x427ab2]\n??:? void tmpfrmz5g32.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuhnuy071.d(14): Error: incompatible types for `(c) in (['A', 'E', 'I', 'O', 'U'])`: `immutable(char)` and `char[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuhnuy071.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(isUpper(c) && (s.indexOf(c) % 2 == 0))\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmw8e8bc8.d(14): Error: undefined identifier `isUpper`\n/tmp/tmpmw8e8bc8.d(14): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmw8e8bc8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp527ivnq3.d(14): Error: undefined identifier `isEven`\n/tmp/tmp527ivnq3.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp527ivnq3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4ijp26sj.d(14): Error: incompatible types for `(c) in (\"AEIOU\")`: `immutable(char)` and `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ijp26sj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (long i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && isupper(s[i]))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpph6k8xbd.d(14): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpph6k8xbd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c >= 'A' && c <= 'Z' && c % 2 == 0)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmph_mrv8yu.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmph_mrv8yu.__unittest_L19_C1() [0x427b0e]\n??:? void tmph_mrv8yu.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4ijp26sj.d(14): Error: incompatible types for `(c) in (\"AEIOU\")`: `immutable(char)` and `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ijp26sj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(isEven(s.indexOf(c)) && isUpper(c))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isEven`\n/tmp/tmp12v2isc4.d(14): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp12v2isc4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuhnuy071.d(14): Error: incompatible types for `(c) in (['A', 'E', 'I', 'O', 'U'])`: `immutable(char)` and `char[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuhnuy071.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3yd1srd8.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3yd1srd8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && isupper(s[i]))\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpueux46df.d(14): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpueux46df.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuhnuy071.d(14): Error: incompatible types for `(c) in (['A', 'E', 'I', 'O', 'U'])`: `immutable(char)` and `char[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuhnuy071.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(count % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmplxjy2l1i.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmplxjy2l1i.__unittest_L24_C1() [0x427b26]\n??:? void tmplxjy2l1i.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa16]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430058]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]\n??:? runModuleUnitTests [0x42b959]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ac]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp54wir2o9.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp54wir2o9.__unittest_L21_C1() [0x427b0e]\n??:? void tmp54wir2o9.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(immutable char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpi3w01v_k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpi3w01v_k.__unittest_L21_C1() [0x427b0e]\n??:? void tmpi3w01v_k.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428294]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(char c; s)\n    {\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n            if(s.indexOf(c) % 2 == 0)\n            {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4kkcnbc9.d(16): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4kkcnbc9.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqulbhmrf.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpqulbhmrf.__unittest_L19_C1() [0x427ab2]\n??:? void tmpqulbhmrf.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 0,
      "program": "import std.math;\n/*\n\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n                \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n    for (size_t i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660163918
    }
  ]
}
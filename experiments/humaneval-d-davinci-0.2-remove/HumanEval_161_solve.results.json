{
  "language": "d",
  "name": "HumanEval_161_solve",
  "results": [
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa652ah8v.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpa652ah8v.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa652ah8v.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp7db5z6rv.d(19): Error: undefined identifier `isLetter`\n/tmp/tmp7db5z6rv.d(21): Error: undefined identifier `isUpper`\n/tmp/tmp7db5z6rv.d(22): Error: undefined identifier `toLower`\n/tmp/tmp7db5z6rv.d(24): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7db5z6rv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if(s.length == 0) return s;\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp89iafzpx.d(18): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp89iafzpx.d(20): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp89iafzpx.d(21): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp89iafzpx.d(23): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp89iafzpx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqt7s_b1w.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqt7s_b1w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpk_w_abim.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpk_w_abim.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_w_abim.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length > 0 ? result : s.dup.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_op37lcm.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp_op37lcm.d(19): Error: undefined identifier `toLower`\n/tmp/tmp_op37lcm.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_op37lcm.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c) == c ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpj7lvmy47.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpj7lvmy47.d(19): Error: undefined identifier `toLower`\n/tmp/tmpj7lvmy47.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpj7lvmy47.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7lvmy47.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            res ~= c.toUpper;\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9rl2ifax.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp9rl2ifax.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9rl2ifax.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if (c.isLetter)\n        {\n            res ~= c.toLower;\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.length == 0 ? s.dup.reverse : res.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp73pibn74.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp73pibn74.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp73pibn74.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmp73pibn74.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp73pibn74.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpq9zj4s7o.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpq9zj4s7o.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpq9zj4s7o.d(20): Error: undefined identifier `toLower`\n/tmp/tmpq9zj4s7o.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq9zj4s7o.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpy6hym7sj.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpy6hym7sj.d(19): Error: undefined identifier `toLower`\n/tmp/tmpy6hym7sj.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpy6hym7sj.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy6hym7sj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdfl6krl0.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdfl6krl0.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpdfl6krl0.d(20): Error: undefined identifier `toLower`\n/tmp/tmpdfl6krl0.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdfl6krl0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= to!string(c).toUpper();\n        }\n        else\n        {\n            result ~= to!string(c).toLower();\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4qduz_is.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp4qduz_is.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmp4qduz_is.d(23): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4qduz_is.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw6dz45uy.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpw6dz45uy.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpw6dz45uy.d(20): Error: undefined identifier `toLower`\n/tmp/tmpw6dz45uy.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw6dz45uy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplatapfs0.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmplatapfs0.d(19): Error: undefined identifier `toLower`\n/tmp/tmplatapfs0.d(19): Error: undefined identifier `toUpper`\n/tmp/tmplatapfs0.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplatapfs0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdxk9awqs.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdxk9awqs.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdxk9awqs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpml9r8rj1.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpml9r8rj1.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpml9r8rj1.d(20): Error: undefined identifier `toLower`\n/tmp/tmpml9r8rj1.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpml9r8rj1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqt7s_b1w.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqt7s_b1w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(immutable c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvnhtlc2y.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpvnhtlc2y.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpvnhtlc2y.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpvnhtlc2y.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvnhtlc2y.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppr4w465u.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmppr4w465u.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppr4w465u.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    if (s.length == 0) return res;\n    foreach (c; s)\n    {\n        if (c.isAlpha)\n        {\n            if (c.isUpper)\n                res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5uhcyaap.d(18): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp5uhcyaap.d(20): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp5uhcyaap.d(21): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp5uhcyaap.d(23): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5uhcyaap.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if (s.empty)\n        return s;\n    string result;\n    foreach (c; s)\n    {\n        if (c.isLetter)\n            result ~= c.toLower;\n        else\n            result ~= c;\n    }\n    if (result.empty)\n        return s.dup.reverse;\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpyxwyu4k5.d(14): Error: no property `empty` for type `string`\n/tmp/tmpyxwyu4k5.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpyxwyu4k5.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpyxwyu4k5.d(24): Error: no property `empty` for type `string`\n/tmp/tmpyxwyu4k5.d(25): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpyxwyu4k5.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-u",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdfl6krl0.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdfl6krl0.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpdfl6krl0.d(20): Error: undefined identifier `toLower`\n/tmp/tmpdfl6krl0.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdfl6krl0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpml9r8rj1.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpml9r8rj1.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpml9r8rj1.d(20): Error: undefined identifier `toLower`\n/tmp/tmpml9r8rj1.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpml9r8rj1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            result ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3hehjg0q.d(17): Error: undefined identifier `isLetter`\n/tmp/tmp3hehjg0q.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3hehjg0q.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c) == c ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdalqfldh.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdalqfldh.d(19): Error: undefined identifier `toLower`\n/tmp/tmpdalqfldh.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpdalqfldh.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdalqfldh.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw8g663g2.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpw8g663g2.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpw8g663g2.d(20): Error: undefined identifier `toLower`\n/tmp/tmpw8g663g2.d(22): Error: undefined identifier `toUpper`\n/tmp/tmpw8g663g2.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw8g663g2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.length ? res : reverse(s);\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp74tubj2_.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp74tubj2_.d(19): Error: undefined identifier `toLower`\n/tmp/tmp74tubj2_.d(19): Error: undefined identifier `toUpper`\n/tmp/tmp74tubj2_.d(19): Error: undefined identifier `toLower`\n/tmp/tmp74tubj2_.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp74tubj2_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw6dz45uy.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpw6dz45uy.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpw6dz45uy.d(20): Error: undefined identifier `toLower`\n/tmp/tmpw6dz45uy.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw6dz45uy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if (s.length == 0) return result;\n    foreach(c; s)\n    {\n        if (c.isAlpha)\n        {\n            if (c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa70dx0_c.d(18): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpa70dx0_c.d(20): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpa70dx0_c.d(21): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpa70dx0_c.d(23): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa70dx0_c.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    if(s.length == 0) return res;\n    foreach(i, ch; s)\n    {\n        if(isLetter(ch))\n        {\n            if(isLower(ch)) res ~= toUpper(ch);\n            else res ~= toLower(ch);\n        }\n        else res ~= ch;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw1khb38d.d(18): Error: undefined identifier `isLetter`\n/tmp/tmpw1khb38d.d(20): Error: undefined identifier `isLower`\n/tmp/tmpw1khb38d.d(20): Error: undefined identifier `toUpper`\n/tmp/tmpw1khb38d.d(21): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw1khb38d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpnqd1pbke.d(19): Error: undefined identifier `isLetter`\n/tmp/tmpnqd1pbke.d(21): Error: undefined identifier `isUpper`\n/tmp/tmpnqd1pbke.d(22): Error: undefined identifier `toLower`\n/tmp/tmpnqd1pbke.d(24): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnqd1pbke.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplopg8cbz.d(17): Error: undefined identifier `isLetter`\n/tmp/tmplopg8cbz.d(19): Error: undefined identifier `isUpper`\n/tmp/tmplopg8cbz.d(20): Error: undefined identifier `toLower`\n/tmp/tmplopg8cbz.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplopg8cbz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpt9rc6w80.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpt9rc6w80.d(19): Error: undefined identifier `toLower`\n/tmp/tmpt9rc6w80.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpt9rc6w80.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt9rc6w80.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            res ~= c.toUpper;\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9rl2ifax.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp9rl2ifax.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9rl2ifax.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9mqsbhip.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp9mqsbhip.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9mqsbhip.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    if (s.length == 0) return res;\n    foreach (c; s)\n    {\n        if (c.isAlpha)\n        {\n            if (c.isUpper)\n                res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5uhcyaap.d(18): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp5uhcyaap.d(20): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp5uhcyaap.d(21): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp5uhcyaap.d(23): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5uhcyaap.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            res ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvpbxpll3.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpvpbxpll3.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpbxpll3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdxk9awqs.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdxk9awqs.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdxk9awqs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3q2_0unl.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp3q2_0unl.d(19): Error: undefined identifier `isUpper`\n/tmp/tmp3q2_0unl.d(20): Error: undefined identifier `toLower`\n/tmp/tmp3q2_0unl.d(22): Error: undefined identifier `toUpper`\n/tmp/tmp3q2_0unl.d(27): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3q2_0unl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf_df6sjo.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpf_df6sjo.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpf_df6sjo.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpf_df6sjo.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_df6sjo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplopg8cbz.d(17): Error: undefined identifier `isLetter`\n/tmp/tmplopg8cbz.d(19): Error: undefined identifier `isUpper`\n/tmp/tmplopg8cbz.d(20): Error: undefined identifier `toLower`\n/tmp/tmplopg8cbz.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplopg8cbz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.empty ? s : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptpa2cdvr.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmptpa2cdvr.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmptpa2cdvr.d(26): Error: no property `empty` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptpa2cdvr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqt7s_b1w.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqt7s_b1w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    if (s.length == 0)\n        return s;\n    foreach (i, c; s)\n    {\n        if (c >= 'a' && c <= 'z')\n            res ~= to!string(toUpper(c));\n        else if (c >= 'A' && c <= 'Z')\n            res ~= to!string(toLower(c));\n        else\n            res ~= to!string(c);\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpwlndep5m.d(20): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpwlndep5m.d(22): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpwlndep5m.d(24): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwlndep5m.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpktx0khz_.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpktx0khz_.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpktx0khz_.d(20): Error: undefined identifier `toLower`\n/tmp/tmpktx0khz_.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpktx0khz_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd7yqsrkm.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpd7yqsrkm.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpd7yqsrkm.d(20): Error: undefined identifier `toLower`\n/tmp/tmpd7yqsrkm.d(22): Error: undefined identifier `toUpper`\n/tmp/tmpd7yqsrkm.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd7yqsrkm.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpq9zj4s7o.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpq9zj4s7o.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpq9zj4s7o.d(20): Error: undefined identifier `toLower`\n/tmp/tmpq9zj4s7o.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq9zj4s7o.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg5w7dkui.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpg5w7dkui.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpg5w7dkui.d(20): Error: undefined identifier `toLower`\n/tmp/tmpg5w7dkui.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg5w7dkui.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplopg8cbz.d(17): Error: undefined identifier `isLetter`\n/tmp/tmplopg8cbz.d(19): Error: undefined identifier `isUpper`\n/tmp/tmplopg8cbz.d(20): Error: undefined identifier `toLower`\n/tmp/tmplopg8cbz.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplopg8cbz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqt7s_b1w.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqt7s_b1w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4a5nm7gn.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp4a5nm7gn.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4a5nm7gn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string ret = \"\";\n    if (s.length == 0)\n        return ret;\n    foreach (c; s)\n    {\n        if (c.isLetter)\n            ret ~= c.toUpper;\n        else\n            ret ~= c;\n    }\n    if (ret.length == s.length)\n        return ret.reverse;\n    else\n        return ret;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpkip5zka6.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpkip5zka6.d(20): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpkip5zka6.d(25): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkip5zka6.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= to!string(c).toUpper();\n        }\n        else\n        {\n            res ~= to!string(c).toLower();\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmdzjmnn_.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpmdzjmnn_.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpmdzjmnn_.d(23): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdzjmnn_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if (s.length == 0)\n        return s;\n    string result = \"\";\n    foreach (c; s)\n    {\n        if (c.isLetter)\n        {\n            if (c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpzb8q4_j8.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpzb8q4_j8.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpzb8q4_j8.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpzb8q4_j8.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzb8q4_j8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(ch; s)\n    {\n        if(isAlpha(ch))\n        {\n            if(isLower(ch))\n                result ~= toUpper(ch);\n            else\n                result ~= toLower(ch);\n        }\n        else\n            result ~= ch;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4os212gw.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp4os212gw.d(19): Error: undefined identifier `isLower`\n/tmp/tmp4os212gw.d(20): Error: undefined identifier `toUpper`\n/tmp/tmp4os212gw.d(22): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4os212gw.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= toLower(c) == c ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.length == 0 ? s : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdlj9hw0d.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdlj9hw0d.d(19): Error: undefined identifier `toLower`\n/tmp/tmpdlj9hw0d.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpdlj9hw0d.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdlj9hw0d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqt7s_b1w.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqt7s_b1w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(ch; s)\n    {\n        if(isAlpha(ch))\n        {\n            if(isLower(ch))\n                result ~= toUpper(ch);\n            else\n                result ~= toLower(ch);\n        }\n        else\n            result ~= ch;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4os212gw.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp4os212gw.d(19): Error: undefined identifier `isLower`\n/tmp/tmp4os212gw.d(20): Error: undefined identifier `toUpper`\n/tmp/tmp4os212gw.d(22): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4os212gw.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    if(result.length == 0)\n    {\n        return s;\n    }\n    else\n    {\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpnyc37ktv.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpnyc37ktv.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnyc37ktv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toLower.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    if(result.length == 0)\n    {\n        return s.dup.reverse;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpug1oqk2q.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpug1oqk2q.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpug1oqk2q.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpug1oqk2q.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    if(s.length == 0) return res;\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c)) res ~= toLower(c);\n            else res ~= toUpper(c);\n        }\n        else res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_yt_kp9v.d(18): Error: undefined identifier `isAlpha`\n/tmp/tmp_yt_kp9v.d(20): Error: undefined identifier `isUpper`\n/tmp/tmp_yt_kp9v.d(20): Error: undefined identifier `toLower`\n/tmp/tmp_yt_kp9v.d(21): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_yt_kp9v.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result ~= to!string(c^' ');\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    if(result.length == 0)\n    {\n        return s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppknza872.d(17): Error: undefined identifier `isLetter`\n/tmp/tmppknza872.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppknza872.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            c = c.toLower;\n            res ~= c.toUpper;\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqcnklw7s.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpqcnklw7s.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqcnklw7s.d(20): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcnklw7s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    bool hasLetter = false;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            hasLetter = true;\n            res ~= to!string(c);\n        }\n        else\n        {\n            res ~= to!string(c);\n        }\n    }\n    if(hasLetter)\n    {\n        return res.toLower().toUpper().toLower();\n    }\n    else\n    {\n        return res.reverse();\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp8gnomdlj.d(18): Error: undefined identifier `isAlpha`\n/tmp/tmp8gnomdlj.d(21): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmp8gnomdlj.d(25): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmp8gnomdlj.d(30): Error: no property `toLower` for type `string`\n/tmp/tmp8gnomdlj.d(34): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8gnomdlj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpt9rc6w80.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpt9rc6w80.d(19): Error: undefined identifier `toLower`\n/tmp/tmpt9rc6w80.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpt9rc6w80.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt9rc6w80.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0) return s;\n    foreach(i,c;s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper) result ~= c.toLower;\n            else result ~= c.toUpper;\n        }\n        else result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpy8ysutsb.d(18): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpy8ysutsb.d(20): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpy8ysutsb.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpy8ysutsb.d(21): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy8ysutsb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if(s.length == 0)\n        return s;\n    string result = \"\";\n    bool hasLetter = false;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            hasLetter = true;\n            result ~= to!string(c).toLower();\n        }\n        else\n            result ~= to!string(c);\n    }\n    if(hasLetter)\n        return result.toUpper();\n    else\n        return result.reverse();\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpi5m3a3d1.d(20): Error: undefined identifier `isLetter`, did you mean variable `hasLetter`?\n/tmp/tmpi5m3a3d1.d(23): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpi5m3a3d1.d(26): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpi5m3a3d1.d(29): Error: no property `toUpper` for type `string`\n/tmp/tmpi5m3a3d1.d(31): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi5m3a3d1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpml9r8rj1.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpml9r8rj1.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpml9r8rj1.d(20): Error: undefined identifier `toLower`\n/tmp/tmpml9r8rj1.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpml9r8rj1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp416n6tip.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp416n6tip.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp416n6tip.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp416n6tip.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp416n6tip.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp416n6tip.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw6dz45uy.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpw6dz45uy.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpw6dz45uy.d(20): Error: undefined identifier `toLower`\n/tmp/tmpw6dz45uy.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw6dz45uy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if(s.length == 0)\n        return s;\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0b0qthbs.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp0b0qthbs.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp0b0qthbs.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp0b0qthbs.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0b0qthbs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd0bgqm8y.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpd0bgqm8y.d(19): Error: undefined identifier `toLower`\n/tmp/tmpd0bgqm8y.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpd0bgqm8y.d(19): Error: undefined identifier `toLower`\n/tmp/tmpd0bgqm8y.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd0bgqm8y.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg09eljwa.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg09eljwa.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg09eljwa.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg09eljwa.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if(s.length == 0) return s;\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            if(c.isUpper)\n                res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpphgztwxh.d(18): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpphgztwxh.d(20): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpphgztwxh.d(21): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpphgztwxh.d(23): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpphgztwxh.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd7yqsrkm.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpd7yqsrkm.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpd7yqsrkm.d(20): Error: undefined identifier `toLower`\n/tmp/tmpd7yqsrkm.d(22): Error: undefined identifier `toUpper`\n/tmp/tmpd7yqsrkm.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd7yqsrkm.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqt7s_b1w.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqt7s_b1w.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqt7s_b1w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpq347h_f5.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpq347h_f5.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq347h_f5.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdxk9awqs.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdxk9awqs.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdxk9awqs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplopg8cbz.d(17): Error: undefined identifier `isLetter`\n/tmp/tmplopg8cbz.d(19): Error: undefined identifier `isUpper`\n/tmp/tmplopg8cbz.d(20): Error: undefined identifier `toLower`\n/tmp/tmplopg8cbz.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplopg8cbz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if (c.isAlpha)\n        {\n            result ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx7uj_y_h.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpx7uj_y_h.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx7uj_y_h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if (isLetter(c))\n        {\n            if (isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplmhndh4n.d(17): Error: undefined identifier `isLetter`\n/tmp/tmplmhndh4n.d(19): Error: undefined identifier `isUpper`\n/tmp/tmplmhndh4n.d(20): Error: undefined identifier `toLower`\n/tmp/tmplmhndh4n.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmhndh4n.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            res ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvpbxpll3.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpvpbxpll3.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpbxpll3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9mqsbhip.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp9mqsbhip.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9mqsbhip.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if (s.length == 0) return s;\n    string res = \"\";\n    foreach (c; s)\n    {\n        if (isLetter(c))\n        {\n            if (isUpper(c))\n                res ~= toLower(c);\n            else\n                res ~= toUpper(c);\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpv84fua0_.d(18): Error: undefined identifier `isLetter`\n/tmp/tmpv84fua0_.d(20): Error: undefined identifier `isUpper`\n/tmp/tmpv84fua0_.d(21): Error: undefined identifier `toLower`\n/tmp/tmpv84fua0_.d(23): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv84fua0_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    if (s.length == 0) return res;\n    foreach(i, c; s)\n    {\n        if (c.isLetter)\n        {\n            if (c.isUpper)\n                res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpwjqedji0.d(18): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpwjqedji0.d(20): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpwjqedji0.d(21): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpwjqedji0.d(23): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwjqedji0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgtdja9oe.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpgtdja9oe.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpgtdja9oe.d(20): Error: undefined identifier `toLower`\n/tmp/tmpgtdja9oe.d(22): Error: undefined identifier `toUpper`\n/tmp/tmpgtdja9oe.d(27): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgtdja9oe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                res ~= toLower(c);\n            else\n                res ~= toUpper(c);\n        }\n        else\n            res ~= c;\n    }\n    return res.length == 0 ? s : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprp_0cvhq.d(17): Error: undefined identifier `isLetter`\n/tmp/tmprp_0cvhq.d(19): Error: undefined identifier `isUpper`\n/tmp/tmprp_0cvhq.d(20): Error: undefined identifier `toLower`\n/tmp/tmprp_0cvhq.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprp_0cvhq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if(s.length == 0) return s;\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n                res ~= toUpper(c);\n            else\n                res ~= toLower(c);\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpjnft9ljk.d(18): Error: undefined identifier `isAlpha`\n/tmp/tmpjnft9ljk.d(20): Error: undefined identifier `isLower`\n/tmp/tmpjnft9ljk.d(21): Error: undefined identifier `toUpper`\n/tmp/tmpjnft9ljk.d(23): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjnft9ljk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw8g663g2.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpw8g663g2.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpw8g663g2.d(20): Error: undefined identifier `toLower`\n/tmp/tmpw8g663g2.d(22): Error: undefined identifier `toUpper`\n/tmp/tmpw8g663g2.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw8g663g2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n        if(c.isAlpha)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6tlh6xyj.d(19): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp6tlh6xyj.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp6tlh6xyj.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp6tlh6xyj.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6tlh6xyj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg09eljwa.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg09eljwa.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    if(s.length == 0)\n        return res;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            if(c.isUpper)\n                res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptnf05yh9.d(19): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmptnf05yh9.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmptnf05yh9.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmptnf05yh9.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptnf05yh9.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw6dz45uy.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpw6dz45uy.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpw6dz45uy.d(20): Error: undefined identifier `toLower`\n/tmp/tmpw6dz45uy.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw6dz45uy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg5w7dkui.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpg5w7dkui.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpg5w7dkui.d(20): Error: undefined identifier `toLower`\n/tmp/tmpg5w7dkui.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg5w7dkui.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4a5nm7gn.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp4a5nm7gn.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4a5nm7gn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toLower;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    if(result.length == 0)\n    {\n        return s.reverse;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdo2w3rkp.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpdo2w3rkp.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpdo2w3rkp.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdo2w3rkp.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if (c.isLetter)\n        {\n            if (c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3y41fje3.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp3y41fje3.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp3y41fje3.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp3y41fje3.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3y41fje3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_yb3tyny.d(19): Error: undefined identifier `isAlpha`\n/tmp/tmp_yb3tyny.d(21): Error: undefined identifier `isUpper`\n/tmp/tmp_yb3tyny.d(22): Error: undefined identifier `toLower`\n/tmp/tmp_yb3tyny.d(24): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_yb3tyny.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpfrxfvm3_.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpfrxfvm3_.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfrxfvm3_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isAlpha)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpo1ha1gnp.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpo1ha1gnp.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpo1ha1gnp.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpo1ha1gnp.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo1ha1gnp.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpq9zj4s7o.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpq9zj4s7o.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpq9zj4s7o.d(20): Error: undefined identifier `toLower`\n/tmp/tmpq9zj4s7o.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq9zj4s7o.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpktx0khz_.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpktx0khz_.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpktx0khz_.d(20): Error: undefined identifier `toLower`\n/tmp/tmpktx0khz_.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpktx0khz_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if (s.length == 0)\n        return s;\n    string result;\n    foreach (i, c; s)\n    {\n        if (c.isLetter)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpq1yipq_l.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpq1yipq_l.d(20): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq1yipq_l.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    if (s.length == 0)\n        return s;\n    foreach (i, c; s)\n    {\n        if (isLetter(c))\n            result ~= to!string(c).toUpper();\n        else\n            result ~= to!string(c).toLower();\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpyhp7wop0.d(19): Error: undefined identifier `isLetter`\n/tmp/tmpyhp7wop0.d(20): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpyhp7wop0.d(22): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhp7wop0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9mqsbhip.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp9mqsbhip.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9mqsbhip.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpwuw8ftzs.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpwuw8ftzs.d(19): Error: undefined identifier `toLower`\n/tmp/tmpwuw8ftzs.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpwuw8ftzs.d(19): Error: undefined identifier `toLower`\n/tmp/tmpwuw8ftzs.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwuw8ftzs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiguibmvu.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpiguibmvu.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpiguibmvu.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpiguibmvu.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiguibmvu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplopg8cbz.d(17): Error: undefined identifier `isLetter`\n/tmp/tmplopg8cbz.d(19): Error: undefined identifier `isUpper`\n/tmp/tmplopg8cbz.d(20): Error: undefined identifier `toLower`\n/tmp/tmplopg8cbz.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplopg8cbz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= toLower(c);\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.length == 0 ? s : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphqikil0l.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmphqikil0l.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphqikil0l.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if(s.length == 0)\n        return s;\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsynhityr.d(19): Error: undefined identifier `isAlpha`\n/tmp/tmpsynhityr.d(21): Error: undefined identifier `isUpper`\n/tmp/tmpsynhityr.d(22): Error: undefined identifier `toLower`\n/tmp/tmpsynhityr.d(24): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsynhityr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpod633trf.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpod633trf.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpod633trf.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpod633trf.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpod633trf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            result ~= c.toLower;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    if(result.length == 0)\n    {\n        return s.reverse;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9wh7gx1c.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp9wh7gx1c.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp9wh7gx1c.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9wh7gx1c.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpk_w_abim.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpk_w_abim.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_w_abim.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, ch; s)\n    {\n        if(isAlpha(ch))\n        {\n            if(isUpper(ch))\n                result ~= toLower(ch);\n            else\n                result ~= toUpper(ch);\n        }\n        else\n            result ~= ch;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp90c12hqy.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp90c12hqy.d(19): Error: undefined identifier `isUpper`\n/tmp/tmp90c12hqy.d(20): Error: undefined identifier `toLower`\n/tmp/tmp90c12hqy.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp90c12hqy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0) return s;\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c)) result ~= toUpper(c);\n            else result ~= toLower(c);\n        }\n        else result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5ftnnrgf.d(18): Error: undefined identifier `isAlpha`\n/tmp/tmp5ftnnrgf.d(20): Error: undefined identifier `isLower`\n/tmp/tmp5ftnnrgf.d(20): Error: undefined identifier `toUpper`\n/tmp/tmp5ftnnrgf.d(21): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ftnnrgf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5mm5x1a0.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp5mm5x1a0.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp5mm5x1a0.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp5mm5x1a0.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5mm5x1a0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.empty ? s : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpnrfqlt4j.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpnrfqlt4j.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpnrfqlt4j.d(26): Error: no property `empty` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnrfqlt4j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                res ~= toLower(c);\n            else\n                res ~= toUpper(c);\n        }\n        else\n            res ~= c;\n    }\n    return res.length == 0 ? s : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf47on0qx.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpf47on0qx.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpf47on0qx.d(20): Error: undefined identifier `toLower`\n/tmp/tmpf47on0qx.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf47on0qx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    if(result.length == 0)\n        return s.reverse;\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbuioaakh.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpbuioaakh.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpbuioaakh.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpbuioaakh.d(22): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpbuioaakh.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbuioaakh.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplopg8cbz.d(17): Error: undefined identifier `isLetter`\n/tmp/tmplopg8cbz.d(19): Error: undefined identifier `isUpper`\n/tmp/tmplopg8cbz.d(20): Error: undefined identifier `toLower`\n/tmp/tmplopg8cbz.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplopg8cbz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                res ~= toLower(c);\n            else\n                res ~= toUpper(c);\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpq2cdh5qn.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpq2cdh5qn.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpq2cdh5qn.d(20): Error: undefined identifier `toLower`\n/tmp/tmpq2cdh5qn.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq2cdh5qn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpq9zj4s7o.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpq9zj4s7o.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpq9zj4s7o.d(20): Error: undefined identifier `toLower`\n/tmp/tmpq9zj4s7o.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq9zj4s7o.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg09eljwa.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpg09eljwa.d(22): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg09eljwa.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdfl6krl0.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdfl6krl0.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpdfl6krl0.d(20): Error: undefined identifier `toLower`\n/tmp/tmpdfl6krl0.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdfl6krl0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.length == 0 ? s.dup.reverse : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp42h5y6ll.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp42h5y6ll.d(19): Error: undefined identifier `toLower`\n/tmp/tmp42h5y6ll.d(19): Error: undefined identifier `toUpper`\n/tmp/tmp42h5y6ll.d(19): Error: undefined identifier `toLower`\n/tmp/tmp42h5y6ll.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42h5y6ll.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbl0s4p0z.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpbl0s4p0z.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpbl0s4p0z.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpbl0s4p0z.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbl0s4p0z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= toLower(c);\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmph9utwa_i.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmph9utwa_i.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph9utwa_i.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toLower.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa3mp_oj8.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpa3mp_oj8.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpa3mp_oj8.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa3mp_oj8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp2_jtgnnh.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp2_jtgnnh.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp2_jtgnnh.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp2_jtgnnh.d(22): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmp2_jtgnnh.d(27): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2_jtgnnh.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_3pk5uxw.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp_3pk5uxw.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_3pk5uxw.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_3pk5uxw.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_3pk5uxw.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpml9r8rj1.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpml9r8rj1.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpml9r8rj1.d(20): Error: undefined identifier `toLower`\n/tmp/tmpml9r8rj1.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpml9r8rj1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp605inub9.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp605inub9.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp605inub9.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    int len = s.length;\n    string res = \"\";\n    if(len == 0)\n        return res;\n    foreach(i; 0..len)\n    {\n        if(s[i] >= 'a' && s[i] <= 'z')\n            res ~= to!string(toUpper(s[i]));\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n            res ~= to!string(toLower(s[i]));\n        else\n            res ~= to!string(s[i]);\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpzn50uzn2.d(14): Error: cannot implicitly convert expression `s.length` of type `ulong` to `int`\n/tmp/tmpzn50uzn2.d(21): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpzn50uzn2.d(23): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpzn50uzn2.d(25): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzn50uzn2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpml9r8rj1.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpml9r8rj1.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpml9r8rj1.d(20): Error: undefined identifier `toLower`\n/tmp/tmpml9r8rj1.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpml9r8rj1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            result ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpc211bk60.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpc211bk60.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc211bk60.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9mqsbhip.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp9mqsbhip.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9mqsbhip.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpml9r8rj1.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpml9r8rj1.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpml9r8rj1.d(20): Error: undefined identifier `toLower`\n/tmp/tmpml9r8rj1.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpml9r8rj1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd7yqsrkm.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpd7yqsrkm.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpd7yqsrkm.d(20): Error: undefined identifier `toLower`\n/tmp/tmpd7yqsrkm.d(22): Error: undefined identifier `toUpper`\n/tmp/tmpd7yqsrkm.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd7yqsrkm.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res;\n    if(s.length == 0)\n        return s;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                res ~= toLower(c);\n            else\n                res ~= toUpper(c);\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpyl2b3nwr.d(19): Error: undefined identifier `isLetter`\n/tmp/tmpyl2b3nwr.d(21): Error: undefined identifier `isUpper`\n/tmp/tmpyl2b3nwr.d(22): Error: undefined identifier `toLower`\n/tmp/tmpyl2b3nwr.d(24): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyl2b3nwr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpk_w_abim.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpk_w_abim.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_w_abim.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    if(s.empty)\n        return s;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplb70zd78.d(15): Error: no property `empty` for type `string`\n/tmp/tmplb70zd78.d(19): Error: undefined identifier `isAlpha`\n/tmp/tmplb70zd78.d(20): Error: undefined identifier `toLower`\n/tmp/tmplb70zd78.d(20): Error: undefined identifier `toUpper`\n/tmp/tmplb70zd78.d(20): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplb70zd78.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            res ~= c.toLower.toUpper;\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.length == 0 ? s.dup.reverse : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3mh9sv6c.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp3mh9sv6c.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp3mh9sv6c.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3mh9sv6c.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result.empty ? s.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpepipzrs2.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpepipzrs2.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpepipzrs2.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpepipzrs2.d(22): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpepipzrs2.d(27): Error: no property `empty` for type `string`\n/tmp/tmpepipzrs2.d(27): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpepipzrs2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    if(result.length == 0)\n        return reverse(s);\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpo7ppsy1p.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpo7ppsy1p.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpo7ppsy1p.d(20): Error: undefined identifier `toLower`\n/tmp/tmpo7ppsy1p.d(22): Error: undefined identifier `toUpper`\n/tmp/tmpo7ppsy1p.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo7ppsy1p.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            res ~= c.toLower;\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.length == 0 ? s.dup.reverse : res.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx2h07ngd.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpx2h07ngd.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpx2h07ngd.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpx2h07ngd.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx2h07ngd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toLower;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpy4kn40cs.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpy4kn40cs.d(19): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy4kn40cs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw6dz45uy.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpw6dz45uy.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpw6dz45uy.d(20): Error: undefined identifier `toLower`\n/tmp/tmpw6dz45uy.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw6dz45uy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4oce86kj.d(17): Error: undefined identifier `isLetter`\n/tmp/tmp4oce86kj.d(19): Error: undefined identifier `isUpper`\n/tmp/tmp4oce86kj.d(20): Error: undefined identifier `toLower`\n/tmp/tmp4oce86kj.d(22): Error: undefined identifier `toUpper`\n/tmp/tmp4oce86kj.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4oce86kj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            result ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpc211bk60.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpc211bk60.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc211bk60.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            res ~= c.toLower;\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5x24hwh6.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp5x24hwh6.d(19): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5x24hwh6.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toLower;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse : result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpispqb6z8.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpispqb6z8.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpispqb6z8.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpispqb6z8.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpispqb6z8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n        }\n        else\n            res ~= c;\n    }\n    return res.length == 0 ? s.dup.reverse : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvgxsaxya.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpvgxsaxya.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpvgxsaxya.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpvgxsaxya.d(22): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpvgxsaxya.d(27): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvgxsaxya.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd0bgqm8y.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpd0bgqm8y.d(19): Error: undefined identifier `toLower`\n/tmp/tmpd0bgqm8y.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpd0bgqm8y.d(19): Error: undefined identifier `toLower`\n/tmp/tmpd0bgqm8y.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd0bgqm8y.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpetghmf53.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpetghmf53.d(19): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpetghmf53.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpetghmf53.d(22): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpetghmf53.d(27): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpetghmf53.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isLower(c))\n                result ~= toUpper(c);\n            else\n                result ~= toLower(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp02xbqk0.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpp02xbqk0.d(19): Error: undefined identifier `isLower`\n/tmp/tmpp02xbqk0.d(20): Error: undefined identifier `toUpper`\n/tmp/tmpp02xbqk0.d(22): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp02xbqk0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    if(s.length == 0) return s;\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper) res ~= c.toLower;\n            else res ~= c.toUpper;\n        }\n        else res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxhkvxg95.d(18): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpxhkvxg95.d(20): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpxhkvxg95.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpxhkvxg95.d(21): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxhkvxg95.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            res ~= to!string(c).toUpper();\n        }\n        else\n        {\n            res ~= to!string(c).toLower();\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmvxhuo4z.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpmvxhuo4z.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpmvxhuo4z.d(23): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmvxhuo4z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplopg8cbz.d(17): Error: undefined identifier `isLetter`\n/tmp/tmplopg8cbz.d(19): Error: undefined identifier `isUpper`\n/tmp/tmplopg8cbz.d(20): Error: undefined identifier `toLower`\n/tmp/tmplopg8cbz.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplopg8cbz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return result;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpnqd1pbke.d(19): Error: undefined identifier `isLetter`\n/tmp/tmpnqd1pbke.d(21): Error: undefined identifier `isUpper`\n/tmp/tmpnqd1pbke.d(22): Error: undefined identifier `toLower`\n/tmp/tmpnqd1pbke.d(24): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnqd1pbke.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    return s.empty ? s : s.map!(a => a.isLetter ? a.toLower.isUpper ? a.toLower : a.toUpper : a).array.join;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp23o8dlmo.d(14): Error: no property `empty` for type `string`\n/tmp/tmp23o8dlmo.d(14): Error: no property `map` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp23o8dlmo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    if(s.length == 0) return res;\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            if(c.isUpper) res ~= c.toLower;\n            else res ~= c.toUpper;\n        }\n        else res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbonltrdy.d(18): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmpbonltrdy.d(20): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpbonltrdy.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpbonltrdy.d(21): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbonltrdy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return s;\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdndzbif5.d(19): Error: undefined identifier `isLetter`\n/tmp/tmpdndzbif5.d(21): Error: undefined identifier `isUpper`\n/tmp/tmpdndzbif5.d(22): Error: undefined identifier `toLower`\n/tmp/tmpdndzbif5.d(24): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdndzbif5.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string ret = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n                ret ~= toUpper(c);\n            else\n                ret ~= toLower(c);\n        }\n        else\n            ret ~= c;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp41kkkrt7.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp41kkkrt7.d(19): Error: undefined identifier `isLower`\n/tmp/tmp41kkkrt7.d(20): Error: undefined identifier `toUpper`\n/tmp/tmp41kkkrt7.d(22): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp41kkkrt7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpml9r8rj1.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpml9r8rj1.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpml9r8rj1.d(20): Error: undefined identifier `toLower`\n/tmp/tmpml9r8rj1.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpml9r8rj1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result ~= to!string(c ^ ' ');\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpk_w_abim.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpk_w_abim.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk_w_abim.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    if(s.length == 0)\n        return res;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                res ~= c.toLower;\n            else\n                res ~= c.toUpper;\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxs6thv9s.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpxs6thv9s.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpxs6thv9s.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpxs6thv9s.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxs6thv9s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdfl6krl0.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdfl6krl0.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpdfl6krl0.d(20): Error: undefined identifier `toLower`\n/tmp/tmpdfl6krl0.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdfl6krl0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s.dup.reverse : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3q2_0unl.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp3q2_0unl.d(19): Error: undefined identifier `isUpper`\n/tmp/tmp3q2_0unl.d(20): Error: undefined identifier `toLower`\n/tmp/tmp3q2_0unl.d(22): Error: undefined identifier `toUpper`\n/tmp/tmp3q2_0unl.d(27): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3q2_0unl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplopg8cbz.d(17): Error: undefined identifier `isLetter`\n/tmp/tmplopg8cbz.d(19): Error: undefined identifier `isUpper`\n/tmp/tmplopg8cbz.d(20): Error: undefined identifier `toLower`\n/tmp/tmplopg8cbz.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplopg8cbz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result ~= to!string(c);\n        }\n        else\n        {\n            result ~= to!string(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp8m4gfqfs.d(17): Error: undefined identifier `isLetter`\n/tmp/tmp8m4gfqfs.d(19): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmp8m4gfqfs.d(23): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8m4gfqfs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpml9r8rj1.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpml9r8rj1.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpml9r8rj1.d(20): Error: undefined identifier `toLower`\n/tmp/tmpml9r8rj1.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpml9r8rj1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i, c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd7yqsrkm.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpd7yqsrkm.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpd7yqsrkm.d(20): Error: undefined identifier `toLower`\n/tmp/tmpd7yqsrkm.d(22): Error: undefined identifier `toUpper`\n/tmp/tmpd7yqsrkm.d(28): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(char[])`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd7yqsrkm.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9w6iaewh.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp9w6iaewh.d(19): Error: undefined identifier `isUpper`\n/tmp/tmp9w6iaewh.d(20): Error: undefined identifier `toLower`\n/tmp/tmp9w6iaewh.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9w6iaewh.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res;\n    if(s.empty)\n        return s;\n    foreach(i,c;s)\n    {\n        if(c.isLetter)\n            res ~= c.toLower;\n        else\n            res ~= c;\n    }\n    if(res.empty)\n        return s.reverse;\n    return res.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmb73jqtu.d(15): Error: no property `empty` for type `string`\n/tmp/tmpmb73jqtu.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpmb73jqtu.d(20): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpmb73jqtu.d(24): Error: no property `empty` for type `string`\n/tmp/tmpmb73jqtu.d(25): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpmb73jqtu.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-u",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(i, c; s)\n    {\n        if(isLetter(c))\n        {\n            if(isUpper(c))\n                res ~= toLower(c);\n            else\n                res ~= toUpper(c);\n        }\n        else\n            res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpowrk5ia2.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpowrk5ia2.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpowrk5ia2.d(20): Error: undefined identifier `toLower`\n/tmp/tmpowrk5ia2.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpowrk5ia2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    if(s.length == 0)\n        return result;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            if(c.isUpper)\n                result ~= c.toLower;\n            else\n                result ~= c.toUpper;\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbl0s4p0z.d(19): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmpbl0s4p0z.d(21): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpbl0s4p0z.d(22): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpbl0s4p0z.d(24): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbl0s4p0z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n            result ~= toLower(c) ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsu5iqcxe.d(17): Error: undefined identifier `isLetter`\n/tmp/tmpsu5iqcxe.d(19): Error: undefined identifier `toLower`\n/tmp/tmpsu5iqcxe.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpsu5iqcxe.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsu5iqcxe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result;\n    foreach(i, c; s)\n    {\n        if(c.isLetter)\n        {\n            result ~= c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp65xnt_4d.d(17): Error: no property `isLetter` for type `immutable(char)`\n/tmp/tmp65xnt_4d.d(19): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp65xnt_4d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(ch; s)\n    {\n        if(isAlpha(ch))\n        {\n            if(isLower(ch))\n                result ~= toUpper(ch);\n            else\n                result ~= toLower(ch);\n        }\n        else\n            result ~= ch;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4os212gw.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp4os212gw.d(19): Error: undefined identifier `isLower`\n/tmp/tmp4os212gw.d(20): Error: undefined identifier `toUpper`\n/tmp/tmp4os212gw.d(22): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4os212gw.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string res = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            res ~= toLower(c) == c ? toUpper(c) : toLower(c);\n        }\n        else\n        {\n            res ~= c;\n        }\n    }\n    return res.length == 0 ? s : res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdlj9hw0d.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpdlj9hw0d.d(19): Error: undefined identifier `toLower`\n/tmp/tmpdlj9hw0d.d(19): Error: undefined identifier `toUpper`\n/tmp/tmpdlj9hw0d.d(19): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdlj9hw0d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(isAlpha(s[i]))\n        {\n            if(isUpper(s[i]))\n            {\n                result ~= toLower(s[i]);\n            }\n            else\n            {\n                result ~= toUpper(s[i]);\n            }\n        }\n        else\n        {\n            result ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3uyaeg0k.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp3uyaeg0k.d(19): Error: undefined identifier `isUpper`\n/tmp/tmp3uyaeg0k.d(21): Error: undefined identifier `toLower`\n/tmp/tmp3uyaeg0k.d(25): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3uyaeg0k.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if(isAlpha(s[i]))\n        {\n            if(isUpper(s[i]))\n            {\n                result ~= toLower(s[i]);\n            }\n            else\n            {\n                result ~= toUpper(s[i]);\n            }\n        }\n        else\n        {\n            result ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3uyaeg0k.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmp3uyaeg0k.d(19): Error: undefined identifier `isUpper`\n/tmp/tmp3uyaeg0k.d(21): Error: undefined identifier `toLower`\n/tmp/tmp3uyaeg0k.d(25): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3uyaeg0k.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n        {\n            if(isUpper(c))\n                result ~= toLower(c);\n            else\n                result ~= toUpper(c);\n        }\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpb0k6irfg.d(17): Error: undefined identifier `isAlpha`\n/tmp/tmpb0k6irfg.d(19): Error: undefined identifier `isUpper`\n/tmp/tmpb0k6irfg.d(20): Error: undefined identifier `toLower`\n/tmp/tmpb0k6irfg.d(22): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb0k6irfg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163919
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n                \n*/\nstring solve(string s) \n{\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            result ~= c.toLower;\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result.length == 0 ? s.reverse : result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp43nntdzm.d(17): Error: no property `isAlpha` for type `immutable(char)`\n/tmp/tmp43nntdzm.d(19): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp43nntdzm.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmp43nntdzm.d(26): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`, candidates are:\n/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43nntdzm.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163920
    }
  ]
}
{
  "language": "d",
  "name": "HumanEval_27_flip_case",
  "results": [
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else if(c.isLower) \n        {\n            result ~= c.toUpper;\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphe99t_px.d(9): Error: `string` is used as a type\n/tmp/tmphe99t_px.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmphe99t_px.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmphe99t_px.d(16): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmphe99t_px.d(18): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphe99t_px.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp573mhu53.d(9): Error: `string` is used as a type\n/tmp/tmp573mhu53.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmp573mhu53.d(13): Error: no property `toLower` for type `char`\n/tmp/tmp573mhu53.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp573mhu53.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1qnl7_y2.d(9): Error: `string` is used as a type\n/tmp/tmp1qnl7_y2.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp1qnl7_y2.d(13): Error: undefined identifier `toLower`\n/tmp/tmp1qnl7_y2.d(14): Error: undefined identifier `isLower`\n/tmp/tmp1qnl7_y2.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qnl7_y2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n        else if(isLower(c)) \n        {\n            result ~= toUpper(c);\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpss9uusx_.d(9): Error: `string` is used as a type\n/tmp/tmpss9uusx_.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpss9uusx_.d(14): Error: undefined identifier `toLower`\n/tmp/tmpss9uusx_.d(16): Error: undefined identifier `isLower`\n/tmp/tmpss9uusx_.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss9uusx_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        }\n        else \n        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvvurye7y.d(9): Error: `string` is used as a type\n/tmp/tmpvvurye7y.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpvvurye7y.d(14): Error: undefined identifier `toLower`\n/tmp/tmpvvurye7y.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvvurye7y.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprw0sfx1s.d(9): Error: `string` is used as a type\n/tmp/tmprw0sfx1s.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmprw0sfx1s.d(13): Error: no property `toLower` for type `char`\n/tmp/tmprw0sfx1s.d(14): Error: no property `isLower` for type `char`\n/tmp/tmprw0sfx1s.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprw0sfx1s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    return string.map!(c => c.isUpper ? toLower(c) : toUpper(c));\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpjkft5b48.d(9): Error: no property `map` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjkft5b48.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5eig974h.d(9): Error: `string` is used as a type\n/tmp/tmp5eig974h.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp5eig974h.d(13): Error: undefined identifier `toLower`\n/tmp/tmp5eig974h.d(14): Error: undefined identifier `isLower`\n/tmp/tmp5eig974h.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5eig974h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5eig974h.d(9): Error: `string` is used as a type\n/tmp/tmp5eig974h.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp5eig974h.d(13): Error: undefined identifier `toLower`\n/tmp/tmp5eig974h.d(14): Error: undefined identifier `isLower`\n/tmp/tmp5eig974h.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5eig974h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c.toLower;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpick2991p.d(9): Error: `string` is used as a type\n/tmp/tmpick2991p.d(12): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpick2991p.d(13): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpick2991p.d(15): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpick2991p.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvb22it5v.d(9): Error: `string` is used as a type\n/tmp/tmpvb22it5v.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmpvb22it5v.d(13): Error: no property `toLower` for type `char`\n/tmp/tmpvb22it5v.d(14): Error: no property `isLower` for type `char`\n/tmp/tmpvb22it5v.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvb22it5v.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeghbk9wj.d(9): Error: `string` is used as a type\n/tmp/tmpeghbk9wj.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeghbk9wj.d(14): Error: undefined identifier `toLower`\n/tmp/tmpeghbk9wj.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeghbk9wj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else \n        {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpcbt5gm23.d(9): Error: `string` is used as a type\n/tmp/tmpcbt5gm23.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpcbt5gm23.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpcbt5gm23.d(18): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcbt5gm23.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1qnl7_y2.d(9): Error: `string` is used as a type\n/tmp/tmp1qnl7_y2.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp1qnl7_y2.d(13): Error: undefined identifier `toLower`\n/tmp/tmp1qnl7_y2.d(14): Error: undefined identifier `isLower`\n/tmp/tmp1qnl7_y2.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qnl7_y2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n        else if (isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvp17im53.d(9): Error: `string` is used as a type\n/tmp/tmpvp17im53.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpvp17im53.d(13): Error: undefined identifier `toLower`\n/tmp/tmpvp17im53.d(14): Error: undefined identifier `isLower`\n/tmp/tmpvp17im53.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvp17im53.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprw0sfx1s.d(9): Error: `string` is used as a type\n/tmp/tmprw0sfx1s.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmprw0sfx1s.d(13): Error: no property `toLower` for type `char`\n/tmp/tmprw0sfx1s.d(14): Error: no property `isLower` for type `char`\n/tmp/tmprw0sfx1s.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprw0sfx1s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(ch; string)\n    {\n        if(isUpper(ch))\n            result ~= toLower(ch);\n        else\n            result ~= toUpper(ch);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4y_5p4v8.d(9): Error: `string` is used as a type\n/tmp/tmp4y_5p4v8.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp4y_5p4v8.d(13): Error: undefined identifier `toLower`\n/tmp/tmp4y_5p4v8.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4y_5p4v8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1qnl7_y2.d(9): Error: `string` is used as a type\n/tmp/tmp1qnl7_y2.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp1qnl7_y2.d(13): Error: undefined identifier `toLower`\n/tmp/tmp1qnl7_y2.d(14): Error: undefined identifier `isLower`\n/tmp/tmp1qnl7_y2.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qnl7_y2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        result ~= c.isUpper ? toLower(c) : toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiuqf9tgx.d(9): Error: `string` is used as a type\n/tmp/tmpiuqf9tgx.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpiuqf9tgx.d(12): Error: undefined identifier `toLower`\n/tmp/tmpiuqf9tgx.d(12): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiuqf9tgx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else \n        {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphq1pdlkn.d(9): Error: `string` is used as a type\n/tmp/tmphq1pdlkn.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmphq1pdlkn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmphq1pdlkn.d(18): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphq1pdlkn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(c.isLower) \n        {\n            result ~= c.toUpper;\n        } \n        else if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprh4f6rtr.d(9): Error: `string` is used as a type\n/tmp/tmprh4f6rtr.d(12): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmprh4f6rtr.d(14): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmprh4f6rtr.d(16): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmprh4f6rtr.d(18): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprh4f6rtr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string flipped_string;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n        {\n            flipped_string ~= toLower(c);\n        }\n        else if(isLower(c))\n        {\n            flipped_string ~= toUpper(c);\n        }\n        else\n        {\n            flipped_string ~= c;\n        }\n    }\n    return flipped_string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprs1or2co.d(9): Error: `string` is used as a type\n/tmp/tmprs1or2co.d(12): Error: undefined identifier `isUpper`\n/tmp/tmprs1or2co.d(14): Error: undefined identifier `toLower`\n/tmp/tmprs1or2co.d(16): Error: undefined identifier `isLower`\n/tmp/tmprs1or2co.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprs1or2co.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1qnl7_y2.d(9): Error: `string` is used as a type\n/tmp/tmp1qnl7_y2.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp1qnl7_y2.d(13): Error: undefined identifier `toLower`\n/tmp/tmp1qnl7_y2.d(14): Error: undefined identifier `isLower`\n/tmp/tmp1qnl7_y2.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qnl7_y2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxe48ctt7.d(9): Error: `string` is used as a type\n/tmp/tmpxe48ctt7.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpxe48ctt7.d(14): Error: undefined identifier `toLower`\n/tmp/tmpxe48ctt7.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxe48ctt7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_705o0so.d(9): Error: `string` is used as a type\n/tmp/tmp_705o0so.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp_705o0so.d(13): Error: undefined identifier `toLower`\n/tmp/tmp_705o0so.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_705o0so.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n        else if (isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg6_nsuio.d(9): Error: `string` is used as a type\n/tmp/tmpg6_nsuio.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpg6_nsuio.d(13): Error: undefined identifier `toLower`\n/tmp/tmpg6_nsuio.d(14): Error: undefined identifier `isLower`\n/tmp/tmpg6_nsuio.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg6_nsuio.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n        else if(isLower(c)) \n        {\n            result ~= toUpper(c);\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpss9uusx_.d(9): Error: `string` is used as a type\n/tmp/tmpss9uusx_.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpss9uusx_.d(14): Error: undefined identifier `toLower`\n/tmp/tmpss9uusx_.d(16): Error: undefined identifier `isLower`\n/tmp/tmpss9uusx_.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss9uusx_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n            {\n                result ~= toUpper(c);\n            }\n            else\n            {\n                result ~= toLower(c);\n            }\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd06mk6s7.d(9): Error: `string` is used as a type\n/tmp/tmpd06mk6s7.d(12): Error: undefined identifier `isAlpha`\n/tmp/tmpd06mk6s7.d(14): Error: undefined identifier `isLower`\n/tmp/tmpd06mk6s7.d(16): Error: undefined identifier `toUpper`\n/tmp/tmpd06mk6s7.d(20): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd06mk6s7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n        else if (isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg6_nsuio.d(9): Error: `string` is used as a type\n/tmp/tmpg6_nsuio.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpg6_nsuio.d(13): Error: undefined identifier `toLower`\n/tmp/tmpg6_nsuio.d(14): Error: undefined identifier `isLower`\n/tmp/tmpg6_nsuio.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg6_nsuio.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else \n        {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n}\n/*\n    For a given string, return a new string with all vowels removed.\n*/\nstring remove_vowels(string string) \n{\n    string result;\n    foreach(char c; string) \n    {\n        if(c.isAlpha) \n        {\n            if(c.toLower !in \"aeiou\") \n            {\n                result ~= c;\n            }\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n/*\n    For a given string, return a new string with all consonants removed.\n*/\nstring remove_consonants(string string) \n{\n    string result;\n    foreach(char c; string) \n    {\n        if(c.isAlpha) \n        {\n            if(c.toLower in \"aeiou\") \n            {\n                result ~= c;\n            }\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n/*\n    For a given string, return a new string with all non-alphanumeric characters removed.\n*/\nstring remove_non_alphanumeric(string string) \n{\n    string result;\n    foreach(char c; string) \n    {\n        if(c.isAlphaNum) \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n/*\n    For a given string, return a new string with all non-alphabetic characters removed.\n*/\nstring remove_non_alphabetic(string string) \n{\n    string result;\n    foreach(char c; string) \n    {\n        if(c.isAlpha) \n        {\n            result ~= c;\n        }\n    }\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpyd66kk5m.d(96): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyd66kk5m.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1qnl7_y2.d(9): Error: `string` is used as a type\n/tmp/tmp1qnl7_y2.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp1qnl7_y2.d(13): Error: undefined identifier `toLower`\n/tmp/tmp1qnl7_y2.d(14): Error: undefined identifier `isLower`\n/tmp/tmp1qnl7_y2.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qnl7_y2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else \n        {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpllgx_had.d(9): Error: `string` is used as a type\n/tmp/tmpllgx_had.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpllgx_had.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpllgx_had.d(18): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpllgx_had.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1qnl7_y2.d(9): Error: `string` is used as a type\n/tmp/tmp1qnl7_y2.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp1qnl7_y2.d(13): Error: undefined identifier `toLower`\n/tmp/tmp1qnl7_y2.d(14): Error: undefined identifier `isLower`\n/tmp/tmp1qnl7_y2.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qnl7_y2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n        else if(isLower(c)) \n        {\n            result ~= toUpper(c);\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpss9uusx_.d(9): Error: `string` is used as a type\n/tmp/tmpss9uusx_.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpss9uusx_.d(14): Error: undefined identifier `toLower`\n/tmp/tmpss9uusx_.d(16): Error: undefined identifier `isLower`\n/tmp/tmpss9uusx_.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss9uusx_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n        else if (isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpnymveeoi.d(9): Error: `string` is used as a type\n/tmp/tmpnymveeoi.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpnymveeoi.d(13): Error: undefined identifier `toLower`\n/tmp/tmpnymveeoi.d(14): Error: undefined identifier `isLower`\n/tmp/tmpnymveeoi.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnymveeoi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else \n        {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphq1pdlkn.d(9): Error: `string` is used as a type\n/tmp/tmphq1pdlkn.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmphq1pdlkn.d(14): Error: no property `toLower` for type `char`\n/tmp/tmphq1pdlkn.d(18): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphq1pdlkn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw5j_h8th.d(9): Error: `string` is used as a type\n/tmp/tmpw5j_h8th.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmpw5j_h8th.d(13): Error: no property `toLower` for type `char`\n/tmp/tmpw5j_h8th.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw5j_h8th.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else if(c.isLower) \n        {\n            result ~= c.toUpper;\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpfnocxcxo.d(9): Error: `string` is used as a type\n/tmp/tmpfnocxcxo.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmpfnocxcxo.d(14): Error: no property `toLower` for type `char`\n/tmp/tmpfnocxcxo.d(16): Error: no property `isLower` for type `char`\n/tmp/tmpfnocxcxo.d(18): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfnocxcxo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if (c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpimeokqab.d(9): Error: `string` is used as a type\n/tmp/tmpimeokqab.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpimeokqab.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpimeokqab.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpimeokqab.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp573mhu53.d(9): Error: `string` is used as a type\n/tmp/tmp573mhu53.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmp573mhu53.d(13): Error: no property `toLower` for type `char`\n/tmp/tmp573mhu53.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp573mhu53.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if (c.isUpper)\n            result ~= c.toLower;\n        else if (c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpi2yqthhx.d(9): Error: `string` is used as a type\n/tmp/tmpi2yqthhx.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmpi2yqthhx.d(13): Error: no property `toLower` for type `char`\n/tmp/tmpi2yqthhx.d(14): Error: no property `isLower` for type `char`\n/tmp/tmpi2yqthhx.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi2yqthhx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_705o0so.d(9): Error: `string` is used as a type\n/tmp/tmp_705o0so.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp_705o0so.d(13): Error: undefined identifier `toLower`\n/tmp/tmp_705o0so.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_705o0so.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n        else if (isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpnymveeoi.d(9): Error: `string` is used as a type\n/tmp/tmpnymveeoi.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpnymveeoi.d(13): Error: undefined identifier `toLower`\n/tmp/tmpnymveeoi.d(14): Error: undefined identifier `isLower`\n/tmp/tmpnymveeoi.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnymveeoi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string) \n    {\n        if (c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else \n        {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp2xtvrc13.d(9): Error: `string` is used as a type\n/tmp/tmp2xtvrc13.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmp2xtvrc13.d(14): Error: no property `toLower` for type `char`\n/tmp/tmp2xtvrc13.d(18): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2xtvrc13.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    return string.map!(a => a.isUpper ? a.toLower : a.toUpper)();\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpis9pz8ri.d(9): Error: no property `map` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpis9pz8ri.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvb22it5v.d(9): Error: `string` is used as a type\n/tmp/tmpvb22it5v.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmpvb22it5v.d(13): Error: no property `toLower` for type `char`\n/tmp/tmpvb22it5v.d(14): Error: no property `isLower` for type `char`\n/tmp/tmpvb22it5v.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvb22it5v.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(ch; string)\n    {\n        if(isUpper(ch))\n            result ~= toLower(ch);\n        else if(isLower(ch))\n            result ~= toUpper(ch);\n        else\n            result ~= ch;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppwcznwdc.d(9): Error: `string` is used as a type\n/tmp/tmppwcznwdc.d(12): Error: undefined identifier `isUpper`\n/tmp/tmppwcznwdc.d(13): Error: undefined identifier `toLower`\n/tmp/tmppwcznwdc.d(14): Error: undefined identifier `isLower`\n/tmp/tmppwcznwdc.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppwcznwdc.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else \n        {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpllgx_had.d(9): Error: `string` is used as a type\n/tmp/tmpllgx_had.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpllgx_had.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpllgx_had.d(18): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpllgx_had.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string) \n    {\n        if (c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else \n        {\n            result ~= c.toUpper;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp2xtvrc13.d(9): Error: `string` is used as a type\n/tmp/tmp2xtvrc13.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmp2xtvrc13.d(14): Error: no property `toLower` for type `char`\n/tmp/tmp2xtvrc13.d(18): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2xtvrc13.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if (c.isUpper)\n            result ~= c.toLower;\n        else if (c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpp1t3kkr_.d(9): Error: `string` is used as a type\n/tmp/tmpp1t3kkr_.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpp1t3kkr_.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpp1t3kkr_.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpp1t3kkr_.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp1t3kkr_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuwac3bu0.d(9): Error: `string` is used as a type\n/tmp/tmpuwac3bu0.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpuwac3bu0.d(14): Error: undefined identifier `toLower`\n/tmp/tmpuwac3bu0.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuwac3bu0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeghbk9wj.d(9): Error: `string` is used as a type\n/tmp/tmpeghbk9wj.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeghbk9wj.d(14): Error: undefined identifier `toLower`\n/tmp/tmpeghbk9wj.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeghbk9wj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5eig974h.d(9): Error: `string` is used as a type\n/tmp/tmp5eig974h.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp5eig974h.d(13): Error: undefined identifier `toLower`\n/tmp/tmp5eig974h.d(14): Error: undefined identifier `isLower`\n/tmp/tmp5eig974h.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5eig974h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5eig974h.d(9): Error: `string` is used as a type\n/tmp/tmp5eig974h.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp5eig974h.d(13): Error: undefined identifier `toLower`\n/tmp/tmp5eig974h.d(14): Error: undefined identifier `isLower`\n/tmp/tmp5eig974h.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5eig974h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        result ~= isUpper(c) ? toLower(c) : toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmph4hwn61m.d(9): Error: `string` is used as a type\n/tmp/tmph4hwn61m.d(12): Error: undefined identifier `isUpper`\n/tmp/tmph4hwn61m.d(12): Error: undefined identifier `toLower`\n/tmp/tmph4hwn61m.d(12): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph4hwn61m.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5eig974h.d(9): Error: `string` is used as a type\n/tmp/tmp5eig974h.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp5eig974h.d(13): Error: undefined identifier `toLower`\n/tmp/tmp5eig974h.d(14): Error: undefined identifier `isLower`\n/tmp/tmp5eig974h.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5eig974h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(isAlpha(c)) \n        {\n            if(isLower(c)) \n            {\n                result ~= toUpper(c);\n            } \n            else \n            {\n                result ~= toLower(c);\n            }\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4qykuds8.d(9): Error: `string` is used as a type\n/tmp/tmp4qykuds8.d(12): Error: undefined identifier `isAlpha`\n/tmp/tmp4qykuds8.d(14): Error: undefined identifier `isLower`\n/tmp/tmp4qykuds8.d(16): Error: undefined identifier `toUpper`\n/tmp/tmp4qykuds8.d(20): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4qykuds8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else if(c.isLower) \n        {\n            result ~= c.toUpper;\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphe99t_px.d(9): Error: `string` is used as a type\n/tmp/tmphe99t_px.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmphe99t_px.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmphe99t_px.d(16): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmphe99t_px.d(18): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphe99t_px.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprw0sfx1s.d(9): Error: `string` is used as a type\n/tmp/tmprw0sfx1s.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmprw0sfx1s.d(13): Error: no property `toLower` for type `char`\n/tmp/tmprw0sfx1s.d(14): Error: no property `isLower` for type `char`\n/tmp/tmprw0sfx1s.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprw0sfx1s.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n        else if (isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdoyhu8dc.d(9): Error: `string` is used as a type\n/tmp/tmpdoyhu8dc.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpdoyhu8dc.d(13): Error: undefined identifier `toLower`\n/tmp/tmpdoyhu8dc.d(14): Error: undefined identifier `isLower`\n/tmp/tmpdoyhu8dc.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdoyhu8dc.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpglkpaemq.d(9): Error: `string` is used as a type\n/tmp/tmpglkpaemq.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpglkpaemq.d(13): Error: undefined identifier `toLower`\n/tmp/tmpglkpaemq.d(14): Error: undefined identifier `isLower`\n/tmp/tmpglkpaemq.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpglkpaemq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    return string.map!(a => a.isUpper ? a.toLower : a.toUpper)();\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpis9pz8ri.d(9): Error: no property `map` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpis9pz8ri.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(char c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5eig974h.d(9): Error: `string` is used as a type\n/tmp/tmp5eig974h.d(12): Error: undefined identifier `isUpper`\n/tmp/tmp5eig974h.d(13): Error: undefined identifier `toLower`\n/tmp/tmp5eig974h.d(14): Error: undefined identifier `isLower`\n/tmp/tmp5eig974h.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5eig974h.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if (isUpper(c))\n            result ~= toLower(c);\n        else if (isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvp17im53.d(9): Error: `string` is used as a type\n/tmp/tmpvp17im53.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpvp17im53.d(13): Error: undefined identifier `toLower`\n/tmp/tmpvp17im53.d(14): Error: undefined identifier `isLower`\n/tmp/tmpvp17im53.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvp17im53.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsya2ujbn.d(9): Error: `string` is used as a type\n/tmp/tmpsya2ujbn.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpsya2ujbn.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsya2ujbn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else if(c.isLower) \n        {\n            result ~= c.toUpper;\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphe99t_px.d(9): Error: `string` is used as a type\n/tmp/tmphe99t_px.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmphe99t_px.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmphe99t_px.d(16): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmphe99t_px.d(18): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphe99t_px.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmps27bqswq.d(9): Error: `string` is used as a type\n/tmp/tmps27bqswq.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmps27bqswq.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmps27bqswq.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps27bqswq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(ch; string)\n    {\n        if(isUpper(ch))\n            result ~= toLower(ch);\n        else if(isLower(ch))\n            result ~= toUpper(ch);\n        else\n            result ~= ch;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppwcznwdc.d(9): Error: `string` is used as a type\n/tmp/tmppwcznwdc.d(12): Error: undefined identifier `isUpper`\n/tmp/tmppwcznwdc.d(13): Error: undefined identifier `toLower`\n/tmp/tmppwcznwdc.d(14): Error: undefined identifier `isLower`\n/tmp/tmppwcznwdc.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppwcznwdc.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    return string.map!(c => isUpper(c) ? toLower(c) : toUpper(c));\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmph2ggx2uf.d(9): Error: no property `map` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph2ggx2uf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_n42u1w4.d(9): Error: `string` is used as a type\n/tmp/tmp_n42u1w4.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmp_n42u1w4.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_n42u1w4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpl5j8652f.d(9): Error: `string` is used as a type\n/tmp/tmpl5j8652f.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpl5j8652f.d(13): Error: undefined identifier `toLower`\n/tmp/tmpl5j8652f.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl5j8652f.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(c.isUpper)\n            result ~= c.toLower;\n        else if(c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqig0wjtf.d(9): Error: `string` is used as a type\n/tmp/tmpqig0wjtf.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(14): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpqig0wjtf.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqig0wjtf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeghbk9wj.d(9): Error: `string` is used as a type\n/tmp/tmpeghbk9wj.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeghbk9wj.d(14): Error: undefined identifier `toLower`\n/tmp/tmpeghbk9wj.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeghbk9wj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(isUpper(c)) \n        {\n            result ~= toLower(c);\n        } \n        else \n        {\n            result ~= toUpper(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxe48ctt7.d(9): Error: `string` is used as a type\n/tmp/tmpxe48ctt7.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpxe48ctt7.d(14): Error: undefined identifier `toLower`\n/tmp/tmpxe48ctt7.d(18): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxe48ctt7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string) \n    {\n        if(c.isUpper) \n        {\n            result ~= c.toLower;\n        } \n        else if(c.isLower) \n        {\n            result ~= c.toUpper;\n        } \n        else \n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphe99t_px.d(9): Error: `string` is used as a type\n/tmp/tmphe99t_px.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmphe99t_px.d(14): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmphe99t_px.d(16): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmphe99t_px.d(18): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphe99t_px.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(c.isLower)\n            result ~= c.toUpper;\n        else if(c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpu3xpatk0.d(9): Error: `string` is used as a type\n/tmp/tmpu3xpatk0.d(12): Error: no property `isLower` for type `immutable(char)`\n/tmp/tmpu3xpatk0.d(13): Error: no property `toUpper` for type `immutable(char)`\n/tmp/tmpu3xpatk0.d(14): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpu3xpatk0.d(15): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu3xpatk0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isAlpha(c))\n        {\n            if(isLower(c))\n            {\n                result ~= toUpper(c);\n            }\n            else\n            {\n                result ~= toLower(c);\n            }\n        }\n        else\n        {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp8r51t3wb.d(9): Error: `string` is used as a type\n/tmp/tmp8r51t3wb.d(12): Error: undefined identifier `isAlpha`\n/tmp/tmp8r51t3wb.d(14): Error: undefined identifier `isLower`\n/tmp/tmp8r51t3wb.d(16): Error: undefined identifier `toUpper`\n/tmp/tmp8r51t3wb.d(20): Error: undefined identifier `toLower`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8r51t3wb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if (c.isUpper)\n            result ~= c.toLower;\n        else\n            result ~= c.toUpper;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpfjzt1s6m.d(9): Error: `string` is used as a type\n/tmp/tmpfjzt1s6m.d(12): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpfjzt1s6m.d(13): Error: no property `toLower` for type `immutable(char)`\n/tmp/tmpfjzt1s6m.d(15): Error: no property `toUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfjzt1s6m.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else\n            result ~= toUpper(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplda344u1.d(9): Error: `string` is used as a type\n/tmp/tmplda344u1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmplda344u1.d(13): Error: undefined identifier `toLower`\n/tmp/tmplda344u1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplda344u1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(dchar c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpn5uv58tn.d(9): Error: `string` is used as a type\n/tmp/tmpn5uv58tn.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpn5uv58tn.d(13): Error: undefined identifier `toLower`\n/tmp/tmpn5uv58tn.d(14): Error: undefined identifier `isLower`\n/tmp/tmpn5uv58tn.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5uv58tn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result;\n    foreach(char c; string)\n    {\n        if (c.isUpper)\n            result ~= c.toLower;\n        else if (c.isLower)\n            result ~= c.toUpper;\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1gcddcqe.d(9): Error: `string` is used as a type\n/tmp/tmp1gcddcqe.d(12): Error: no property `isUpper` for type `char`\n/tmp/tmp1gcddcqe.d(13): Error: no property `toLower` for type `char`\n/tmp/tmp1gcddcqe.d(14): Error: no property `isLower` for type `char`\n/tmp/tmp1gcddcqe.d(15): Error: no property `toUpper` for type `char`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1gcddcqe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    foreach(c; string)\n    {\n        if(isUpper(c))\n            result ~= toLower(c);\n        else if(isLower(c))\n            result ~= toUpper(c);\n        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeydyjrg1.d(9): Error: `string` is used as a type\n/tmp/tmpeydyjrg1.d(12): Error: undefined identifier `isUpper`\n/tmp/tmpeydyjrg1.d(13): Error: undefined identifier `toLower`\n/tmp/tmpeydyjrg1.d(14): Error: undefined identifier `isLower`\n/tmp/tmpeydyjrg1.d(15): Error: undefined identifier `toUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeydyjrg1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660163918
    }
  ]
}
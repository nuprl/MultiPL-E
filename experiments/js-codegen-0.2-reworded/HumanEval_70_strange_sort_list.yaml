name: HumanEval_70_strange_sort_list
language: js
prompt: "//Given array of integers, return array in strange order.\n// Strange sorting,\
  \ is when you start with the minimum value,\n// then maximum of the remaining integers,\
  \ then minimum and so on.\n// Examples:\n// >>> strange_sort_list([1, 2, 3, 4])\n\
  // [1, 4, 2, 3]\n// >>> strange_sort_list([5, 5, 5, 5])\n// [5, 5, 5, 5]\n// >>>\
  \ strange_sort_list([])\n// []\nfunction strange_sort_list(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = strange_sort_list;\n  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 4, 2, 3]);\n\
  \  assert.deepEqual(candidate([5, 6, 7, 8, 9]),[5, 9, 6, 8, 7]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5]),[1, 5, 2, 4, 3]);\n  assert.deepEqual(candidate([5, 6, 7, 8, 9, 1]),[1,\
  \ 9, 5, 8, 6, 7]);\n  assert.deepEqual(candidate([5, 5, 5, 5]),[5, 5, 5, 5]);\n\
  \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3, 4,\
  \ 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5]);\n  assert.deepEqual(candidate([0, 2, 2,\
  \ 2, 5, 5, -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2]);\n  assert.deepEqual(candidate([111111]),[111111]);\n\
  }\n\ntest();"
completions: ["    var result = [];\n    if(lst.length === 0){\n        return result;\n\
    \    }\n    var min = lst[0];\n    var max = lst[0];\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < min){\n            min = lst[i];\n        }\n   \
    \     if(lst[i] > max){\n            max = lst[i];\n        }\n    }\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] === min){\n            result.push(max);\n\
    \        }\n        else if(lst[i] === max){\n            result.push(min);\n\
    \        }\n        else{\n            result.push(lst[i]);\n        }\n    }\n\
    \    return result;\n}\n", "    var min = lst[0];\n    var max = lst[0];\n   \
    \ var result = [];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i]\
    \ < min){\n            min = lst[i];\n        }\n        if(lst[i] > max){\n \
    \           max = lst[i];\n        }\n    }\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] == min){\n            result.push(lst[i]);\n      \
    \  }\n        if(lst[i] == max){\n            result.push(lst[i]);\n        }\n\
    \    }\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == min){\n\
    \            result.push(lst[i]);\n        }\n        if(lst[i] == max){\n   \
    \         result.push(lst[i]);\n        }\n    }\n    return result;\n}\n", " \
    \   var result = [];\n    var min = lst[0];\n    var max = lst[0];\n    for(var\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < min){\n            min = lst[i];\n\
    \        }\n        if(lst[i] > max){\n            max = lst[i];\n        }\n\
    \    }\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] == min){\n\
    \            result.push(max);\n            max = lst[i];\n        }\n       \
    \ else if(lst[i] == max){\n            result.push(min);\n            min = lst[i];\n\
    \        }\n        else{\n            result.push(lst[i]);\n        }\n    }\n\
    \    return result;\n}\n", "  var result = [];\n  var min = lst[0];\n  var max\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < min){\n \
    \     min = lst[i];\n    }\n    if(lst[i] > max){\n      max = lst[i];\n    }\n\
    \  }\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] == min){\n      result.push(lst[i]);\n\
    \    }\n    if(lst[i] == max){\n      result.push(lst[i]);\n    }\n  }\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] == min){\n      result.push(lst[i]);\n\
    \    }\n    if(lst[i] == max){\n      result.push(lst[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "    var result = [];\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] == min){\n            result.push(max);\n        }\
    \ else if(lst[i] == max){\n            result.push(min);\n        } else {\n \
    \           result.push(lst[i]);\n        }\n    }\n    return result;\n}\n",
  "    var sorted = [];\n    for (var i = 0; i < lst.length; i++) {\n        var min\
    \ = lst[i];\n        var max = lst[i];\n        for (var j = i + 1; j < lst.length;\
    \ j++) {\n            if (lst[j] < min) {\n                min = lst[j];\n   \
    \         }\n            if (lst[j] > max) {\n                max = lst[j];\n\
    \            }\n        }\n        sorted.push(min);\n        sorted.push(max);\n\
    \    }\n    return sorted;\n}\n", "  var min = lst[0];\n  var max = lst[0];\n\
    \  var result = [];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < min){\n\
    \      min = lst[i];\n    }\n    if(lst[i] > max){\n      max = lst[i];\n    }\n\
    \  }\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] == min){\n      result.push(max);\n\
    \      max = lst[i];\n    }\n    else if(lst[i] == max){\n      result.push(min);\n\
    \      min = lst[i];\n    }\n    else{\n      result.push(lst[i]);\n    }\n  }\n\
    \  return result;\n}\n", "    var min = lst[0];\n    var max = lst[0];\n    var\
    \ result = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] <\
    \ min){\n            min = lst[i];\n        }\n        if(lst[i] > max){\n   \
    \         max = lst[i];\n        }\n    }\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] == min){\n            result.push(max);\n         \
    \   max = lst[i];\n        }\n        else if(lst[i] == max){\n            result.push(min);\n\
    \            min = lst[i];\n        }\n        else{\n            result.push(lst[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  if(lst.length === 0){\n    return\
    \ lst;\n  }\n  var min = lst[0];\n  var max = lst[0];\n  var result = [];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < min){\n      min = lst[i];\n \
    \   }\n    if(lst[i] > max){\n      max = lst[i];\n    }\n  }\n  result.push(min);\n\
    \  result.push(max);\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] <\
    \ min){\n      min = lst[i];\n    }\n    if(lst[i] > max){\n      max = lst[i];\n\
    \    }\n    result.push(lst[i]);\n  }\n  return result;\n}\n", "  var sorted =\
    \ [];\n  var min = lst[0];\n  var max = lst[0];\n  var i = 1;\n  for(i; i < lst.length;\
    \ i++){\n    if(lst[i] < min){\n      min = lst[i];\n    }\n    if(lst[i] > max){\n\
    \      max = lst[i];\n    }\n  }\n  for(i; i < lst.length; i++){\n    if(lst[i]\
    \ == min){\n      sorted.push(lst[i]);\n      min = lst[i];\n    }\n    if(lst[i]\
    \ == max){\n      sorted.push(lst[i]);\n      max = lst[i];\n    }\n  }\n  for(i;\
    \ i < lst.length; i++){\n    if(lst[i] == min){\n      sorted.push(lst[i]);\n\
    \      min = lst[i];\n    }\n    if(lst[i] == max){\n      sorted.push(lst[i]);\n\
    \      max = lst[i];\n    }\n  }\n  return sorted;\n}\n<|endoftext|><|javascript|>//\
    \ Copyright (c) 2012 Ecma International.  All rights reserved.", "  var min =\
    \ lst[0];\n  var max = lst[0];\n  var result = [];\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < min){\n      min = lst[i];\n    }\n    if(lst[i] > max){\n\
    \      max = lst[i];\n    }\n  }\n  for(var i = 0; i < lst.length; i++){\n   \
    \ if(lst[i] == min){\n      result.push(max);\n    }\n    if(lst[i] == max){\n\
    \      result.push(min);\n    }\n    if(lst[i] != min && lst[i] != max){\n   \
    \   result.push(lst[i]);\n    }\n  }\n  return result;\n}\n<|endoftext|><|javascript|>import\
    \ React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage\
    \ } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector\
    \ } from 'reselect';\nimport { makeSelectUser } from 'containers/App/selectors';\n\
    import { makeSelectLoading } from 'containers/App/selectors';\nimport { makeSelectError\
    \ } from 'containers/App/selectors';\nimport { makeSelectLoadingError } from 'containers/App/selectors';\n\
    import { makeSelectUserError } from 'containers/App/selectors';\nimport { makeSelectUserSuccess\
    \ } from 'containers/App/selectors';\nimport { makeSelectUserSuccessMessage }\
    \ from 'containers/App/selectors';\nimport { makeSelectUserSuccessMessageError\
    \ } from 'containers/App/selectors';\nimport { makeSelectUserSuccessMessageSuccess\
    \ } from 'containers/App/selectors';\nimport { makeSelectUserSuccessMessageSuccessError\
    \ } from 'containers/App/selectors';\nimport { makeSelectUserSuccessMessageSuccessSuccess\
    \ } from 'containers/App/selectors';\nimport { makeSelectUserSuccessMessageSuccessSuccessError\
    \ } from 'containers/App/selectors';\nimport { makeSelectUserSuccessMessageSuccessSuccessSuccess\
    \ } from 'containers/", "  var min = lst[0];\n  var max = lst[0];\n  var result\
    \ = [];\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < min){\n     \
    \ min = lst[i];\n    }\n    if(lst[i] > max){\n      max = lst[i];\n    }\n  }\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] == min){\n      result.push(max);\n\
    \      max = lst[i];\n    }\n    else if(lst[i] == max){\n      result.push(min);\n\
    \      min = lst[i];\n    }\n    else{\n      result.push(lst[i]);\n    }\n  }\n\
    \  return result;\n}\n", "  var min = lst[0];\n  var max = lst[0];\n  var result\
    \ = [];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < min){\n     \
    \ min = lst[i];\n    }\n    if(lst[i] > max){\n      max = lst[i];\n    }\n  }\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] == min){\n      result.push(max);\n\
    \      max = lst[i];\n    }\n    else if(lst[i] == max){\n      result.push(min);\n\
    \      min = lst[i];\n    }\n    else{\n      result.push(lst[i]);\n    }\n  }\n\
    \  return result;\n}\n", "  var min = lst[0];\n  var max = lst[0];\n  var result\
    \ = [];\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < min){\n     \
    \ min = lst[i];\n    }\n    if(lst[i] > max){\n      max = lst[i];\n    }\n  }\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] == min){\n      result.push(max);\n\
    \    }\n    if(lst[i] == max){\n      result.push(min);\n    }\n    if(lst[i]\
    \ == min || lst[i] == max){\n      result.push(lst[i]);\n    }\n  }\n  return\
    \ result;\n}\n<|endoftext|><|javascript|>/**\n * @author       Richard Davey <rich@photonstorm.com>\n\
    \ * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT\
    \ License}\n */\n\nvar GetTilesWithin = require('./GetTilesWithin');\n", "   \
    \ var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var result = [];\n    for (var i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] == min) {\n            result.push(max);\n        } else if (lst[i]\
    \ == max) {\n            result.push(min);\n        } else {\n            result.push(lst[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  var min =\
    \ Math.min.apply(null, lst);\n  var max = Math.max.apply(null, lst);\n  var i\
    \ = 0;\n  while(i < lst.length){\n    if(lst[i] == min){\n      result.push(max);\n\
    \      i++;\n      while(i < lst.length && lst[i] == min){\n        result.push(lst[i]);\n\
    \        i++;\n      }\n      result.push(min);\n    } else if(lst[i] == max){\n\
    \      result.push(min);\n      i++;\n      while(i < lst.length && lst[i] ==\
    \ max){\n        result.push(lst[i]);\n        i++;\n      }\n      result.push(max);\n\
    \    } else {\n      result.push(lst[i]);\n      i++;\n    }\n  }\n  return result;\n\
    }\n", "  if(lst.length === 0){\n    return lst;\n  }\n  var min = lst[0];\n  var\
    \ max = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < min){\n\
    \      min = lst[i];\n    }\n    if(lst[i] > max){\n      max = lst[i];\n    }\n\
    \  }\n  var result = [];\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ === min){\n      result.push(min);\n    }\n    if(lst[i] === max){\n      result.push(max);\n\
    \    }\n    if(lst[i] !== min && lst[i] !== max){\n      result.push(lst[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    if(lst.length === 0){\n        return\
    \ lst;\n    }\n    let min = lst[0];\n    let max = lst[0];\n    let result =\
    \ [];\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i] < min){\n \
    \           min = lst[i];\n        }\n        if(lst[i] > max){\n            max\
    \ = lst[i];\n        }\n    }\n    for(let i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] === min){\n            result.push(max);\n            max = min;\n\
    \            min = lst[i];\n        } else if(lst[i] === max){\n            result.push(min);\n\
    \            min = max;\n            max = lst[i];\n        } else {\n       \
    \     result.push(lst[i]);\n        }\n    }\n    return result;\n}\n", "  var\
    \ result = [];\n  var min = Math.min.apply(null, lst);\n  var max = Math.max.apply(null,\
    \ lst);\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] === min){\n   \
    \   result.push(max);\n    }\n    else if(lst[i] === max){\n      result.push(min);\n\
    \    }\n    else{\n      result.push(lst[i]);\n    }\n  }\n  return result;\n\
    }\n", "  var arr = [];\n  for(var i=0; i<lst.length; i++){\n    arr.push(lst[i]);\n\
    \  }\n  arr.sort(function(a, b){\n    if(a < b){\n      return -1;\n    }\n  \
    \  if(a > b){\n      return 1;\n    }\n    return 0;\n  });\n  return arr;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

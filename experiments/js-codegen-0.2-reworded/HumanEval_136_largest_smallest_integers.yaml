name: HumanEval_136_largest_smallest_integers
language: js
prompt: "//Create a function that returns an array (a, b), where 'a' is\n// the largest\
  \ of negative integers, and 'b' is the smallest\n// of positive integers in an array.\n\
  // If there is no negative or positive integers, return them as undefined.\n// Examples:\n\
  // >>> largest_smallest_integers([2, 4, 1, 3, 5, 7]) \n// (None, 1)\n// >>> largest_smallest_integers([])\
  \ \n// (None, None)\n// >>> largest_smallest_integers([0]) \n// (None, None)\nfunction\
  \ largest_smallest_integers(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_smallest_integers;\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7]),[undefined,\
  \ 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7, 0]),[undefined, 1]);\n \
  \ assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2, 1]);\n  assert.deepEqual(candidate([4,\
  \ 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7, 3, 8, 4, 9, 2,\
  \ 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined, undefined]);\n\
  \  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"
completions: ["    var a = undefined;\n    var b = undefined;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a === undefined){\n\
    \                a = lst[i];\n            }\n            else if(lst[i] > a){\n\
    \                a = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(b === undefined){\n                b = lst[i];\n     \
    \       }\n            else if(lst[i] < b){\n                b = lst[i];\n   \
    \         }\n        }\n    }\n    return (a === undefined ? b : a);\n}\n", " \
    \   var a = undefined, b = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0){\n            if (a === undefined){\n               \
    \ a = lst[i];\n            }\n            else if (lst[i] > a){\n            \
    \    a = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n  \
    \          if (b === undefined){\n                b = lst[i];\n            }\n\
    \            else if (lst[i] < b){\n                b = lst[i];\n            }\n\
    \        }\n    }\n    return (a === undefined ? (b === undefined ? (lst, lst)\
    \ : (b, lst)) : (a, lst));\n}\n", "  var a = undefined;\n  var b = undefined;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      if (a ===\
    \ undefined){\n        a = lst[i];\n      } else if (lst[i] > a){\n        a =\
    \ lst[i];\n      }\n    } else if (lst[i] > 0){\n      if (b === undefined){\n\
    \        b = lst[i];\n      } else if (lst[i] < b){\n        b = lst[i];\n   \
    \   }\n    }\n  }\n  if (a === undefined){\n    return (b === undefined) ? (undefined,\
    \ undefined) : (b, undefined);\n  } else if (b === undefined){\n    return (a,\
    \ undefined);\n  } else {\n    return (a, b);\n  }\n}\n", "    var neg = 0, pos\
    \ = 0, neg_pos = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            neg++;\n        } else if(lst[i] > 0){\n            pos++;\n\
    \        } else {\n            neg_pos.push(lst[i]);\n        }\n    }\n    if(neg\
    \ == 0 && pos == 0){\n        return (undefined, undefined);\n    } else if(neg\
    \ > 0){\n        return (undefined, neg_pos[0]);\n    } else {\n        return\
    \ (undefined, pos_neg[0]);\n    }\n}\n", "  var a = undefined;\n  var b = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(a === undefined){\n\
    \        a = lst[i];\n      }\n      else if(lst[i] > a){\n        a = lst[i];\n\
    \      }\n    }\n    else if(lst[i] > 0){\n      if(b === undefined){\n      \
    \  b = lst[i];\n      }\n      else if(lst[i] < b){\n        b = lst[i];\n   \
    \   }\n    }\n  }\n  return [a, b];\n}\n", "    var a = undefined;\n    var b\
    \ = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] <\
    \ 0){\n            if(a === undefined){\n                a = lst[i];\n       \
    \     }\n            else if(lst[i] > a){\n                a = lst[i];\n     \
    \       }\n        }\n        else if(lst[i] > 0){\n            if(b === undefined){\n\
    \                b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return (a ===\
    \ undefined ? b : a);\n}\n", "  var neg = 0, pos = 0, neg_pos = 0;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      neg++;\n    } else\
    \ if (lst[i] > 0){\n      pos++;\n    } else {\n      neg_pos++;\n    }\n  }\n\
    \  if (neg > 0 && pos > 0){\n    return (neg, pos);\n  } else if (neg > 0){\n\
    \    return (neg, undefined);\n  } else if (pos > 0){\n    return (undefined,\
    \ pos);\n  } else {\n    return (undefined, undefined);\n  }\n}\n", "    var neg\
    \ = 0, pos = 0, max = 0, min = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < 0){\n            neg = i;\n        }\n        if(lst[i] >\
    \ 0){\n            pos = i;\n        }\n        if(lst[i] > max){\n          \
    \  max = lst[i];\n        }\n        if(lst[i] < min){\n            min = lst[i];\n\
    \        }\n    }\n    if(neg == 0 && pos == 0){\n        return (undefined, undefined);\n\
    \    }\n    return (max, min);\n}\n", "    var max = 0;\n    var min = 0;\n  \
    \  var result = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(lst[i] > max){\n                max = lst[i];\n      \
    \      }\n        }\n        else if(lst[i] > 0){\n            if(lst[i] < min){\n\
    \                min = lst[i];\n            }\n        }\n        else{\n    \
    \        result.push(undefined);\n        }\n    }\n    if(max > 0 && min < 0){\n\
    \        result.push(max);\n        result.push(min);\n    }\n    return result;\n\
    }\n", "  var a = undefined, b = undefined;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < 0){\n      if (a === undefined){\n        a = lst[i];\n\
    \      } else if (lst[i] > a){\n        a = lst[i];\n      }\n    } else if (lst[i]\
    \ > 0){\n      if (b === undefined){\n        b = lst[i];\n      } else if (lst[i]\
    \ < b){\n        b = lst[i];\n      }\n    }\n  }\n  return [a, b];\n}\n", " \
    \   var max = 0, min = 0, i = 0;\n    for(i = 0; i < lst.length; i++){\n     \
    \   if(lst[i] < 0){\n            if(lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(lst[i]\
    \ < min){\n                min = lst[i];\n            }\n        }\n    }\n  \
    \  if(max === 0 && min === 0){\n        return (undefined, undefined);\n    }\n\
    \    else{\n        return (max, min);\n    }\n}\n", "  var neg = 0;\n  var pos\
    \ = 0;\n  var max = 0;\n  var min = 0;\n  var result = [];\n  for(var i = 0; i\
    \ < lst.length; i++){\n    if(lst[i] < 0){\n      neg++;\n    }\n    else if(lst[i]\
    \ > 0){\n      pos++;\n    }\n    else if(lst[i] > max){\n      max = lst[i];\n\
    \    }\n    else if(lst[i] < min){\n      min = lst[i];\n    }\n  }\n  if(neg\
    \ > 0 && pos > 0){\n    result.push(max, min);\n  }\n  else if(neg > 0){\n   \
    \ result.push(max);\n  }\n  else if(pos > 0){\n    result.push(min);\n  }\n  else{\n\
    \    result.push(undefined);\n  }\n  return result;\n}\n", "  var max_neg = -Infinity;\n\
    \  var min_pos = Infinity;\n  var max_neg_index = -1;\n  var min_pos_index = -1;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(lst[i]\
    \ > max_neg){\n        max_neg = lst[i];\n        max_neg_index = i;\n      }\n\
    \    }\n    if(lst[i] > 0){\n      if(lst[i] < min_pos){\n        min_pos = lst[i];\n\
    \        min_pos_index = i;\n      }\n    }\n  }\n  if(max_neg_index == -1 &&\
    \ min_pos_index == -1){\n    return (undefined, undefined);\n  }\n  if(max_neg_index\
    \ == -1){\n    return (undefined, min_pos);\n  }\n  if(min_pos_index == -1){\n\
    \    return (max_neg, undefined);\n  }\n  return (max_neg, min_pos);\n}\n", " \
    \   var a = 0, b = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            a = Math.max(a, lst[i]);\n        } else if (lst[i] > 0){\n\
    \            b = Math.min(b, lst[i]);\n        }\n    }\n    return (a === 0 &&\
    \ b === 0) ? (None, None) : (a, b);\n}\n", "  var a = undefined;\n  var b = undefined;\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      if (a ===\
    \ undefined){\n        a = lst[i];\n      } else if (lst[i] > a){\n        a =\
    \ lst[i];\n      }\n    } else if (lst[i] > 0){\n      if (b === undefined){\n\
    \        b = lst[i];\n      } else if (lst[i] < b){\n        b = lst[i];\n   \
    \   }\n    }\n  }\n  return (a === undefined ? (b === undefined ? (undefined,\
    \ undefined) : (undefined, b)) : (a, b));\n}\n", "  var a = undefined;\n  var\
    \ b = undefined;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n\
    \      if (a === undefined){\n        a = lst[i];\n      } else if (lst[i] > a){\n\
    \        a = lst[i];\n      }\n    } else if (lst[i] > 0){\n      if (b === undefined){\n\
    \        b = lst[i];\n      } else if (lst[i] < b){\n        b = lst[i];\n   \
    \   }\n    }\n  }\n  return [a, b];\n}\n", "  var a = undefined;\n  var b = undefined;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(a === undefined){\n\
    \        a = lst[i];\n      }\n      else if(lst[i] > a){\n        a = lst[i];\n\
    \      }\n    }\n    else if(lst[i] > 0){\n      if(b === undefined){\n      \
    \  b = lst[i];\n      }\n      else if(lst[i] < b){\n        b = lst[i];\n   \
    \   }\n    }\n  }\n  return [a, b];\n}\n", "    var a = undefined;\n    var b\
    \ = undefined;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] <\
    \ 0){\n            if(a === undefined){\n                a = lst[i];\n       \
    \     }else{\n                a = Math.max(a, lst[i]);\n            }\n      \
    \  }else if(lst[i] > 0){\n            if(b === undefined){\n                b\
    \ = lst[i];\n            }else{\n                b = Math.min(b, lst[i]);\n  \
    \          }\n        }\n    }\n    return (a === undefined ? b : a);\n}\n", " \
    \ var a = 0, b = 0;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] <\
    \ 0){\n      a = Math.max(a, lst[i]);\n    } else if (lst[i] > 0){\n      b =\
    \ Math.min(b, lst[i]);\n    }\n  }\n  return (a === 0 && b === 0) ? (undefined,\
    \ undefined) : (a, b);\n}\n", "    var a = undefined, b = undefined;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a ===\
    \ undefined){\n                a = lst[i];\n            }else if(lst[i] > a){\n\
    \                a = lst[i];\n            }\n        }else if(lst[i] > 0){\n \
    \           if(b === undefined){\n                b = lst[i];\n            }else\
    \ if(lst[i] < b){\n                b = lst[i];\n            }\n        }\n   \
    \ }\n    return [a, b];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

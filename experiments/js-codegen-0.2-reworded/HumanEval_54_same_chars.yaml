name: HumanEval_54_same_chars
language: js
prompt: "//Check if two words have the same characters.\n// >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddeddabc')\n// True\n// >>> same_chars('abcd', 'dddddddabc')\n// True\n\
  // >>> same_chars('dddddddabc', 'abcd')\n// True\n// >>> same_chars('eabcd', 'dddddddabc')\n\
  // False\n// >>> same_chars('abcd', 'dddddddabce')\n// False\n// >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddddabc')\n// False\nfunction same_chars(s0, s1){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = same_chars;\n  assert.deepEqual(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
  ),true);\n  assert.deepEqual(candidate(\"abcd\", \"dddddddabc\"),true);\n  assert.deepEqual(candidate(\"\
  dddddddabc\", \"abcd\"),true);\n  assert.deepEqual(candidate(\"eabcd\", \"dddddddabc\"\
  ),false);\n  assert.deepEqual(candidate(\"abcd\", \"dddddddabcf\"),false);\n  assert.deepEqual(candidate(\"\
  eabcdzzzz\", \"dddzzzzzzzddddabc\"),false);\n  assert.deepEqual(candidate(\"aabb\"\
  , \"aaccc\"),false);\n}\n\ntest();"
completions: ["    var s0_chars = s0.split('');\n    var s1_chars = s1.split('');\n\
    \    var i = 0;\n    while(i < s0_chars.length && i < s1_chars.length){\n    \
    \    if(s0_chars[i] != s1_chars[i]){\n            return false;\n        }\n \
    \       i++;\n    }\n    return true;\n}\n", "    var i = 0, j = 0;\n    while(i\
    \ < s0.length && j < s1.length){\n        if(s0.charAt(i) == s1.charAt(j)){\n\
    \            i++;\n            j++;\n        } else {\n            i = 0;\n  \
    \          j = 0;\n        }\n    }\n    return i == s0.length && j == s1.length;\n\
    }\n", "    var i = 0, j = 0;\n    while(i < s0.length && j < s1.length){\n   \
    \     if(s0.charAt(i) === s1.charAt(j)){\n            i++;\n            j++;\n\
    \        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n\
    \    }\n    return i === s0.length && j === s1.length;\n}\n", "    var i = 0,\
    \ j = 0;\n    while(i < s0.length && j < s1.length){\n        if(s0.charAt(i)\
    \ != s1.charAt(j)){\n            return false;\n        }\n        i++;\n    \
    \    j++;\n    }\n    return true;\n}\n", "    var i = 0;\n    var j = 0;\n  \
    \  while(i < s0.length && j < s1.length){\n        if(s0[i] == s1[j]){\n     \
    \       i++;\n            j++;\n        }\n        else{\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    var i = 0, j = 0;\n    while(i\
    \ < s0.length && j < s1.length){\n        if(s0.charAt(i) == s1.charAt(j)){\n\
    \            i++;\n            j++;\n        } else {\n            return false;\n\
    \        }\n    }\n    return i == s0.length && j == s1.length;\n}\n", "    var\
    \ i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < s0.length && j < s1.length){\n\
    \        if(s0[i] == s1[j]){\n            count++;\n            i++;\n       \
    \     j++;\n        }else{\n            i++;\n            j++;\n        }\n  \
    \  }\n    return count == s0.length;\n}\n", "    var i = 0;\n    while(i < s0.length\
    \ && i < s1.length){\n        if(s0[i] != s1[i]){\n            return false;\n\
    \        }\n        i++;\n    }\n    return true;\n}\n", "    var i = 0;\n   \
    \ while(i < s0.length && i < s1.length){\n        if(s0[i] != s1[i]){\n      \
    \      return false;\n        }\n        i++;\n    }\n    return true;\n}\n",
  "    var i = 0;\n    var j = 0;\n    var len0 = s0.length;\n    var len1 = s1.length;\n\
    \    while(i < len0 && j < len1){\n        if(s0[i] != s1[j]){\n            return\
    \ false;\n        }\n        i++;\n        j++;\n    }\n    return true;\n}\n",
  "    var s0_chars = s0.split('');\n    var s1_chars = s1.split('');\n    var len\
    \ = s0_chars.length;\n    if(len != s1_chars.length){\n        return false;\n\
    \    }\n    for(var i = 0; i < len; i++){\n        if(s0_chars[i] != s1_chars[i]){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    var\
    \ s0_chars = s0.split('');\n    var s1_chars = s1.split('');\n    var i = 0;\n\
    \    var j = 0;\n    while(i < s0_chars.length && j < s1_chars.length){\n    \
    \    if(s0_chars[i] === s1_chars[j]){\n            i++;\n            j++;\n  \
    \      }\n        else{\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    var s0_len = s0.length;\n    var s1_len = s1.length;\n   \
    \ if(s0_len != s1_len) return false;\n    for(var i = 0; i < s0_len; i++){\n \
    \       if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\n", "  var\
    \ i = 0;\n  while(i < s0.length && i < s1.length){\n    if(s0.charAt(i) != s1.charAt(i)){\n\
    \      return false;\n    }\n    i++;\n  }\n  return true;\n}\n", "    var s0_len\
    \ = s0.length;\n    var s1_len = s1.length;\n    if(s0_len != s1_len) return false;\n\
    \    for(var i = 0; i < s0_len; i++){\n        if(s0[i] != s1[i]) return false;\n\
    \    }\n    return true;\n}\n", "    var i = 0;\n    var j = 0;\n    var s0_len\
    \ = s0.length;\n    var s1_len = s1.length;\n    while(i < s0_len && j < s1_len){\n\
    \        if(s0[i] == s1[j]){\n            i++;\n            j++;\n        }else{\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    var\
    \ i = 0, j = 0, len0 = s0.length, len1 = s1.length;\n    while(i < len0 && j <\
    \ len1){\n        if(s0.charAt(i) == s1.charAt(j)){\n            i++;\n      \
    \      j++;\n        }\n        else{\n            return false;\n        }\n\
    \    }\n    return i == len0 && j == len1;\n}\n", "    var i = 0;\n    var j =\
    \ 0;\n    while(i < s0.length && j < s1.length){\n        if(s0.charAt(i) != s1.charAt(j)){\n\
    \            return false;\n        }\n        i++;\n        j++;\n    }\n   \
    \ return true;\n}\n", "    var i = 0,\n        j = 0,\n        len0 = s0.length,\n\
    \        len1 = s1.length;\n    while(i < len0 && j < len1){\n        if(s0.charAt(i)\
    \ != s1.charAt(j)){\n            return false;\n        }\n        i++;\n    \
    \    j++;\n    }\n    return true;\n}\n", "    var i = 0;\n    var j = 0;\n  \
    \  var len = s0.length;\n    if(s1.length != len){\n        return false;\n  \
    \  }\n    while(i < len){\n        if(s0.charAt(i) != s1.charAt(j)){\n       \
    \     return false;\n        }\n        i++;\n        j++;\n    }\n    return\
    \ true;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_57_monotonic
language: js
prompt: "//Return true is array elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n// false\n\
  // >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
  \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
  \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
completions: ["  if(l.length < 2){\n    return true;\n  }\n  var last = l[0];\n  for(var\
    \ i = 1; i < l.length; i++){\n    if(l[i] < last){\n      return false;\n    }\n\
    \    last = l[i];\n  }\n  return true;\n}\n", "  var i = 1;\n  while(i < l.length){\n\
    \    if(l[i] < l[i-1]){\n      return false;\n    }\n    i++;\n  }\n  return true;\n\
    }\n", "  var i = 0,\n      n = l.length,\n      a = l[0],\n      b = l[0],\n \
    \     c = l[0];\n  for(; i < n; i++){\n    a = b;\n    b = c;\n    c = l[i];\n\
    \    if(a < b){\n      if(c < a || c > b){\n        return false;\n      }\n \
    \   } else if(a > b){\n      if(c < a || c > b){\n        return false;\n    \
    \  }\n    }\n  }\n  return true;\n}\n", "  if(l.length < 2){\n    return true;\n\
    \  }\n  var last = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] <\
    \ last){\n      return false;\n    }\n    last = l[i];\n  }\n  return true;\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  var result =\
    \ true;\n  while(i < len){\n    if(l[i] < last){\n      result = false;\n    \
    \  break;\n    }\n    last = l[i];\n    i++;\n  }\n  return result;\n}\n", " \
    \ var i = 1;\n  var last = l[0];\n  while(i < l.length){\n    if(l[i] < last){\n\
    \      return false;\n    }\n    last = l[i];\n    i++;\n  }\n  return true;\n\
    }\n", "  var i = 1,\n      len = l.length,\n      last = l[0],\n      monotonic\
    \ = true;\n  while(i < len){\n    if(l[i] < last){\n      monotonic = false;\n\
    \      break;\n    }\n    last = l[i];\n    i++;\n  }\n  return monotonic;\n}\n",
  "  var i = 1;\n  var last = l[0];\n  var isMonotonic = true;\n  while(i < l.length){\n\
    \    if(l[i] < last){\n      isMonotonic = false;\n      break;\n    }\n    last\
    \ = l[i];\n    i++;\n  }\n  return isMonotonic;\n}\n", "    var i = 1;\n    var\
    \ len = l.length;\n    var last = l[0];\n    while(i < len){\n        if(l[i]\
    \ < last){\n            return false;\n        }\n        last = l[i];\n     \
    \   i++;\n    }\n    return true;\n}\n", "  var i = 0;\n  var j = l.length - 1;\n\
    \  var m = l[0];\n  var n = l[j];\n  var mv = m;\n  var nv = n;\n  while(i < j){\n\
    \    if(l[i] < l[i + 1]){\n      mv = l[i];\n      nv = l[i + 1];\n    }\n   \
    \ else if(l[i] > l[i + 1]){\n      mv = l[i + 1];\n      nv = l[i];\n    }\n \
    \   i++;\n  }\n  return mv === nv;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var last_i = 0;\n  var last_d = 0;\n  var last_d_i = 0;\n\
    \  var last_d_d = 0;\n  var last_d_d_i = 0;\n  var last_d_d_d = 0;\n  var last_d_d_d_i\
    \ = 0;\n  var last_d_d_d_d = 0;\n  var last_d_d_d_d_i = 0;\n  var last_d_d_d_d_d\
    \ = 0;\n  var last_d_d_d_d_d_i = 0;\n  var last_d_d_d_d_d_d = 0;\n  var last_d_d_d_d_d_d_i\
    \ = 0;\n  var last_d_d_d_d_d_d_d = 0;\n  var last_d_d_d_d_d_d_d_i = 0;\n  var\
    \ last_d_d_d_d_d_d_d_d = 0;\n  var last_d_d_d_d_d_d_d_d_i = 0;\n  var last_d_d_d_d_d_d_d_d_d\
    \ = 0;\n  var last_d_d_d_d_d_d_d_d_d_i = 0;\n  var last_d_d_d_d_d_d_d_d_d_d =\
    \ 0;\n  var last_d_d_d_d_d_d_d_d_d_d_i = 0;\n  var last_d_d_d_d_d_d_d_d_d_d_d\
    \ = 0;\n  var last_d_d_d_d_d_d_d_d_d_d_d_i = 0;\n  var last_d_d_d_d_d_d_d_d_d_d_d_d\
    \ = 0;\n  var last_d_d", "  if(l.length < 2){\n    return true;\n  }\n  var last\
    \ = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n  }\n  return true;\n}\n", "  var i = 1;\n\
    \  var n = l.length;\n  var prev = l[0];\n  var curr = l[0];\n  while(i < n){\n\
    \    curr = l[i];\n    if(prev > curr){\n      return false;\n    }\n    prev\
    \ = curr;\n    i++;\n  }\n  return true;\n}\n", "  var i = 1;\n  var last = l[0];\n\
    \  var isMonotonic = true;\n  while(i < l.length){\n    if(l[i] < last){\n   \
    \   isMonotonic = false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n\
    \  return isMonotonic;\n}\n", "  var len = l.length;\n  if(len < 2){\n    return\
    \ true;\n  }\n  var last = l[0];\n  for(var i = 1; i < len; i++){\n    if(l[i]\
    \ < last){\n      return false;\n    }\n    last = l[i];\n  }\n  return true;\n\
    }\n", "  var i = 1,\n      n = l.length,\n      a = l[0],\n      b = l[0],\n \
    \     c;\n  while(i < n){\n    c = l[i];\n    if(a < b){\n      if(c < a || c\
    \ > b){\n        return false;\n      }\n    } else if(a > b){\n      if(c < a\
    \ || c > b){\n        return false;\n      }\n    }\n    a = b;\n    b = c;\n\
    \    i++;\n  }\n  return true;\n}\n", "  var i = 0;\n  var len = l.length;\n \
    \ var last = l[0];\n  var isMonotonic = true;\n  for(i = 1; i < len; i++){\n \
    \   if(l[i] < last){\n      isMonotonic = false;\n      break;\n    }\n    last\
    \ = l[i];\n  }\n  return isMonotonic;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var isMonotonic = true;\n  while(i < len){\n    if(l[i]\
    \ < last){\n      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n\
    \    i++;\n  }\n  return isMonotonic;\n}\n", "  var i = 0;\n  var len = l.length;\n\
    \  var last = l[0];\n  var isMonotonic = true;\n  for(i = 1; i < len; i++){\n\
    \    if(l[i] < last){\n      isMonotonic = false;\n      break;\n    }\n    last\
    \ = l[i];\n  }\n  return isMonotonic;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var isMonotonic = true;\n  while(i < len){\n    if(l[i]\
    \ < last){\n      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n\
    \    i++;\n  }\n  return isMonotonic;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var result = true;\n  while(i < len){\n    if(l[i] < last){\n\
    \      result = false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n\
    \  return result;\n}\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n\
    \  var result = true;\n  while(i < len){\n    if(l[i] < last){\n      result =\
    \ false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n  return result;\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  var isMonotonic\
    \ = true;\n  while(i < len){\n    if(l[i] < last){\n      isMonotonic = false;\n\
    \      break;\n    }\n    last = l[i];\n    i++;\n  }\n  return isMonotonic;\n\
    }\n", "  if(l.length < 2) return true;\n  var last = l[0];\n  for(var i = 1; i\
    \ < l.length; i++){\n    if(l[i] < last){\n      return false;\n    }\n    last\
    \ = l[i];\n  }\n  return true;\n}\n", "    if(l.length < 2){\n        return true;\n\
    \    }\n    var last = l[0];\n    for(var i = 1; i < l.length; i++){\n       \
    \ if(l[i] < last){\n            return false;\n        }\n        last = l[i];\n\
    \    }\n    return true;\n}\n", "    var i = 1;\n    var len = l.length;\n   \
    \ var last = l[0];\n    while(i < len){\n        if(l[i] < last){\n          \
    \  return false;\n        }\n        last = l[i];\n        i++;\n    }\n    return\
    \ true;\n}\n", "  var i = 1;\n  var last = l[0];\n  while(i < l.length){\n   \
    \ if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n    i++;\n \
    \ }\n  return true;\n}\n", "  var i = 1;\n  var n = l.length;\n  var last = l[0];\n\
    \  var last_i = 0;\n  while(i < n){\n    if(l[i] < last){\n      return false;\n\
    \    }\n    if(l[i] > last){\n      last = l[i];\n      last_i = i;\n    }\n \
    \   i++;\n  }\n  return true;\n}\n", "  if(l.length < 2){\n    return true;\n\
    \  }\n  var last = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] <\
    \ last){\n      return false;\n    }\n    last = l[i];\n  }\n  return true;\n\
    }\n", "  if(l.length < 2){\n    return true;\n  }\n  var last = l[0];\n  for(var\
    \ i = 1; i < l.length; i++){\n    if(l[i] < last){\n      return false;\n    }\n\
    \    last = l[i];\n  }\n  return true;\n}\n", "  var i = 1;\n  while (i < l.length)\
    \ {\n    if (l[i] < l[i-1]) {\n      return false;\n    }\n    i++;\n  }\n  return\
    \ true;\n}\n", "  var len = l.length;\n  if(len < 2){\n    return true;\n  }\n\
    \  var last = l[0];\n  for(var i = 1; i < len; i++){\n    if(l[i] < last){\n \
    \     return false;\n    }\n    last = l[i];\n  }\n  return true;\n}\n", "  var\
    \ i = 1;\n  var len = l.length;\n  var last = l[0];\n  var isMonotonic = true;\n\
    \n  while(i < len){\n    if(l[i] < last){\n      isMonotonic = false;\n      break;\n\
    \    }\n    last = l[i];\n    i++;\n  }\n\n  return isMonotonic;\n}\n", "  var\
    \ i = 0;\n  var len = l.length;\n  var prev = l[0];\n  var isMonotonic = true;\n\
    \  for(i = 1; i < len; i++){\n    if(l[i] < prev){\n      isMonotonic = false;\n\
    \      break;\n    }\n    prev = l[i];\n  }\n  return isMonotonic;\n}\n", "  \
    \  var i = 1;\n    var last = l[0];\n    while(i < l.length){\n        if(l[i]\
    \ < last){\n            return false;\n        }\n        last = l[i];\n     \
    \   i++;\n    }\n    return true;\n}\n", "  if(l.length < 2) return true;\n  var\
    \ last = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] < last){\n \
    \     return false;\n    }\n    last = l[i];\n  }\n  return true;\n}\n", "  var\
    \ i = 0;\n  var len = l.length;\n  var last = l[0];\n  var isMonotonic = true;\n\
    \  for(i = 1; i < len; i++){\n    if(l[i] < last){\n      isMonotonic = false;\n\
    \      break;\n    }\n    last = l[i];\n  }\n  return isMonotonic;\n}\n", "  if(l.length\
    \ < 2){\n    return true;\n  }\n  var last = l[0];\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n\
    \  }\n  return true;\n}\n", "  if(l.length === 1) return true;\n  if(l.length\
    \ === 2) return l[0] < l[1];\n  var i = 1;\n  while(i < l.length - 1){\n    if(l[i]\
    \ < l[i - 1] && l[i] < l[i + 1]) return true;\n    i++;\n  }\n  return false;\n\
    }\n", "  var i = 0,\n      n = l.length,\n      a = l[0],\n      b = l[0],\n \
    \     c = l[0],\n      d = l[0],\n      e = l[0];\n\n  for(; i < n; i++){\n  \
    \  a = b;\n    b = c;\n    c = d;\n    d = e;\n    e = l[i];\n\n    if(a > b){\n\
    \      if(c > d){\n        if(e > c){\n          return false;\n        }\n  \
    \    } else if(e > d){\n        return false;\n      }\n    } else if(a < b){\n\
    \      if(c < d){\n        if(e < c){\n          return false;\n        }\n  \
    \    } else if(e < d){\n        return false;\n      }\n    }\n  }\n\n  return\
    \ true;\n}\n", "  var i = 1;\n  var j = l.length - 1;\n  var m = l[0];\n  var\
    \ n = l[l.length - 1];\n  while(i < j){\n    if(m > n){\n      return false;\n\
    \    }\n    if(m < n){\n      return true;\n    }\n    m = l[i];\n    n = l[j];\n\
    \    i++;\n    j--;\n  }\n  return true;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var result = true;\n  while(i < len){\n    if(l[i] < last){\n\
    \      result = false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n\
    \  return result;\n}\n", "  var len = l.length;\n  if(len < 2){\n    return true;\n\
    \  }\n  var last = l[0];\n  for(var i = 1; i < len; i++){\n    if(l[i] < last){\n\
    \      return false;\n    }\n    last = l[i];\n  }\n  return true;\n}\n", "  var\
    \ i = 0,\n      n = l.length,\n      a = l[0],\n      b = l[0],\n      c = l[0],\n\
    \      d = l[0],\n      e = l[0],\n      f = l[0],\n      g = l[0];\n  while (i\
    \ < n) {\n    a = b;\n    b = c;\n    c = d;\n    d = e;\n    e = f;\n    f =\
    \ g;\n    g = l[i];\n    if (g < a) {\n      return false;\n    }\n    if (g >\
    \ b) {\n      return true;\n    }\n    if (g > c) {\n      return true;\n    }\n\
    \    if (g > d) {\n      return true;\n    }\n    if (g > e) {\n      return true;\n\
    \    }\n    if (g > f) {\n      return true;\n    }\n    if (g > g) {\n      return\
    \ true;\n    }\n    i++;\n  }\n  return true;\n}\n", "  var len = l.length;\n\
    \  if(len < 2){\n    return true;\n  }\n  var last = l[0];\n  for(var i = 1; i\
    \ < len; i++){\n    if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n\
    \  }\n  return true;\n}\n", "  var i = 0,\n      len = l.length,\n      last =\
    \ l[0],\n      last2 = l[0];\n  while(i < len){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    if(l[i] > last2){\n      last2 = l[i];\n    }\n    last =\
    \ l[i];\n    i++;\n  }\n  return true;\n}\n", "  if(l.length < 2){\n    return\
    \ true;\n  }\n  var last = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i]\
    \ < last){\n      return false;\n    }\n    last = l[i];\n  }\n  return true;\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  var result =\
    \ true;\n  while(i < len){\n    if(l[i] < last){\n      result = false;\n    \
    \  break;\n    }\n    last = l[i];\n    i++;\n  }\n  return result;\n}\n", " \
    \ var i = 0;\n  var len = l.length;\n  var last = l[0];\n  var isMonotonic = true;\n\
    \  for(i = 1; i < len; i++){\n    if(l[i] < last){\n      isMonotonic = false;\n\
    \      break;\n    }\n    last = l[i];\n  }\n  return isMonotonic;\n}\n", "  \
    \  if(l.length === 0) return true;\n    if(l.length === 1) return true;\n    if(l[0]\
    \ > l[1]) return false;\n    if(l[0] < l[1]) return true;\n    return monotonic(l.slice(1));\n\
    }\n", "    var i = 1;\n    var last = l[0];\n    while(i < l.length){\n      \
    \  if(l[i] < last){\n            return false;\n        }\n        last = l[i];\n\
    \        i++;\n    }\n    return true;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var isMonotonic = true;\n  while(i < len){\n    if(l[i]\
    \ < last){\n      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n\
    \    i++;\n  }\n  return isMonotonic;\n}\n", "    var i = 1;\n    while(i < l.length){\n\
    \        if(l[i] < l[i-1]){\n            return false;\n        }\n        i++;\n\
    \    }\n    return true;\n}\n", "  var len = l.length,\n      i = 0,\n      last\
    \ = l[0],\n      increasing = true;\n  for(; i < len; i++){\n    if(l[i] < last){\n\
    \      increasing = false;\n      break;\n    }\n    last = l[i];\n  }\n  return\
    \ increasing;\n}\n", "  var i = 1;\n  var len = l.length;\n  var prev = l[0];\n\
    \  var curr = l[0];\n  while(i < len){\n    if(curr < prev){\n      return false;\n\
    \    }\n    prev = curr;\n    curr = l[i];\n    i++;\n  }\n  return true;\n}\n",
  "  if(l.length < 2){\n    return true;\n  }\n  var last = l[0];\n  for(var i = 1;\
    \ i < l.length; i++){\n    if(l[i] < last){\n      return false;\n    }\n    last\
    \ = l[i];\n  }\n  return true;\n}\n", "  if(l.length < 2){\n    return true;\n\
    \  }\n  var last = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] <\
    \ last){\n      return false;\n    }\n    last = l[i];\n  }\n  return true;\n\
    }\n", "  var i = 1;\n  var last = l[0];\n  while(i < l.length){\n    if(l[i] <\
    \ last){\n      return false;\n    }\n    last = l[i];\n    i++;\n  }\n  return\
    \ true;\n}\n", "  var i = 1;\n  while(i < l.length){\n    if(l[i] < l[i-1]){\n\
    \      return false;\n    }\n    i++;\n  }\n  return true;\n}\n", "  var len =\
    \ l.length;\n  if(len === 0) return false;\n  if(len === 1) return true;\n  var\
    \ last = l[0];\n  for(var i = 1; i < len; i++){\n    if(l[i] < last) return false;\n\
    \    if(l[i] > last) last = l[i];\n  }\n  return true;\n}\n", "    var i = 1;\n\
    \    var len = l.length;\n    var last = l[0];\n    var result = true;\n    while(i\
    \ < len){\n        if(l[i] < last){\n            result = false;\n           \
    \ break;\n        }\n        last = l[i];\n        i++;\n    }\n    return result;\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  if(len === 0) return false;\n  if(len\
    \ === 1) return true;\n  if(l[0] < l[1]) return true;\n  if(l[0] > l[1]) return\
    \ false;\n  while(i < len){\n    if(l[i] < l[i-1]) return false;\n    if(l[i]\
    \ > l[i-1]) return true;\n    i++;\n  }\n  return true;\n}\n", "  if(l.length\
    \ === 0) return true;\n  if(l.length === 1) return true;\n  if(l[0] < l[1]) return\
    \ true;\n  if(l[0] > l[1]) return false;\n  return monotonic(l.slice(1));\n}\n",
  "    var i = 1;\n    var last = l[0];\n    var result = true;\n    while(i < l.length){\n\
    \        if(l[i] < last){\n            result = false;\n            break;\n \
    \       }\n        last = l[i];\n        i++;\n    }\n    return result;\n}\n",
  "  var i = 0,\n      len = l.length,\n      last = l[0];\n  for(; i < len; i++){\n\
    \    if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n  }\n  return\
    \ true;\n}\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  var\
    \ last_index = 0;\n  var last_direction = 1;\n  var direction = 1;\n  while(i\
    \ < len){\n    if(l[i] < last){\n      direction = -1;\n    }\n    else if(l[i]\
    \ > last){\n      direction = 1;\n    }\n    if(direction !== last_direction){\n\
    \      return false;\n    }\n    last = l[i];\n    last_index = i;\n    i++;\n\
    \  }\n  return true;\n}\n", "  var i = 0,\n      len = l.length,\n      last =\
    \ l[0];\n  for(; i < len; i++){\n    if(l[i] < last){\n      return false;\n \
    \   }\n    last = l[i];\n  }\n  return true;\n}\n", "  var i = 1;\n  var len =\
    \ l.length;\n  var last = l[0];\n  var isMonotonic = true;\n\n  while(i < len){\n\
    \    if(l[i] < last){\n      isMonotonic = false;\n      break;\n    }\n    last\
    \ = l[i];\n    i++;\n  }\n  return isMonotonic;\n}\n", "  var i = 1;\n  var last\
    \ = l[0];\n  while(i < l.length){\n    if(l[i] < last){\n      return false;\n\
    \    }\n    last = l[i];\n    i++;\n  }\n  return true;\n}\n", "  var i = 1;\n\
    \  var last = l[0];\n  while(i < l.length){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n    i++;\n  }\n  return true;\n}\n", "  var\
    \ i = 1;\n  var len = l.length;\n  var last = l[0];\n  var result = true;\n  while(i\
    \ < len){\n    if(l[i] < last){\n      result = false;\n      break;\n    }\n\
    \    last = l[i];\n    i++;\n  }\n  return result;\n}\n", "  if(l.length === 0)\
    \ return true;\n  var last = l[0];\n  for(var i = 1; i < l.length; i++){\n   \
    \ if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n  }\n  return\
    \ true;\n}\n", "  var i = 0;\n  var j = 0;\n  var n = l.length;\n  var m = n -\
    \ 1;\n  var result = true;\n  while(i < n && j < n){\n    if(l[i] > l[j]){\n \
    \     result = false;\n      break;\n    }\n    if(l[i] < l[j]){\n      result\
    \ = true;\n      break;\n    }\n    i++;\n    j++;\n  }\n  return result;\n}\n",
  "  var len = l.length;\n  if(len < 2){\n    return true;\n  }\n  var last = l[0];\n\
    \  for(var i = 1; i < len; i++){\n    if(l[i] < last){\n      return false;\n\
    \    }\n    last = l[i];\n  }\n  return true;\n}\n", "  var i = 0;\n  var j =\
    \ 0;\n  var k = 0;\n  var n = l.length;\n  var m = 0;\n  var a = 0;\n  var b =\
    \ 0;\n  var c = 0;\n  var d = 0;\n  var e = 0;\n  var f = 0;\n  var g = 0;\n \
    \ var h = 0;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var l = 0;\n  var m\
    \ = 0;\n  var n = 0;\n  var o = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n\
    \  var s = 0;\n  var t = 0;\n  var u = 0;\n  var v = 0;\n  var w = 0;\n  var x\
    \ = 0;\n  var y = 0;\n  var z = 0;\n  var A = 0;\n  var B = 0;\n  var C = 0;\n\
    \  var D = 0;\n  var E = 0;\n  var F = 0;\n  var G = 0;\n  var H = 0;\n  var I\
    \ = 0;\n  var J = 0;\n  var K = 0;\n  var L = 0;\n  var M = 0;\n  var N = 0;\n\
    \  var O = 0;\n  var P = 0;\n  var Q = 0;\n  var R = 0;\n  var S = 0;\n  var T\
    \ = 0;\n  var U = 0;\n  var V = 0;\n  var W = 0;\n  var X = 0;\n  var Y = 0;\n\
    \  var Z = 0;\n  var aa = 0;\n  var ab = 0;\n  var ac = 0;\n  var ad = 0;\n  var\
    \ ae = 0;\n  var af = 0;\n  var ag = 0;\n  var ah = 0;\n  var ai = 0;\n  var aj\
    \ = 0;\n  var ak = 0;\n  var al = 0;\n  var am = 0;\n  var an = 0;\n  var ao =\
    \ 0;\n  ", "  var i = 0;\n  var len = l.length;\n  var last = l[0];\n  var monotonic\
    \ = true;\n  for(i = 1; i < len; i++){\n    if(l[i] < last){\n      monotonic\
    \ = false;\n      break;\n    }\n    last = l[i];\n  }\n  return monotonic;\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  if(len === 0) return false;\n  if(len\
    \ === 1) return true;\n  if(l[0] < l[1]) return true;\n  if(l[0] > l[1]) return\
    \ false;\n  while(i < len){\n    if(l[i] < l[i-1]) return false;\n    if(l[i]\
    \ > l[i-1]) return true;\n    i++;\n  }\n  return true;\n}\n", "    var i = 0;\n\
    \    var len = l.length;\n    var last = l[0];\n    var result = true;\n    for(i\
    \ = 1; i < len; i++){\n        if(l[i] < last){\n            result = false;\n\
    \            break;\n        }\n        last = l[i];\n    }\n    return result;\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  while(i < len){\n\
    \    if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n    i++;\n\
    \  }\n  return true;\n}\n", "  var i = 0;\n  var len = l.length;\n  var last =\
    \ l[0];\n  var result = true;\n  for(i = 1; i < len; i++){\n    if(l[i] < last){\n\
    \      result = false;\n      break;\n    }\n    last = l[i];\n  }\n  return result;\n\
    }\n", "  var i = 1,\n      len = l.length,\n      last = l[0];\n  while(i < len){\n\
    \    if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n    i++;\n\
    \  }\n  return true;\n}\n", "  var len = l.length;\n  if(len < 2) return true;\n\
    \  if(len === 2) return l[0] < l[1];\n  if(l[0] < l[1]) return true;\n  if(l[0]\
    \ > l[1]) return false;\n  if(l[1] === l[len-1]) return true;\n  if(l[1] === l[0])\
    \ return true;\n  return false;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var result = true;\n  while(i < len){\n    if(l[i] < last){\n\
    \      result = false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n\
    \  return result;\n}\n", "    var i, j, len = l.length,\n        isMonotonic =\
    \ true;\n    for(i = 0; i < len - 1; i++){\n        if(l[i] > l[i + 1]){\n   \
    \         isMonotonic = false;\n            break;\n        }\n    }\n    return\
    \ isMonotonic;\n}\n", "  var i = 0;\n  var len = l.length;\n  var last = l[0];\n\
    \  var result = true;\n  for(i = 1; i < len; i++){\n    if(l[i] < last){\n   \
    \   result = false;\n      break;\n    }\n    last = l[i];\n  }\n  return result;\n\
    }\n", "    if(l.length < 2){\n        return true;\n    }\n    var last = l[0];\n\
    \    for(var i = 1; i < l.length; i++){\n        if(l[i] < last){\n          \
    \  return false;\n        }\n        last = l[i];\n    }\n    return true;\n}\n",
  "  var i = 1;\n  var n = l.length;\n  if(n < 2){\n    return true;\n  }\n  if(l[0]\
    \ > l[1]){\n    return false;\n  }\n  while(i < n){\n    if(l[i] > l[i-1]){\n\
    \      return false;\n    }\n    i++;\n  }\n  return true;\n}\n", "  var i = 1;\n\
    \  var last = l[0];\n  while(i < l.length){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n    i++;\n  }\n  return true;\n}\n", "  var\
    \ i = 1;\n  var last = l[0];\n  var result = true;\n  while(i < l.length){\n \
    \   if(l[i] < last){\n      result = false;\n      break;\n    }\n    last = l[i];\n\
    \    i++;\n  }\n  return result;\n}\n", "  var i = 0;\n  var len = l.length;\n\
    \  var prev = l[0];\n  var result = true;\n  for(i = 1; i < len; i++){\n    if(l[i]\
    \ < prev){\n      result = false;\n      break;\n    }\n    prev = l[i];\n  }\n\
    \  return result;\n}\n", "    var i = 1;\n    var len = l.length;\n    var last\
    \ = l[0];\n    var isMonotonic = true;\n    while(i < len){\n        if(l[i] <\
    \ last){\n            isMonotonic = false;\n            break;\n        }\n  \
    \      last = l[i];\n        i++;\n    }\n    return isMonotonic;\n}\n", "  var\
    \ i = 1;\n  var len = l.length;\n  var last = l[0];\n  var result = true;\n  while(i\
    \ < len){\n    if(l[i] < last){\n      result = false;\n      break;\n    }\n\
    \    last = l[i];\n    i++;\n  }\n  return result;\n}\n", "  var i = 1;\n  var\
    \ j = 1;\n  var k = 1;\n  var n = l.length;\n  var m = n - 1;\n  var a = l[0];\n\
    \  var b = l[m];\n  var c = l[0];\n  var d = l[m];\n  var e = l[0];\n  var f =\
    \ l[m];\n  var g = l[0];\n  var h = l[m];\n  var i = l[0];\n  var j = l[m];\n\
    \  var k = l[0];\n  var l = l[m];\n  var m = l[0];\n  var n = l[m];\n  var o =\
    \ l[0];\n  var p = l[m];\n  var q = l[0];\n  var r = l[m];\n  var s = l[0];\n\
    \  var t = l[m];\n  var u = l[0];\n  var v = l[m];\n  var w = l[0];\n  var x =\
    \ l[m];\n  var y = l[0];\n  var z = l[m];\n  var A = l[0];\n  var B = l[m];\n\
    \  var C = l[0];\n  var D = l[m];\n  var E = l[0];\n  var F = l[m];\n  var G =\
    \ l[0];\n  var H = l[m];\n  var I = l[0];\n  var J = l[m];\n  var K = l[0];\n\
    \  var L = l[m];\n  var M = l[0];\n  var N = l[m];\n  var O = l[0];\n  var P =\
    \ l[m];\n  var Q = l[0];\n  var R = l[m];\n  var S = l[0];\n  var T = l[m];\n\
    \  var U = l[0];\n  var V = l[m];\n  var W = l[0];\n  var X = l[m];\n  var Y =\
    \ l[0];\n  var Z = l[m];\n  var aa =", "  var i = 0;\n  var len = l.length;\n\
    \  var last = l[0];\n  var result = true;\n  for(i = 1; i < len; i++){\n    if(l[i]\
    \ < last){\n      result = false;\n      break;\n    }\n    last = l[i];\n  }\n\
    \  return result;\n}\n", "  var i = 0,\n      len = l.length,\n      last = l[0];\n\
    \  while(i < len){\n    if(l[i] < last){\n      return false;\n    }\n    last\
    \ = l[i];\n    i++;\n  }\n  return true;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var isMonotonic = true;\n  while(i < len){\n    if(l[i]\
    \ < last){\n      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n\
    \    i++;\n  }\n  return isMonotonic;\n}\n", "  if(l.length < 2){\n    return\
    \ true;\n  }\n  var last = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i]\
    \ < last){\n      return false;\n    }\n    last = l[i];\n  }\n  return true;\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  var isMonotonic\
    \ = true;\n  while(i < len){\n    if(l[i] < last){\n      isMonotonic = false;\n\
    \      break;\n    }\n    last = l[i];\n    i++;\n  }\n  return isMonotonic;\n\
    }\n", "  if(l.length === 0) return true;\n  if(l.length === 1) return true;\n\
    \  if(l[0] < l[1]) return true;\n  if(l[0] > l[1]) return false;\n  return monotonic(l.slice(1));\n\
    }\n", "    var i = 0;\n    var len = l.length;\n    var last = l[0];\n    var\
    \ result = true;\n    for(i = 1; i < len; i++){\n        if(l[i] < last){\n  \
    \          result = false;\n            break;\n        }\n        last = l[i];\n\
    \    }\n    return result;\n}\n", "  var i = 1;\n  var len = l.length;\n  var\
    \ last = l[0];\n  var isMonotonic = true;\n  while(i < len){\n    if(l[i] < last){\n\
    \      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n    i++;\n\
    \  }\n  return isMonotonic;\n}\n", "  var i = 1;\n  var len = l.length;\n  var\
    \ last = l[0];\n  var result = true;\n  while(i < len){\n    if(l[i] < last){\n\
    \      result = false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n\
    \  return result;\n}\n", "  var i = 0;\n  var j = l.length - 1;\n  var m = l[0];\n\
    \  var n = l[j];\n  var result = true;\n  while(i < j){\n    if(l[i] < m && l[j]\
    \ > n){\n      result = false;\n      break;\n    }\n    m = l[i];\n    n = l[j];\n\
    \    i++;\n    j--;\n  }\n  return result;\n}\n", "  var i = 1,\n      n = l.length,\n\
    \      a = l[0],\n      b = l[0],\n      c = l[0];\n  while (i < n) {\n    b =\
    \ c;\n    c = l[i];\n    if (a < c) {\n      return false;\n    }\n    a = b;\n\
    \    b = c;\n    i++;\n  }\n  return true;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var result = true;\n  while(i < len){\n    if(l[i] < last){\n\
    \      result = false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n\
    \  return result;\n}\n", "  var i = 1;\n  var last = l[0];\n  var result = true;\n\
    \  while(i < l.length){\n    if(l[i] < last){\n      result = false;\n      break;\n\
    \    }\n    last = l[i];\n    i++;\n  }\n  return result;\n}\n", "  var len =\
    \ l.length;\n  if(len === 0) return false;\n  if(len === 1) return true;\n  var\
    \ last = l[0];\n  for(var i = 1; i < len; i++){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n  }\n  return true;\n}\n", "  var i = 1;\n\
    \  var last = l[0];\n  while(i < l.length){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n    i++;\n  }\n  return true;\n}\n", "  var\
    \ i = 1;\n  var j = l.length - 1;\n  var m = l[0];\n  var n = l[l.length - 1];\n\
    \  while (i < j){\n    if (l[i] < l[j]){\n      if (m > l[i]){\n        return\
    \ false;\n      }\n      m = l[i];\n      i++;\n    } else {\n      if (n < l[j]){\n\
    \        return false;\n      }\n      n = l[j];\n      j--;\n    }\n  }\n  return\
    \ true;\n}\n", "  if(l.length < 2){\n    return true;\n  }\n  var last = l[0];\n\
    \  for(var i = 1; i < l.length; i++){\n    if(l[i] < last){\n      return false;\n\
    \    }\n    last = l[i];\n  }\n  return true;\n}\n", "  var i = 1;\n  while(i\
    \ < l.length){\n    if(l[i] < l[i-1]){\n      return false;\n    }\n    i++;\n\
    \  }\n  return true;\n}\n", "  var i = 1;\n  var len = l.length;\n  if(len ===\
    \ 0){\n    return false;\n  }\n  if(l[0] === l[len-1]){\n    return true;\n  }\n\
    \  if(l[0] > l[len-1]){\n    return false;\n  }\n  while(i < len){\n    if(l[i]\
    \ > l[i-1]){\n      return false;\n    }\n    i++;\n  }\n  return true;\n}\n",
  "    var i = 0,\n        len = l.length,\n        last = l[0];\n    for(; i < len;\
    \ i++){\n        if(l[i] < last){\n            return false;\n        }\n    \
    \    last = l[i];\n    }\n    return true;\n}\n", "    var i = 1;\n    while(i\
    \ < l.length){\n        if(l[i] < l[i-1]){\n            return false;\n      \
    \  }\n        i++;\n    }\n    return true;\n}\n", "  var i = 1;\n  var len =\
    \ l.length;\n  var last = l[0];\n  var result = true;\n  while(i < len){\n   \
    \ if(l[i] < last){\n      result = false;\n      break;\n    }\n    last = l[i];\n\
    \    i++;\n  }\n  return result;\n}\n", "    var i = 1;\n    var last = l[0];\n\
    \    while(i < l.length){\n        if(l[i] < last){\n            return false;\n\
    \        }\n        last = l[i];\n        i++;\n    }\n    return true;\n}\n",
  "  if(l.length < 2){\n    return true;\n  }\n  var last = l[0];\n  for(var i = 1;\
    \ i < l.length; i++){\n    if(l[i] < last){\n      return false;\n    }\n    last\
    \ = l[i];\n  }\n  return true;\n}\n", "  var i = 0;\n  var len = l.length;\n \
    \ var last = l[0];\n  var result = true;\n  for(i = 1; i < len; i++){\n    if(l[i]\
    \ < last){\n      result = false;\n      break;\n    }\n    last = l[i];\n  }\n\
    \  return result;\n}\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n\
    \  var result = true;\n  while(i < len){\n    if(l[i] < last){\n      result =\
    \ false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n  return result;\n\
    }\n", "  var i = 1;\n  var j = 0;\n  var k = 0;\n  var n = l.length;\n  var m\
    \ = n - 1;\n  var p = l[0];\n  var q = l[m];\n  var r = 0;\n  var s = 0;\n  var\
    \ t = 0;\n  var u = 0;\n  var v = 0;\n  var w = 0;\n  var x = 0;\n  var y = 0;\n\
    \  var z = 0;\n  var a = 0;\n  var b = 0;\n  var c = 0;\n  var d = 0;\n  var e\
    \ = 0;\n  var f = 0;\n  var g = 0;\n  var h = 0;\n  var i = 0;\n  var j = 0;\n\
    \  var k = 0;\n  var l = 0;\n  var m = 0;\n  var n = 0;\n  var o = 0;\n  var p\
    \ = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var t = 0;\n  var u = 0;\n\
    \  var v = 0;\n  var w = 0;\n  var x = 0;\n  var y = 0;\n  var z = 0;\n  var a\
    \ = 0;\n  var b = 0;\n  var c = 0;\n  var d = 0;\n  var e = 0;\n  var f = 0;\n\
    \  var g = 0;\n  var h = 0;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var l\
    \ = 0;\n  var m = 0;\n  var n = 0;\n  var o = 0;\n  var p = 0;\n  var q = 0;\n\
    \  var r = 0;\n  var s = 0;\n  var t = 0;\n  var u = 0;\n  var v = 0;\n  var w\
    \ = 0;\n  var x = 0;\n  var y = 0;\n  var z = 0;\n  var a = 0;\n  var b = 0;\n\
    \  var c = 0;\n  var d = 0;\n", "  var i = 1;\n  var len = l.length;\n  var last\
    \ = l[0];\n  var result = true;\n  while(i < len){\n    if(l[i] < last){\n   \
    \   result = false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n  return\
    \ result;\n}\n", "  if(l.length < 2){\n    return true;\n  }\n  var last = l[0];\n\
    \  for(var i = 1; i < l.length; i++){\n    if(l[i] < last){\n      return false;\n\
    \    }\n    last = l[i];\n  }\n  return true;\n}\n", "  var i = 0;\n  var len\
    \ = l.length;\n  var last = l[0];\n  var isMonotonic = true;\n  for(i = 1; i <\
    \ len; i++){\n    if(l[i] < last){\n      isMonotonic = false;\n      break;\n\
    \    }\n    last = l[i];\n  }\n  return isMonotonic;\n}\n", "  var i = 1;\n  var\
    \ len = l.length;\n  var last = l[0];\n  var result = true;\n  while(i < len){\n\
    \    if(l[i] < last){\n      result = false;\n      break;\n    }\n    last =\
    \ l[i];\n    i++;\n  }\n  return result;\n}\n", "  if(l.length < 2) return true;\n\
    \  if(l[0] > l[1]) return true;\n  if(l[0] < l[1]) return false;\n  return monotonic(l.slice(1));\n\
    }\n", "    var i = 0;\n    var len = l.length;\n    var prev = l[0];\n    for(i\
    \ = 1; i < len; i++){\n        if(l[i] < prev){\n            return false;\n \
    \       }\n        prev = l[i];\n    }\n    return true;\n}\n", "  var i = 1;\n\
    \  var last = l[0];\n  while(i < l.length){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n    i++;\n  }\n  return true;\n}\n", "  var\
    \ i = 0;\n  var len = l.length;\n  var last = l[0];\n  var isMonotonic = true;\n\
    \  for(i = 1; i < len; i++){\n    if(l[i] < last){\n      isMonotonic = false;\n\
    \      break;\n    }\n    last = l[i];\n  }\n  return isMonotonic;\n}\n", "  \
    \  var i = 1;\n    var last = l[0];\n    while(i < l.length){\n        if(l[i]\
    \ < last){\n            return false;\n        }\n        last = l[i];\n     \
    \   i++;\n    }\n    return true;\n}\n", "  if(l.length < 2){\n    return true;\n\
    \  }\n  var last = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] <\
    \ last){\n      return false;\n    }\n    last = l[i];\n  }\n  return true;\n\
    }\n", "  var i, j, n = l.length, a = l[0], b = l[n-1];\n  for(i=1; i<n; ++i){\n\
    \    if(a > b){\n      return false;\n    }\n    a = l[i];\n  }\n  return true;\n\
    }\n", "  var i = 1;\n  var last = l[0];\n  var result = true;\n  while(i < l.length){\n\
    \    if(l[i] < last){\n      result = false;\n      break;\n    }\n    last =\
    \ l[i];\n    i++;\n  }\n  return result;\n}\n", "  if(l.length < 2){\n    return\
    \ true;\n  }\n  var last = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i]\
    \ < last){\n      return false;\n    }\n    last = l[i];\n  }\n  return true;\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  var result =\
    \ true;\n  while(i < len){\n    if(l[i] < last){\n      result = false;\n    \
    \  break;\n    }\n    last = l[i];\n    i++;\n  }\n  return result;\n}\n", " \
    \ var i = 1;\n  var len = l.length;\n  if(len === 0) return false;\n  if(len ===\
    \ 1) return true;\n  if(l[0] < l[1]) return true;\n  if(l[0] > l[1]) return false;\n\
    \  while(i < len){\n    if(l[i] < l[i-1]) return false;\n    if(l[i] > l[i-1])\
    \ return true;\n    i++;\n  }\n  return true;\n}\n", "  var i = 0;\n  var len\
    \ = l.length;\n  var last = l[0];\n  var result = true;\n  for(i = 1; i < len;\
    \ i++){\n    if(l[i] < last){\n      result = false;\n      break;\n    }\n  \
    \  last = l[i];\n  }\n  return result;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var last_index = 0;\n  var is_increasing = true;\n  while(i\
    \ < len){\n    if(l[i] < last){\n      is_increasing = false;\n      break;\n\
    \    }\n    last = l[i];\n    last_index = i;\n    i++;\n  }\n  return is_increasing;\n\
    }\n", "  var len = l.length;\n  if(len < 2){\n    return true;\n  }\n  var last\
    \ = l[0];\n  for(var i = 1; i < len; i++){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n  }\n  return true;\n}\n", "  var i = 1;\n\
    \  var len = l.length;\n  var last = l[0];\n  var result = true;\n  while(i <\
    \ len){\n    if(l[i] < last){\n      result = false;\n      break;\n    }\n  \
    \  last = l[i];\n    i++;\n  }\n  return result;\n}\n", "  var i = 1;\n  var last\
    \ = l[0];\n  var isMonotonic = true;\n  while(i < l.length){\n    if(l[i] < last){\n\
    \      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n    i++;\n\
    \  }\n  return isMonotonic;\n}\n", "    var i = 1;\n    var len = l.length;\n\
    \    if(len === 1){\n        return true;\n    }\n    if(len === 2){\n       \
    \ return l[0] < l[1];\n    }\n    while(i < len){\n        if(l[i] > l[i-1]){\n\
    \            return true;\n        }\n        if(l[i] < l[i-1]){\n           \
    \ return false;\n        }\n        i++;\n    }\n    return true;\n}\n", "  var\
    \ i = 1;\n  while(i < l.length){\n    if(l[i] < l[i-1]){\n      return false;\n\
    \    }\n    i++;\n  }\n  return true;\n}\n", "  var i = 0;\n  var len = l.length;\n\
    \  var last = l[0];\n  var isMonotonic = true;\n  for(i = 1; i < len; i++){\n\
    \    if(l[i] < last){\n      isMonotonic = false;\n      break;\n    }\n    last\
    \ = l[i];\n  }\n  return isMonotonic;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var last_index = 0;\n  var result = true;\n  while(i <\
    \ len){\n    if(l[i] < last){\n      result = false;\n      break;\n    }\n  \
    \  if(l[i] > last){\n      last = l[i];\n      last_index = i;\n    }\n    i++;\n\
    \  }\n  return result;\n}\n", "  var i = 1;\n  var n = l.length;\n  if(n < 2){\n\
    \    return true;\n  }\n  if(l[0] > l[1]){\n    return false;\n  }\n  while(i\
    \ < n-1){\n    if(l[i] > l[i+1]){\n      return false;\n    }\n    i++;\n  }\n\
    \  return true;\n}\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n\
    \  var isMonotonic = true;\n  while(i < len){\n    if(l[i] < last){\n      isMonotonic\
    \ = false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n  return isMonotonic;\n\
    }\n", "  var i = 0;\n  var j = l.length - 1;\n  var monotonic = true;\n  while(i\
    \ < j){\n    if(l[i] < l[j]){\n      monotonic = false;\n      break;\n    }\n\
    \    i++;\n    j--;\n  }\n  return monotonic;\n}\n", "  var i = 1;\n  var last\
    \ = l[0];\n  while(i < l.length){\n    if(l[i] < last){\n      return false;\n\
    \    }\n    last = l[i];\n    i++;\n  }\n  return true;\n}\n", "  if(l.length\
    \ < 2){\n    return true;\n  }\n  var last = l[0];\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n\
    \  }\n  return true;\n}\n", "  var i = 1;\n  while(i < l.length){\n    if(l[i]\
    \ < l[i-1]){\n      return false;\n    }\n    i++;\n  }\n  return true;\n}\n",
  "  if(l.length < 2) return true;\n  var last = l[0];\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n\
    \  }\n  return true;\n}\n", "  var i = 0;\n  var len = l.length;\n  var last =\
    \ l[0];\n  var result = true;\n  for(i = 1; i < len; i++){\n    if(l[i] < last){\n\
    \      result = false;\n      break;\n    }\n    last = l[i];\n  }\n  return result;\n\
    }\n", "  var i = 1;\n  var n = l.length;\n  var last = l[0];\n  var result = true;\n\
    \  while(i < n){\n    if(l[i] < last){\n      result = false;\n      break;\n\
    \    }\n    last = l[i];\n    i++;\n  }\n  return result;\n}\n", "  var len =\
    \ l.length;\n  if(len < 2){\n    return true;\n  }\n  var last = l[0];\n  for(var\
    \ i = 1; i < len; i++){\n    if(l[i] < last){\n      return false;\n    }\n  \
    \  last = l[i];\n  }\n  return true;\n}\n", "  var i = 1;\n  while(i < l.length){\n\
    \    if(l[i] < l[i-1]){\n      return false;\n    }\n    i++;\n  }\n  return true;\n\
    }\n", "    var i = 1;\n    var len = l.length;\n    var last = l[0];\n    var\
    \ result = true;\n    while(i < len){\n        if(l[i] < last){\n            result\
    \ = false;\n            break;\n        }\n        last = l[i];\n        i++;\n\
    \    }\n    return result;\n}\n", "  var i = 1;\n  var n = l.length;\n  if(n ===\
    \ 0) return false;\n  if(n === 1) return true;\n  if(l[0] > l[1]) return true;\n\
    \  if(l[0] < l[1]) return false;\n  while(i < n){\n    if(l[i] > l[i-1]) return\
    \ true;\n    if(l[i] < l[i-1]) return false;\n    i++;\n  }\n  return true;\n\
    }\n", "  var i = 1;\n  var last = l[0];\n  while(i < l.length){\n    if(l[i] <\
    \ last){\n      return false;\n    }\n    last = l[i];\n    i++;\n  }\n  return\
    \ true;\n}\n", "  var i = 0,\n      len = l.length,\n      last = l[0];\n  for(;\
    \ i < len; i++){\n    if(l[i] < last){\n      return false;\n    }\n    last =\
    \ l[i];\n  }\n  return true;\n}\n", "  var i = 1;\n  while(i < l.length){\n  \
    \  if(l[i] < l[i-1]){\n      return false;\n    }\n    i++;\n  }\n  return true;\n\
    }\n", "  var len = l.length;\n  if(len < 2){\n    return true;\n  }\n  var last\
    \ = l[0];\n  for(var i = 1; i < len; i++){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n  }\n  return true;\n}\n", "    var i = 1;\n\
    \    var len = l.length;\n    if(len < 2){\n        return true;\n    }\n    if(l[0]\
    \ > l[1]){\n        return false;\n    }\n    while(i < len){\n        if(l[i]\
    \ > l[i-1]){\n            return false;\n        }\n        i++;\n    }\n    return\
    \ true;\n}\n", "  var i = 0;\n  var len = l.length;\n  var last = l[0];\n  var\
    \ result = true;\n  for(i = 1; i < len; i++){\n    if(l[i] < last){\n      result\
    \ = false;\n      break;\n    }\n    last = l[i];\n  }\n  return result;\n}\n",
  "    var i = 0;\n    var len = l.length;\n    var last = l[0];\n    var result =\
    \ true;\n    for(i = 1; i < len; i++){\n        if(l[i] < last){\n           \
    \ result = false;\n            break;\n        }\n        last = l[i];\n    }\n\
    \    return result;\n}\n", "    var i = 1;\n    var last = l[0];\n    var isMonotonic\
    \ = true;\n    while(i < l.length){\n        if(l[i] < last){\n            isMonotonic\
    \ = false;\n            break;\n        }\n        last = l[i];\n        i++;\n\
    \    }\n    return isMonotonic;\n}\n", "  if(l.length < 2){\n    return true;\n\
    \  }\n  var last = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] <\
    \ last){\n      return false;\n    }\n    last = l[i];\n  }\n  return true;\n\
    }\n", "  var i = 1;\n  var last = l[0];\n  while(i < l.length){\n    if(l[i] <\
    \ last){\n      return false;\n    }\n    last = l[i];\n    i++;\n  }\n  return\
    \ true;\n}\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  var\
    \ last_i = 0;\n  var result = true;\n  while(i < len){\n    if(l[i] < last){\n\
    \      result = false;\n      break;\n    }\n    if(l[i] > last){\n      last\
    \ = l[i];\n      last_i = i;\n    }\n    i++;\n  }\n  if(result){\n    return\
    \ true;\n  }\n  if(last_i === 0){\n    return false;\n  }\n  var reverse = l.slice(0).reverse();\n\
    \  return monotonic(reverse);\n}\n", "  var i = 0;\n  var len = l.length;\n  var\
    \ last = l[0];\n  var monotonic = true;\n  for(i = 1; i < len; i++){\n    if(l[i]\
    \ < last){\n      monotonic = false;\n      break;\n    }\n    last = l[i];\n\
    \  }\n  return monotonic;\n}\n", "  var i = 0;\n  var len = l.length;\n  var last\
    \ = l[0];\n  var isMonotonic = true;\n  for(i = 1; i < len; i++){\n    if(l[i]\
    \ < last){\n      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n\
    \  }\n  return isMonotonic;\n}\n", "  var i = 0;\n  var len = l.length;\n  var\
    \ last = l[0];\n  var result = true;\n  for(i = 1; i < len; i++){\n    if(l[i]\
    \ < last){\n      result = false;\n      break;\n    }\n    last = l[i];\n  }\n\
    \  return result;\n}\n", "  var i = 0;\n  var len = l.length;\n  var last = l[0];\n\
    \  var isMonotonic = true;\n  for(i = 1; i < len; i++){\n    if(l[i] < last){\n\
    \      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n  }\n  return\
    \ isMonotonic;\n}\n", "  var i = 1;\n  var last = l[0];\n  var isMonotonic = true;\n\
    \  while(i < l.length){\n    if(l[i] < last){\n      isMonotonic = false;\n  \
    \    break;\n    }\n    last = l[i];\n    i++;\n  }\n  return isMonotonic;\n}\n",
  "  var i = 1;\n  while(i < l.length){\n    if(l[i] < l[i-1]){\n      return false;\n\
    \    }\n    i++;\n  }\n  return true;\n}\n", "  var i = 0,\n    len = l.length,\n\
    \    last = l[0];\n  for(; i < len; i++){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n  }\n  return true;\n}\n", "  if(l.length <\
    \ 2){\n    return true;\n  }\n  var last = l[0];\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n\
    \  }\n  return true;\n}\n", "    var i = 1;\n    while(i < l.length){\n      \
    \  if(l[i] < l[i-1]){\n            return false;\n        }\n        i++;\n  \
    \  }\n    return true;\n}\n", "  var i = 0,\n      n = l.length,\n      a = l[0],\n\
    \      b = l[0],\n      c;\n  for(; i < n; i++){\n    c = l[i];\n    if(a < c){\n\
    \      a = c;\n    }else if(b > c){\n      b = c;\n    }\n  }\n  return a ===\
    \ b;\n}\n", "  var i = 0;\n  var j = 0;\n  var k = 0;\n  var m = 0;\n  var n =\
    \ 0;\n  var o = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n \
    \ var t = 0;\n  var u = 0;\n  var v = 0;\n  var w = 0;\n  var x = 0;\n  var y\
    \ = 0;\n  var z = 0;\n  var a = 0;\n  var b = 0;\n  var c = 0;\n  var d = 0;\n\
    \  var e = 0;\n  var f = 0;\n  var g = 0;\n  var h = 0;\n  var i = 0;\n  var j\
    \ = 0;\n  var k = 0;\n  var m = 0;\n  var n = 0;\n  var o = 0;\n  var p = 0;\n\
    \  var q = 0;\n  var r = 0;\n  var s = 0;\n  var t = 0;\n  var u = 0;\n  var v\
    \ = 0;\n  var w = 0;\n  var x = 0;\n  var y = 0;\n  var z = 0;\n  var a = 0;\n\
    \  var b = 0;\n  var c = 0;\n  var d = 0;\n  var e = 0;\n  var f = 0;\n  var g\
    \ = 0;\n  var h = 0;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var m = 0;\n\
    \  var n = 0;\n  var o = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s\
    \ = 0;\n  var t = 0;\n  var u = 0;\n  var v = 0;\n  var w = 0;\n  var x = 0;\n\
    \  var y = 0;\n  var z = 0;\n  var a = 0;\n  var b = 0;\n  var c = 0;\n  var d\
    \ = 0;\n  var e = 0;\n  var f = 0;\n  ", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var last_i = 0;\n  var result = true;\n  while(i < len){\n\
    \    if(l[i] < last){\n      result = false;\n      break;\n    }\n    if(l[i]\
    \ > last){\n      last = l[i];\n      last_i = i;\n    }\n    i++;\n  }\n  return\
    \ result;\n}\n", "  var i = 0;\n  var len = l.length;\n  var last = l[0];\n  var\
    \ result = true;\n  for(i = 1; i < len; i++){\n    if(l[i] < last){\n      result\
    \ = false;\n      break;\n    }\n    last = l[i];\n  }\n  return result;\n}\n",
  "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  var result = true;\n\
    \  while(i < len){\n    if(l[i] < last){\n      result = false;\n      break;\n\
    \    }\n    last = l[i];\n    i++;\n  }\n  return result;\n}\n", "  var i = 1;\n\
    \  var n = l.length;\n  var last = l[0];\n  var result = true;\n  while(i < n){\n\
    \    if(l[i] < last){\n      result = false;\n      break;\n    }\n    last =\
    \ l[i];\n    i++;\n  }\n  return result;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var result = true;\n  while(i < len){\n    if(l[i] < last){\n\
    \      result = false;\n      break;\n    }\n    last = l[i];\n    i++;\n  }\n\
    \  return result;\n}\n", "  var i = 1;\n  var last = l[0];\n  var monotonic =\
    \ true;\n  while(i < l.length){\n    if(l[i] < last){\n      monotonic = false;\n\
    \      break;\n    }\n    last = l[i];\n    i++;\n  }\n  return monotonic;\n}\n",
  "  var i = 0;\n  var len = l.length;\n  var last = l[0];\n  var monotonic = true;\n\
    \  for(i = 1; i < len; i++){\n    if(l[i] < last){\n      monotonic = false;\n\
    \      break;\n    }\n    last = l[i];\n  }\n  return monotonic;\n}\n", "  var\
    \ i = 0,\n      n = l.length,\n      a = l[0],\n      b = l[0],\n      c;\n\n\
    \  while (i < n-1) {\n    c = l[i+1];\n    if (a < c && (b >= c || b < a)) return\
    \ false;\n    if (b > c && (a <= c || a > b)) return false;\n    a = b;\n    b\
    \ = c;\n    i++;\n  }\n  return true;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var isMonotonic = true;\n\n  while(i < len){\n    if(l[i]\
    \ < last){\n      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n\
    \    i++;\n  }\n\n  return isMonotonic;\n}\n", "  var i = 1;\n  while(i < l.length){\n\
    \    if(l[i] < l[i-1]){\n      return false;\n    }\n    i++;\n  }\n  return true;\n\
    }\n", "  var i = 0;\n  var len = l.length;\n  var last = l[0];\n  var isMonotonic\
    \ = true;\n  for(i = 1; i < len; i++){\n    if(l[i] < last){\n      isMonotonic\
    \ = false;\n      break;\n    }\n    last = l[i];\n  }\n  return isMonotonic;\n\
    }\n", "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  while(i < len){\n\
    \    if(l[i] < last){\n      return false;\n    }\n    last = l[i];\n    i++;\n\
    \  }\n  return true;\n}\n", "  var i = 1;\n  var last = l[0];\n  var result =\
    \ true;\n  while(i < l.length){\n    if(l[i] < last){\n      result = false;\n\
    \      break;\n    }\n    last = l[i];\n    i++;\n  }\n  return result;\n}\n",
  "  var i = 1;\n  var len = l.length;\n  var last = l[0];\n  var result = true;\n\
    \  while(i < len){\n    if(l[i] < last){\n      result = false;\n      break;\n\
    \    }\n    last = l[i];\n    i++;\n  }\n  return result;\n}\n", "  var i = 1;\n\
    \  var last = l[0];\n  while(i < l.length){\n    if(l[i] < last){\n      return\
    \ false;\n    }\n    last = l[i];\n    i++;\n  }\n  return true;\n}\n", "  var\
    \ i = 0;\n  var len = l.length;\n  var last = l[0];\n  var result = true;\n  for(i\
    \ = 1; i < len; i++){\n    if(l[i] < last){\n      result = false;\n      break;\n\
    \    }\n    last = l[i];\n  }\n  return result;\n}\n", "  var i = 0;\n  var j\
    \ = l.length - 1;\n  var m = l[0];\n  var n = l[j];\n  var c = 0;\n  while (i\
    \ < j){\n    if (m < n){\n      c = -1;\n      m = l[i];\n      i++;\n    } else\
    \ if (m > n){\n      c = 1;\n      n = l[j];\n      j--;\n    } else {\n     \
    \ i++;\n      j--;\n    }\n  }\n  return c === 0;\n}\n", "    var i = 0;\n   \
    \ var len = l.length;\n    var last = l[0];\n    var monotonic = true;\n    for(i\
    \ = 1; i < len; i++){\n        if(l[i] < last){\n            monotonic = false;\n\
    \            break;\n        }\n        last = l[i];\n    }\n    return monotonic;\n\
    }\n", "  var i = 0;\n  var j = l.length - 1;\n  var monotonic = true;\n  while(i\
    \ < j){\n    if(l[i] > l[j]){\n      monotonic = false;\n      break;\n    }\n\
    \    if(l[i] < l[j]){\n      monotonic = true;\n      break;\n    }\n    i++;\n\
    \    j--;\n  }\n  return monotonic;\n}\n", "  var i = 1;\n  var len = l.length;\n\
    \  var last = l[0];\n  var isMonotonic = true;\n  while(i < len){\n    if(l[i]\
    \ < last){\n      isMonotonic = false;\n      break;\n    }\n    last = l[i];\n\
    \    i++;\n  }\n  return isMonotonic;\n}\n", "  if(l.length === 1) return true;\n\
    \  if(l.length === 2) return l[0] < l[1];\n  if(l[0] < l[1]) return monotonic(l.slice(1));\n\
    \  if(l[0] > l[1]) return monotonic(l.slice(1));\n  return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

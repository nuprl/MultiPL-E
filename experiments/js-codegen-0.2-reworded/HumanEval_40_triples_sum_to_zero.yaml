name: HumanEval_40_triples_sum_to_zero
language: js
prompt: "//triples_sum_to_zero takes an array of integers as an input.\n// it returns\
  \ true if there are three distinct elements in the array that\n// sum to zero, and\
  \ false otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> triples_sum_to_zero([1,\
  \ 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1, 2, 3, 7])\n// False\n// >>>\
  \ triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n// >>> triples_sum_to_zero([1])\n\
  // False\nfunction triples_sum_to_zero(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = triples_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
  \ assert.deepEqual(candidate([1, 3, 5, -1]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),true);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([1,\
  \ 2, 5, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 9, 7]),true);\n\
  \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([1, 3,\
  \ 5, -100]),false);\n  assert.deepEqual(candidate([100, 3, 5, -100]),false);\n}\n\
  \ntest();"
completions: ["  var i, j, k, sum, count;\n  count = 0;\n  for (i = 0; i < l.length;\
    \ i++){\n    for (j = i + 1; j < l.length; j++){\n      for (k = j + 1; k < l.length;\
    \ k++){\n        sum = l[i] + l[j] + l[k];\n        if (sum === 0){\n        \
    \  count++;\n        }\n      }\n    }\n  }\n  return count === 3;\n}\n", "  var\
    \ i, j, k;\n  var result = false;\n  for (i = 0; i < l.length - 2; i++) {\n  \
    \  for (j = i + 1; j < l.length - 1; j++) {\n      for (k = j + 1; k < l.length;\
    \ k++) {\n        if (l[i] + l[j] + l[k] === 0) {\n          result = true;\n\
    \          break;\n        }\n      }\n      if (result) {\n        break;\n \
    \     }\n    }\n    if (result) {\n      break;\n    }\n  }\n  return result;\n\
    }\n", "  var i, j, k;\n  var sum = 0;\n  var result = false;\n  for (i = 0; i\
    \ < l.length; i++){\n    sum = 0;\n    for (j = i + 1; j < l.length; j++){\n \
    \     for (k = j + 1; k < l.length; k++){\n        sum += l[i] + l[j] + l[k];\n\
    \        if (sum === 0){\n          result = true;\n          break;\n       \
    \ }\n      }\n      if (result){\n        break;\n      }\n    }\n    if (result){\n\
    \      break;\n    }\n  }\n  return result;\n}\n", "  var i, j, k;\n  var count\
    \ = 0;\n  for (i = 0; i < l.length; i++) {\n    for (j = i + 1; j < l.length;\
    \ j++) {\n      for (k = j + 1; k < l.length; k++) {\n        if (l[i] + l[j]\
    \ + l[k] === 0) {\n          count++;\n        }\n      }\n    }\n  }\n  return\
    \ count === 3;\n}\n", "  var i, j, k, sum;\n  for (i = 0; i < l.length; i++) {\n\
    \    for (j = i + 1; j < l.length; j++) {\n      for (k = j + 1; k < l.length;\
    \ k++) {\n        sum = l[i] + l[j] + l[k];\n        if (sum === 0) {\n      \
    \    return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n", "  var\
    \ i, j, k, sum;\n  for(i = 0; i < l.length; i++){\n    for(j = i + 1; j < l.length;\
    \ j++){\n      for(k = j + 1; k < l.length; k++){\n        sum = l[i] + l[j] +\
    \ l[k];\n        if(sum === 0){\n          return true;\n        }\n      }\n\
    \    }\n  }\n  return false;\n}\n", "  var i, j, k, sum;\n  for(i = 0; i < l.length\
    \ - 2; i++){\n    for(j = i + 1; j < l.length - 1; j++){\n      for(k = j + 1;\
    \ k < l.length; k++){\n        sum = l[i] + l[j] + l[k];\n        if(sum === 0){\n\
    \          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n",
  "    var i, j, k;\n    var result = false;\n    for (i = 0; i < l.length; i++){\n\
    \        for (j = i + 1; j < l.length; j++){\n            for (k = j + 1; k <\
    \ l.length; k++){\n                if (l[i] + l[j] + l[k] === 0){\n          \
    \          result = true;\n                    break;\n                }\n   \
    \         }\n            if (result === true){\n                break;\n     \
    \       }\n        }\n        if (result === true){\n            break;\n    \
    \    }\n    }\n    return result;\n}\n", "  var i, j, k, sum;\n  for (i = 0; i\
    \ < l.length; i++) {\n    for (j = i + 1; j < l.length; j++) {\n      for (k =\
    \ j + 1; k < l.length; k++) {\n        sum = l[i] + l[j] + l[k];\n        if (sum\
    \ === 0) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\n", "  var i, j, k;\n  var count = 0;\n  for(i = 0; i < l.length; i++){\n  \
    \  for(j = i + 1; j < l.length; j++){\n      for(k = j + 1; k < l.length; k++){\n\
    \        if(l[i] + l[j] + l[k] === 0){\n          count++;\n        }\n      }\n\
    \    }\n  }\n  return count === 3;\n}\n", "  var i, j, k;\n  var count = 0;\n\
    \  for (i = 0; i < l.length; i++){\n    for (j = i + 1; j < l.length; j++){\n\
    \      for (k = j + 1; k < l.length; k++){\n        if (l[i] + l[j] + l[k] ===\
    \ 0){\n          count++;\n          if (count === 3){\n            return true;\n\
    \          }\n        }\n      }\n    }\n  }\n  return false;\n}\n", "  var i,\
    \ j, k;\n  var sum;\n  var count = 0;\n  var result = false;\n  for (i = 0; i\
    \ < l.length; i++){\n    sum = 0;\n    for (j = i + 1; j < l.length; j++){\n \
    \     for (k = j + 1; k < l.length; k++){\n        sum += l[i] + l[j] + l[k];\n\
    \      }\n    }\n    if (sum === 0){\n      count++;\n    }\n  }\n  if (count\
    \ === 3){\n    result = true;\n  }\n  return result;\n}\n", "  var i, j, k, sum,\
    \ result = false;\n  for(i = 0; i < l.length; i++){\n    for(j = i + 1; j < l.length;\
    \ j++){\n      for(k = j + 1; k < l.length; k++){\n        sum = l[i] + l[j] +\
    \ l[k];\n        if(sum === 0){\n          result = true;\n          break;\n\
    \        }\n      }\n      if(result){\n        break;\n      }\n    }\n    if(result){\n\
    \      break;\n    }\n  }\n  return result;\n}\n", "  var i, j, k, sum;\n  for\
    \ (i = 0; i < l.length - 2; i++){\n    for (j = i + 1; j < l.length - 1; j++){\n\
    \      for (k = j + 1; k < l.length; k++){\n        sum = l[i] + l[j] + l[k];\n\
    \        if (sum === 0){\n          return true;\n        }\n      }\n    }\n\
    \  }\n  return false;\n}\n", "  var i, j, k;\n  var sum;\n  var count = 0;\n \
    \ for (i = 0; i < l.length; i++){\n    for (j = i + 1; j < l.length; j++){\n \
    \     for (k = j + 1; k < l.length; k++){\n        sum = l[i] + l[j] + l[k];\n\
    \        if (sum === 0){\n          count++;\n        }\n      }\n    }\n  }\n\
    \  return count === 3;\n}\n", "  var i, j, k, sum;\n  for (i = 0; i < l.length;\
    \ i++){\n    for (j = i + 1; j < l.length; j++){\n      for (k = j + 1; k < l.length;\
    \ k++){\n        sum = l[i] + l[j] + l[k];\n        if (sum === 0){\n        \
    \  return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n", "  var\
    \ i, j, k;\n  var count = 0;\n  var result = false;\n  for (i = 0; i < l.length;\
    \ i++){\n    for (j = i + 1; j < l.length; j++){\n      for (k = j + 1; k < l.length;\
    \ k++){\n        if (l[i] + l[j] + l[k] === 0){\n          count++;\n        }\n\
    \      }\n    }\n  }\n  if (count === 3){\n    result = true;\n  }\n  return result;\n\
    }\n", "  var i, j, k, sum, count;\n  for(i = 0; i < l.length; i++){\n    for(j\
    \ = i + 1; j < l.length; j++){\n      for(k = j + 1; k < l.length; k++){\n   \
    \     sum = l[i] + l[j] + l[k];\n        if(sum === 0){\n          count = 1;\n\
    \          break;\n        }\n      }\n      if(count === 1){\n        break;\n\
    \      }\n    }\n    if(count === 1){\n      break;\n    }\n  }\n  return count\
    \ === 1;\n}\n", "  var i, j, k, sum;\n  for (i = 0; i < l.length - 2; i++) {\n\
    \    for (j = i + 1; j < l.length - 1; j++) {\n      for (k = j + 1; k < l.length;\
    \ k++) {\n        sum = l[i] + l[j] + l[k];\n        if (sum === 0) {\n      \
    \    return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n", "  var\
    \ i, j, k, sum;\n  for (i = 0; i < l.length; i++) {\n    for (j = i + 1; j < l.length;\
    \ j++) {\n      for (k = j + 1; k < l.length; k++) {\n        sum = l[i] + l[j]\
    \ + l[k];\n        if (sum === 0) {\n          return true;\n        }\n     \
    \ }\n    }\n  }\n  return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_48_is_palindrome
language: js
prompt: "//Checks if given string is a palindrome\n// >>> is_palindrome('')\n// True\n\
  // >>> is_palindrome('aba')\n// True\n// >>> is_palindrome('aaaaa')\n// True\n//\
  \ >>> is_palindrome('zbcd')\n// False\nfunction is_palindrome(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = is_palindrome;\n  assert.deepEqual(candidate(\"\"),true);\n  assert.deepEqual(candidate(\"\
  aba\"),true);\n  assert.deepEqual(candidate(\"aaaaa\"),true);\n  assert.deepEqual(candidate(\"\
  zbcd\"),false);\n  assert.deepEqual(candidate(\"xywyx\"),true);\n  assert.deepEqual(candidate(\"\
  xywyz\"),false);\n  assert.deepEqual(candidate(\"xywzx\"),false);\n}\n\ntest();"
completions: ["    var i, j;\n    for (i = 0, j = text.length - 1; i < j; i++, j--)\
    \ {\n        if (text[i] !== text[j]) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n", "    if(text.length == 0) return true;\n    if(text.length\
    \ == 1) return true;\n    if(text.length == 2) return text == text.split('').reverse().join('');\n\
    \    var half = text.length / 2;\n    var left = text.substring(0, half);\n  \
    \  var right = text.substring(half);\n    return left == right.split('').reverse().join('');\n\
    }\n", "    if(text.length <= 1) return true;\n    var half = text.length / 2;\n\
    \    for(var i = 0; i < half; i++){\n        if(text[i] != text[text.length -\
    \ i - 1]) return false;\n    }\n    return true;\n}\n", "    var reverse = '';\n\
    \    for (var i = text.length - 1; i >= 0; i--) {\n        reverse += text[i];\n\
    \    }\n    return text === reverse;\n}\n", "  if(text === ''){\n    return true;\n\
    \  }\n  if(text.length === 1){\n    return true;\n  }\n  if(text.length === 2){\n\
    \    return text === text.split('').reverse().join('');\n  }\n  if(text.length\
    \ % 2 === 0){\n    return text.split('').reverse().join('') === text.split('').join('');\n\
    \  }\n  return false;\n}\n", "    var i = 0,\n        j = text.length - 1;\n \
    \   while(i < j){\n        if(text[i] !== text[j]){\n            return false;\n\
    \        }\n        i++;\n        j--;\n    }\n    return true;\n}\n", "    var\
    \ i = 0;\n    var j = text.length - 1;\n    while(i < j){\n        if(text[i]\
    \ != text[j]){\n            return false;\n        }\n        i++;\n        j--;\n\
    \    }\n    return true;\n}\n", "    var i = 0,\n        j = text.length - 1;\n\
    \    while(i < j){\n        if(text[i] !== text[j]){\n            return false;\n\
    \        }\n        i++;\n        j--;\n    }\n    return true;\n}\n", "    var\
    \ i = 0,\n        j = text.length - 1;\n    while (i < j) {\n        if (text[i]\
    \ != text[j]) {\n            return false;\n        }\n        i++;\n        j--;\n\
    \    }\n    return true;\n}\n", "    if(text.length == 0) return true;\n    var\
    \ half = text.length / 2;\n    for(var i = 0; i < half; i++){\n        if(text[i]\
    \ != text[text.length - i - 1]) return false;\n    }\n    return true;\n}\n",
  "    var text_arr = text.split('');\n    var i = 0;\n    var j = text_arr.length\
    \ - 1;\n    while(i < j){\n        if(text_arr[i] !== text_arr[j]){\n        \
    \    return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n\
    }\n", "    var i, j, len, rev;\n    len = text.length;\n    rev = text.split('').reverse().join('');\n\
    \    for (i = 0, j = len - 1; i < len; i++, j--) {\n        if (text.charAt(i)\
    \ !== rev.charAt(j)) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  var reversed = text.split('').reverse().join('');\n  return\
    \ text === reversed;\n}\n", "    if(text.length <= 1)\n        return true;\n\
    \    else if(text.length == 2)\n        return text == text.split('').reverse().join('');\n\
    \    else{\n        var half = text.length / 2;\n        var half_1 = text.substr(0,\
    \ half);\n        var half_2 = text.substr(half, half);\n        return is_palindrome(half_1)\
    \ && is_palindrome(half_2);\n    }\n}\n", "    var i = 0,\n        j = text.length\
    \ - 1;\n    while(i < j){\n        if(text[i] != text[j]){\n            return\
    \ false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n",
  "    var reversed = text.split('').reverse().join('');\n    return text === reversed;\n\
    }\n", "  return text === text.split('').reverse().join('');\n}\n", "  var reversed\
    \ = text.split('').reverse().join('');\n  return text === reversed;\n}\n", " \
    \   var i = 0,\n        j = text.length - 1;\n    while(i < j){\n        if(text[i]\
    \ !== text[j]){\n            return false;\n        }\n        i++;\n        j--;\n\
    \    }\n    return true;\n}\n", "    var text_arr = text.split('');\n    var len\
    \ = text_arr.length;\n    var i = 0;\n    var j = len - 1;\n    while(i < j){\n\
    \        if(text_arr[i] != text_arr[j]){\n            return false;\n        }\n\
    \        i++;\n        j--;\n    }\n    return true;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

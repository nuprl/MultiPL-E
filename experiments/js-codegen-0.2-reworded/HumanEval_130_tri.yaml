name: HumanEval_130_tri
language: js
prompt: "//Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n// the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n// Tribonacci sequence is defined by the recurrence:\n// tri(1) = 3\n\
  // tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) + tri(n - 2) + tri(n\
  \ + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 / 2) = 2\n// tri(4) =\
  \ 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3 = 8 \n// You are given\
  \ a non-negative integer number n, you have to a return an array of the \n// first\
  \ n + 1 numbers of the Tribonacci sequence.\n// Examples:\n// >>> tri(3)\n// [1,\
  \ 3, 2, 8]\nfunction tri(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = tri;\n  assert.deepEqual(candidate(3),[1, 3, 2, 8]);\n  assert.deepEqual(candidate(4),[1,\
  \ 3, 2, 8, 3]);\n  assert.deepEqual(candidate(5),[1, 3, 2, 8, 3, 15]);\n  assert.deepEqual(candidate(6),[1,\
  \ 3, 2, 8, 3, 15, 4]);\n  assert.deepEqual(candidate(7),[1, 3, 2, 8, 3, 15, 4, 24]);\n\
  \  assert.deepEqual(candidate(8),[1, 3, 2, 8, 3, 15, 4, 24, 5]);\n  assert.deepEqual(candidate(9),[1,\
  \ 3, 2, 8, 3, 15, 4, 24, 5, 35]);\n  assert.deepEqual(candidate(20),[1, 3, 2, 8,\
  \ 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11]);\n  assert.deepEqual(candidate(0),[1]);\n\
  \  assert.deepEqual(candidate(1),[1, 3]);\n}\n\ntest();"
completions: ["    var result = [];\n    if(n === 0){\n        return result;\n  \
    \  }\n    if(n === 1){\n        result.push(1);\n        return result;\n    }\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result.push(1);\n    result.push(1);\n\
    \    result.push(1);\n    result.push(1);\n    result", "    var result = [];\n\
    \    if(n === 0){\n        return result;\n    }\n    if(n === 1){\n        result.push(1);\n\
    \        return result;\n    }\n    if(n === 2){\n        result.push(1);\n  \
    \      result.push(2);\n        return result;\n    }\n    result.push(1);\n \
    \   if(n % 2 === 0){\n        result.push(1 + n / 2);\n        result.push(1 +\
    \ n / 2);\n        result.push(1 + n / 2);\n    }else{\n        result.push(1\
    \ + n / 2);\n        result.push(1 + n / 2);\n        result.push(1 + n / 2);\n\
    \        result.push(1 + n / 2);\n        result.push(1 + n / 2);\n    }\n   \
    \ return result;\n}\n", "    var result = [];\n    if(n === 0){\n        return\
    \ result;\n    }\n    if(n === 1){\n        result.push(1);\n        return result;\n\
    \    }\n    if(n % 2 === 0){\n        result.push(1);\n        result.push(n /\
    \ 2);\n        result.push(tri(n - 2));\n        return result;\n    }\n    result.push(1);\n\
    \    result.push(n / 2);\n    result.push(tri(n - 1));\n    result.push(tri(n\
    \ - 2));\n    result.push(tri(n + 1));\n    return result;\n}\n", "    var result\
    \ = [];\n    if(n === 0){\n        return result;\n    }\n    result.push(1);\n\
    \    if(n === 1){\n        return result;\n    }\n    result.push(3);\n    if(n\
    \ === 2){\n        return result;\n    }\n    result.push(2);\n    if(n === 3){\n\
    \        return result;\n    }\n    result.push(8);\n    for(var i = 4; i <= n;\
    \ i++){\n        result.push(result[i - 1] + result[i - 2] + result[i - 3]);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    if(n === 0){\n  \
    \      return result;\n    }\n    result.push(1);\n    if(n === 1){\n        return\
    \ result;\n    }\n    if(n % 2 === 0){\n        result.push(2);\n        result.push(3);\n\
    \        result.push(1);\n        result.push(8);\n        return result;\n  \
    \  }\n    result.push(3);\n    result.push(1);\n    result.push(2);\n    result.push(8);\n\
    \    return result;\n}\n", "  var result = [];\n  if(n === 0){\n    return result;\n\
    \  }\n  if(n === 1){\n    result.push(1);\n    return result;\n  }\n  result.push(1);\n\
    \  result.push(3);\n  if(n % 2 === 0){\n    result.push(2);\n    result.push(8);\n\
    \    for(var i = 3; i < n; i += 2){\n      result.push(result[i - 2] + result[i\
    \ - 1] + result[i]);\n    }\n  }else{\n    result.push(3);\n    result.push(2);\n\
    \    result.push(8);\n    for(var i = 3; i < n; i += 2){\n      result.push(result[i\
    \ - 2] + result[i - 1] + result[i]);\n    }\n  }\n  return result;\n}\n", "  \
    \  var result = [];\n    result.push(1);\n    if(n === 0) return result;\n   \
    \ if(n === 1) return result;\n    if(n % 2 === 0) return result.concat(tri(n/2));\n\
    \    result.push(tri(n-1).concat(tri(n-2)).concat(tri(n+1)));\n    return result;\n\
    }\n", "  var result = [];\n  if(n === 0){\n    return result;\n  }\n  if(n ===\
    \ 1){\n    result.push(1);\n    return result;\n  }\n  result.push(1);\n  result.push(3);\n\
    \  if(n % 2 === 0){\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n\
    \    result.push(3);\n    result.push(2);\n    result.push(8);\n    result.push(1);\n",
  "    var result = [];\n    if(n === 0){\n        return result;\n    }\n    if(n\
    \ === 1){\n        result.push(1);\n        return result;\n    }\n    if(n %\
    \ 2 === 0){\n        result.push(1);\n        result.push(n / 2);\n        result.push(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        return result;\n    }\n    result.push(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n    return result;\n}\n", "    var result\
    \ = [];\n    if(n === 0){\n        return result;\n    }\n    if(n === 1){\n \
    \       result.push(1);\n        return result;\n    }\n    if(n % 2 === 0){\n\
    \        result.push(1);\n        result.push(n / 2);\n        result.push(tri(n\
    \ - 2));\n        return result;\n    }\n    result.push(1);\n    result.push(n\
    \ / 2);\n    result.push(tri(n - 1));\n    result.push(tri(n - 2));\n    result.push(tri(n\
    \ + 1));\n    return result;\n}\n", "    var result = [];\n    if(n === 0){\n\
    \        return result;\n    }\n    result.push(1);\n    if(n === 1){\n      \
    \  return result;\n    }\n    if(n % 2 === 0){\n        result.push(1 + n / 2);\n\
    \        result.push(1 + n / 2);\n        result.push(1 + n / 2);\n        return\
    \ result;\n    }\n    result.push(1 + n / 2);\n    result.push(1 + n / 2);\n \
    \   result.push(1 + n / 2);\n    result.push(1 + n / 2);\n    result.push(1 +\
    \ n / 2);\n    result.push(1 + n / 2);\n    return result;\n}\n", "    var result\
    \ = [];\n    if(n === 0){\n        return result;\n    }\n    if(n === 1){\n \
    \       result.push(1);\n        return result;\n    }\n    if(n % 2 === 0){\n\
    \        result.push(1);\n        result.push(n / 2);\n        result.push(tri(n\
    \ - 2) + tri(n - 1) + tri(n + 1));\n        return result;\n    }\n    result.push(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n    return result;\n}\n", "    var result\
    \ = [];\n    if(n === 0){\n        return result;\n    }\n    if(n === 1){\n \
    \       result.push(1);\n        return result;\n    }\n    if(n === 2){\n   \
    \     result.push(1);\n        result.push(2);\n        return result;\n    }\n\
    \    if(n % 2 === 0){\n        result.push(1);\n        result.push(2);\n    \
    \    result.push(3);\n        result.push(1 + (n / 2));\n        return result;\n\
    \    }\n    result.push(1);\n    result.push(2);\n    result.push(3);\n    result.push(1\
    \ + (n / 2));\n    result.push(1 + (n / 2) + (n / 2));\n    return result;\n}\n",
  "    var result = [];\n    if(n === 0){\n        return result;\n    }\n    if(n\
    \ === 1){\n        result.push(1);\n        return result;\n    }\n    if(n %\
    \ 2 === 0){\n        result.push(1 + n / 2);\n        result.push(1);\n      \
    \  result.push(1);\n        result.push(1);\n        result.push(1);\n       \
    \ result.push(1);\n        result.push(1);\n        result.push(1);\n        result.push(1);\n\
    \        result.push(1);\n        result.push(1);\n        result.push(1);\n \
    \       result.push(1);\n        result.push(1);\n        result.push(1);\n  \
    \      result.push(1);\n        result.push(1);\n        result.push(1);\n   \
    \     result.push(1);\n        result.push(1);\n        result.push(1);\n    \
    \    result.push(1);\n        result.push(1);\n        result.push(1);\n     \
    \   result.push(1);\n        result.push(1);\n        result.push(1);\n      \
    \  result.push(1);\n        result.push(1);\n        result.push(1);\n       \
    \ result.push(1);\n        result.push(1);\n        result.push(1);\n        result.push(1);\n\
    \        result.push(1);\n        result.push(1);\n        result.push(1);\n \
    \       result.push(1);\n        result.push(1);\n        result.push(1);\n  \
    \      result.push(1);\n        result.push(1);\n        result.push(1);\n   \
    \     result.push(1);\n        result.push(1);\n        result.push(1);\n    \
    \    result.push(1);\n        result.push(1);\n        result.push(1);\n     \
    \   result.push(1);\n        result.push(1);\n        result.push(1);\n      \
    \  result.push(1);\n        result.push(1);\n        result.push(1);\n       \
    \ result.push(1);\n        result.push", "    var result = [];\n    if(n === 0){\n\
    \        return result;\n    }\n    if(n === 1){\n        result.push(1);\n  \
    \      return result;\n    }\n    if(n % 2 === 0){\n        result.push(1);\n\
    \        result.push(n / 2);\n        result.push(tri(n - 2));\n        return\
    \ result;\n    }\n    result.push(tri(n - 1));\n    result.push(1);\n    result.push(tri(n\
    \ - 2));\n    result.push(tri(n + 1));\n    return result;\n}\n", "  var result\
    \ = [];\n  if(n === 0){\n    result.push(0);\n    return result;\n  }\n  if(n\
    \ === 1){\n    result.push(1);\n    result.push(3);\n    result.push(2);\n   \
    \ result.push(8);\n    return result;\n  }\n  result.push(1);\n  result.push(3);\n\
    \  result.push(2);\n  result.push(8);\n  result.push(1 + n / 2);\n  if(n % 2 ===\
    \ 0){\n    result.push(1 + result[n - 2] + result[n - 1]);\n  }else{\n    result.push(result[n\
    \ - 2] + result[n - 1] + result[n]);\n  }\n  return result;\n}", "    var result\
    \ = [];\n    if(n === 0){\n        return result;\n    }\n    if(n === 1){\n \
    \       result.push(1);\n        return result;\n    }\n    if(n % 2 === 0){\n\
    \        result.push(1 + n / 2);\n        result.push(1);\n        result.push(1\
    \ + n / 2);\n        return result;\n    }\n    result.push(1);\n    result.push(1\
    \ + n / 2);\n    result.push(1 + n / 2);\n    result.push(1 + n / 2);\n    result.push(1\
    \ + n / 2);\n    result.push(1 + n / 2);\n    result.push(1 + n / 2);\n    result.push(1\
    \ + n / 2);\n    result.push(1 + n / 2);\n    return result;\n}\n", "    var result\
    \ = [];\n    if(n === 0){\n        result.push(0);\n        return result;\n \
    \   }\n    if(n === 1){\n        result.push(1);\n        result.push(3);\n  \
    \      result.push(2);\n        result.push(8);\n        return result;\n    }\n\
    \    result.push(1);\n    result.push(3);\n    result.push(2);\n    result.push(8);\n\
    \    if(n % 2 === 0){\n        result.push(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \    }else{\n        result.push(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n\
    \ - 1));\n    }\n    return result;\n}\n", "    if(n === 0){\n        return [0];\n\
    \    }\n    if(n === 1){\n        return [1];\n    }\n    if(n === 2){\n     \
    \   return [1, 3];\n    }\n    if(n === 3){\n        return [1, 3, 2, 8];\n  \
    \  }\n    var result = [1, 1];\n    for(var i = 2; i < n; i++){\n        result.push(1\
    \ + (i / 2));\n    }\n    return result;\n}\n", "    var result = [];\n    if(n\
    \ === 0){\n        return result;\n    }\n    if(n === 1){\n        result.push(1);\n\
    \        return result;\n    }\n    if(n % 2 === 0){\n        result.push(1 +\
    \ n / 2);\n        result.push(1);\n        result.push(1 + n / 2);\n        return\
    \ result;\n    }\n    result.push(1 + n / 2);\n    result.push(1);\n    result.push(1\
    \ + n / 2);\n    result.push(1 + n / 2);\n    result.push(1 + n / 2);\n    return\
    \ result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

language: js
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n    if(x +\
    \ y === z || y + z === x || x + z === y){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpeniw1om3.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpeniw1om3.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x > y\
    \ && x > z){\n    if(y + z === x){\n      return true;\n    }\n  }\n  else if(y\
    \ > z){\n    if(x + z === y){\n      return true;\n    }\n  }\n  else if(z > y){\n\
    \    if(x + y === z){\n      return true;\n    }\n  }\n  return false;\n}\n<|endoftext|><|javascript|>import\
    \ React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport {\
    \ action } from '@storybook/addon-actions';\nimport { withKnobs, boolean, text\
    \ } from '@storybook/addon-knobs';\nimport { withInfo } from '@storybook/addon-info';\n\
    \nimport { Button, ButtonGroup } from '../Button';\nimport { ButtonGroupInfo }\
    \ from '../ButtonGroup';\n\nconst stories = storiesOf('ButtonGroup', module);\n\
    \nstories.addDecorator(withKnobs);\nstories.addDecorator(withInfo);\n\nstories\n\
    \  .add('ButtonGroup', () => (\n    <ButtonGroup>\n      <Button>Button 1</Button>\n\
    \      <Button>Button 2</Button>\n      <Button>Button 3</Button>\n    </ButtonGroup>\n\
    \  ))\n  .add('ButtonGroup with info', () => (\n    <ButtonGroupInfo>\n      <Button>Button\
    \ 1</Button>\n      <Button>Button 2</Button>\n      <Button>Button 3</Button>\n\
    \    </ButtonGroupInfo>\n  ))\n  .add('ButtonGroup with disabled', () => (\n \
    \   <ButtonGroup>\n      <Button disabled>Button 1</Button>\n      <Button>Button\
    \ 2</Button>\n      <Button>Button 3</Button>\n    </ButtonGroup>\n  ))\n  .add('ButtonGroup\
    \ with disabled and info', () => (\n    <ButtonGroupInfo>\n      <Button disabled>Button\
    \ 1</Button>\n      <Button>Button 2</Button>\n      <Button>Button 3</Button>\n\
    \    </ButtonGroupInfo>\n  ))\n  .add('ButtonGroup with disabled and info and\
    \ custom className', () => (\n    <ButtonGroupInfo className=\"\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpu1wstzse.js:31\n<|endoftext|><|javascript|>import React from 'react';\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n    if(x <\
    \ y && y < z){\n        return true;\n    }\n    else if(x > y && y > z){\n  \
    \      return true;\n    }\n    else if(x < y && y > z){\n        return true;\n\
    \    }\n    else if(x > y && y < z){\n        return true;\n    }\n    else if(x\
    \ < y && y < z){\n        return true;\n    }\n    else if(x > y && y > z){\n\
    \        return true;\n    }\n    else if(x < y && y > z){\n        return true;\n\
    \    }\n    else if(x > y && y < z){\n        return true;\n    }\n    else if(x\
    \ < y && y < z){\n        return true;\n    }\n    else if(x > y && y > z){\n\
    \        return true;\n    }\n    else if(x < y && y > z){\n        return true;\n\
    \    }\n    else if(x > y && y < z){\n        return true;\n    }\n    else if(x\
    \ < y && y < z){\n        return true;\n    }\n    else if(x > y && y > z){\n\
    \        return true;\n    }\n    else if(x < y && y > z){\n        return true;\n\
    \    }\n    else if(x > y && y < z){\n        return true;\n    }\n    else if(x\
    \ < y && y < z){\n        return true;\n    }\n    else if(x > y && y > z){\n\
    \        return true;\n    }\n    else if(x < y && y > z){\n        return true;\n\
    \    }\n    else if(x > y && y < z){\n        return true;\n    }\n    else if(x\
    \ < y && y < z){\n        return true;\n    }\n    else if(x > y && y > z){\n\
    \        return true;\n    }\n    else if(x < y && y > z){\n        return true;\n\
    \    }\n    else if(x > y && y < z){\n        return true;\n    }\n    else if(x\
    \ < y && y\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmphrgve7yk.js:87\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n    if(isNaN(x)\
    \ || isNaN(y) || isNaN(z)){\n        return false;\n    }\n    if(x + y + z !==\
    \ 0){\n        return false;\n    }\n    if(x % 1 !== 0 || y % 1 !== 0 || z %\
    \ 1 !== 0){\n        return false;\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy7p6euk8.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpy7p6euk8.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if (x +\
    \ y == z || y + z == x || z + x == y) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgiwr9vnu.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgiwr9vnu.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x < y\
    \ && y < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else if(x < y && y < z){\n    return true;\n\
    \  }\n  else if(x > y && y > z){\n    return true;\n  }\n  else if(x < y && y\
    \ > z){\n    return true;\n  }\n  else if(x > y && y < z){\n    return true;\n\
    \  }\n  else if(x < y && y < z){\n    return true;\n  }\n  else if(x > y && y\
    \ > z){\n    return true;\n  }\n  else if(x < y && y > z){\n    return true;\n\
    \  }\n  else if(x > y && y < z){\n    return true;\n  }\n  else if(x < y && y\
    \ < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else if(x < y && y < z){\n    return true;\n\
    \  }\n  else if(x > y && y > z){\n    return true;\n  }\n  else if(x < y && y\
    \ > z){\n    return true;\n  }\n  else if(x > y && y < z){\n    return true;\n\
    \  }\n  else if(x < y && y < z){\n    return true;\n  }\n  else if(x > y && y\
    \ > z){\n    return true;\n  }\n  else if(x < y && y > z){\n    return true;\n\
    \  }\n  else if(x > y && y < z){\n    return true;\n  }\n  else if(x < y && y\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpwbvazn0r.js:87\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(isNaN(x)\
    \ || isNaN(y) || isNaN(z)){\n    return false;\n  }\n  if(x === y + z || x + y\
    \ === z || x + y === y + z){\n    return true;\n  }\n  return false;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp91w64v3k.js:28:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp91w64v3k.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x < y\
    \ && y < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else if(x < y && y < z){\n    return true;\n\
    \  }\n  else if(x > y && y > z){\n    return true;\n  }\n  else if(x < y && y\
    \ > z){\n    return true;\n  }\n  else if(x > y && y < z){\n    return true;\n\
    \  }\n  else if(x < y && y < z){\n    return true;\n  }\n  else if(x > y && y\
    \ > z){\n    return true;\n  }\n  else if(x < y && y > z){\n    return true;\n\
    \  }\n  else if(x > y && y < z){\n    return true;\n  }\n  else if(x < y && y\
    \ < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else if(x < y && y < z){\n    return true;\n\
    \  }\n  else if(x > y && y > z){\n    return true;\n  }\n  else if(x < y && y\
    \ > z){\n    return true;\n  }\n  else if(x > y && y < z){\n    return true;\n\
    \  }\n  else if(x < y && y < z){\n    return true;\n  }\n  else if(x > y && y\
    \ > z){\n    return true;\n  }\n  else if(x < y && y > z){\n    return true;\n\
    \  }\n  else if(x > y && y < z){\n    return true;\n  }\n  else if(x < y && y\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpwbvazn0r.js:87\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x > y\
    \ && y > z && x > z){\n    return true;\n  }\n  else if(x < y && y < z && x <\
    \ z){\n    return true;\n  }\n  else if(x == y && y == z){\n    return true;\n\
    \  }\n  else{\n    return false;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx_of05cy.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpx_of05cy.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x > y\
    \ && y > z){\n    return x + y > z;\n  }\n  else if(x < y && y < z){\n    return\
    \ x + y < z;\n  }\n  else if(x < y && y > z){\n    return x + y < z;\n  }\n  else\
    \ if(x > y && y < z){\n    return x + y > z;\n  }\n  else{\n    return false;\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsk5v91_6.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpsk5v91_6.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x < y\
    \ && y < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else if(x < y && y < z){\n    return true;\n\
    \  }\n  else if(x > y && y > z){\n    return true;\n  }\n  else if(x < y && y\
    \ > z){\n    return true;\n  }\n  else if(x > y && y < z){\n    return true;\n\
    \  }\n  else if(x < y && y < z){\n    return true;\n  }\n  else if(x > y && y\
    \ > z){\n    return true;\n  }\n  else if(x < y && y > z){\n    return true;\n\
    \  }\n  else if(x > y && y < z){\n    return true;\n  }\n  else if(x < y && y\
    \ < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else if(x < y && y < z){\n    return true;\n\
    \  }\n  else if(x > y && y > z){\n    return true;\n  }\n  else if(x < y && y\
    \ > z){\n    return true;\n  }\n  else if(x > y && y < z){\n    return true;\n\
    \  }\n  else if(x < y && y < z){\n    return true;\n  }\n  else if(x > y && y\
    \ > z){\n    return true;\n  }\n  else if(x < y && y > z){\n    return true;\n\
    \  }\n  else if(x > y && y < z){\n    return true;\n  }\n  else if(x < y && y\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpwbvazn0r.js:87\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x > y\
    \ && y > z) {\n    if(x % y === 0 && y % z === 0 && x % z === 0) {\n      return\
    \ true;\n    }\n  }\n  else if(x < y && y < z) {\n    if(y % x === 0 && x % z\
    \ === 0 && y % z === 0) {\n      return true;\n    }\n  }\n  else if(x < y &&\
    \ y < z) {\n    if(z % x === 0 && x % y === 0 && z % y === 0) {\n      return\
    \ true;\n    }\n  }\n  else if(x > y && y > z) {\n    if(z % x === 0 && x % y\
    \ === 0 && z % y === 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu6z8fezl.js:42:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpu6z8fezl.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(isNaN(x)\
    \ || isNaN(y) || isNaN(z)){\n    return false;\n  }\n  if(x === y + z || y ===\
    \ x + z || z === x + y){\n    return true;\n  }\n  return false;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpupkx2952.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpupkx2952.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x + y\
    \ === z || y + z === x || x + z === y){\n    return true;\n  }\n  else{\n    return\
    \ false;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpb0mcpb4t.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpb0mcpb4t.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x < y\
    \ && y < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else if(x == y && y == z){\n    return true;\n\
    \  }\n  else if(x == y && y == z){\n    return true;\n  }\n  else if(x == y &&\
    \ y == z){\n    return true;\n  }\n  else if(x == y && y == z){\n    return true;\n\
    \  }\n  else if(x == y && y == z){\n    return true;\n  }\n  else if(x == y &&\
    \ y == z){\n    return true;\n  }\n  else if(x == y && y == z){\n    return true;\n\
    \  }\n  else if(x == y && y == z){\n    return true;\n  }\n  else if(x == y &&\
    \ y == z){\n    return true;\n  }\n  else if(x == y && y == z){\n    return true;\n\
    \  }\n  else if(x == y && y == z){\n    return true;\n  }\n  else if(x == y &&\
    \ y == z){\n    return true;\n  }\n  else if(x == y && y == z){\n    return true;\n\
    \  }\n  else if(x == y && y == z){\n    return true;\n  }\n  else if(x == y &&\
    \ y == z){\n    return true;\n  }\n  else if(x == y && y == z){\n    return true;\n\
    \  }\n  else if(x == y && y == z){\n    return true;\n  }\n  else if(x == y &&\
    \ y == z){\n    return true;\n  }\n  else if(x == y && y == z){\n    return true;\n\
    \  }\n  else if(x == y && y == z){\n    return true;\n  }\n  else if(x == y &&\
    \ y\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpyd2al31h.js:87\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(isNaN(x)\
    \ || isNaN(y) || isNaN(z)){\n    return false;\n  }\n  if(x + y + z !== 0){\n\
    \    return false;\n  }\n  if(x % 1 !== 0 || y % 1 !== 0 || z % 1 !== 0){\n  \
    \  return false;\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp71ki636.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpp71ki636.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x < y\
    \ && y < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n<|endoftext|><|javascript|>var\
    \ path = require('path');\nvar webpack = require('webpack');\n\nmodule.exports\
    \ = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname,\
    \ 'dist'),\n    filename: 'bundle.js'\n  },\n  module: {\n    loaders: [\n   \
    \   {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        exclude:\
    \ /node_modules/\n      },\n      {\n        test: /\\.css$/,\n        loader:\
    \ 'style-loader!css-loader'\n      }\n    ]\n  },\n  plugins: [\n    new webpack.DefinePlugin({\n\
    \      'process.env': {\n        NODE_ENV: JSON.stringify('production')\n    \
    \  }\n    }),\n    new webpack.optimize.UglifyJsPlugin({\n      compress: {\n\
    \        warnings: false\n      }\n    })\n  ]\n};\n<|endoftext|><|javascript|>var\
    \ express = require('express');\nvar router = express.Router();\nvar mongoose\
    \ = require('mongoose');\nvar User = mongoose.model('User');\nvar passport = require('passport');\n\
    var LocalStrategy = require('passport-local').Strategy;\nvar bcrypt = require('bcrypt-nodejs');\n\
    \npassport.serializeUser(function(user, done) {\n  done(null, user._id);\n});\n\
    \npassport.deserializeUser(function(id, done) {\n  User.findById(id, function(err,\
    \ user) {\n    done(err, user);\n  });\n});\n\npassport.use(new LocalStrategy(\n\
    \  function(\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpeoq_utni.js:30\n<|endoftext|><|javascript|>var path = require('path');\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n  if(x < y\
    \ && y < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else if(x < y && y < z){\n    return true;\n\
    \  }\n  else if(x > y && y > z){\n    return true;\n  }\n  else if(x < y && y\
    \ > z){\n    return true;\n  }\n  else if(x > y && y < z){\n    return true;\n\
    \  }\n  else if(x < y && y < z){\n    return true;\n  }\n  else if(x > y && y\
    \ > z){\n    return true;\n  }\n  else if(x < y && y > z){\n    return true;\n\
    \  }\n  else if(x > y && y < z){\n    return true;\n  }\n  else if(x < y && y\
    \ < z){\n    return true;\n  }\n  else if(x > y && y > z){\n    return true;\n\
    \  }\n  else if(x < y && y > z){\n    return true;\n  }\n  else if(x > y && y\
    \ < z){\n    return true;\n  }\n  else if(x < y && y < z){\n    return true;\n\
    \  }\n  else if(x > y && y > z){\n    return true;\n  }\n  else if(x < y && y\
    \ > z){\n    return true;\n  }\n  else if(x > y && y < z){\n    return true;\n\
    \  }\n  else if(x < y && y < z){\n    return true;\n  }\n  else if(x > y && y\
    \ > z){\n    return true;\n  }\n  else if(x < y && y > z){\n    return true;\n\
    \  }\n  else if(x > y && y < z){\n    return true;\n  }\n  else if(x < y && y\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpwbvazn0r.js:87\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n    if(x <\
    \ y && y < z){\n        return true;\n    }\n    else if(x > y && y > z){\n  \
    \      return true;\n    }\n    else if(x < y && y > z){\n        return true;\n\
    \    }\n    else if(x > y && y < z){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp27xnyn74.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp27xnyn74.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ True\n// >>> any_int(3, 2, 2)\n// False\n// >>> any_int(3, -2, 1)\n// True\n\
    // >>> any_int(3.6, -2.2, 2)\n// False\nfunction any_int(x, y, z){\n    if(x >\
    \ y && y > z){\n        return true;\n    }\n    if(x < y && y < z){\n       \
    \ return true;\n    }\n    if(x > y && x > z){\n        return true;\n    }\n\
    \    if(x < y && x < z){\n        return true;\n    }\n    if(x > y && x < z){\n\
    \        return true;\n    }\n    if(x < y && x > z){\n        return true;\n\
    \    }\n    if(x < y && y > z){\n        return true;\n    }\n    if(x > y &&\
    \ y < z){\n        return true;\n    }\n    if(x < y && y < z){\n        return\
    \ true;\n    }\n    if(x > y && y > z){\n        return true;\n    }\n    if(x\
    \ < y && y > z){\n        return true;\n    }\n    if(x < y && y < z){\n     \
    \   return true;\n    }\n    if(x > y && y < z){\n        return true;\n    }\n\
    \    if(x < y && y > z){\n        return true;\n    }\n    if(x < y && y > z){\n\
    \        return true;\n    }\n    if(x > y && y < z){\n        return true;\n\
    \    }\n    if(x < y && y < z){\n        return true;\n    }\n    if(x > y &&\
    \ y > z){\n        return true;\n    }\n    if(x < y && y > z){\n        return\
    \ true;\n    }\n    if(x < y && y < z){\n        return true;\n    }\n    if(x\
    \ > y && y < z){\n        return true;\n    }\n    if(x < y && y < z){\n     \
    \   return true;\n    }\n    if(x > y && y > z){\n        return true;\n    }\n\
    \    if(x < y && y > z){\n        return true;\n    }\n    if(x < y && y > z){\n\
    \        return true;\n    }\n    if(x > y && y < z){\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpl6osk8bt.js:108\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371560

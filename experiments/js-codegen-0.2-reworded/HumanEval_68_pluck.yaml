name: HumanEval_68_pluck
language: js
prompt: "//\"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n// your task is to pluck one of the nodes and return it.\n// The\
  \ plucked node should be the node with the smallest even value.\n// If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n// The plucked node should be returned in an array, [ smalest_value, its\
  \ index ],\n// If there are no even values or the given array is empty, return [].\n\
  // Example 1:\n// >>> pluck([4,2,3])\n// [2, 1]\n// Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n// Example 2:\n// >>> pluck([1,2,3])\n\
  // [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n// Example 3:\n// >>> pluck([])\n// []\n// Example 4:\n// >>> pluck([5,\
  \ 0, 3, 0, 4, 2])\n// [0, 1]\n// Explanation: 0 is the smallest value, but  there\
  \ are two zeros,\n// so we will choose the first zero, which has the smallest index.\n\
  // Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nfunction\
  \ pluck(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pluck;\n  assert.deepEqual(candidate([4, 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5,\
  \ 0, 3, 0, 4, 2]),[0, 1]);\n  assert.deepEqual(candidate([1, 2, 3, 0, 5, 3]),[0,\
  \ 3]);\n  assert.deepEqual(candidate([5, 4, 8, 4, 8]),[4, 1]);\n  assert.deepEqual(candidate([7,\
  \ 6, 7, 1]),[6, 1]);\n  assert.deepEqual(candidate([7, 9, 7, 1]),[]);\n}\n\ntest();"
completions: ["    let result = [];\n    let minEven = Infinity;\n    let minIndex\
    \ = -1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0\
    \ && arr[i] < minEven){\n            minEven = arr[i];\n            minIndex =\
    \ i;\n        }\n    }\n    if(minEven === Infinity){\n        return [];\n  \
    \  }\n    result.push(minEven);\n    result.push(minIndex);\n    return result;\n\
    }\n<|endoftext|><|javascript|>import {\n  moduleForComponent,\n  test\n} from\
    \ 'ember-qunit';\n\nmoduleForComponent('md-card', {\n  // specify the other units\
    \ that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\
    });\n\ntest('it renders', function(assert) {\n  assert.expect(2);\n\n  // creates\
    \ the component instance\n  var component = this.subject();\n  assert.equal(component._state,\
    \ 'preRender');\n\n  // renders the component to the page\n  this.render();\n\
    \  assert.equal(component._state, 'inDOM');\n});\n<|endoftext|><|javascript|>var\
    \ searchData=\n[\n  ['_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5",
  "    let min_even = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min_even) {\n            min_even\
    \ = arr[i];\n            min_index = i;\n        }\n    }\n    return [min_even,\
    \ min_index];\n}\n<|endoftext|><|javascript|>'use strict';\n\nvar _ = require('lodash');\n\
    var fs = require('fs');\nvar path = require('path');\nvar util = require('util');\n\
    var yeoman = require('yeoman-generator');\nvar chalk = require('chalk');\nvar\
    \ yosay = require('yosay');\nvar mkdirp = require('mkdirp');\nvar _s = require('underscore.string');\n\
    \nvar Generator = module.exports = function Generator(args, options, config) {\n\
    \  yeoman.generators.Base.apply(this, arguments);\n\n  this.on('end', function\
    \ () {\n    this.installDependencies({ skipInstall: options['skip-install'] });\n\
    \  });\n\n  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n\
    };\n\nutil.inherits(Generator, yeoman.generators.Base);\n\nGenerator.prototype.askFor\
    \ = function askFor() {\n  var cb = this.async();\n\n  // have Yeoman greet the\
    \ user.\n  console.log(yosay(\n    'Welcome to the ' + chalk.red('generator-ng-app')\
    \ + ' generator!'\n  ));\n\n  var prompts = [{\n    name: 'appName',\n    message:\
    \ 'What is the name of your AngularJS app?',\n    default: 'myApp'\n  }, {\n \
    \   name: 'appDescription',\n    message: 'What is the description of your AngularJS\
    \ app?',\n    default: 'My AngularJS app'\n  }, {\n    name: 'appAuthor',\n  \
    \  message: 'What is the author of your AngularJS app?',\n    default: 'My Name'\n\
    \  ", "    let min_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n   \
    \ let min_index = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b;\n    let result\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] === min_even){\n\
    \            result.push([min_even, i]);\n        }\n    }\n    return result.length\
    \ === 0 ? [] : result[0];\n}\n<|endoftext|><|javascript|>var fs = require('fs');\n\
    var path = require('path');\nvar _ = require('lodash');\nvar async = require('async');\n\
    var util = require('util');\nvar config = require('../config');\nvar logger =\
    \ require('../logger');\nvar utils = require('../utils');\nvar db = require('../db');\n\
    var db_utils = require('../db_utils');\nvar db_utils_schema = require('../db_utils/schema');\n\
    var db_utils_schema_utils = require('../db_utils/schema_utils');\nvar db_utils_schema_utils_utils\
    \ = require('../db_utils/schema_utils/utils');\nvar db_utils_schema_utils_utils_utils\
    \ = require('../db_utils/schema_utils/utils/utils');\nvar db_utils_schema_utils_utils_utils_utils\
    \ = require('../db_utils/schema_utils/utils/utils/utils');\nvar db_utils_schema_utils_utils_utils_utils_utils\
    \ = require('../db_utils/schema_utils/utils/utils/utils/utils');\nvar db_utils_schema_utils_utils_utils_utils_utils_utils\
    \ = require('../db_utils/schema_utils/utils/utils/utils/utils/utils');\nvar db_utils_schema_utils_utils_utils_utils_utils_utils_utils\
    \ = require('../db_utils/schema_utils/utils/utils/utils/utils/utils/utils');\n\
    var db_utils_schema_utils_utils_utils_utils_", "  let smallest_even = arr.reduce((a,\
    \ b) => {\n    if (a === null) return b;\n    if (b === null) return a;\n    if\
    \ (a % 2 === 0 && b % 2 === 0) return Math.min(a, b);\n    return Math.min(a,\
    \ b);\n  });\n  let index = arr.reduce((a, b) => {\n    if (a === null) return\
    \ b;\n    if (b === null) return a;\n    if (a === smallest_even) return a;\n\
    \    return b;\n  });\n  return [smallest_even, index];\n}\n<|endoftext|><|javascript|>/*\n\
    \ * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under\
    \ the MIT License. See License.txt in the project root for\n * license information.\n\
    \ *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may\
    \ cause incorrect behavior and will be lost if the code is\n * regenerated.\n\
    \ */\n\n'use strict';\n\nconst models = require('./index');\n", "    let result\
    \ = [];\n    let min_even = Infinity;\n    let min_index = 0;\n    for (let i\
    \ = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min_even)\
    \ {\n            min_even = arr[i];\n            min_index = i;\n        }\n \
    \   }\n    if (min_even === Infinity) {\n        return [];\n    }\n    result.push(min_even);\n\
    \    result.push(min_index);\n    return result;\n}\n<|endoftext|><|javascript|>import\
    \ React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators\
    \ } from 'redux';\nimport { Link } from 'react-router';\nimport { fetchPosts }\
    \ from '../actions/index';\nimport { LinkContainer } from 'react-router-bootstrap';\n\
    \nclass PostsIndex extends React.Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n\
    \  }\n\n  render() {\n    const { posts } = this.props;\n    return (\n      <div>\n\
    \        <h1>Posts</h1>\n        <ul>\n          {posts.map(post =>\n        \
    \    <li key={post.id}>\n              <Link to={`/posts/${post.id}`}>\n     \
    \           {post.title}\n              </Link>\n            </li>\n         \
    \ )}\n        </ul>\n      </div>\n    );\n  }\n}\n", "    let smallest_even_value\
    \ = arr[0]\n    let smallest_index = 0\n    let result = []\n    for(let i = 0;\
    \ i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(arr[i]\
    \ < smallest_even_value){\n                smallest_even_value = arr[i]\n    \
    \            smallest_index = i\n            }\n        }\n    }\n    result.push(smallest_even_value)\n\
    \    result.push(smallest_index)\n    return result\n}\n<|endoftext|><|javascript|>var\
    \ path = require('path');\nvar webpack = require('webpack');\n\nmodule.exports\
    \ = {\n  entry: [\n    'webpack-dev-server/client?http://localhost:3000',\n  \
    \  'webpack/hot/only-dev-server',\n    './src/index'\n  ],\n  output: {\n    path:\
    \ path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath: '/static/'\n\
    \  },\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NoErrorsPlugin()\n\
    \  ],\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      loaders: ['react-hot',\
    \ 'babel'],\n      include: path.join(__dirname, 'src')\n    }, {\n      test:\
    \ /\\.css$/,\n      loader: 'style!css'\n    }]\n  }\n};\n<|endoftext|><|javascript|>import\
    \ {\n  moduleForComponent,\n  test\n} from 'ember-qunit';\n\nmoduleForComponent('md-list-item',\
    \ {\n  // specify the other units that are required for this test\n  // needs:\
    \ ['component:foo', 'helper:bar']\n});\n\ntest('it renders', function(assert)\
    \ {\n  assert.expect(2);\n\n  // creates the component instance\n  var component\
    \ = this.subject();\n  assert.equal(component._state, 'preRender');\n\n  // renders\
    \ the component to the page\n  this.render();\n  assert.equal(component._", " \
    \ var result = [];\n  var min_even = arr[0];\n  var min_index = 0;\n  for(var\
    \ i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0){\n      if(arr[i] < min_even){\n\
    \        min_even = arr[i];\n        min_index = i;\n      }\n    }\n  }\n  result.push(min_even);\n\
    \  result.push(min_index);\n  return result;\n}\n<|endoftext|><|javascript|>'use\
    \ strict';\n\nvar _ = require('lodash');\nvar moment = require('moment');\n\n\
    var config = require('../config');\nvar logger = require('../logger');\n\nvar\
    \ db = require('../db');\n\nvar get = function(req, res, next) {\n  var query\
    \ = {\n    userId: req.user.id\n  };\n\n  db.get(query, function(err, result)\
    \ {\n    if (err) {\n      return next(err);\n    }\n\n    if (!result) {\n  \
    \    return res.status(404).send({\n        message: 'No user found'\n      });\n\
    \    }\n\n    res.status(200).send(result);\n  });\n};\n\nvar post = function(req,\
    \ res, next) {\n  var user = req.body;\n\n  if (!user.username) {\n    return\
    \ res.status(400).send({\n      message: 'Username is required'\n    });\n  }\n\
    \n  if (!user.password) {\n    return res.status(400).send({\n      message: 'Password\
    \ is required'\n    });\n  }\n\n  db.insert(user, function(err, result) {\n  \
    \  if (err) {\n      return next(err);\n    }\n\n    logger.info('User created',\
    \ {\n      user: user\n    });\n\n    res.status(201).send(result);\n  });\n};\n\
    \nvar put = function(req, res, next) {\n  var user = req.body;\n\n  if (!user.username)\
    \ {\n    return res.status(400).send({\n      message: 'Username is", "    var\
    \ result = [];\n    var min = arr[0];\n    var minIndex = 0;\n    for(var i =\
    \ 0; i < arr.length; i++){\n        if(arr[i] < min){\n            min = arr[i];\n\
    \            minIndex = i;\n        }\n    }\n    result.push(min);\n    result.push(minIndex);\n\
    \    return result;\n}\n<|endoftext|><|javascript|>var _ = require('lodash');\n\
    var fs = require('fs');\nvar path = require('path');\nvar util = require('util');\n\
    var events = require('events');\n\nvar logger = require('../logger');\n\nvar config\
    \ = require('../config');\nvar utils = require('../utils');\n\nvar defaultConfig\
    \ = {\n  logLevel: 'info',\n  logFormat: '%b %d %H:%M:%S.%L %Z %m',\n  logFile:\
    \ '',\n  logFileSize: 1024 * 1024 * 10,\n  logFileCount: 10,\n  logFileRotation:\
    \ true,\n  logFileRotationMaxSize: 1024 * 1024 * 10,\n  logFileRotationMaxCount:\
    \ 10,\n  logFileRotationMaxAge: 1,\n  logFileRotationMaxAgeDays: 1,\n  logFileRotationMaxAgeTime:\
    \ 'midnight',\n  logFileRotationMaxAgeTimeISO: 'midnight',\n  logFileRotationMaxAgeTimeUnix:\
    \ 'midnight',\n  logFileRotationMaxAgeTimeUnixGMT: 'midnight',\n  logFileRotationMaxAgeTimeUnixUTC:\
    \ 'midnight',\n  logFileRotationMaxAgeTimeUnixUS: 'midnight',\n  logFileRotationMaxAgeTimeUnixUSGMT:\
    \ 'midnight',\n  logFileRotationMaxAgeTimeUnixUSUTC: 'midnight',\n  logFileRotationMaxAgeTimeUnixUSUS:\
    \ 'midnight',\n  logFileRotationMaxAgeTimeUnixUSUSGMT: 'midnight',\n  logFileRotationMaxAgeTimeUnixUSUSUTC:\
    \ 'midnight',\n  logFileRotationMaxAgeTimeUnixUSUSUS: 'midnight',\n  logFileRotationMaxAgeTimeUnixUSUSGMT:",
  "  let res = [];\n  let min = arr[0];\n  let min_index = 0;\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      min_index\
    \ = i;\n    }\n  }\n  if (min % 2 === 0) {\n    res.push([min, min_index]);\n\
    \  }\n  return res;\n}\n<|endoftext|><|javascript|>import React from 'react';\n\
    import { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\
    import { withKnobs, boolean, text } from '@storybook/addon-knobs';\nimport { withInfo\
    \ } from '@storybook/addon-info';\n\nimport { Button } from '../Button';\nimport\
    \ { ButtonGroup } from '../ButtonGroup';\n\nconst stories = storiesOf('Buttons',\
    \ module);\n\nstories.addDecorator(withKnobs);\nstories.addDecorator(withInfo);\n\
    \nstories.add('Button', () => (\n  <Button onClick={action('clicked')}>Click Me</Button>\n\
    ));\n\nstories.add('ButtonGroup', () => (\n  <ButtonGroup>\n    <Button onClick={action('clicked')}>Click\
    \ Me</Button>\n    <Button onClick={action('clicked')}>Click Me</Button>\n   \
    \ <Button onClick={action('clicked')}>Click Me</Button>\n  </ButtonGroup>\n));\n\
    <|endoftext|><|javascript|>var express = require('express');\nvar router = express.Router();\n\
    var mongoose = require('mongoose');\nvar User = mongoose.model('User');\nvar passport\
    \ = require('passport');\nvar jwt = require('jsonwebtoken');\n\nrouter.get('/',\
    \ function(req, res, next) {\n  res.render('index', {\n    title: 'Express'\n\
    \  });\n});\n\nrouter.post('/login', function(req, res, next) {\n  passport.authenticate('local',\
    \ function(err, user, info) {\n    if (err", "  var result = [];\n  var min =\
    \ arr[0];\n  var min_index = 0;\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i]\
    \ % 2 == 0){\n      if(arr[i] < min){\n        min = arr[i];\n        min_index\
    \ = i;\n      }\n    }\n  }\n  result.push(min);\n  result.push(min_index);\n\
    \  return result;\n}\n<|endoftext|><|javascript|>/*\n * Copyright (c) 2015-2016\
    \ Dilvan Moreira. \n * Copyright (c) 2015-2016 John Garavito.\n *\n * Licensed\
    \ under the Apache License, Version 2.0 (the \"License\");\n *  you may not use\
    \ this file except in compliance with the License.\n *  You may obtain a copy\
    \ of the License at\n *  \n *    http://www.apache.org/licenses/LICENSE-2.0\n\
    \ *\n * Unless required by applicable law or agreed to in writing,\n * software\
    \ distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT\
    \ WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the\
    \ License for the\n * specific language governing permissions and limitations\n\
    \ * under the License.\n */\n", "  let smallest_even_value = arr.reduce((acc,\
    \ curr) => {\n    if (curr % 2 === 0) {\n      return Math.min(acc, curr)\n  \
    \  }\n    return acc\n  }, Number.MAX_SAFE_INTEGER)\n  let smallest_index = arr.reduce((acc,\
    \ curr) => {\n    if (curr % 2 === 0) {\n      return Math.min(acc, curr)\n  \
    \  }\n    return acc\n  }, Number.MAX_SAFE_INTEGER)\n  let smallest_even_value_index\
    \ = arr.reduce((acc, curr) => {\n    if (curr % 2 === 0) {\n      return Math.min(acc,\
    \ curr)\n    }\n    return acc\n  }, Number.MAX_SAFE_INTEGER)\n  let smallest_index_index\
    \ = arr.reduce((acc, curr) => {\n    if (curr % 2 === 0) {\n      return Math.min(acc,\
    \ curr)\n    }\n    return acc\n  }, Number.MAX_SAFE_INTEGER)\n  if (smallest_even_value\
    \ === Number.MAX_SAFE_INTEGER) {\n    return []\n  }\n  let smallest_even_value_index_index\
    \ = arr.reduce((acc, curr) => {\n    if (curr % 2 === 0) {\n      return Math.min(acc,\
    \ curr)\n    }\n    return acc\n  }, Number.MAX_SAFE_INTEGER)\n  let smallest_index_index_index\
    \ = arr.reduce((acc, curr) => {\n    if (curr % 2 === 0) {\n      return Math.min(acc,\
    \ curr)\n    }\n    return acc\n  }, Number.MAX_SAFE_INTEGER)\n  let smallest_even_value_index_index_index\
    \ = arr.reduce((acc, curr) => {\n    if (curr % 2 === 0) {\n      return Math.min(acc,\
    \ curr)\n    }\n    return acc\n  }, Number.MAX_SAFE_INTEGER)\n  let smallest_index_index_",
  "    let res = [];\n    let min = 0;\n    let minIndex = 0;\n    let i = 0;\n  \
    \  let j = 0;\n    while(i < arr.length){\n        if(arr[i] % 2 === 0){\n   \
    \         if(min === 0){\n                min = arr[i];\n                minIndex\
    \ = i;\n            }\n            else if(arr[i] < min){\n                min\
    \ = arr[i];\n                minIndex = i;\n            }\n        }\n       \
    \ i++;\n    }\n    if(min === 0){\n        res.push(minIndex);\n        res.push(min);\n\
    \    }\n    return res;\n}\n<|endoftext|><|javascript|>import {\n  GraphQLObjectType,\n\
    \  GraphQLString,\n  GraphQLNonNull,\n  GraphQLInt,\n  GraphQLID,\n  GraphQLBoolean,\n\
    \  GraphQLFloat,\n  GraphQLInputObjectType,\n  GraphQLList,\n  GraphQLInputObjectType,\n\
    } from 'graphql';\n\nimport {\n  GraphQLDate,\n  GraphQLDateTime,\n  GraphQLTime,\n\
    \  GraphQLDateTime,\n  GraphQLTime,\n  GraphQLDate,\n  GraphQLTime,\n  GraphQLDateTime,\n\
    \  GraphQLTime,\n  GraphQLDate,\n  GraphQLTime,\n  GraphQLDateTime,\n  GraphQLTime,\n\
    \  GraphQLDate,\n  GraphQLTime,\n  GraphQLDateTime,\n  GraphQLTime,\n  GraphQLDate,\n\
    \  GraphQLTime,\n  GraphQLDateTime,\n  GraphQLTime,\n  GraphQLDate,\n  GraphQLTime,\n\
    \  GraphQLDateTime,\n  GraphQLTime,\n  GraphQLDate,\n  GraphQLTime,\n  GraphQLDateTime,\n\
    \  GraphQLTime,\n  GraphQLDate,\n  GraphQLTime,\n  GraphQLDateTime,\n  GraphQLTime,\n\
    \  GraphQLDate,\n  GraphQLTime,\n  GraphQLDateTime,\n  GraphQLTime,\n  GraphQLDate,\n\
    \  GraphQLTime,\n  GraphQLDateTime,\n  GraphQLTime,\n  GraphQLDate,\n  Graph",
  "    let minEven = Number.MAX_SAFE_INTEGER;\n    let minIndex = -1;\n    let result\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n\
    \            if(arr[i] < minEven){\n                minEven = arr[i];\n      \
    \          minIndex = i;\n            }\n        }\n    }\n    if(minEven ===\
    \ Number.MAX_SAFE_INTEGER){\n        result = [];\n    }else{\n        result\
    \ = [minEven, minIndex];\n    }\n    return result;\n}\n<|endoftext|><|javascript|>import\
    \ React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport {\
    \ action } from '@storybook/addon-actions';\nimport { withKnobs, boolean, select\
    \ } from '@storybook/addon-knobs';\nimport { withInfo } from '@storybook/addon-info';\n\
    \nimport { Button } from '../Button';\nimport { ButtonGroup } from '../ButtonGroup';\n\
    import { ButtonToolbar } from '../ButtonToolbar';\nimport { ButtonToolbarGroup\
    \ } from '../ButtonToolbarGroup';\nimport { ButtonToolbarGroupWithSize } from\
    \ '../ButtonToolbarGroupWithSize';\nimport { ButtonToolbarGroupWithSizeAndPosition\
    \ } from '../ButtonToolbarGroupWithSizeAndPosition';\n\nconst stories = storiesOf('Buttons',\
    \ module);\n\nstories.addDecorator(withKnobs);\nstories.addDecorator(withInfo);\n\
    \nstories.add('Button', () => (\n  <Button>Button</Button>\n));\n\nstories.add('ButtonGroup',\
    \ () => (\n  <ButtonGroup>\n    <Button>Button</Button>\n  </ButtonGroup>\n));\n\
    \nstories.add('ButtonToolbar', () => (\n  <ButtonToolbar>\n    <Button>Button</Button>\n\
    \  </ButtonToolbar>\n));\n\nstories.add('ButtonToolbarGroup', () => (\n  <ButtonToolbarGroup>\n\
    \    <Button>Button</Button>\n  </ButtonToolbarGroup>\n));\n\nstories.add('ButtonToolbarGroupWithSize',\
    \ ()", "  let result = [];\n  let min_even = Infinity;\n  let min_index = 0;\n\
    \  let i = 0;\n  while (i < arr.length) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index = i;\n\
    \      }\n    }\n    i++;\n  }\n  if (min_even === Infinity) {\n    result = [];\n\
    \  } else {\n    result = [min_even, min_index];\n  }\n  return result;\n}\n<|endoftext|><|javascript|>/**\n\
    \ * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this\
    \ source code is governed by an MIT-style license that can be\n * found in the\
    \ LICENSE file at https://angular.io/license\n */\n", "  let min_even = Infinity;\n\
    \  let min_index = -1;\n  let result = [];\n  for(let i = 0; i < arr.length; i++){\n\
    \    if(arr[i] % 2 === 0){\n      if(arr[i] < min_even){\n        min_even = arr[i];\n\
    \        min_index = i;\n      }\n    }\n  }\n  if(min_even === Infinity){\n \
    \   return [];\n  }\n  result.push(min_even);\n  result.push(min_index);\n  return\
    \ result;\n}\n<|endoftext|><|javascript|>import React from 'react';\nimport {\
    \ storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\
    import { withKnobs, boolean, text } from '@storybook/addon-knobs';\nimport { withInfo\
    \ } from '@storybook/addon-info';\n\nimport { Button } from '../Button';\nimport\
    \ { ButtonGroup } from '../ButtonGroup';\nimport { ButtonToolbar } from '../ButtonToolbar';\n\
    import { ButtonToolbarGroup } from '../ButtonToolbarGroup';\n\nimport { infoOptions\
    \ } from '../../utils/infoOptions';\n\nconst stories = storiesOf('Buttons', module);\n\
    \nstories.addDecorator(withKnobs);\nstories.addDecorator(withInfo);\n\nstories.add('Button',\
    \ () => (\n  <Button\n    onClick={action('clicked')}\n    disabled={boolean('disabled',\
    \ false)}\n    type={text('type', 'button')}\n    size={text('size', 'small')}\n\
    \    variant={text('variant', 'primary')}\n    href={text('href', '#         \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \           ", "  let min_even = Infinity;\n  let min_index = -1;\n  let min_value\
    \ = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n\
    \        min_index = i;\n      }\n    }\n  }\n  if (min_index !== -1) {\n    result.push([min_even,\
    \ min_index]);\n  }\n  return result;\n}\n<|endoftext|><|javascript|>var gulp\
    \ = require('gulp');\nvar browserify = require('browserify');\nvar source = require('vinyl-source-stream');\n\
    var buffer = require('vinyl-buffer');\nvar uglify = require('gulp-uglify');\n\
    var rename = require('gulp-rename');\nvar sourcemaps = require('gulp-sourcemaps');\n\
    var gutil = require('gulp-util');\nvar concat = require('gulp-concat');\nvar notify\
    \ = require('gulp-notify');\nvar watchify = require('watchify');\nvar babelify\
    \ = require('babelify');\nvar babel = require('babel-core');\nvar eslint = require('gulp-eslint');\n\
    var eslintConfig = require('./eslint.json');\nvar del = require('del');\nvar runSequence\
    \ = require('run-sequence');\nvar fs = require('fs');\nvar path = require('path');\n\
    var glob = require('glob');\nvar merge = require('merge-stream');\nvar argv =\
    \ require('yargs').argv;\nvar sourcemaps = require('gulp-sourcemaps');\nvar babel\
    \ = require('babel-core');\nvar eslint = require('gulp-eslint');\nvar eslintConfig\
    \ = require('./eslint.json');\nvar gulpif = require('gulp-if');\nvar eslint =\
    \ require('gulp-eslint');\nvar eslintConfig = require('./eslint.json');\nvar esl",
  "    let res = [];\n    let min = 0;\n    let min_index = 0;\n    for(let i = 0;\
    \ i < arr.length; i++){\n        if(arr[i] % 2 === 0){\n            if(min ===\
    \ 0){\n                min = arr[i];\n                min_index = i;\n       \
    \     }\n            else if(arr[i] < min){\n                min = arr[i];\n \
    \               min_index = i;\n            }\n        }\n    }\n    if(min ===\
    \ 0){\n        res = [min, min_index];\n    }\n    return res;\n}\n<|endoftext|><|javascript|>var\
    \ path = require('path');\nvar webpack = require('webpack');\nvar HtmlWebpackPlugin\
    \ = require('html-webpack-plugin');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\n\
    \nmodule.exports = {\n  entry: [\n    'webpack-dev-server/client?http://localhost:3000',\n\
    \    'webpack/hot/only-dev-server',\n    './src/index'\n  ],\n  output: {\n  \
    \  path: path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath:\
    \ '/'\n  },\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n   \
    \ new webpack.NoErrorsPlugin(),\n    new HtmlWebpackPlugin({\n      template:\
    \ 'src/index.html',\n      inject: 'body',\n      filename: 'index.html'\n   \
    \ }),\n    new ExtractTextPlugin('styles.css')\n  ],\n  module: {\n    loaders:\
    \ [\n      {\n        test: /\\.js$/,\n        loaders: ['react-hot', 'babel'],\n\
    \        include: path.join(__dirname, 'src')\n      },\n      {\n        test:\
    \ /\\.css$/,\n        loader: ExtractTextPlugin.extract('style', 'css?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]')\n\
    \      }\n    ]\n  }\n};\n<|endoftext|><|javascript|", "  var result = [];\n \
    \ var min = Infinity;\n  var index = -1;\n  for (var i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      index\
    \ = i;\n    }\n  }\n  if (index !== -1) {\n    result = [min, index];\n  }\n \
    \ return result;\n}\n<|endoftext|><|javascript|>import React from 'react';\nimport\
    \ { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\
    import { withKnobs, boolean, select } from '@storybook/addon-knobs';\nimport {\
    \ withInfo } from '@storybook/addon-info';\nimport { withKnobs, text } from '@storybook/addon-knobs';\n\
    import { withA11y } from '@storybook/addon-a11y';\nimport { withAmp } from '@ampproject/storybook-addon';\n\
    \nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\
    import Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\
    import Box from '@material-ui/core/Box';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\
    import Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\n\
    import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel\
    \ from '@material-ui/core/FormLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\
    import FormControlStatic from '@material-ui/core/FormControlStatic';\nimport FormControls\
    \ from '@material-ui/core/FormControls';\nimport FormControlsHelperText from '@material-ui/core/FormControlsHelperText';\n\
    import FormControlsStatic from '@material-ui/core/FormControlsStatic';\nimport\
    \ FormControlsHelperTextStatic from '", "    let result = [];\n    let min_even\
    \ = Infinity;\n    let min_index = -1;\n    for(let i = 0; i < arr.length; i++){\n\
    \        if(arr[i] % 2 === 0 && arr[i] < min_even){\n            min_even = arr[i];\n\
    \            min_index = i;\n        }\n    }\n    if(min_even === Infinity){\n\
    \        return result;\n    }\n    result.push(min_even);\n    result.push(min_index);\n\
    \    return result;\n}\n<|endoftext|><|javascript|>/*\n * Copyright (c) Microsoft\
    \ Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt\
    \ in the project root for\n * license information.\n *\n * Code generated by Microsoft\
    \ (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will\
    \ be lost if the code is\n * regenerated.\n */\n\n'use strict';\n\nconst models\
    \ = require('./index');\n", "  let smallest_even_value = arr[0];\n  let smallest_index\
    \ = 0;\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0 && arr[i]\
    \ < smallest_even_value){\n      smallest_even_value = arr[i];\n      smallest_index\
    \ = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n}\n<|endoftext|><|javascript|>var\
    \ path = require('path');\nvar webpack = require('webpack');\n\nmodule.exports\
    \ = {\n  entry: [\n    'webpack-dev-server/client?http://localhost:3000',\n  \
    \  'webpack/hot/only-dev-server',\n    './src/index'\n  ],\n  output: {\n    path:\
    \ path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath: '/static/'\n\
    \  },\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NoErrorsPlugin()\n\
    \  ],\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      loaders: ['react-hot',\
    \ 'babel'],\n      include: path.join(__dirname, 'src')\n    }]\n  }\n};\n<|endoftext|><|javascript|>/*\n\
    \ * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under\
    \ the MIT License. See License.txt in the project root for\n * license information.\n\
    \ *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may\
    \ cause incorrect behavior and will be lost if the code is\n * regenerated.\n\
    \ */\n\n'use strict';\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

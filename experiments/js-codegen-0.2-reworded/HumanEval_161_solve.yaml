name: HumanEval_161_solve
language: js
prompt: "//You are given a string s.\n// if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string\
  \ contains no letters, reverse the string.\n// The function should return the resulted\
  \ string.\n// Examples\n// >>> solve(\"1234\") \n// \"4321\"\n// >>> solve(\"ab\"\
  ) \n// \"AB\"\n// >>> solve(\"#a@C\") \n// \"#A@c\"\nfunction solve(s){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
  1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
  #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\");\n\
  \  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
  #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\ntest();"
completions: ["  var result = \"\";\n  for(var i = 0; i < s.length; i++){\n    if(s[i]\
    \ === \"#\" || s[i] === \"@\"){\n      result += s[i];\n    }else if(s[i] ===\
    \ \" \"){\n      result += \" \";\n    }else{\n      result += s[i].toUpperCase();\n\
    \    }\n  }\n  return result.replace(/ /g, \"\");\n}\n<|endoftext|><|javascript|>var\
    \ path = require('path');\nvar webpack = require('webpack');\n\nmodule.exports\
    \ = {\n  entry: [\n    'webpack-dev-server/client?http://localhost:3000',\n  \
    \  'webpack/hot/only-dev-server',\n    './src/index'\n  ],\n  output: {\n    path:\
    \ path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath: '/static/'\n\
    \  },\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NoErrorsPlugin()\n\
    \  ],\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      loaders: ['react-hot',\
    \ 'babel'],\n      include: path.join(__dirname, 'src')\n    }, {\n      test:\
    \ /\\.css$/,\n      loader: 'style!css'\n    }]\n  }\n};\n<|endoftext|><|javascript|>import\
    \ {\n  moduleForComponent,\n  test\n} from 'ember-qunit';\n\nmoduleForComponent('ember-select-dropdown',\
    \ {\n  // specify the other units that are required for this test\n  // needs:\
    \ ['component:foo', 'helper:bar']\n});\n\ntest('it renders', function(assert)\
    \ {\n  assert.expect(2);\n\n  // creates the component instance\n  var component\
    \ = this.subject();\n  assert.equal(component._state, 'preRender');\n\n  // renders\
    \ the component to the page\n  this.render();\n  assert.equal(component._state,\
    \ 'inDOM');\n});\n<|endoftext|><|javascript|>/*\n * Copyright", "  var result\
    \ = s.split(\"\");\n  for(var i = 0; i < result.length; i++){\n    if(result[i].match(/[a-zA-Z]/)){\n\
    \      result[i] = result[i].toUpperCase();\n    } else {\n      result[i] = result[i].toLowerCase();\n\
    \    }\n  }\n  return result.join(\"\");\n}\n<|endoftext|><|javascript|>'use strict';\n\
    \nvar path = require('path');\nvar gulp = require('gulp');\nvar conf = require('./conf');\n\
    \nvar $ = require('gulp-load-plugins')({\n  pattern: ['gulp-*', 'main-bower-files',\
    \ 'uglify-save-license', 'del']\n});\n\ngulp.task('partials', function () {\n\
    \  return gulp.src([\n    path.join(conf.paths.src, '/app/**/*.html'),\n    path.join(conf.paths.tmp,\
    \ '/serve/app/**/*.html')\n  ])\n    .pipe($.minifyHtml({\n      empty: true,\n\
    \      spare: true,\n      quotes: true\n    }))\n    .pipe($.angularTemplatecache('templateCacheHtml.js',\
    \ {\n      module: 'app',\n      root: 'app'\n    }))\n    .pipe(gulp.dest(conf.paths.tmp\
    \ + '/partials/'));\n});\n\ngulp.task('html', ['inject', 'partials'], function\
    \ () {\n  var partialsInjectFile = gulp.src(path.join(conf.paths.tmp, '/partials/templateCacheHtml.js'),\
    \ { read: false });\n  var partialsInjectOptions = {\n    starttag: '<!-- inject:partials\
    \ -->',\n    ignorePath: path.join(conf.paths.tmp, '/partials'),\n    addRootSlash:\
    \ false\n  };\n\n  var htmlFilter = $.filter('*.html', { restore: true });\n \
    \ var jsFilter = $.filter('**/*.js', { restore: true });\n  var cssFilter", " \
    \   var result = \"\";\n    for(var i=0;i<s.length;i++){\n        if(s[i].match(/[a-zA-Z]/)){\n\
    \            result += s[i].toUpperCase();\n        }else{\n            result\
    \ += s[i].toLowerCase();\n        }\n    }\n    return result;\n}\n<|endoftext|><|javascript|>'use\
    \ strict';\n\nvar _ = require('lodash');\nvar async = require('async');\nvar request\
    \ = require('request');\nvar moment = require('moment');\nvar config = require('../config');\n\
    var logger = require('../logger');\nvar util = require('../util');\nvar db = require('../db');\n\
    var redis = require('redis');\n\nvar redisClient = redis.createClient(config.redis.port,\
    \ config.redis.host);\n\nvar redisKey = 'trending-posts';\n\nvar getTrendingPosts\
    \ = function(callback) {\n  redisClient.get(redisKey, function(err, reply) {\n\
    \    if (err) {\n      logger.error(err);\n      return callback(err);\n    }\n\
    \n    if (reply) {\n      var posts = JSON.parse(reply);\n      logger.info('Trending\
    \ posts: ' + JSON.stringify(posts));\n      return callback(null, posts);\n  \
    \  }\n\n    getTrendingPostsFromDB(function(err, posts) {\n      if (err) {\n\
    \        logger.error(err);\n        return callback(err);\n      }\n\n      redisClient.set(redisKey,\
    \ JSON.stringify(posts), function(err) {\n        if (err) {\n          logger.error(err);\n\
    \          return callback(err);\n        }\n\n        logger.info('Trending posts:\
    \ ' + JSON.stringify(posts));\n        return callback(null, posts);\n      });\n\
    \    });\n  });\n};\n\nvar getTrendingPostsFromDB = function(callback) {\n  db.getTrendingPosts(function(err,\
    \ posts) {\n    if (err) {\n      logger.error(err);", "  var res = \"\";\n  for(var\
    \ i=0; i<s.length; i++){\n    if(s[i]===\" \") continue;\n    if(s[i].toLowerCase()==s[i]){\n\
    \      res += s[i].toUpperCase();\n    }else{\n      res += s[i].toLowerCase();\n\
    \    }\n  }\n  if(res===\"\") res = s.toLowerCase();\n  return res;\n}\n<|endoftext|><|javascript|>'use\
    \ strict';\n\nvar path = require('path');\nvar gulp = require('gulp');\nvar conf\
    \ = require('./conf');\n\nvar $ = require('gulp-load-plugins')({\n  pattern: ['gulp-*',\
    \ 'main-bower-files', 'uglify-save-license', 'del']\n});\n\ngulp.task('partials',\
    \ function () {\n  return gulp.src([\n    path.join(conf.paths.src, '/app/**/*.html'),\n\
    \    path.join(conf.paths.tmp, '/serve/app/**/*.html')\n  ])\n    .pipe($.minifyHtml({\n\
    \      empty: true,\n      spare: true,\n      quotes: true\n    }))\n    .pipe($.angularTemplatecache('templateCacheHtml.js',\
    \ {\n      module: 'app',\n      root: 'app'\n    }))\n    .pipe(gulp.dest(conf.paths.tmp\
    \ + '/partials/'));\n});\n\ngulp.task('html', ['inject', 'partials'], function\
    \ () {\n  var partialsInjectFile = gulp.src(path.join(conf.paths.tmp, '/partials/templateCacheHtml.js'),\
    \ { read: false });\n  var partialsInjectOptions = {\n    starttag: '<!-- inject:partials\
    \ -->',\n    ignorePath: path.join(conf.paths.tmp, '/partials'),\n    addRootSlash:\
    \ false\n  };\n\n  var htmlFilter = $.filter('*.html');\n  var jsFilter = $.filter('**/*.js');\n\
    \  ", "    var res = \"\";\n    for(var i=0;i<s.length;i++){\n        if(s[i].match(/[a-zA-Z]/)){\n\
    \            res += s[i].toUpperCase();\n        }else{\n            res += s[i].toLowerCase();\n\
    \        }\n    }\n    return res;\n}\n<|endoftext|><|javascript|>var fs = require('fs');\n\
    var path = require('path');\nvar util = require('util');\nvar _ = require('lodash');\n\
    \nvar config = require('./config');\nvar logger = require('./logger');\nvar utils\
    \ = require('./utils');\n\nvar log = logger.getLogger('config');\n\nvar configFile\
    \ = path.join(__dirname, '../config.json');\n\nvar configCache = {};\n\nvar configDefaults\
    \ = {\n  // The base path for all files\n  basePath: '',\n\n  // The path to the\
    \ config file\n  configPath: configFile,\n\n  // The path to the default config\
    \ file\n  defaultConfigPath: path.join(__dirname, '../../config.json'),\n\n  //\
    \ The path to the default config file\n  defaultConfig: {\n    basePath: '',\n\
    \    configPath: path.join(__dirname, '../../config.json'),\n    defaultConfigPath:\
    \ path.join(__dirname, '../../config.json'),\n    defaultConfig: {\n      basePath:\
    \ '',\n      configPath: path.join(__dirname, '../../config.json'),\n      defaultConfigPath:\
    \ path.join(__dirname, '../../config.json'),\n      defaultConfig: {\n       \
    \ basePath: '',\n        configPath: path.join(__dirname, '../../config.json'),\n\
    \        defaultConfigPath: path.join(__dirname, '../../config.json'),\n     \
    \   defaultConfig: {\n          basePath: '',\n          configPath: path.join(__dirname,\
    \ '../../config.json'),\n          defaultConfigPath: path.join(__dirname, '../../config.json'),\n\
    \          defaultConfig: {\n            basePath:", "    var result = \"\";\n\
    \    for(var i=0;i<s.length;i++){\n        if(s[i].match(/[a-zA-Z]/)){\n     \
    \       result += s[i].toUpperCase();\n        }else{\n            result += s[i].toLowerCase();\n\
    \        }\n    }\n    return result;\n}\n<|endoftext|><|javascript|>import {\n\
    \  GraphQLObjectType,\n  GraphQLString,\n  GraphQLNonNull,\n  GraphQLInt,\n  GraphQLID\n\
    } from 'graphql';\n\nimport {\n  GraphQLDate,\n  GraphQLDateTime\n} from 'graphql-iso-date';\n\
    \nimport {\n  GraphQLBoolean,\n  GraphQLFloat,\n  GraphQLID\n} from 'graphql-any';\n\
    \nimport {\n  GraphQLObjectType,\n  GraphQLNonNull,\n  GraphQLString,\n  GraphQLInt,\n\
    \  GraphQLID\n} from 'graphql';\n\nimport {\n  GraphQLObjectType,\n  GraphQLNonNull,\n\
    \  GraphQLString,\n  GraphQLInt,\n  GraphQLID\n} from 'graphql';\n\nimport {\n\
    \  GraphQLObjectType,\n  GraphQLNonNull,\n  GraphQLString,\n  GraphQLInt,\n  GraphQLID\n\
    } from 'graphql';\n\nimport {\n  GraphQLObjectType,\n  GraphQLNonNull,\n  GraphQLString,\n\
    \  GraphQLInt,\n  GraphQLID\n} from 'graphql';\n\nimport {\n  GraphQLObjectType,\n\
    \  GraphQLNonNull,\n  GraphQLString,\n  GraphQLInt,\n  GraphQLID\n} from 'graphql';\n\
    \nimport {\n  GraphQLObjectType,\n  GraphQLNonNull,\n  GraphQLString,\n  GraphQLInt,\n\
    \  GraphQLID\n} from 'graphql';\n\nimport {\n  GraphQLObjectType,\n  GraphQLNonNull,\n\
    \  GraphQLString,\n  GraphQLInt,\n  GraphQLID\n} from 'graphql';\n\nimport {\n\
    \  GraphQLObjectType,\n  GraphQLNonNull,\n  GraphQLString,", "    var result =\
    \ \"\";\n    for(var i=0;i<s.length;i++){\n        if(s[i].match(/[a-zA-Z]/)){\n\
    \            result += s[i].toUpperCase();\n        }else{\n            result\
    \ += s[i].toLowerCase();\n        }\n    }\n    return result;\n}\n<|endoftext|><|javascript|>var\
    \ path = require('path');\nvar webpack = require('webpack');\nvar HtmlWebpackPlugin\
    \ = require('html-webpack-plugin');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\n\
    var autoprefixer = require('autoprefixer');\n\nmodule.exports = {\n  entry: [\n\
    \    'webpack-dev-server/client?http://localhost:3000',\n    'webpack/hot/only-dev-server',\n\
    \    './src/index'\n  ],\n  output: {\n    path: path.join(__dirname, 'dist'),\n\
    \    filename: 'bundle.js',\n    publicPath: '/'\n  },\n  plugins: [\n    new\
    \ webpack.HotModuleReplacementPlugin(),\n    new webpack.NoErrorsPlugin(),\n \
    \   new HtmlWebpackPlugin({\n      template: 'src/index.html',\n      inject:\
    \ 'body',\n      filename: 'index.html'\n    }),\n    new ExtractTextPlugin('bundle.css')\n\
    \  ],\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      loaders: ['react-hot',\
    \ 'babel'],\n      include: path.join(__dirname, 'src')\n    }, {\n      test:\
    \ /\\.css$/,\n      loader: ExtractTextPlugin.extract('style', 'css?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]')\n\
    \    }]\n  },\n  devServer: {\n    contentBase: './dist',\n    hot: true,\n  \
    \  inline: true,\n    progress: true,\n    historyApiFallback: true,\n    host:\
    \ 'localhost',\n    port:", "    var result = \"\";\n    for(var i=0;i<s.length;i++){\n\
    \        if(s[i].match(/[a-zA-Z]/)){\n            result += s[i].toUpperCase();\n\
    \        }else{\n            result += s[i].toLowerCase();\n        }\n    }\n\
    \    return result;\n}\n<|endoftext|><|javascript|>/**\n * Copyright (c) 2015-present,\
    \ Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed\
    \ under the BSD-style license found in the\n * LICENSE file in the root directory\
    \ of this source tree. An additional grant\n * of patent rights can be found in\
    \ the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeOperationHistoryDevtool\n\
    \ */\n'use strict';\n\nvar history = [];\n\nvar ReactNativeOperationHistoryDevtool\
    \ = {\n  onNativeOperation: function(debugID, type, payload) {\n    history.push({\n\
    \      instanceID: debugID,\n      type,\n      payload,\n    });\n  },\n  clearHistory:\
    \ function() {\n    if (history.length === 0) {\n      return;\n    }\n    history\
    \ = [];\n  },\n};\n\nmodule.exports = ReactNativeOperationHistoryDevtool;\n<|endoftext|><|javascript|>import\
    \ React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport {\
    \ withInfo } from '@storybook/addon-info';\nimport { action } from '@storybook/addon-actions';\n\
    import { withKnobs, number, text } from '@storybook/addon-knobs';\nimport { withKnobs,\
    \ boolean } from '@storybook/addon-knobs/react';\nimport { withKnobs, object }\
    \ from '@storybook/addon-knobs/react';\nimport { withKnobs, select } from '@storybook/addon-knobs/react';\n\
    import { withKnobs, array } from '@storybook/addon-knobs/react';\nimport { withKnobs,\
    \ shape } from '@storybook/addon-knobs/react';\nimport { withKnobs, textarea }\
    \ from '@storybook/addon-", "  var result = s.split(\"\");\n  for(var i = 0; i\
    \ < result.length; i++){\n    if(result[i].match(/[a-zA-Z]/)){\n      result[i]\
    \ = result[i].toUpperCase();\n    } else {\n      result[i] = result[i].toLowerCase();\n\
    \    }\n  }\n  return result.join(\"\");\n}\n<|endoftext|><|javascript|>/*\n *\
    \ Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under\
    \ the MIT License. See License.txt in the project root for\n * license information.\n\
    \ *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may\
    \ cause incorrect behavior and will be lost if the code is\n * regenerated.\n\
    \ */\n\n'use strict';\n", "    var result = \"\";\n    for(var i=0;i<s.length;i++){\n\
    \        if(s[i]>=\"a\" && s[i]<=\"z\"){\n            result += s[i].toUpperCase();\n\
    \        }else if(s[i]>=\"A\" && s[i]<=\"Z\"){\n            result += s[i].toLowerCase();\n\
    \        }else{\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n<|endoftext|><|javascript|>/*\n * Copyright (c) Microsoft Corporation. All\
    \ rights reserved.\n * Licensed under the MIT License. See License.txt in the\
    \ project root for\n * license information.\n *\n * Code generated by Microsoft\
    \ (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will\
    \ be lost if the code is\n * regenerated.\n */\n\n'use strict';\n\nconst models\
    \ = require('./index');\n", "    var result = \"\";\n    for(var i=0;i<s.length;i++){\n\
    \        if(s[i].match(/[a-zA-Z]/)){\n            result += s[i].toUpperCase();\n\
    \        }else{\n            result += s[i].toLowerCase();\n        }\n    }\n\
    \    return result;\n}\n<|endoftext|><|javascript|>var fs = require('fs');\nvar\
    \ path = require('path');\nvar _ = require('lodash');\n\nvar config = {\n  //\
    \ The base directory for all configuration files.\n  base: path.join(__dirname,\
    \ '..', '..'),\n\n  // The base directory for the project.\n  project: path.join(__dirname,\
    \ '..', '..'),\n\n  // The base directory for the project's public directory.\n\
    \  public: path.join(__dirname, '..', '..', 'public'),\n\n  // The base directory\
    \ for the project's public directory.\n  public_root: path.join(__dirname, '..',\
    \ '..', 'public'),\n\n  // The base directory for the project's public directory.\n\
    \  public_root_root: path.join(__dirname, '..', '..', 'public'),\n\n  // The base\
    \ directory for the project's public directory.\n  public_root_root_root: path.join(__dirname,\
    \ '..', '..', 'public'),\n\n  // The base directory for the project's public directory.\n\
    \  public_root_root_root_root: path.join(__dirname, '..', '..', 'public'),\n\n\
    \  // The base directory for the project's public directory.\n  public_root_root_root_root_root:\
    \ path.join(__dirname, '..', '..', 'public'),\n\n  // The base directory for the\
    \ project's public directory.\n  public_root_root_root_root_root_root: path.join(__dirname,\
    \ '..', '..', 'public'),\n\n  // The base directory for the project's public directory.\n\
    \  public_root_root_root_root_root_root_root: path.join(__dirname, '..', '..',\
    \ 'public'),", "    var result = \"\";\n    for(var i=0;i<s.length;i++){\n   \
    \     if(s[i]===\" \"){\n            result+=s[i];\n        }else{\n         \
    \   if(s[i].toLowerCase()==s[i]){\n                result+=s[i].toUpperCase();\n\
    \            }else{\n                result+=s[i].toLowerCase();\n           \
    \ }\n        }\n    }\n    return result;\n}\n<|endoftext|><|javascript|>import\
    \ React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport {\
    \ action } from '@storybook/addon-actions';\nimport { withKnobs, boolean, select\
    \ } from '@storybook/addon-knobs';\nimport { withInfo } from '@storybook/addon-info';\n\
    import { withKnobs, text } from '@storybook/addon-knobs';\nimport { withA11y }\
    \ from '@storybook/addon-a11y';\n\nimport {\n  withKnobs,\n  withInfo,\n  withA11y,\n\
    \  withKnobs,\n  withA11y,\n  withInfo,\n  withKnobs,\n  withA11y,\n  withInfo,\n\
    \  withKnobs,\n  withA11y,\n  withInfo,\n  withKnobs,\n  withA11y,\n  withInfo,\n\
    \  withKnobs,\n  withA11y,\n  withInfo,\n  withKnobs,\n  withA11y,\n  withInfo,\n\
    \  withKnobs,\n  withA11y,\n  withInfo,\n  withKnobs,\n  withA11y,\n  withInfo,\n\
    \  withKnobs,\n  withA11y,\n  withInfo,\n  withKnobs,\n  withA11y,\n  withInfo,\n\
    \  withKnobs,\n  withA11y,\n  withInfo,\n  withKnobs,\n  withA11y,\n  withInfo,\n\
    \  withKnobs,\n  withA11y,\n  withInfo,\n  withKnobs,\n  withA11y,\n  withInfo,\n\
    \  withKnobs", "    var result = \"\";\n    for(var i=0; i<s.length; i++){\n \
    \       if(s[i].match(/[a-zA-Z]/)){\n            result += s[i].toUpperCase();\n\
    \        }else{\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n<|endoftext|><|javascript|>/*\n * Copyright (c) Microsoft Corporation. All\
    \ rights reserved.\n * Licensed under the MIT License. See License.txt in the\
    \ project root for\n * license information.\n *\n * Code generated by Microsoft\
    \ (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will\
    \ be lost if the code is\n * regenerated.\n */\n\n'use strict';\n", "    var result\
    \ = \"\";\n    for(var i = 0; i < s.length; i++){\n        if(s[i].match(/[a-zA-Z]/)){\n\
    \            result += s[i].toUpperCase();\n        }else{\n            result\
    \ += s[i].toLowerCase();\n        }\n    }\n    return result;\n}\n<|endoftext|><|javascript|>var\
    \ searchData=\n[\n  ['_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5f_5",
  "  var result = '';\n  for(var i=0; i<s.length; i++){\n    if(s[i].match(/[a-zA-Z]/)){\n\
    \      result += s[i].toUpperCase();\n    } else {\n      result += s[i].toLowerCase();\n\
    \    }\n  }\n  return result;\n}\n<|endoftext|><|javascript|>import React from\
    \ 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators\
    \ } from 'redux';\nimport { Link } from 'react-router';\nimport { LinkContainer\
    \ } from 'react-router-bootstrap';\nimport { fetchPosts } from '../actions/index';\n\
    \nclass PostsIndex extends React.Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n\
    \  }\n\n  render() {\n    const { posts } = this.props;\n\n    if (!posts) {\n\
    \      return <div>Loading...</div>;\n    }\n\n    return (\n      <div>\n   \
    \     <h3>Posts</h3>\n\n        <ul>\n          {posts.map(post =>\n         \
    \   <li key={post.id}>\n              <Link to={`/posts/${post.id}`}>{post.title}</Link>\n\
    \            </li>\n          )}\n        </ul>\n\n        <p>\n          Categories:\n\
    \          {' '}\n          <LinkContainer to=\"/categories/uncategorized\">Uncategorized</Link>\n\
    \          {', '}\n          <LinkContainer to=\"/categories/javascript\">JavaScript</Link>\n\
    \          {', '}\n          <LinkContainer to=\"/categories/react\">React</Link>\n\
    \        </p>\n      </div>\n    );\n  }\n}\n", "  var res = \"\";\n  for(var\
    \ i = 0; i < s.length; i++){\n    if(s[i] === \"#\"){\n      res += \"#\";\n \
    \   }else if(s[i] === \"@\"){\n      res += \"@\";\n    }else if(s[i] === \" \"\
    ){\n      res += \" \";\n    }else{\n      res += s[i].toUpperCase();\n    }\n\
    \  }\n  return res;\n}\n<|endoftext|><|javascript|>import React from 'react';\n\
    import { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\
    import { withKnobs, boolean } from '@storybook/addon-knobs';\nimport { withInfo\
    \ } from '@storybook/addon-info';\n\nimport {\n  Text,\n  Button,\n  ButtonGroup,\n\
    \  ButtonToolbar,\n  ButtonToolbarGroup,\n  ButtonToolbarButton,\n  ButtonToolbarButtonGroup,\n\
    } from '@patternplate/components';\n\nimport {\n  ButtonGroupWithToolbar,\n  ButtonToolbar,\n\
    \  ButtonToolbarGroup,\n  ButtonToolbarButton,\n  ButtonToolbarButtonGroup,\n\
    } from '../ButtonToolbar';\n\nimport {\n  ButtonGroupWithToolbarExample,\n  ButtonToolbarExample,\n\
    \  ButtonToolbarGroupExample,\n  ButtonToolbarButtonExample,\n  ButtonToolbarButtonGroupExample,\n\
    } from '../ButtonToolbar.stories';\n\nstoriesOf('ButtonToolbar', module)\n  .addDecorator(withKnobs)\n\
    \  .addDecorator(withInfo)\n  .add('ButtonToolbar', () => (\n    <ButtonToolbarExample\
    \ />\n  ));\n\nstoriesOf('ButtonToolbarGroup', module)\n  .addDecorator(withKnobs)\n\
    \  .addDecorator(withInfo)\n  .add('ButtonToolbarGroup', () => (\n    <ButtonToolbarGroupExample\
    \ />\n  ));\n\nstoriesOf('ButtonToolbarButton', module)\n  .addDecorator(withKnobs)\n\
    \  .addDecorator(withInfo)\n  .add('ButtonTool", "    var result = \"\";\n   \
    \ for(var i=0;i<s.length;i++){\n        if(s[i].match(/[a-zA-Z]/)){\n        \
    \    result += s[i].toUpperCase();\n        }else{\n            result += s[i].toLowerCase();\n\
    \        }\n    }\n    return result;\n}\n<|endoftext|><|javascript|>'use strict';\n\
    \nvar React = require('react');\nvar SvgIcon = require('../../svg-icon');\n\n\
    var ImageFilterHdr = React.createClass({\n  displayName: 'ImageFilterHdr',\n\n\
    \  render: function render() {\n    return React.createElement(\n      SvgIcon,\n\
    \      this.props,\n      React.createElement('path', { d: 'M20 2H4c-1.1 0-2 .9-2\
    \ 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 15.5-4.5-4.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM8\
    \ 13h8v-2H8V9H6v4H4v6h2v-6h2v6h2v-4h4v2h2v-2h8v-6h-4z' })\n    );\n  }\n\n});\n\
    \nmodule.exports = ImageFilterHdr;<|endoftext|><|javascript|>'use strict';\n\n\
    var _ = require('lodash');\nvar fs = require('fs');\nvar path = require('path');\n\
    var util = require('util');\nvar chalk = require('chalk');\nvar yeoman = require('yeoman-generator');\n\
    var yosay = require('yosay');\nvar mkdirp = require('mkdirp');\nvar mkdirpSync\
    \ = require('mkdirp').sync;\nvar _s = require('underscore.string');\nvar _s2 =\
    \ require('underscore.string');\nvar _s3 = require", "    var result = \"\";\n\
    \    for(var i = 0; i < s.length; i++){\n        if(s[i].match(/[a-zA-Z]/)){\n\
    \            result += s[i].toUpperCase();\n        }else{\n            result\
    \ += s[i].toLowerCase();\n        }\n    }\n    return result;\n}\n<|endoftext|><|javascript|>var\
    \ express = require('express');\nvar router = express.Router();\nvar mongoose\
    \ = require('mongoose');\nvar User = mongoose.model('User');\nvar passport = require('passport');\n\
    var jwt = require('express-jwt');\nvar config = require('../config/config');\n\
    var auth = jwt({secret: config.secret});\n", "  var result = s.split(\"\");\n\
    \  for(var i = 0; i < result.length; i++){\n    if(result[i].match(/[a-zA-Z]/)){\n\
    \      result[i] = result[i].toUpperCase();\n    } else {\n      result[i] = result[i].toLowerCase();\n\
    \    }\n  }\n  return result.join(\"\");\n}\n<|endoftext|><|javascript|>var express\
    \ = require('express');\nvar router = express.Router();\nvar path = require('path');\n\
    var fs = require('fs');\nvar config = require('../config');\nvar mongoose = require('mongoose');\n\
    var User = mongoose.model('User');\nvar passport = require('passport');\nvar LocalStrategy\
    \ = require('passport-local').Strategy;\nvar bcrypt = require('bcrypt');\nvar\
    \ jwt = require('jsonwebtoken');\nvar config = require('../config');\nvar User\
    \ = mongoose.model('User');\n\nvar validate = function(req, res, next) {\n  if\
    \ (!req.body.username) {\n    return res.status(422).send({\n      message: 'Please\
    \ enter a username'\n    });\n  }\n  if (!req.body.password) {\n    return res.status(422).send({\n\
    \      message: 'Please enter a password'\n    });\n  }\n  next();\n};\n\nvar\
    \ validateEmail = function(req, res, next) {\n  if (!req.body.email) {\n    return\
    \ res.status(422).send({\n      message: 'Please enter a email'\n    });\n  }\n\
    \  next();\n};\n\nvar validatePassword = function(req, res, next) {\n  if (!req.body.password)\
    \ {\n    return res.status(422).send({\n      message: 'Please enter a password'\n\
    \    });\n  }\n  next();\n};\n\nvar validateUsername = function(req, res, next)\
    \ {\n  if (!req.body.username) {\n    return res.status(422).send({\n      message:\
    \ 'Please enter a username'\n    });\n  }\n  next();", "  var result = \"\";\n\
    \  for(var i = 0; i < s.length; i++){\n    if(s[i].match(/[a-z]/i)){\n      result\
    \ += s[i].toUpperCase();\n    }\n    else if(s[i].match(/[A-Z]/i)){\n      result\
    \ += s[i].toLowerCase();\n    }\n    else{\n      result += s[i];\n    }\n  }\n\
    \  return result;\n}\n<|endoftext|><|javascript|>var fs = require('fs');\nvar\
    \ path = require('path');\nvar _ = require('lodash');\nvar util = require('util');\n\
    var async = require('async');\nvar mkdirp = require('mkdirp');\nvar rimraf = require('rimraf');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

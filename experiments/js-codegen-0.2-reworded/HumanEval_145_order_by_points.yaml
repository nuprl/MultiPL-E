name: HumanEval_145_order_by_points
language: js
prompt: "//Write a function which sorts the given array of integers\n// in ascending\
  \ order according to the sum of their digits.\n// Note: if there are several items\
  \ with similar sum of their digits,\n// order them based on their index in original\
  \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
  \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11,\
  \ 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423,\
  \ 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
  \ 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
  \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
completions: ["    var sorted = [];\n    for (var i = 0; i < nums.length; i++) {\n\
    \        var sum = 0;\n        for (var j = 0; j < nums[i].length; j++) {\n  \
    \          sum += nums[i][j];\n        }\n        sorted.push([sum, i]);\n   \
    \ }\n    sorted.sort(function(a, b) {\n        return a[0] - b[0];\n    });\n\
    \    return sorted.map(function(item) {\n        return nums[item[1]];\n    });\n\
    }\n<|endoftext|><|javascript|>var searchData=\n[\n  ['s',['s',['../struct_s_d_l_l_1_1_s_d_l_l_data.html#\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                    ", "    var sorted_nums =\
    \ [];\n    for(var i = 0; i < nums.length; i++){\n        var sum = 0;\n     \
    \   for(var j = 0; j < nums[i].length; j++){\n            sum += nums[i][j];\n\
    \        }\n        sorted_nums.push([sum, nums[i]]);\n    }\n    sorted_nums.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    return sorted_nums;\n}\n", " \
    \ var sorted_nums = nums.sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ sorted_nums;\n}\n", "  var sorted_nums = nums.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  return sorted_nums;\n}\n", "    var sorted = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        var sum = 0;\n        for(var j = 0;\
    \ j < nums[i].length; j++){\n            sum += nums[i][j];\n        }\n     \
    \   sorted.push([sum, i]);\n    }\n    sorted.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    return sorted.map(function(x){\n        return nums[x[1]];\n\
    \    });\n}\n", "    nums.sort(function(a,b){\n        var sum_a = 0, sum_b =\
    \ 0;\n        for(var i = 0; i < a.length; i++){\n            sum_a += a[i] *\
    \ Math.pow(10, i);\n        }\n        for(var i = 0; i < b.length; i++){\n  \
    \          sum_b += b[i] * Math.pow(10, i);\n        }\n        return sum_a -\
    \ sum_b;\n    });\n    return nums;\n}\n<|endoftext|><|javascript|>var express\
    \ = require('express');\nvar router = express.Router();\nvar passport = require('passport');\n\
    var User = require('../models/user');\nvar config = require('../config');\nvar\
    \ jwt = require('jsonwebtoken');\n\nrouter.get('/', function(req, res) {\n  res.render('index',\
    \ {\n    title: 'Express'\n  });\n});\n\nrouter.post('/login', function(req, res,\
    \ next) {\n  passport.authenticate('local', function(err, user, info) {\n    if\
    \ (err) {\n      return next(err);\n    }\n    if (!user) {\n      return res.status(401).json({\n\
    \        success: false,\n        message: 'Authentication failed'\n      });\n\
    \    }\n    var token = jwt.sign(user, config.secret, {\n      expiresIn: 60 *\
    \ 60 * 24 * 365\n    });\n    req.login(user, function(err) {\n      if (err)\
    \ {\n        return next(err);\n      }\n      return res.json({\n        success:\
    \ true,\n        message: 'Enjoy your token!',\n        token: token\n      });\n\
    \    });\n  })(req, res, next);\n});\n\nrouter.post('/register', function(req,\
    \ res, next) {\n  var user = new User({\n    email: req.body.email,\n    password:\
    \ req.body.password\n  });\n  user.save(function(err) {\n    if (err) {\n    \
    \  return next(err);\n    }\n", "    let sorted = nums.sort((a, b) => {\n    \
    \    let sum_a = 0, sum_b = 0;\n        for (let i = 0; i < a.length; i++) {\n\
    \            sum_a += a[i] * Math.pow(10, i);\n        }\n        for (let i =\
    \ 0; i < b.length; i++) {\n            sum_b += b[i] * Math.pow(10, i);\n    \
    \    }\n        return sum_a - sum_b;\n    });\n    return sorted;\n}\n<|endoftext|><|javascript|>var\
    \ path = require('path');\nvar webpack = require('webpack');\nvar autoprefixer\
    \ = require('autoprefixer');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\n\
    var ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar CopyWebpackPlugin\
    \ = require('copy-webpack-plugin');\n\nmodule.exports = {\n  entry: [\n    './src/index.js'\n\
    \  ],\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: 'bundle.js'\n\
    \  },\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n       \
    \ loader: 'babel',\n        exclude: /node_modules/\n      },\n      {\n     \
    \   test: /\\.css$/,\n        loader: ExtractTextPlugin.extract('style', 'css?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]')\n\
    \      },\n      {\n        test: /\\.scss$/,\n        loader: ExtractTextPlugin.extract('style',\
    \ 'css?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!postcss!sass')\n\
    \      },\n      {\n        test: /\\.woff(2)?(\\?v=.+)?$/,\n        loader: 'url?limit=10000&mimetype=application/font-woff'\n\
    \      },\n      {\n        test: /\\.(ttf", "  var sorted_nums = [];\n  var sum_of_nums\
    \ = 0;\n  for (var i = 0; i < nums.length; i++) {\n    sum_of_nums += nums[i];\n\
    \    sorted_nums.push(nums[i]);\n  }\n  sorted_nums.sort(function(a, b){\n   \
    \ return a - b;\n  });\n  return sorted_nums;\n}\n", "    let sorted = nums.sort((a,\
    \ b) => {\n        let sum_a = sum_of_digits(a);\n        let sum_b = sum_of_digits(b);\n\
    \        if (sum_a === sum_b) {\n            return a - b;\n        } else {\n\
    \            return sum_a - sum_b;\n        }\n    });\n    return sorted;\n}\n",
  "  nums.sort(function(a, b){\n    var a_sum = 0, b_sum = 0;\n    for(var i = 0;\
    \ i < a.length; i++){\n      a_sum += a[i] * Math.pow(10, i);\n    }\n    for(var\
    \ i = 0; i < b.length; i++){\n      b_sum += b[i] * Math.pow(10, i);\n    }\n\
    \    return a_sum - b_sum;\n  });\n  return nums;\n}\n", "    nums.sort(function(a,b){\n\
    \        return a.points - b.points;\n    });\n    return nums;\n}\n", "    var\
    \ arr = nums.sort(function(a, b){\n        return a - b;\n    });\n    var result\
    \ = [];\n    for(var i = 0; i < arr.length; i++){\n        var sum = 0;\n    \
    \    while(arr[i] > 0){\n            sum += arr[i] % 10;\n            arr[i] =\
    \ Math.floor(arr[i] / 10);\n        }\n        result.push(sum);\n    }\n    return\
    \ result;\n}\n", "    var sorted_nums = [];\n    for (var i = 0; i < nums.length;\
    \ i++) {\n        var sum = 0;\n        while (nums[i] !== 0) {\n            sum\
    \ += nums[i] % 10;\n            nums[i] = Math.floor(nums[i] / 10);\n        }\n\
    \        sorted_nums.push(nums[i]);\n        sorted_nums.push(sum);\n    }\n \
    \   sorted_nums.sort(function(a, b) {\n        return a[1] - b[1];\n    });\n\
    \    return sorted_nums;\n}\n<|endoftext|><|javascript|>var path = require('path');\n\
    var webpack = require('webpack');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\n\
    var ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar autoprefixer\
    \ = require('autoprefixer');\n\nmodule.exports = {\n  entry: [\n    'webpack-dev-server/client?http://localhost:3000',\n\
    \    'webpack/hot/only-dev-server',\n    './src/index'\n  ],\n  output: {\n  \
    \  path: path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath:\
    \ '/'\n  },\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n   \
    \ new webpack.NoErrorsPlugin(),\n    new HtmlWebpackPlugin({\n      template:\
    \ 'src/index.html',\n      inject: 'body',\n      filename: 'index.html'\n   \
    \ }),\n    new ExtractTextPlugin('style.css', {\n      allChunks: true\n    })\n\
    \  ],\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      loaders: ['react-hot',\
    \ 'babel'],\n      include: path.join(__dirname, 'src')\n    }, {\n      test:\
    \ /\\.css$/,\n      loader: ExtractTextPlugin.extract('style-loader', 'css-loader!postcss-loader')\n\
    \    }, {", "  var sorted_nums = nums.sort(function(a,b){\n    var a_sum = 0;\n\
    \    var b_sum = 0;\n    for(var i=0; i<a.length; i++){\n      a_sum += a[i]*Math.pow(10,i);\n\
    \    }\n    for(var i=0; i<b.length; i++){\n      b_sum += b[i]*Math.pow(10,i);\n\
    \    }\n    return a_sum - b_sum;\n  });\n  return sorted_nums;\n}\n", "    var\
    \ sorted_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        var sum\
    \ = 0;\n        for(var j = 0; j < nums[i].length; j++){\n            sum += nums[i][j];\n\
    \        }\n        sorted_nums.push([sum, i]);\n    }\n    sorted_nums.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    return sorted_nums.map(function(n){\n\
    \        return nums[n[1]];\n    });\n}\n", "    var sorted = nums.sort(function(a,\
    \ b){\n        return a.points - b.points;\n    });\n    return sorted;\n}\n",
  "    var sorted = [];\n    for(var i = 0; i < nums.length; i++){\n        var sum\
    \ = 0;\n        for(var j = 0; j < nums[i].length; j++){\n            sum += nums[i][j];\n\
    \        }\n        sorted.push([sum, i]);\n    }\n    sorted.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    return sorted.map(function(a){\n\
    \        return nums[a[1]];\n    });\n}\n", "    var sorted_nums = [];\n    for(var\
    \ i=0; i<nums.length; i++){\n        var sum = 0;\n        for(var j=0; j<nums[i].length;\
    \ j++){\n            sum += nums[i][j];\n        }\n        sorted_nums.push([sum,\
    \ nums[i]]);\n    }\n    sorted_nums.sort(function(a, b){\n        return a[0]\
    \ - b[0];\n    });\n    return sorted_nums;\n}\n", "    var sorted = nums.sort(function(a,b){\n\
    \        return a.points - b.points;\n    });\n    return sorted;\n}\n", "  var\
    \ sorted = nums.sort(function(a, b){\n    var sum_a = 0, sum_b = 0;\n    for(var\
    \ i = 0; i < a.length; i++){\n      sum_a += a[i] * Math.pow(10, i);\n    }\n\
    \    for(var i = 0; i < b.length; i++){\n      sum_b += b[i] * Math.pow(10, i);\n\
    \    }\n    return sum_a - sum_b;\n  });\n  return sorted;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

language: js
name: HumanEval_98_count_upper
results:
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var i =\
    \ 0;\n    var count = 0;\n    while(i < s.length){\n        if(s[i] === 'A' ||\
    \ s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U'){\n           \
    \ count++;\n        }\n        i++;\n    }\n    return count;\n}\n<|endoftext|><|javascript|>var\
    \ searchData=\n[\n  ['_5f_5finit',['__init',['../class_a_r_t_o_s_1_1_a_r_t_o_s.html#\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                      \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfjepoje9.js:20\n<|endoftext|><|javascript|>var searchData=\n^\n\
    \nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371497
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n  var vowels\
    \ = ['A','E','I','O','U','Y'];\n  var count = 0;\n  for(var i=0; i<s.length; i++){\n\
    \    if(vowels.indexOf(s[i]) !== -1 && i%2 === 0){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n<|endoftext|><|javascript|>/*\n * Copyright (c) Microsoft\
    \ Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt\
    \ in the project root for\n * license information.\n *\n * Code generated by Microsoft\
    \ (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will\
    \ be lost if the code is\n * regenerated.\n */\n\n'use strict';\n\nconst models\
    \ = require('./index');\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7mrdl119.js:19\n<|endoftext|><|javascript|>/*\n^\n\nSyntaxError:\
    \ Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371497
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var vowels\
    \ = ['A','E','I','O','U'];\n    var count = 0;\n    for(var i=0;i<s.length;i+=2){\n\
    \        if(vowels.indexOf(s[i])>-1){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662371497
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n  var count\
    \ = 0;\n  for(var i = 0; i < s.length; i++){\n    if(s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U'){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp16pnpt7x.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp16pnpt7x.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371497
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n  var count\
    \ = 0;\n  for(var i = 0; i < s.length; i++){\n    if(s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U'){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n<|endoftext|><|javascript|>var fs = require('fs');\n\
    var path = require('path');\nvar _ = require('lodash');\nvar async = require('async');\n\
    var mkdirp = require('mkdirp');\nvar rimraf = require('rimraf');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp =\
    \ require('mkdirp');\nvar mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp');\n\
    var mkdirp = require('mkdirp');\nvar mkdirp = require('mkdirp\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n\
    \  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpb813cy_0.js:18\n<|endoftext|><|javascript|>var fs = require('fs');\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371497
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var vowels\
    \ = ['A','E','I','O','U'];\n    var count = 0;\n    for(var i = 0; i < s.length;\
    \ i++){\n        if(vowels.indexOf(s[i]) != -1 && i % 2 == 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662371497
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var vowels\
    \ = ['A','E','I','O','U'];\n    var count = 0;\n    for(var i = 0; i < s.length;\
    \ i++){\n        if(vowels.indexOf(s[i]) !== -1 && i % 2 === 0){\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662371497
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n  var vowels\
    \ = ['A','E','I','O','U'];\n  var count = 0;\n  for(var i = 0; i < s.length; i++){\n\
    \    if(vowels.indexOf(s[i]) !== -1 && i % 2 === 0){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n<|endoftext|><|javascript|>'use strict';\n\nconst {\
    \ expect } = require('chai');\nconst { describe, it } = require('mocha');\n\n\
    const {\n  create,\n  createWithOptions,\n  createWithOptionsAndContext,\n  createWithContext,\n\
    \  createWithContextAndOptions,\n  createWithContextAndOptionsAndContext,\n} =\
    \ require('../../../../../src/core/utils/create');\n\ndescribe('create', () =>\
    \ {\n  it('should create a function', () => {\n    const fn = create();\n\n  \
    \  expect(fn).to.be.a('function');\n  });\n\n  it('should create a function with\
    \ options', () => {\n    const fn = createWithOptions();\n\n    expect(fn).to.be.a('function');\n\
    \  });\n\n  it('should create a function with options and context', () => {\n\
    \    const fn = createWithOptionsAndContext();\n\n    expect(fn).to.be.a('function');\n\
    \  });\n\n  it('should create a function with context', () => {\n    const fn\
    \ = createWithContext();\n\n    expect(fn).to.be.a('function');\n  });\n\n  it('should\
    \ create a function with context and options', () => {\n    const fn = createWithContextAndOptions();\n\
    \n    expect(fn).to.be.a('function');\n  });\n\n  it('should create a function\
    \ with context and options and context', () => {\n    const fn = createWithContextAndOptionsAndContext();\n\
    \n    expect(fn).to.be.a('function');\n  });\n});\n<|endoftext|><|javascript|>/**\n\
    \ * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this\
    \ source code is governed by an MIT-style license that can be\n * found in the\
    \ LICENSE file at https://angular.io\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpcf7ghi19.js:19\n<|endoftext|><|javascript|>'use strict';\n^\n\n\
    SyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371497
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var count\
    \ = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s[i] === 'A' || s[i]\
    \ === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n<|endoftext|><|javascript|>var path =\
    \ require('path');\nvar webpack = require('webpack');\nvar autoprefixer = require('autoprefixer');\n\
    var ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nmodule.exports\
    \ = {\n  entry: [\n    './src/index.js'\n  ],\n  output: {\n    path: path.join(__dirname,\
    \ 'dist'),\n    filename: 'bundle.js'\n  },\n  module: {\n    loaders: [\n   \
    \   {\n        test: /\\.js$/,\n        loader: 'babel',\n        exclude: /node_modules/\n\
    \      },\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract('style',\
    \ 'css?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!postcss')\n\
    \      }\n    ]\n  },\n  postcss: [autoprefixer],\n  plugins: [\n    new webpack.optimize.OccurenceOrderPlugin(),\n\
    \    new webpack.DefinePlugin({\n      'process.env.NODE_ENV': JSON.stringify('production')\n\
    \    }),\n    new webpack.optimize.UglifyJsPlugin({\n      compressor: {\n   \
    \     warnings: false\n      }\n    }),\n    new ExtractTextPlugin('styles.css')\n\
    \  ]\n};\n<|endoftext|><|javascript|>import React from 'react';\nimport { Link\
    \ } from 'react-router';\nimport { connect } from 'react-redux';\nimport { bindActionCreators\
    \ } from 'redux';\nimport { fetchPosts } from '../actions/index';\nimport PostList\
    \ from '../components/PostList';\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpjcqc7a1n.js:18\n<|endoftext|><|javascript|>var path = require('path');\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371497
- exit_code: 0
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var vowels\
    \ = ['A','E','I','O','U'];\n    var count = 0;\n    for(var i=0; i<s.length; i+=2){\n\
    \        if(vowels.indexOf(s[i]) != -1){\n            count++;\n        }\n  \
    \  }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662371497
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n  var count\
    \ = 0;\n  for(var i = 0; i < s.length; i++){\n    if(s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U'){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n<|endoftext|><|javascript|>// Copyright (c) 2012 Ecma\
    \ International.  All rights reserved.\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvjf9tqff.js:18\n<|endoftext|><|javascript|>// Copyright (c) 2012\
    \ Ecma International.  All rights reserved.\n^\n\nSyntaxError: Unexpected token\
    \ '<'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371498
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var count\
    \ = 0;\n    for(var i=0; i<s.length; i+=2){\n        if(s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n<|endoftext|><|javascript|>'use strict';\n\
    \nvar _ = require('lodash');\nvar fs = require('fs');\nvar path = require('path');\n\
    var util = require('util');\nvar chalk = require('chalk');\nvar yeoman = require('yeoman-generator');\n\
    var yosay = require('yosay');\nvar mkdirp = require('mkdirp');\nvar _s = require('underscore.string');\n\
    \nvar Generator = module.exports = function Generator(args, options, config) {\n\
    \  yeoman.generators.Base.apply(this, arguments);\n\n  this.on('end', function\
    \ () {\n    this.installDependencies({ skipInstall: options['skip-install'] });\n\
    \  });\n\n  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n\
    };\n\nutil.inherits(Generator, yeoman.generators.Base);\n\nGenerator.prototype.askFor\
    \ = function askFor() {\n  var cb = this.async();\n\n  // have Yeoman greet the\
    \ user.\n  console.log(yosay(\n    'Welcome to the ' + chalk.red('generator-ng-app')\
    \ + ' generator!'\n  ));\n\n  var prompts = [{\n    type: 'input',\n    name:\
    \ 'appName',\n    message: 'What is the name of your AngularJS app?',\n    default:\
    \ 'myApp'\n  }, {\n    type: 'input',\n    name: 'appDescription',\n    message:\
    \ 'What is the description of your AngularJS app?',\n    default: 'My AngularJS\
    \ App'\n  }, {\n    type: 'input',\n    name: 'appAuthor',\n    message: 'What\
    \ is the author of your Angular\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp8yoz73n7.js:18\n<|endoftext|><|javascript|>'use strict';\n^\n\n\
    SyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371498
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n  var vowels\
    \ = ['A','E','I','O','U'];\n  var count = 0;\n  for(var i = 0; i < s.length; i++){\n\
    \    if(vowels.indexOf(s[i]) != -1 && i % 2 == 0){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n<|endoftext|><|javascript|>'use strict';\n\nvar path = require('path');\n\
    var gulp = require('gulp');\nvar conf = require('./conf');\n\nvar $ = require('gulp-load-plugins')({\n\
    \  pattern: ['gulp-*', 'main-bower-files', 'uglify-save-license', 'del']\n});\n\
    \ngulp.task('partials', function () {\n  return gulp.src([\n    path.join(conf.paths.src,\
    \ '/app/**/*.html'),\n    path.join(conf.paths.tmp, '/serve/app/**/*.html')\n\
    \  ])\n    .pipe($.minifyHtml({\n      empty: true,\n      spare: true,\n    \
    \  quotes: true\n    }))\n    .pipe($.angularTemplatecache('templateCacheHtml.js',\
    \ {\n      module: 'myApp',\n      root: 'app'\n    }))\n    .pipe(gulp.dest(conf.paths.tmp\
    \ + '/partials/'));\n});\n\ngulp.task('html', ['inject', 'partials'], function\
    \ () {\n  var partialsInjectFile = gulp.src(path.join(conf.paths.tmp, '/partials/templateCacheHtml.js'),\
    \ { read: false });\n  var partialsInjectOptions = {\n    starttag: '<!-- inject:partials\
    \ -->',\n    ignorePath: path.join(conf.paths.tmp, '/partials'),\n    addRootSlash:\
    \ false\n  };\n\n  var htmlFilter = $.filter('*.html', { restore: true });\n \
    \ var jsFilter = $.filter('**/*.js', { restore: true });\n  var cssFilter = $.filter('**/*.css',\
    \ { restore: true });\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpb63jitj3.js:19\n<|endoftext|><|javascript|>'use strict';\n^\n\n\
    SyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371498
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var count\
    \ = 0;\n    for (var i = 0; i < s.length; i++) {\n        if (s[i] === 'A' ||\
    \ s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpe4gkk9z6.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe4gkk9z6.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371498
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var vowels\
    \ = ['A','E','I','O','U'];\n    var count = 0;\n    for(var i = 0; i < s.length;\
    \ i++){\n        if(vowels.indexOf(s[i]) != -1 && i % 2 == 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n<|endoftext|><|javascript|>'use strict';\n\
    \nvar _ = require('lodash');\nvar fs = require('fs');\nvar path = require('path');\n\
    var util = require('util');\n\nvar logger = require('../logger');\nvar config\
    \ = require('../config');\nvar utils = require('../utils');\n\nvar logger = require('../logger');\n\
    var config = require('../config');\nvar utils = require('../utils');\n\nvar logger\
    \ = require('../logger');\nvar config = require('../config');\nvar utils = require('../utils');\n\
    \nvar logger = require('../logger');\nvar config = require('../config');\nvar\
    \ utils = require('../utils');\n\nvar logger = require('../logger');\nvar config\
    \ = require('../config');\nvar utils = require('../utils');\n\nvar logger = require('../logger');\n\
    var config = require('../config');\nvar utils = require('../utils');\n\nvar logger\
    \ = require('../logger');\nvar config = require('../config');\nvar utils = require('../utils');\n\
    \nvar logger = require('../logger');\nvar config = require('../config');\nvar\
    \ utils = require('../utils');\n\nvar logger = require('../logger');\nvar config\
    \ = require('../config');\nvar utils = require('../utils');\n\nvar logger = require('../logger');\n\
    var config = require('../config');\nvar utils = require('../utils');\n\nvar logger\
    \ = require('../logger');\nvar config = require('../config');\nvar utils = require('../utils');\n\
    \nvar logger = require('../logger');\nvar config = require('../config');\nvar\
    \ utils = require('../utils');\n\nvar logger = require('../logger');\nvar config\
    \ = require('../config');\nvar\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmptldetf93.js:19\n<|endoftext|><|javascript|>'use strict';\n^\n\n\
    SyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371498
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var count\
    \ = 0;\n    for(var i = 0; i < s.length; i++){\n        if(s[i] === 'A' || s[i]\
    \ === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"\
    aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpphewjrxz.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpphewjrxz.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371498
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n  var count\
    \ = 0;\n  for (var i = 0; i < s.length; i++) {\n    if (s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n      count++;\n   \
    \ }\n    if (i % 2 === 0) {\n      count = 0;\n    }\n  }\n  return count;\n}\n\
    <|endoftext|><|javascript|>import React from 'react';\nimport { storiesOf } from\
    \ '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport\
    \ { withKnobs, boolean } from '@storybook/addon-knobs';\nimport { withInfo } from\
    \ '@storybook/addon-info';\n\nimport { Button, ButtonGroup } from '../Button';\n\
    import { ButtonGroupInfo } from '../ButtonGroup';\n\nconst stories = storiesOf('ButtonGroup',\
    \ module);\n\nstories.addDecorator(withKnobs);\nstories.addDecorator(withInfo);\n\
    \nstories.add('ButtonGroup', () => (\n  <ButtonGroup>\n    <Button>Button 1</Button>\n\
    \    <Button>Button 2</Button>\n    <Button>Button 3</Button>\n  </ButtonGroup>\n\
    ));\n\nstories.add('ButtonGroup with info', () => (\n  <ButtonGroup>\n    <Button>Button\
    \ 1</Button>\n    <Button>Button 2</Button>\n    <Button>Button 3</Button>\n \
    \ </ButtonGroup>\n));\n\nstories.add('ButtonGroup with info and custom className',\
    \ () => (\n  <ButtonGroup className=\"custom-class\">\n    <Button>Button 1</Button>\n\
    \    <Button>Button 2</Button>\n    <Button>Button 3</Button>\n  </ButtonGroup>\n\
    ));\n\nstories.add('ButtonGroup with info and custom className and custom style',\
    \ () => (\n  <ButtonGroup className=\"custom-class\" style={{ margin: '1em' }}>\n\
    \    <Button>Button 1</Button>\n    <Button>Button 2</Button>\n    <Button>Button\
    \ 3</Button>\n  </Button\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6fd9t27y.js:21\n<|endoftext|><|javascript|>import React from 'react';\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371498
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n  var vowels\
    \ = ['A','E','I','O','U'];\n  var count = 0;\n  for(var i = 0; i < s.length; i+=2){\n\
    \    if(vowels.indexOf(s[i]) > -1){\n      count++;\n    }\n  }\n  return count;\n\
    }\n<|endoftext|><|javascript|>/*\n * Copyright (c) 2015 by Rafael Angel Aznar\
    \ Aparici (rafaaznar at gmail dot com)\n *\n * sisane: The stunning micro-library\
    \ that helps you to develop easily\n *             AJAX web applications by using\
    \ Angular.js 1.x & sisane-server\n * sisane is distributed under the MIT License\
    \ (MIT)\n * Sources at https://github.com/rafaelaznar/\n *\n * Permission is hereby\
    \ granted, free of charge, to any person obtaining a copy\n * of this software\
    \ and associated documentation files (the \"Software\"), to deal\n * in the Software\
    \ without restriction, including without limitation the rights\n * to use, copy,\
    \ modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the\
    \ Software, and to permit persons to whom the Software is\n * furnished to do\
    \ so, subject to the following conditions:\n *\n * The above copyright notice\
    \ and this permission notice shall be included in\n * all copies or substantial\
    \ portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT\
    \ WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE\
    \ WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\
    \ IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\
    \ DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\
    \ ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\
    \ DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n'use strict';\n\nmoduloTipodiagnostico.controller('TipodiagnosticoViewController',\
    \ ['$scope', '$routeParams', 'serverService', 'tipodiagnosticoService', '$location',\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_d48nvv6.js:19\n<|endoftext|><|javascript|>/*\n^\n\nSyntaxError:\
    \ Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371498
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n    var vowels\
    \ = ['A','E','I','O','U'];\n    var count = 0;\n    for(var i=0;i<s.length;i+=2){\n\
    \        if(vowels.indexOf(s[i])>-1){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n<|endoftext|><|javascript|>var searchData=\n[\n  ['t',['T',['../class_a_d_c___module.html#\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \        \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"\
    abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"\
    B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpl4vdmz5z.js:19\n<|endoftext|><|javascript|>var searchData=\n^\n\
    \nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371498
- exit_code: 1
  program: "//Given a string s, count the number of uppercase vowels in even indices.\n\
    // For example:\n// >>> count_upper('aBCdEf')\n// 1\n// >>> count_upper('abcdefg')\n\
    // 0\n// >>> count_upper('dBBE')\n// 0\nfunction count_upper(s){\n  var count\
    \ = 0;\n  for(var i = 0; i < s.length; i++){\n    if(s[i] === 'A' || s[i] ===\
    \ 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U'){\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
    ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
    dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
    U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    EEEE\"),2);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp16pnpt7x.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp16pnpt7x.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371497

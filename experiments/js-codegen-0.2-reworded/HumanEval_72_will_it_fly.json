{
  "name": "HumanEval_72_will_it_fly",
  "language": "js",
  "prompt": "//Write a function that returns true if the object q will fly, and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic array) and the sum of its elements is less than or equal the maximum possible weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5)\n// false\n// # 1+2 is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly([3, 2, 3], 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum possible weight.\n// >>> will_it_fly([3, 2, 3], 9)\n// true\n// # 3+2+3 is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly([3], 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\nfunction will_it_fly(q, w){\n",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = will_it_fly;\n  assert.deepEqual(candidate([3, 2, 3], 9),true);\n  assert.deepEqual(candidate([1, 2], 5),false);\n  assert.deepEqual(candidate([3], 5),true);\n  assert.deepEqual(candidate([3, 2, 3], 1),false);\n  assert.deepEqual(candidate([1, 2, 3], 6),false);\n  assert.deepEqual(candidate([5], 5),true);\n}\n\ntest();",
  "completions": [
    "  if(q.length % 2 == 0) {\n    var sum = 0;\n    for(var i = 0; i < q.length; i++) {\n      sum += q[i];\n    }\n    if(sum <= w) {\n      return true;\n    }\n  }\n  return false;\n}\n",
    "  if(q.length % 2 == 0){\n    return false;\n  }\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q[0] + q[q.length-1] > w) return false;\n  if(q[0] + q[1] > w) return false;\n  if(q[0] > w) return false;\n  if(q[q.length-1] > w) return false;\n  return true;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n        if (sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "    if(q.length == 0){\n        return true;\n    }\n    if(q.length == 1){\n        return q[0] <= w;\n    }\n    if(q.length == 2){\n        return q[0] + q[1] <= w;\n    }\n    if(q.length == 3){\n        return q[0] + q[1] + q[2] <= w;\n    }\n    if(q.length == 4){\n        return q[0] + q[1] + q[2] + q[3] <= w;\n    }\n    if(q.length == 5){\n        return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n    }\n    if(q.length == 6){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n    }\n    if(q.length == 7){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n    }\n    if(q.length == 8){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n    }\n    if(q.length == 9){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n    }\n    if(q.length == 10){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n    }\n    if(q.length == 11){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  if (q.length < 2) return false;\n  if (q.length % 2 == 0) return false;\n  if (q.length > 2) return true;\n  if (q[0] + q[1] > w) return false;\n  return true;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q[0] > w) return false;\n  if(q[q.length - 1] > w) return false;\n  if(q[0] + q[q.length - 1] > w) return false;\n  if(q.length % 2 === 0) return false;\n  for(var i = 1; i < q.length - 1; i++){\n    if(q[i] + q[i - 1] > w) return false;\n  }\n  return true;\n}\n",
    "  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return (sum <= w && is_balanced(q));\n}\n",
    "  if(q.length !== w){\n    return false;\n  }\n  if(q.length === 1){\n    return true;\n  }\n  var max = Math.pow(10, w);\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum > max){\n    return false;\n  }\n  return true;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n        if (sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  if(q.length % 2 === 0){\n    return q.every(function(e){\n      return e <= w;\n    });\n  }\n  return q.every(function(e){\n    return e <= w;\n  });\n}\n",
    "    var max = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n        if (sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w && is_balanced(q);\n}\n",
    "  if(q.length % 2 == 0)\n    return false;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return (sum <= w && is_balanced(q));\n}\n",
    "    var max = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n        if (sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  if(q.length < 2) return false;\n  if(q.length % 2 == 0) return false;\n  if(q.length > 2 && q[0] == q[q.length - 1]) return false;\n  if(q.length > 2 && q[0] + q[q.length - 1] > w) return false;\n  if(q.length > 2 && q[0] + q[q.length - 1] == w) return true;\n  for(var i = 0; i < q.length; i++){\n    if(q[i] + q[q.length - 1 - i] > w) return false;\n  }\n  return true;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  if(q.length % 2 === 0){\n    return false;\n  }\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length < 2) return true;\n  if(q.length % 2 == 0) return false;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return (sum <= w && is_balanced(q));\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q[0] + q[q.length - 1] > w) return false;\n  if(q[0] + q[1] > w) return false;\n  if(q[q.length - 1] + q[0] > w) return false;\n  if(q[q.length - 2] + q[q.length - 1] > w) return false;\n  if(q[q.length - 1] + q[q.length - 2] > w) return false;\n  if(q[q.length - 2] + q[q.length - 3] > w) return false;\n  if(q[q.length - 3] + q[q.length - 4] > w) return false;\n  if(q[q.length - 4] + q[q.length - 5] > w) return false;\n  if(q[q.length - 5] + q[q.length - 6] > w) return false;\n  if(q[q.length - 6] + q[q.length - 7] > w) return false;\n  if(q[q.length - 7] + q[q.length - 8] > w) return false;\n  if(q[q.length - 8] + q[q.length - 9] > w) return false;\n  if(q[q.length - 9] + q[q.length - 10] > w) return false;\n  if(q[q.length - 10] + q[q.length - 11] > w) return false;\n  if(q[q.length - 11] + q[q.length - 12] > w) return false;\n  if(q[q.length - 12] + q[q.length - 13] > w) return false;\n  if(q[q.length - 13] + q[q.length - 14] > w) return false;\n  if(q[q.length - 14] + q[q",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q[0] + q[q.length - 1] <= w) return true;\n  return false;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length % 2 === 0) return q[0] + q[1] + q[q.length - 1] <= w;\n  return q[0] + q[1] + q[q.length - 1] <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length % 2 == 0) return false;\n  var max = w - q.reduce(function(a, b){return a + b;});\n  return q.reduce(function(a, b){return a + b;}) <= max;\n}\n",
    "    if(q.length === 0){\n        return true;\n    }\n    if(q.length === 1){\n        return q[0] <= w;\n    }\n    if(q.length === 2){\n        return q[0] + q[1] <= w;\n    }\n    if(q[0] + q[q.length - 1] <= w){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length < 2) return true;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum > w) return false;\n  return is_balanced(q);\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "    var max_weight = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum > max_weight){\n        return false;\n    }\n    if (q.length % 2 == 0){\n        for (var i = 0; i < q.length; i++){\n            if (q[i] != q[q.length - i - 1]){\n                return false;\n            }\n        }\n    }\n    return true;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length % 2 === 0) return q[0] + q[1] + q[2] <= w;\n  return q[0] + q[1] + q[2] + q[q.length - 1] <= w;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length % 2 === 0){\n    return q[0] + q[q.length - 1] <= w;\n  }\n  return q[0] + q[q.length - 1] <= w && q[0] <= w;\n}\n",
    "    if(q.length === 0) return true;\n    if(q.length === 1) return q[0] <= w;\n    if(q.length === 2) return q[0] + q[1] <= w;\n    if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n    if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n    if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n    if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n    if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n    if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n    if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n    if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n    if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n    if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length % 2 === 0){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  return q[0] + q[1] <= w;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length % 2 === 0){\n    return false;\n  }\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  var max = w;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n    if(sum > max){\n      return false;\n    }\n  }\n  return true;\n}\n",
    "  if(q.length < 2) return true;\n  if(q.length % 2 == 0) return false;\n  let max = Math.pow(10, w);\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= max;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q[0] + q[q.length - 1] <= w) return true;\n  return false;\n}\n",
    "  var max = Math.pow(10, 9);\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum <= w && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum > w){\n        return false;\n    }\n    if(q.length % 2 == 0){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q[0] + q[q.length - 1] > w) return false;\n  if(q[0] > w || q[q.length - 1] > w) return false;\n  return true;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length % 2 === 1){\n    return q[0] <= w && q[q.length - 1] <= w;\n  }\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return (sum <= w && is_balanced(q));\n}\n",
    "  if(q.length % 2 != 0) return false;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length % 2 === 0) return false;\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "    if(q.length === 0) return true;\n    if(q.length === 1) return q[0] <= w;\n    if(q.length % 2 === 1) return q[0] + q[q.length - 1] <= w;\n    var max = Math.max.apply(null, q);\n    for(var i = 0; i < q.length; i++){\n        if(q[i] + q[q.length - i - 1] > max) return false;\n    }\n    return true;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length % 2 === 0) {\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n      sum += q[i];\n    }\n    return sum <= w;\n  }\n  return false;\n}\n",
    "  if(q.length % 2 == 0){\n    if(q.reduce((a, b) => a + b) <= w){\n      return true;\n    }\n  }\n  return false;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length % 2 === 1){\n    return false;\n  }\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q[0] + q[q.length - 1] > w) return false;\n  return is_balanced(q) && will_it_fly(q.slice(0, q.length / 2), w) && will_it_fly(q.slice(q.length / 2), w);\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length % 2 === 0) return false;\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q[0] + q[q.length - 1] > w) return false;\n  if(q.length % 2 === 0) return true;\n  return q[0] + q[q.length - 1] <= w;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum <= w && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "  if(q.length == 1){\n    return true;\n  }\n  if(q.length % 2 == 1){\n    return false;\n  }\n  let max = Math.pow(10, w);\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= max;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length % 2 === 1) return q[0] + q[q.length - 1] <= w;\n  return q[0] + q[1] + q[q.length - 1] <= w;\n}\n",
    "  if(q.length == 0) return true;\n  if(q.length == 1) return q[0] <= w;\n  if(q.length == 2) return q[0] + q[1] <= w;\n  if(q[0] + q[q.length - 1] > w) return false;\n  return q.every(function(e){\n    return e <= w;\n  });\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q[0] + q[q.length - 1] > w) return false;\n  return q.every(function(x){\n    return x <= w;\n  });\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length % 2 === 0){\n    return q[q.length/2] <= w;\n  }\n  return q[q.length/2] + q[q.length/2 - 1] <= w;\n}\n",
    "  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return (sum <= w && is_balanced(q));\n}\n",
    "  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return (sum <= w && is_balanced(q));\n}\n",
    "    var max_weight = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum > max_weight){\n        return false;\n    }\n    if(q.length % 2 == 0){\n        return true;\n    }\n    return false;\n}\n",
    "    if(q.length == 0) return true;\n    if(q.length == 1) return q[0] <= w;\n    if(q.length == 2) return q[0] + q[1] <= w;\n    if(q.length % 2 == 0) return q[0] + q[1] + q[q.length - 2] <= w;\n    return q[0] + q[1] + q[q.length - 1] <= w;\n}\n",
    "    if(q.length === 0) return true;\n    if(q.length === 1) return q[0] <= w;\n    if(q.length % 2 === 0) return false;\n    var max = Math.pow(10, w);\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return sum <= max;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length % 2 === 0){\n    return q[0] + q[q.length - 1] <= w;\n  }\n  return q[0] + q[q.length - 1] <= w && q[q.length / 2] <= w;\n}\n",
    "    var max_weight = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum <= max_weight && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "    var max = Math.pow(2, w);\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum <= max && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "    var max_weight = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum <= max_weight){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "    if(q.length == 0) return true;\n    if(q.length == 1) return q[0] <= w;\n    if(q.length == 2) return q[0] + q[1] <= w;\n    if(q.length % 2 == 0) return q[0] + q[1] + q[q.length - 1] <= w;\n    return q[0] + q[1] + q[q.length - 1] <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "    var max_weight = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum > max_weight){\n        return false;\n    }\n    if(q.length % 2 == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w && is_balanced(q);\n}\n",
    "  if(q.length === 0) return false;\n  if(q.length === 1) return true;\n  if(q.length % 2 === 0) return false;\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length % 2 === 0) return false;\n  if(q[0] > w) return false;\n  if(q[q.length - 1] > w) return false;\n  if(q[0] + q[q.length - 1] > w) return false;\n  if(q.length === 2) return true;\n  for(var i = 0; i < q.length - 1; i++){\n    if(q[i] + q[i + 1] > w) return false;\n  }\n  return true;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length % 2 === 1) return q[0] <= w;\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "    var max_weight = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum <= max_weight && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n        if (sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n        if(sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length % 2 === 0) return false;\n  let max = Math.max(...q);\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if (sum <= w && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n        if(sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  if(q.length == 0) return true;\n  if(q.length == 1) return q[0] <= w;\n  if(q.length == 2) return q[0] + q[1] <= w;\n  if(q.length % 2 == 0) return q[0] + q[1] + q[q.length - 2] <= w;\n  return q[0] + q[1] + q[q.length - 1] <= w;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return (sum <= w && is_balanced(q));\n}\n",
    "  if(q.length % 2 == 0){\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n      sum += q[i];\n    }\n    if(sum <= w){\n      return true;\n    }\n  }\n  return false;\n}\n",
    "  if(q.length !== w){\n    return false;\n  }\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n        if(sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  if (q.length === 0) return true;\n  if (q.length === 1) return q[0] <= w;\n  if (q.length % 2 === 0) return false;\n  if (q[0] + q[q.length - 1] > w) return false;\n  return true;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n        if(sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return (sum <= w && is_balanced(q));\n}\n",
    "  var sum = 0;\n  for (var i = 0; i < q.length; i++) {\n    sum += q[i];\n  }\n  return sum <= w && is_balanced(q);\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum <= w && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum <= w && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "    if(q.length === 0){\n        return true;\n    }\n    if(q.length % 2 === 1){\n        return false;\n    }\n    let sum = 0;\n    for(let i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return sum <= w;\n}\n",
    "  if(q.length !== w) return false;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length == 0) return true;\n  if(q.length == 1) return q[0] <= w;\n  if(q.length == 2) return q[0] + q[1] <= w;\n  if(q.length % 2 == 0) return q[0] + q[1] + q[q.length-1] <= w;\n  return q[0] + q[1] + q[q.length-1] <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length % 2 === 1) return q[0] + q[1] + q[q.length - 1] <= w;\n  return q[0] + q[1] + q[2] + q[q.length - 1] <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q[0] + q[q.length-1] > w) return false;\n  return will_it_fly(q.slice(1, q.length-1), w) && will_it_fly(q.slice(0, q.length-1), w);\n}\n",
    "  if(q.length == 0) return true;\n  if(q.length == 1) return q[0] <= w;\n  if(q.length % 2 == 0) return false;\n  var max = Math.pow(10, w);\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= max;\n}\n",
    "  var max_weight = w;\n  var sum = 0;\n  var i = 0;\n  var j = q.length - 1;\n  while (i <= j){\n    sum += q[i];\n    i++;\n  }\n  if (sum <= max_weight && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "  if(q.length % 2 === 0) {\n    return false;\n  }\n  var sum = 0;\n  for(var i = 0; i < q.length; i++) {\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum <= w && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return sum <= w && is_balanced(q);\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if (sum <= w && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "  var max_weight = w;\n  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if (sum <= max_weight && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n        if (sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  var max_weight = w;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum > max_weight){\n    return false;\n  }\n  if(q.length % 2 === 0){\n    return true;\n  }\n  return false;\n}\n",
    "  if(q.length % 2 == 0) return false;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q[0] + q[q.length - 1] > w) return false;\n  if(q[0] + q[q.length - 1] === w) return true;\n  for(var i = 0; i < q.length - 1; i++){\n    if(q[i] + q[i + 1] > w) return false;\n  }\n  return true;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length % 2 === 1) return q[0] + q[q.length - 1] <= w;\n  if(q.length % 2 === 0) return q[0] + q[q.length - 1] + q[q.length / 2] <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length % 2 === 1) return q[0] + q[q.length - 1] <= w;\n  return q[0] + q[1] + q[q.length - 1] <= w;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q[0] + q[q.length - 1] > w) return false;\n  return is_balanced(q) && will_it_fly(q.slice(0, q.length / 2), w) && will_it_fly(q.slice(q.length / 2), w);\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length % 2 == 0){\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n      sum += q[i];\n    }\n    return sum <= w;\n  }\n  return false;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return (sum <= w && is_balanced(q));\n}\n",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n        if(sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  var max_weight = w;\n  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if (sum > max_weight){\n    return false;\n  }\n  if (q.length % 2 == 1){\n    return false;\n  }\n  for (var i = 0; i < q.length; i++){\n    if (q[i] != q[q.length - i - 1]){\n      return false;\n    }\n  }\n  return true;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return (sum <= w && is_balanced(q));\n}\n",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n        if(sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  var max = w;\n  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n    if (sum > max){\n      return false;\n    }\n  }\n  return true;\n}\n",
    "  var max_weight = w;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum > max_weight){\n    return false;\n  }\n  if(q.length % 2 == 0){\n    return true;\n  }\n  return false;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q[0] + q[q.length-1] <= w){\n    return true;\n  }\n  return false;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return (sum <= w && is_balanced(q));\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum <= w && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum > max){\n        return false;\n    }\n    if(q.length % 2 == 0){\n        for(var i = 0; i < q.length; i++){\n            if(q[i] != q[q.length - i - 1]){\n                return false;\n            }\n        }\n    }\n    return true;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n        if(sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  var max_weight = w;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= max_weight && is_balanced(q);\n}\n",
    "  var max_weight = w;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if(sum > max_weight){\n    return false;\n  }\n  if(q.length % 2 == 0){\n    for(var i = 0; i < q.length; i++){\n      if(q[i] != q[q.length - i - 1]){\n        return false;\n      }\n    }\n  }\n  return true;\n}\n",
    "    if(q.length === 0) return true;\n    if(q.length === 1) return q[0] <= w;\n    if(q.length === 2) return q[0] + q[1] <= w;\n    if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n    if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n    if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n    if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n    if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n    if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n    if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n    if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n    if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n    if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return sum <= w && is_balanced(q);\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length % 2 === 1){\n    return false;\n  }\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w && is_balanced(q);\n}\n",
    "  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  if (sum <= w && is_balanced(q)){\n    return true;\n  }\n  return false;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if (q.length === 0) return true;\n  if (q.length === 1) return q[0] <= w;\n  if (q.length === 2) return q[0] + q[1] <= w;\n  if (q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if (q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if (q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if (q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if (q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if (q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if (q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if (q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if (q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if (q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length % 2 == 0){\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n      sum += q[i];\n    }\n    if(sum <= w){\n      return true;\n    }\n  }\n  return false;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length !== w){\n    return false;\n  }\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n        if(sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  if(q.length == 0) return true;\n  if(q.length == 1) return q[0] <= w;\n  if(q[0] > w) return false;\n  if(q[q.length - 1] > w) return false;\n  if(q[0] + q[q.length - 1] > w) return false;\n  return true;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length % 2 === 0) {\n    return false;\n  }\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q[0] + q[q.length - 1] <= w){\n    return true;\n  }\n  return false;\n}\n",
    "  var max = w;\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n    if(sum > max){\n      return false;\n    }\n  }\n  return true;\n}\n",
    "    var max_weight = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum <= max_weight && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q[0] + q[q.length-1] > w) return false;\n  if(q.length % 2 === 0) return false;\n  for(var i = 1; i < q.length-1; i++){\n    if(q[i] + q[q.length-i-1] > w) return false;\n  }\n  return true;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q[0] + q[q.length - 1] <= w){\n    return true;\n  }\n  return false;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return (sum <= w && is_balanced(q));\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if (q.length === 0) return true;\n  if (q.length % 2 === 1) return false;\n  let sum = 0;\n  for (let i = 0; i < q.length; i++) {\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "    var max = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n        if (sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return (sum <= w && is_balanced(q));\n}\n",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "    var max = w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n        if(sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  var sum = 0;\n  for (var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w && is_balanced(q);\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  if(q.length % 2 != 0){\n    return false;\n  }\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w && is_balanced(q);\n}\n",
    "  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w && is_balanced(q);\n}\n",
    "    var max = w;\n    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n        if (sum > max){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length % 2 === 1){\n    return false;\n  }\n  var sum = 0;\n  for(var i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "  if(q.length !== w){\n    return false;\n  }\n  if(q.length === 1){\n    return true;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q[0] + q[q.length - 1] > w){\n    return false;\n  }\n  if(q[0] + q[q.length - 1] === w){\n    return true;\n  }\n  if(q[0] === q[q.length - 1]){\n    return true;\n  }\n  if(q[0] === q[q.length - 2]){\n    return true;\n  }\n  if(q[q.length - 1] === q[0]){\n    return true;\n  }\n  if(q[q.length - 2] === q[0]){\n    return true;\n  }\n  return false;\n}\n",
    "    if(q.length === 0){\n        return true;\n    }\n    if(q.length === 1){\n        return q[0] <= w;\n    }\n    if(q.length === 2){\n        return q[0] + q[1] <= w;\n    }\n    if(q.length === 3){\n        return q[0] + q[1] + q[2] <= w;\n    }\n    if(q.length === 4){\n        return q[0] + q[1] + q[2] + q[3] <= w;\n    }\n    if(q.length === 5){\n        return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n    }\n    if(q.length === 6){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n    }\n    if(q.length === 7){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n    }\n    if(q.length === 8){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n    }\n    if(q.length === 9){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n    }\n    if(q.length === 10){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n    }\n    if(q.length === 11){\n        return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "  if(q.length === 0) return true;\n  if(q.length === 1) return q[0] <= w;\n  if(q.length === 2) return q[0] + q[1] <= w;\n  if(q.length === 3) return q[0] + q[1] + q[2] <= w;\n  if(q.length === 4) return q[0] + q[1] + q[2] + q[3] <= w;\n  if(q.length === 5) return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  if(q.length === 6) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  if(q.length === 7) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  if(q.length === 8) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  if(q.length === 9) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  if(q.length === 10) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  if(q.length === 11) return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] + q[10] <= w;\n  if(q.length === 12) return q[0] + q[1] + q[2] + q",
    "  if(q.length === 0) return false;\n  if(q.length === 1) return true;\n  if(q.length % 2 === 1) return false;\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q.length === 3){\n    return q[0] + q[1] + q[2] <= w;\n  }\n  if(q.length === 4){\n    return q[0] + q[1] + q[2] + q[3] <= w;\n  }\n  if(q.length === 5){\n    return q[0] + q[1] + q[2] + q[3] + q[4] <= w;\n  }\n  if(q.length === 6){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] <= w;\n  }\n  if(q.length === 7){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] <= w;\n  }\n  if(q.length === 8){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] <= w;\n  }\n  if(q.length === 9){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] <= w;\n  }\n  if(q.length === 10){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6] + q[7] + q[8] + q[9] <= w;\n  }\n  if(q.length === 11){\n    return q[0] + q[1] + q[2] + q[3] + q[4] + q[",
    "    if(q.length == 0) return true;\n    if(q.length == 1) return q[0] <= w;\n    if(q.length % 2 == 1) return q[q.length / 2] <= w;\n    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return sum <= w;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if(sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length === 1){\n    return q[0] <= w;\n  }\n  if(q.length === 2){\n    return q[0] + q[1] <= w;\n  }\n  if(q[0] + q[q.length - 1] <= w){\n    return true;\n  }\n  return false;\n}\n",
    "    var sum = 0;\n    for(var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    return sum <= w && is_balanced(q);\n}\n",
    "  if(q.length === 0){\n    return true;\n  }\n  if(q.length % 2 === 1){\n    return false;\n  }\n  let sum = 0;\n  for(let i = 0; i < q.length; i++){\n    sum += q[i];\n  }\n  return sum <= w;\n}\n",
    "    var sum = 0;\n    for (var i = 0; i < q.length; i++){\n        sum += q[i];\n    }\n    if (sum <= w && is_balanced(q)){\n        return true;\n    }\n    return false;\n}\n",
    "  if(q.length == 0) return true;\n  if(q.length == 1) return q[0] <= w;\n  if(q.length == 2) return q[0] + q[1] <= w;\n  if(q.length % 2 == 0) return q[0] + q[1] + q[q.length - 2] <= w;\n  return q[0] + q[1] + q[q.length - 1] <= w;\n}\n",
    "  if(q.length == 0) return true;\n  if(q.length == 1) return q[0] <= w;\n  if(q.length == 2) return q[0] + q[1] <= w;\n  if(q.length % 2 == 0) return q[0] + q[1] + q[q.length - 1] <= w;\n  return q[0] + q[1] + q[q.length - 1] <= w;\n}\n"
  ],
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ]
}
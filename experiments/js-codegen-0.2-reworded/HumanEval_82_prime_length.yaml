name: HumanEval_82_prime_length
language: js
prompt: "//Write a function that takes a string and returns true if the string\n//\
  \ length is a prime number or false otherwise\n// Examples\n// >>> prime_length('Hello')\n\
  // True\n// >>> prime_length('abcdcba')\n// True\n// >>> prime_length('kittens')\n\
  // True\n// >>> prime_length('orange')\n// False\nfunction prime_length(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = prime_length;\n  assert.deepEqual(candidate(\"Hello\"),true);\n  assert.deepEqual(candidate(\"\
  abcdcba\"),true);\n  assert.deepEqual(candidate(\"kittens\"),true);\n  assert.deepEqual(candidate(\"\
  orange\"),false);\n  assert.deepEqual(candidate(\"wow\"),true);\n  assert.deepEqual(candidate(\"\
  world\"),true);\n  assert.deepEqual(candidate(\"MadaM\"),true);\n  assert.deepEqual(candidate(\"\
  Wow\"),true);\n  assert.deepEqual(candidate(\"\"),false);\n  assert.deepEqual(candidate(\"\
  HI\"),true);\n  assert.deepEqual(candidate(\"go\"),true);\n  assert.deepEqual(candidate(\"\
  gogo\"),false);\n  assert.deepEqual(candidate(\"aaaaaaaaaaaaaaa\"),false);\n  assert.deepEqual(candidate(\"\
  Madam\"),true);\n  assert.deepEqual(candidate(\"M\"),false);\n  assert.deepEqual(candidate(\"\
  0\"),false);\n}\n\ntest();"
completions: ["  var prime = true;\n  for(var i = 0; i < string.length; i++){\n  \
    \  if(string.charAt(i) % 2 == 0){\n      prime = false;\n      break;\n    }\n\
    \  }\n  return prime;\n}\n", "  var prime = true;\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string.charAt(i) % 2 === 0){\n      prime = false;\n      break;\n\
    \    }\n  }\n  return prime;\n}\n", "  var prime = true;\n  for(var i = 0; i <\
    \ string.length; i++){\n    if(string.charAt(i) % 2 == 0){\n      prime = false;\n\
    \      break;\n    }\n  }\n  return prime;\n}\n", "  var prime = true;\n  for\
    \ (var i = 0; i < string.length; i++){\n    if (string.charAt(i) % 2 == 0){\n\
    \      prime = false;\n      break;\n    }\n  }\n  return prime;\n}\n", "  var\
    \ prime = true;\n  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i)\
    \ % 2 == 0){\n      prime = false;\n      break;\n    }\n  }\n  return prime;\n\
    }\n", "  if (string.length === 1) {\n    return true;\n  }\n  for (var i = 2;\
    \ i <= Math.sqrt(string.length); i++) {\n    if (string.length % i === 0) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "  var prime = true;\n\
    \  for(var i = 0; i < string.length; i++){\n    if(string[i] === ' '){\n     \
    \ continue;\n    }\n    if(string[i] % 2 === 0){\n      prime = false;\n     \
    \ break;\n    }\n  }\n  return prime;\n}\n", "  var length = string.length;\n\
    \  var prime = true;\n  for(var i = 2; i < length; i++){\n    if(string.charAt(i)\
    \ === string.charAt(0)){\n      prime = false;\n      break;\n    }\n  }\n  return\
    \ prime;\n}\n", "  var prime = true;\n  for(var i = 0; i < string.length; i++){\n\
    \    if(string[i] === ' '){\n      continue;\n    }\n    var num = parseInt(string.substr(i,1));\n\
    \    if(num % 2 === 0){\n      prime = false;\n      break;\n    }\n    for(var\
    \ j = 3; j < Math.sqrt(num); j += 2){\n      if(num % j === 0){\n        prime\
    \ = false;\n        break;\n      }\n    }\n    if(!prime){\n      break;\n  \
    \  }\n  }\n  return prime;\n}\n<|endoftext|><|javascript|>import React from 'react';\n\
    import { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\
    import { withKnobs, number, text } from '@storybook/addon-knobs';\nimport { withInfo\
    \ } from '@storybook/addon-info';\n\nimport { Button } from '../Button';\nimport\
    \ { ButtonGroup } from '../ButtonGroup';\nimport { ButtonToolbar } from '../ButtonToolbar';\n\
    \nconst stories = storiesOf('Buttons', module);\n\nstories.addDecorator(withKnobs);\n\
    stories.addDecorator(withInfo);\n\nstories.add('Button', () => (\n  <Button>Button</Button>\n\
    ));\n\nstories.add('ButtonGroup', () => (\n  <ButtonGroup>\n    <Button>Button</Button>\n\
    \    <Button>Button</Button>\n    <Button>Button</Button>\n  </ButtonGroup>\n\
    ));\n\nstories.add('ButtonToolbar', () => (\n  <ButtonToolbar>\n    <Button>Button</Button>\n\
    \    <Button>Button</Button>\n    <Button>Button</Button>\n  </ButtonToolbar>\n\
    ));\n<|endoftext|><|javascript|>import React from 'react';\nimport { Link } from\
    \ 'react-router';\nimport { connect } from 'react-redux';\nimport { bindActionCreators\
    \ } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport\
    \ { connectToStores }", "  if(string.length === 1){\n    return true;\n  }\n \
    \ for(let i = 2; i < string.length; i++){\n    if(string.charAt(i) === string.charAt(0)){\n\
    \      return false;\n    }\n    if(string.charAt(i) === string.charAt(0) + string.charAt(0)){\n\
    \      return false;\n    }\n  }\n  return true;\n}\n<|endoftext|><|javascript|>import\
    \ React from 'react';\nimport { Link } from 'react-router';\nimport { connect\
    \ } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\
    \ createStructuredSelector } from 'reselect';\nimport { makeSelectUser } from\
    \ 'containers/App/selectors';\nimport { makeSelectLoading } from 'containers/App/selectors';\n\
    import { makeSelectError } from 'containers/App/selectors';\nimport { makeSelectLoadingError\
    \ } from 'containers/App/selectors';\nimport { makeSelectLoadingErrorMessage }\
    \ from 'containers/App/selectors';\nimport { makeSelectLoadingErrorStatus } from\
    \ 'containers/App/selectors';\nimport { makeSelectLoadingErrorType } from 'containers/App/selectors';\n\
    import { makeSelectLoadingErrorAction } from 'containers/App/selectors';\nimport\
    \ { makeSelectLoadingErrorActionMessage } from 'containers/App/selectors';\nimport\
    \ { makeSelectLoadingErrorActionStatus } from 'containers/App/selectors';\nimport\
    \ { makeSelectLoadingErrorActionType } from 'containers/App/selectors';\nimport\
    \ { makeSelectLoadingErrorActionAction } from 'containers/App/selectors';\nimport\
    \ { makeSelectLoadingErrorActionActionMessage } from 'containers/App/selectors';\n\
    import { makeSelectLoadingErrorActionActionStatus } from 'containers/App/selectors';\n\
    import { makeSelectLoadingErrorActionActionType } from 'containers/App/selectors';\n\
    import { makeSelectLoadingErrorActionActionAction } from 'containers/App/selectors';\n\
    import { makeSelectLoadingErrorActionActionActionMessage } from 'containers/App/selectors';\n\
    import { makeSelectLoadingErrorAction", "  var prime = true;\n  for (var i = 0;\
    \ i < string.length; i++){\n    if (string.charAt(i) % 2 === 0){\n      prime\
    \ = false;\n      break;\n    }\n  }\n  return prime;\n}\n", "  var prime = true;\n\
    \  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i) % 2 === 0){\n\
    \      prime = false;\n      break;\n    }\n  }\n  return prime;\n}\n", "  var\
    \ prime = true;\n  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i)\
    \ % 2 == 0){\n      prime = false;\n      break;\n    }\n  }\n  return prime;\n\
    }\n", "  var prime = true;\n  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i)\
    \ % 2 == 0){\n      prime = false;\n      break;\n    }\n  }\n  return prime;\n\
    }\n", "  var prime = true;\n  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i)\
    \ % 2 == 0){\n      prime = false;\n    }\n  }\n  return prime;\n}\n", "  var\
    \ prime = true;\n  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i)\
    \ % 2 == 0){\n      prime = false;\n    }\n  }\n  return prime;\n}\n", "  if(string.length\
    \ === 1){\n    return true;\n  }\n  for(var i = 2; i < string.length; i++){\n\
    \    if(string.length % i === 0){\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  var prime = true;\n  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i)\
    \ % 2 === 0){\n      prime = false;\n    }\n  }\n  return prime;\n}\n", "  var\
    \ prime = true;\n  for (var i = 0; i < string.length; i++){\n    if (string.charAt(i)\
    \ % 2 == 0){\n      prime = false;\n    }\n  }\n  return prime;\n}\n", "  var\
    \ prime = true;\n  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i)\
    \ % 2 == 0){\n      prime = false;\n      break;\n    }\n  }\n  return prime;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

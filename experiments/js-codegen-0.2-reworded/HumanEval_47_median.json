{
  "name": "HumanEval_47_median",
  "language": "js",
  "prompt": "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();",
  "completions": [
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 == 1){\n    return arr[len/2];\n  }\n  else{\n    var mid = Math.floor(len/2);\n    return (arr[mid] + arr[mid-1])/2;\n  }\n}\n",
    "  var sorted = l.sort();\n  var middle = Math.floor(sorted.length/2);\n  if(sorted.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return null;\n    }\n    if(len === 1){\n        return l[0];\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(len / 2);\n    if(len % 2 === 1){\n        return sorted[middle];\n    }\n    return (sorted[middle] + sorted[middle - 1]) / 2;\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return 0;\n    }\n    if(len === 1){\n        return l[0];\n    }\n    var mid = Math.floor(len/2);\n    var left = l.slice(0, mid);\n    var right = l.slice(mid, len);\n    if(left.length === 0){\n        return right[0];\n    }\n    if(right.length === 0){\n        return left[0];\n    }\n    var leftMedian = median(left);\n    var rightMedian = median(right);\n    if(leftMedian > rightMedian){\n        return rightMedian;\n    }\n    return leftMedian;\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2 - 1]) / 2;\n    }\n    return arr[len/2];\n}\n",
    "  var arr = l.sort(function(a, b){return a-b});\n  var mid = Math.floor(arr.length/2);\n  if(arr.length%2 == 0){\n    return (arr[mid] + arr[mid-1])/2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n    }\n    else{\n        return arr[len / 2];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var n = l.length;\n    if(n % 2 === 0){\n        return (arr[n/2] + arr[n/2 - 1]) / 2;\n    }\n    return arr[n/2];\n}\n",
    "    var arr = l.slice(0);\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[mid] + arr[mid-1])/2;\n    }\n    else{\n        return arr[mid];\n    }\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return null;\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    if(len % 2 === 0){\n        return (sorted[len / 2] + sorted[len / 2 - 1]) / 2;\n    }\n    return sorted[len / 2];\n}\n",
    "    var n = l.length;\n    if(n == 0) return null;\n    if(n == 1) return l[0];\n    var sorted = l.sort(function(a, b){return a - b});\n    var mid = Math.floor(n/2);\n    if(n % 2 == 0) return (sorted[mid] + sorted[mid-1])/2;\n    else return sorted[mid];\n}\n",
    "  var len = l.length;\n  if(len === 0){\n    return NaN;\n  }\n  if(len === 1){\n    return l[0];\n  }\n  var mid = Math.floor(len/2);\n  var l1 = l.slice(0, mid);\n  var l2 = l.slice(mid, len);\n  var m1 = median(l1);\n  var m2 = median(l2);\n  if(l1.length === 0){\n    return m2;\n  }\n  if(l2.length === 0){\n    return m1;\n  }\n  if(m1 === m2){\n    return m1;\n  }\n  return (m1 + m2)/2;\n}\n",
    "    var n = l.length;\n    if(n === 0) return null;\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    if(n % 2 === 1) return sorted[n/2];\n    else return (sorted[n/2] + sorted[n/2 - 1]) / 2;\n}\n",
    "  if(l.length === 0){\n    return 0;\n  }\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(l.length/2);\n  if(l.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "  var sorted = l.sort();\n  var middle = Math.floor(sorted.length/2);\n  if(sorted.length % 2 == 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2 - 1]) / 2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len/2] + arr[len/2-1])/2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var n = arr.length;\n    if(n % 2 == 0){\n        return (arr[n/2] + arr[n/2 - 1]) / 2;\n    }\n    else{\n        return arr[n/2];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var n = arr.length;\n    if(n % 2 === 0){\n        return (arr[n/2] + arr[n/2 - 1]) / 2;\n    }\n    return arr[n/2];\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return null;\n    }\n    if(len === 1){\n        return l[0];\n    }\n    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(len/2);\n    if(len % 2 === 0){\n        return (arr[mid] + arr[mid-1])/2;\n    }\n    return arr[mid];\n}\n",
    "    var arr = [];\n    for(var i = 0; i < l.length; i++){\n        arr.push(l[i]);\n    }\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[middle] + arr[middle-1])/2;\n    }\n    else{\n        return arr[middle];\n    }\n}\n",
    "    var n = l.length;\n    if(n === 0) return null;\n    if(n === 1) return l[0];\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(n / 2);\n    if(n % 2 === 0) return (sorted[middle] + sorted[middle - 1]) / 2;\n    else return sorted[middle];\n}\n",
    "  var sorted = l.sort(function(a, b){return a-b});\n  var middle = Math.floor(l.length/2);\n  if(l.length % 2 == 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var half = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[half] + sorted[half-1])/2;\n    }else{\n        return sorted[half];\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var half = Math.floor(l.length/2);\n  if(l.length % 2 === 0){\n    return (sorted[half] + sorted[half-1])/2;\n  }\n  else{\n    return sorted[half];\n  }\n}\n",
    "  var arr = l.slice(0);\n  arr.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n  }\n  return arr[len / 2];\n}\n",
    "    var arr = l.sort(function(a, b){return a - b});\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len/2] + arr[len/2 - 1]) / 2;\n    }\n    return arr[len/2];\n}\n",
    "  var n = l.length;\n  if(n === 0) return NaN;\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = Math.floor(n/2);\n  if(n % 2 === 0){\n    return (sorted[mid] + sorted[mid-1])/2;\n  }else{\n    return sorted[mid];\n  }\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return NaN;\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(len / 2);\n    if(len % 2 === 1){\n        return sorted[middle];\n    }\n    else{\n        return (sorted[middle] + sorted[middle - 1]) / 2;\n    }\n}\n",
    "  if(l.length === 0){\n    return null;\n  }\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(sorted.length/2);\n  if(sorted.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  return sorted[middle];\n}\n",
    "  var sorted = l.sort(function(a, b){return a - b});\n  var middle = Math.floor(l.length/2);\n  if(l.length % 2 == 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "  if(l.length === 0) return null;\n  if(l.length === 1) return l[0];\n  var mid = Math.floor(l.length/2);\n  if(l.length % 2 === 0) return (l[mid] + l[mid-1])/2;\n  else return l[mid];\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 === 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var arr = l.slice(0);\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len/2] + arr[len/2 - 1])/2;\n    }else{\n        return arr[len/2];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    var mid = Math.floor(len/2);\n    if(len%2 == 0){\n        return (arr[mid] + arr[mid-1])/2;\n    }\n    else{\n        return arr[mid];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2-1])/2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "  if(l.length === 0) return null;\n  if(l.length === 1) return l[0];\n  if(l.length === 2) return (l[0] + l[1]) / 2;\n  var mid = Math.floor(l.length / 2);\n  if(l[mid] > l[mid - 1]) return l[mid];\n  else return l[mid - 1];\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var n = arr.length;\n    if(n % 2 == 0){\n        return (arr[n/2] + arr[n/2 - 1]) / 2;\n    }\n    else{\n        return arr[n/2];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){return a - b});\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2-1])/2;\n  }\n  else{\n    return arr[len/2];\n  }\n}\n",
    "  var arr = l.sort(function(a, b){return a - b});\n  var len = arr.length;\n  if(len % 2 === 1){\n    return arr[len / 2];\n  }else{\n    return (arr[len / 2 - 1] + arr[len / 2]) / 2;\n  }\n}\n",
    "  if(l.length === 0) return null;\n  if(l.length === 1) return l[0];\n  if(l.length === 2) return (l[0] + l[1]) / 2;\n  var mid = Math.floor(l.length / 2);\n  var left = l.slice(0, mid);\n  var right = l.slice(mid, l.length);\n  return (median(left) + median(right)) / 2;\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return null;\n    }\n    if(len === 1){\n        return l[0];\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(len/2);\n    if(len % 2 === 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    return sorted[mid];\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var half = Math.floor(l.length / 2);\n  if(l.length % 2 === 0){\n    return (sorted[half] + sorted[half - 1]) / 2;\n  }\n  else{\n    return sorted[half];\n  }\n}\n",
    "    var arr = l.slice(0);\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n    }\n    return arr[len / 2];\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(sorted.length/2);\n  if(sorted.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var n = l.length;\n    if(n === 0) return;\n    var sorted = l.sort(function(a, b){return a - b});\n    if(n % 2 === 1) return sorted[n / 2];\n    return (sorted[n / 2] + sorted[n / 2 - 1]) / 2;\n}\n",
    "  var arr = l.sort(function(a, b){return a - b});\n  var len = arr.length;\n  if(len % 2 == 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  else{\n    return arr[len/2];\n  }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var half = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[half] + sorted[half-1])/2;\n    }\n    else{\n        return sorted[half];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len/2] + arr[len/2-1])/2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2-1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "    var len = l.length;\n    if(len === 0) return null;\n    if(len === 1) return l[0];\n    var mid = Math.floor(len/2);\n    if(len % 2 === 1) return l[mid];\n    var l1 = l.slice(0, mid);\n    var l2 = l.slice(mid);\n    return (median(l1) + median(l2)) / 2;\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2 - 1]) / 2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(sorted.length / 2);\n    if(sorted.length % 2 === 0){\n        return (sorted[middle] + sorted[middle - 1]) / 2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = Math.floor(arr.length/2);\n  if(arr.length % 2 === 0){\n    return (arr[mid] + arr[mid-1])/2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var half = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[half] + sorted[half-1])/2;\n    }\n    else{\n        return sorted[half];\n    }\n}\n",
    "    var n = l.length;\n    if(n === 0){\n        return NaN;\n    }\n    if(n === 1){\n        return l[0];\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(n / 2);\n    if(n % 2 === 0){\n        return (sorted[middle] + sorted[middle - 1]) / 2;\n    }\n    return sorted[middle];\n}\n",
    "    var arr = [];\n    for(var i = 0; i < l.length; i++){\n        arr.push(l[i]);\n    }\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(arr.length / 2);\n    if(arr.length % 2 == 0){\n        return (arr[middle] + arr[middle - 1]) / 2;\n    }\n    return arr[middle];\n}\n",
    "    var n = l.length;\n    if(n === 0) return NaN;\n    if(n === 1) return l[0];\n    if(n === 2) return (l[0] + l[1]) / 2;\n    var h = Math.floor(n / 2);\n    var m = l[h];\n    for(var i = 0; i < h; i++){\n        m = (l[i] + m) / 2;\n    }\n    return m;\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n    }\n    else{\n        return arr[len / 2];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 == 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  else{\n    return arr[len/2];\n  }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(sorted.length/2);\n    if(sorted.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    return sorted[middle];\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len/2] + arr[len/2-1])/2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(l.length/2);\n  if(l.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var n = l.length;\n    if(n === 0) return null;\n    if(n === 1) return l[0];\n    var mid = Math.floor(n/2);\n    if(n % 2 === 0) return (l[mid] + l[mid-1])/2;\n    else return l[mid];\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = Math.floor(arr.length/2);\n  if(arr.length % 2 == 0){\n    return (arr[mid] + arr[mid-1])/2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 1){\n        return arr[len/2];\n    }else{\n        var mid = Math.floor(len/2);\n        return (arr[mid] + arr[mid-1])/2;\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  else{\n    return arr[len/2];\n  }\n}\n",
    "  var n = l.length;\n  if(n === 0) return NaN;\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = Math.floor(n / 2);\n  if(n % 2 === 0){\n    return (sorted[mid] + sorted[mid - 1]) / 2;\n  }\n  else{\n    return sorted[mid];\n  }\n}\n",
    "    var len = l.length;\n    if(len == 0) return null;\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(len/2);\n    if(len % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }else{\n        return sorted[middle];\n    }\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return 0;\n    }\n    if(len === 1){\n        return l[0];\n    }\n    var mid = Math.floor(len/2);\n    var left = l.slice(0, mid);\n    var right = l.slice(mid);\n    return (median(left) + median(right))/2;\n}\n",
    "  var n = l.length;\n  if(n === 0) return NaN;\n  var sorted = l.sort(function(a, b){return a - b});\n  if(n % 2 === 1) return sorted[n/2];\n  else return (sorted[n/2] + sorted[n/2-1])/2;\n}\n",
    "  var arr = l.sort(function(a, b){return a - b});\n  var mid = Math.floor(arr.length/2);\n  if(arr.length % 2 == 0){\n    return (arr[mid] + arr[mid-1])/2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 1){\n    return arr[(len - 1) / 2];\n  }\n  else{\n    return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n  }\n}\n",
    "  var sorted = l.sort(function(a,b){return a-b});\n  var mid = Math.floor(l.length/2);\n  if(l.length % 2 == 0){\n    return (sorted[mid] + sorted[mid-1])/2;\n  }\n  else{\n    return sorted[mid];\n  }\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return null;\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(len / 2);\n    if(len % 2 === 0){\n        return (sorted[middle] + sorted[middle - 1]) / 2;\n    }\n    return sorted[middle];\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2 - 1]) / 2;\n    }\n    return arr[len/2];\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = Math.floor(arr.length/2);\n  if(arr.length % 2 === 0){\n    return (arr[mid] + arr[mid-1])/2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1])/2;\n  }\n  return arr[len/2];\n}\n",
    "  var arr = l.sort(function(a, b){return a - b});\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(sorted.length/2);\n    if(sorted.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len/2] + arr[len/2 - 1])/2;\n    }\n    return arr[len/2];\n}\n",
    "    var n = l.length;\n    if(n === 0){\n        return NaN;\n    }\n    if(n === 1){\n        return l[0];\n    }\n    var h = Math.floor(n/2);\n    var m = l[h];\n    for(var i = 0; i < h; i++){\n        m = (l[i] + m) / 2;\n    }\n    return m;\n}\n",
    "    var arr = l.slice();\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n    }\n    return arr[len / 2];\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(l.length / 2);\n  if(l.length % 2 === 0){\n    return (sorted[middle] + sorted[middle - 1]) / 2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(sorted.length / 2);\n    if(sorted.length % 2 === 0){\n        return (sorted[middle] + sorted[middle - 1]) / 2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(l.length/2);\n  if(l.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2 - 1])/2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return NaN;\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(len / 2);\n    if(len % 2 === 0){\n        return (sorted[mid] + sorted[mid - 1]) / 2;\n    }\n    return sorted[mid];\n}\n",
    "  var n = l.length;\n  if(n === 0) return NaN;\n  var sorted = l.sort(function(a, b){ return a - b; });\n  if(n % 2 === 1) return sorted[n / 2];\n  return (sorted[n / 2 - 1] + sorted[n / 2]) / 2;\n}\n",
    "  if(l.length === 0){\n    return 0;\n  }\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(sorted.length / 2);\n  if(sorted.length % 2 === 0){\n    return (sorted[middle] + sorted[middle - 1]) / 2;\n  }\n  return sorted[middle];\n}\n",
    "    var len = l.length;\n    if(len == 0){\n        return null;\n    }\n    if(len == 1){\n        return l[0];\n    }\n    var mid = Math.floor(len/2);\n    if(len % 2 == 0){\n        return (l[mid-1] + l[mid]) / 2;\n    }\n    return l[mid];\n}\n",
    "    var arr = l.sort(function(a, b){return a - b});\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2-1]) / 2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "  var n = l.length;\n  if(n === 0) return NaN;\n  var sorted = l.sort(function(a, b){return a - b});\n  if(n % 2 === 1) return sorted[n/2];\n  return (sorted[n/2-1] + sorted[n/2]) / 2;\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n  }\n  return arr[len / 2];\n}\n",
    "  if(l.length === 0){\n    return 0;\n  }\n  if(l.length === 1){\n    return l[0];\n  }\n  var mid = Math.floor(l.length/2);\n  var left = l.slice(0, mid);\n  var right = l.slice(mid);\n  return (left.length % 2 === 0) ? (left[left.length/2] + right[right.length/2])/2 : left[left.length/2];\n}\n",
    "    var arr = l.slice(0);\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[middle] + arr[middle-1])/2;\n    }else{\n        return arr[middle];\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){return a - b});\n  var mid = Math.floor(l.length/2);\n  if(l.length % 2 == 0){\n    return (sorted[mid] + sorted[mid-1])/2;\n  }\n  else{\n    return sorted[mid];\n  }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var half = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[half] + sorted[half-1])/2;\n    }\n    else{\n        return sorted[half];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1])/2;\n  }\n  return arr[len/2];\n}\n",
    "    var n = l.length;\n    if(n === 0) return NaN;\n    if(n === 1) return l[0];\n    var h = Math.floor(n/2);\n    var m = l[h];\n    var l1 = l.slice(0, h);\n    var l2 = l.slice(h);\n    if(l1.length === 0) return m;\n    if(l2.length === 0) return m;\n    return (m - l1[0]) < (l2[0] - m) ? m : l2[0];\n}\n",
    "    var arr = [];\n    for(var i = 0; i < l.length; i++){\n        arr.push(l[i]);\n    }\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[middle] + arr[middle-1])/2;\n    }\n    else{\n        return arr[middle];\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var half = Math.floor(l.length / 2);\n  if(l.length % 2 == 0){\n    return (sorted[half] + sorted[half - 1]) / 2;\n  }\n  else{\n    return sorted[half];\n  }\n}\n",
    "    var arr = l.slice(0);\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 1){\n        return arr[len/2];\n    }\n    else{\n        return (arr[len/2] + arr[len/2-1])/2;\n    }\n}\n",
    "    var n = l.length;\n    if(n === 0) return null;\n    if(n === 1) return l[0];\n    var m = Math.floor(n/2);\n    var a = l[m-1];\n    var b = l[m];\n    if(a > b){\n        var t = a;\n        a = b;\n        b = t;\n    }\n    if(a === b){\n        return a;\n    }\n    var c = l[m];\n    var d = l[m+1];\n    if(c > d){\n        var t = c;\n        c = d;\n        d = t;\n    }\n    if(c === d){\n        return c;\n    }\n    return (a + b + c + d) / 4;\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 1){\n    return arr[len/2];\n  }\n  else{\n    return (arr[len/2] + arr[len/2 - 1])/2;\n  }\n}\n",
    "    var arr = l.sort();\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2 - 1])/2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var half = Math.floor(l.length/2);\n    if(l.length % 2 === 0){\n        return (sorted[half] + sorted[half-1])/2;\n    }\n    else{\n        return sorted[half];\n    }\n}\n",
    "    var len = l.length;\n    if(len == 0){\n        return 0;\n    }\n    if(len == 1){\n        return l[0];\n    }\n    var mid = Math.floor(len/2);\n    if(len % 2 == 0){\n        return (l[mid-1] + l[mid]) / 2;\n    }\n    return l[mid];\n}\n",
    "    var arr = l.sort(function(a, b){return a - b});\n    var mid = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[mid] + arr[mid-1])/2;\n    }\n    else{\n        return arr[mid];\n    }\n}\n",
    "    var arr = l.slice(0);\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2 - 1]) / 2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2 - 1]) / 2;\n    }else{\n        return arr[len/2];\n    }\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return NaN;\n    }\n    if(len === 1){\n        return l[0];\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(len/2);\n    if(len % 2 === 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    return sorted[middle];\n}\n",
    "  var arr = l.sort(function(a, b){return a - b});\n  var mid = Math.floor(arr.length/2);\n  if(arr.length % 2 === 0){\n    return (arr[mid] + arr[mid-1])/2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(l.length/2);\n  if(l.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(l.length/2);\n    if(l.length % 2 === 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2-1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1])/2;\n  }\n  else{\n    return arr[len/2];\n  }\n}\n",
    "    var n = l.length;\n    if(n === 0) return null;\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    if(n % 2 === 1) return sorted[Math.floor(n / 2)];\n    else return (sorted[Math.floor(n / 2)] + sorted[Math.floor(n / 2) - 1]) / 2;\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var half = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[half] + sorted[half-1])/2;\n    }\n    else{\n        return sorted[half];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "  var n = l.length;\n  if(n === 0){\n    return NaN;\n  }\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = Math.floor(n/2);\n  if(n % 2 === 1){\n    return sorted[mid];\n  }\n  return (sorted[mid-1] + sorted[mid])/2;\n}\n",
    "  var arr = l.sort(function(a,b){return a-b});\n  var mid = Math.floor(arr.length/2);\n  if(arr.length%2==0){\n    return (arr[mid]+arr[mid-1])/2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "    var len = l.length;\n    if(len == 0){\n        return null;\n    }\n    if(len == 1){\n        return l[0];\n    }\n    var mid = Math.floor(len/2);\n    var left = l.slice(0, mid);\n    var right = l.slice(mid, len);\n    if(len % 2 == 0){\n        return (median(left) + median(right))/2;\n    }\n    else{\n        return median(left);\n    }\n}\n",
    "    var len = l.length;\n    if(len == 0){\n        return NaN;\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(len/2);\n    if(len % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    return sorted[mid];\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len/2] + arr[len/2 - 1])/2;\n    }\n    else{\n        return arr[len/2];\n    }\n}\n",
    "  var arr = l.sort();\n  var len = arr.length;\n  var mid = Math.floor(len/2);\n  if(len%2==0){\n    return (arr[mid] + arr[mid-1])/2;\n  }else{\n    return arr[mid];\n  }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2-1])/2;\n    }\n    return arr[len/2];\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(sorted.length/2);\n  if(sorted.length % 2 == 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var arr = l.slice(0);\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len/2] + arr[len/2-1]) / 2;\n    }\n    return arr[len/2];\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return null;\n    }\n    if(len === 1){\n        return l[0];\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(len / 2);\n    if(len % 2 === 0){\n        return (sorted[middle] + sorted[middle - 1]) / 2;\n    }\n    return sorted[middle];\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len/2] + arr[len/2-1]) / 2;\n    }\n    return arr[len/2];\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(l.length/2);\n  if(l.length % 2 == 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 0){\n        return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n    }else{\n        return arr[len / 2];\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var half = Math.floor(l.length/2);\n  if(l.length % 2 === 0){\n    return (sorted[half-1] + sorted[half]) / 2;\n  }\n  else{\n    return sorted[half];\n  }\n}\n",
    "    var n = l.length;\n    if (n === 0) return NaN;\n    if (n === 1) return l[0];\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(n / 2);\n    if (n % 2 === 0) return (sorted[mid] + sorted[mid - 1]) / 2;\n    else return sorted[mid];\n}\n",
    "  var len = l.length;\n  if(len === 0){\n    return NaN;\n  }\n  if(len === 1){\n    return l[0];\n  }\n  var mid = Math.floor(len/2);\n  var left = l.slice(0, mid);\n  var right = l.slice(mid, len);\n  return (median(left) + median(right))/2;\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length / 2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle - 1]) / 2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var arr = l.slice(0);\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 0){\n        return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n    }\n    return arr[len / 2];\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var half = Math.floor(l.length/2);\n    if(l.length % 2 === 0){\n        return (sorted[half] + sorted[half-1])/2;\n    }\n    else{\n        return sorted[half];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "    var arr = l.slice();\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[middle] + arr[middle-1])/2;\n    }\n    else{\n        return arr[middle];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 === 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var half = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[half] + sorted[half-1])/2;\n    }\n    else{\n        return sorted[half];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 == 1){\n        return arr[len / 2];\n    }else{\n        return (arr[len / 2 - 1] + arr[len / 2]) / 2;\n    }\n}\n",
    "  if(l.length === 0){\n    return null;\n  }\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(sorted.length / 2);\n  if(sorted.length % 2 === 0){\n    return (sorted[middle] + sorted[middle - 1]) / 2;\n  }\n  return sorted[middle];\n}\n",
    "    var n = l.length;\n    if (n === 0) return NaN;\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(n/2);\n    if (n % 2 === 0) {\n        return (sorted[middle] + sorted[middle-1]) / 2;\n    } else {\n        return sorted[middle];\n    }\n}\n",
    "    var n = l.length;\n    if (n == 0) return NaN;\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    if (n % 2 == 1) return sorted[n/2];\n    else return (sorted[n/2-1] + sorted[n/2]) / 2.0;\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var half = Math.floor(l.length / 2);\n  if(l.length % 2 === 0){\n    return (sorted[half] + sorted[half - 1]) / 2;\n  }\n  else{\n    return sorted[half];\n  }\n}\n",
    "  var arr = l.sort(function(a, b){return a - b});\n  var len = arr.length;\n  if(len % 2 == 0){\n    return (arr[len/2] + arr[len/2-1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 1){\n        return arr[len / 2];\n    }\n    else{\n        return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(l.length/2);\n  if(l.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1]) / 2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "  var arr = l.sort(function(a, b){return a-b});\n  var mid = Math.floor(arr.length/2);\n  if(arr.length % 2 === 0){\n    return (arr[mid] + arr[mid-1])/2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "  var len = l.length;\n  if(len === 0){\n    return NaN;\n  }\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(len/2);\n  if(len % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  return sorted[middle];\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 == 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  else{\n    return arr[len/2];\n  }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[middle] + arr[middle-1])/2;\n    }\n    else{\n        return arr[middle];\n    }\n}\n",
    "    var arr = [];\n    for(var i = 0; i < l.length; i++){\n        arr.push(l[i]);\n    }\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[middle] + arr[middle-1])/2;\n    }\n    else{\n        return arr[middle];\n    }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = Math.floor(arr.length / 2);\n  if(arr.length % 2 === 0){\n    return (arr[mid] + arr[mid - 1]) / 2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "  var len = l.length;\n  if(len === 0){\n    return null;\n  }\n  if(len === 1){\n    return l[0];\n  }\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(len/2);\n  if(len % 2 === 0){\n    return (sorted[middle] + sorted[middle-1]) / 2;\n  }\n  return sorted[middle];\n}\n",
    "    var n = l.length;\n    if(n === 0) return NaN;\n    if(n === 1) return l[0];\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(n / 2);\n    if(n % 2 === 0) return (sorted[mid] + sorted[mid - 1]) / 2;\n    else return sorted[mid];\n}\n",
    "    var n = l.length;\n    if(n == 0) return null;\n    if(n == 1) return l[0];\n    var m = Math.floor(n/2);\n    if(n%2 == 0) return (l[m-1] + l[m])/2;\n    else return l[m];\n}\n",
    "    var n = l.length;\n    if(n === 0) return null;\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    if(n % 2 === 1) return sorted[Math.floor(n / 2)];\n    return (sorted[Math.floor(n / 2)] + sorted[Math.ceil(n / 2)]) / 2;\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var len = arr.length;\n    if(len % 2 === 1){\n        return arr[len / 2];\n    }\n    else{\n        return (arr[len / 2] + arr[len / 2 - 1]) / 2;\n    }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(sorted.length/2);\n  if(sorted.length % 2 == 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(l.length/2);\n  if(l.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var n = l.length;\n    if(n === 0) return null;\n    if(n === 1) return l[0];\n    var mid = Math.floor(n/2);\n    if(n%2 === 0) return (l[mid-1] + l[mid])/2;\n    else return l[mid];\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return NaN;\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(len / 2);\n    if(len % 2 === 0){\n        return (sorted[middle] + sorted[middle - 1]) / 2;\n    }\n    return sorted[middle];\n}\n",
    "    var n = l.length;\n    if (n == 0) return NaN;\n    var sorted = l.sort(function(a, b){return a - b});\n    if (n % 2 == 1) return sorted[n/2];\n    else return (sorted[n/2] + sorted[n/2-1])/2;\n}\n",
    "    var arr = l.sort(function(a, b){return a - b});\n    var mid = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[mid] + arr[mid-1])/2;\n    }\n    else{\n        return arr[mid];\n    }\n}\n",
    "    var arr = [];\n    for(var i = 0; i < l.length; i++){\n        arr.push(l[i]);\n    }\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[middle] + arr[middle-1])/2;\n    }\n    else{\n        return arr[middle];\n    }\n}\n",
    "  var len = l.length;\n  if(len === 0){\n    return null;\n  }\n  if(len === 1){\n    return l[0];\n  }\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(len / 2);\n  if(len % 2 === 0){\n    return (sorted[middle] + sorted[middle - 1]) / 2;\n  }\n  return sorted[middle];\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 === 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var n = arr.length;\n    if(n % 2 == 0){\n        return (arr[n/2] + arr[n/2 - 1]) / 2;\n    }\n    else{\n        return arr[n/2];\n    }\n}\n",
    "    var arr = l.slice(0);\n    arr.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(arr.length/2);\n    if(arr.length % 2 == 0){\n        return (arr[mid] + arr[mid-1])/2;\n    }else{\n        return arr[mid];\n    }\n}\n",
    "  var arr = l.sort();\n  var len = arr.length;\n  if(len % 2 == 0){\n    return (arr[len/2] + arr[len/2-1])/2;\n  }else{\n    return arr[len/2];\n  }\n}\n",
    "    var n = l.length;\n    if(n === 0) return null;\n    var sorted = l.sort(function(a, b){return a - b});\n    if(n % 2 === 0) return (sorted[n/2] + sorted[n/2 - 1]) / 2;\n    else return sorted[n/2];\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(sorted.length/2);\n  if(sorted.length % 2 === 0){\n    return (sorted[middle] + sorted[middle-1])/2;\n  }\n  else{\n    return sorted[middle];\n  }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(sorted.length/2);\n    if(sorted.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(sorted.length/2);\n    if(sorted.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    return sorted[middle];\n}\n",
    "    var len = l.length;\n    if(len === 0){\n        return null;\n    }\n    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var mid = Math.floor(len / 2);\n    if(len % 2 === 0){\n        return (sorted[mid] + sorted[mid - 1]) / 2;\n    }\n    return sorted[mid];\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var mid = Math.floor(arr.length/2);\n  if(arr.length % 2 === 0){\n    return (arr[mid] + arr[mid-1])/2;\n  }\n  else{\n    return arr[mid];\n  }\n}\n",
    "  if(l.length === 0){\n    return 0;\n  }\n  var sorted = l.sort(function(a, b){\n    return a - b;\n  });\n  var middle = Math.floor(l.length / 2);\n  if(l.length % 2 === 1){\n    return sorted[middle];\n  }\n  else{\n    return (sorted[middle] + sorted[middle - 1]) / 2;\n  }\n}\n",
    "  var arr = l.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "  var arr = l.slice(0);\n  arr.sort(function(a, b){\n    return a - b;\n  });\n  var len = arr.length;\n  if(len % 2 === 0){\n    return (arr[len/2] + arr[len/2 - 1]) / 2;\n  }\n  return arr[len/2];\n}\n",
    "    var arr = l.sort(function(a, b){\n        return a - b;\n    });\n    var n = arr.length;\n    if(n % 2 == 0){\n        return (arr[n/2] + arr[n/2 - 1]) / 2;\n    }\n    else{\n        return arr[n/2];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n",
    "    var sorted = l.sort(function(a, b){\n        return a - b;\n    });\n    var middle = Math.floor(l.length / 2);\n    if(l.length % 2 == 0){\n        return (sorted[middle] + sorted[middle - 1]) / 2;\n    }\n    else{\n        return sorted[middle];\n    }\n}\n"
  ],
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ]
}
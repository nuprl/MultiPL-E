language: js
name: HumanEval_88_sort_array
results:
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    if(array.length === 0){\n        return\
    \ array;\n    }\n    var sum = 0;\n    for(var i = 0; i < array.length; i++){\n\
    \        sum += array[i];\n    }\n    if(sum % 2 === 1){\n        return array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n    }\n    return array.sort(function(a,\
    \ b){\n        return b - a;\n    });\n}\n<|endoftext|><|javascript|>'use strict';\n\
    \nvar _ = require('lodash');\nvar fs = require('fs');\nvar path = require('path');\n\
    var util = require('util');\nvar chalk = require('chalk');\nvar yeoman = require('yeoman-generator');\n\
    \nvar Generator = module.exports = function Generator(args, options, config) {\n\
    \  yeoman.generators.Base.apply(this, arguments);\n\n  this.on('end', function\
    \ () {\n    this.installDependencies({ skipInstall: options['skip-install'] });\n\
    \  });\n\n  this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));\n\
    };\n\nutil.inherits(Generator, yeoman.generators.Base);\n\nGenerator.prototype.askFor\
    \ = function askFor() {\n  var cb = this.async();\n\n  // have Yeoman greet the\
    \ user.\n  console.log(this.yeoman);\n\n  var prompts = [{\n    name: 'name',\n\
    \    message: 'What is the name of your project?',\n    default: 'my-project'\n\
    \  }, {\n    name: 'description',\n    message: 'What is the description of your\
    \ project?',\n    default: 'My first project'\n  }, {\n    name: 'author',\n \
    \   message: 'What is the author of your project?',\n    default: 'My Name'\n\
    \  }, {\n    name: 'version',\n    message: 'What is the version of your project?',\n\
    \    default: '0.0.1'\n  }, {\n    name: 'license',\n    message: 'What is the\
    \ license\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbl7jt623.js:32\n<|endoftext|><|javascript|>'use strict';\n^\n\n\
    SyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    if(array.length === 0) return array;\n\
    \    var sum = array[0] + array[array.length - 1];\n    if(sum % 2 === 0){\n \
    \       return array.sort(function(a, b){\n            return b - a;\n       \
    \ });\n    }\n    return array.sort(function(a, b){\n        return a - b;\n \
    \   });\n}\n<|endoftext|><|javascript|>'use strict';\n\nvar _ = require('lodash');\n\
    var moment = require('moment');\nvar async = require('async');\nvar request =\
    \ require('request');\nvar cheerio = require('cheerio');\n\nvar config = require('../config');\n\
    var logger = require('../logger');\nvar db = require('../db');\nvar utils = require('../utils');\n\
    \nvar get = function(url, callback) {\n  request(url, function(error, response,\
    \ body) {\n    if (error) {\n      logger.error(error);\n      return callback(error);\n\
    \    }\n\n    if (response.statusCode !== 200) {\n      logger.error('Status code:\
    \ ' + response.statusCode);\n      return callback(new Error('Status code: ' +\
    \ response.statusCode));\n    }\n\n    var $ = cheerio.load(body);\n    var results\
    \ = [];\n\n    $('#                                                          \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                              \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmplir7m9vz.js:27\n<|endoftext|><|javascript|>'use strict';\n^\n\n\
    SyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    if(array.length === 0){\n        return\
    \ array;\n    }\n    var sum = 0;\n    for(var i = 0; i < array.length; i++){\n\
    \        sum += array[i];\n    }\n    if(sum % 2 === 1){\n        return array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n    }\n    return array.sort(function(a,\
    \ b){\n        return b - a;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpvlrgwl1j.js:41:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpvlrgwl1j.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    if(array.length === 0) return array;\n\
    \    var sum = 0;\n    for(var i = 0; i < array.length; i++){\n        sum +=\
    \ array[i];\n    }\n    if(sum % 2 === 1){\n        return array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n    }\n    else{\n        return\
    \ array.sort(function(a, b){\n            return b - a;\n        });\n    }\n\
    }\n<|endoftext|><|javascript|>var express = require('express');\nvar router =\
    \ express.Router();\nvar mongoose = require('mongoose');\nvar User = mongoose.model('User');\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbliwff_o.js:32\n<|endoftext|><|javascript|>var express = require('express');\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for(var i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 == 0){\n    return array.sort(function(a,\
    \ b){\n      return b - a;\n    });\n  }\n  else{\n    return array.sort(function(a,\
    \ b){\n      return a - b;\n    });\n  }\n}\n<|endoftext|><|javascript|>import\
    \ {\n  moduleForComponent,\n  test\n} from 'ember-qunit';\n\nmoduleForComponent('form-field',\
    \ {\n  // specify the other units that are required for this test\n  // needs:\
    \ ['component:foo', 'helper:bar']\n});\n\ntest('it renders', function(assert)\
    \ {\n  assert.expect(2);\n\n  // creates the component instance\n  var component\
    \ = this.subject();\n  assert.equal(component._state, 'preRender');\n\n  // renders\
    \ the component to the page\n  this.render();\n  assert.equal(component._state,\
    \ 'inDOM');\n});\n<|endoftext|><|javascript|>import {\n  GraphQLObjectType,\n\
    \  GraphQLString,\n  GraphQLNonNull,\n  GraphQLInt,\n  GraphQLID,\n  GraphQLBoolean,\n\
    \  GraphQLField,\n  GraphQLArgument,\n  GraphQLInputObjectType,\n  GraphQLList,\n\
    \  GraphQLInputObjectType,\n  GraphQLInputObjectField,\n  GraphQLInputType,\n\
    } from 'graphql';\n\nimport {\n  GraphQLDate,\n  GraphQLDateTime,\n  GraphQLTime,\n\
    \  GraphQLDateTime,\n  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n\
    \  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n\
    \  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n\
    \  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n  GraphQLTime,\n\
    \  GraphQLTime,\n  \nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpxesx_jvb.js:31\n<|endoftext|><|javascript|>import {\n^\n\nSyntaxError:\
    \ Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    if(array.length === 0){\n        return\
    \ array;\n    }\n    var sum = 0;\n    for(var i = 0; i < array.length; i++){\n\
    \        sum += array[i];\n    }\n    if(sum % 2 === 0){\n        return array.sort(function(a,\
    \ b){\n            return b - a;\n        });\n    }\n    return array.sort(function(a,\
    \ b){\n        return a - b;\n    });\n}\n<|endoftext|><|javascript|>/**\n * Copyright\
    \ (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source\
    \ code is licensed under the BSD-style license found in the\n * LICENSE file in\
    \ the root directory of this source tree. An additional grant\n * of patent rights\
    \ can be found in the PATENTS file in the same directory.\n *\n * @providesModule\
    \ ReactNativeOperationHistoryDevtool\n * @flow\n */\n'use strict';\n\nvar ReactNativeOperationHistoryDevtool\
    \ = require('ReactNativeOperationHistoryDevtool');\n\nmodule.exports = ReactNativeOperationHistoryDevtool;\n\
    <|endoftext|><|javascript|>import {\n  moduleForComponent,\n  test\n} from 'ember-qunit';\n\
    \nmoduleForComponent('md-input-group', {\n  // specify the other units that are\
    \ required for this test\n  // needs: ['component:foo', 'helper:bar']\n});\n\n\
    test('it renders', function(assert) {\n  assert.expect(2);\n\n  // creates the\
    \ component instance\n  var component = this.subject();\n  assert.equal(component._state,\
    \ 'preRender');\n\n  // renders the component to the page\n  this.render();\n\
    \  assert.equal(component._state, 'inDOM');\n});\n<|endoftext|><|javascript|>/**\n\
    \ * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018\
    \ Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT\
    \ License}\n */\n\nvar Class = require('../../utils/Class');\nvar CONST = require('./const');\n\
    var File = require('../File\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdedq2aor.js:32\n<|endoftext|><|javascript|>/**\n^\n\nSyntaxError:\
    \ Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    if(array.length === 0){\n        return\
    \ array;\n    }\n    var sum = 0;\n    for(var i = 0; i < array.length; i++){\n\
    \        sum += array[i];\n    }\n    if(sum % 2 === 0){\n        return array.sort(function(a,\
    \ b){\n            return b - a;\n        });\n    }\n    return array.sort(function(a,\
    \ b){\n        return a - b;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpz0bnenun.js:41:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpz0bnenun.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    if(array.length == 0) return array;\n\
    \    var sum = 0;\n    for(var i = 0; i < array.length; i++){\n        sum +=\
    \ array[i];\n    }\n    if(sum % 2 == 0){\n        array.sort(function(a, b){\n\
    \            return b - a;\n        });\n    }else{\n        array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n    }\n    return array;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpd8hf812u.js:41:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpd8hf812u.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 == 0){\n\
    \        array.sort(function(a, b){\n            return b - a;\n        });\n\
    \    } else {\n        array.sort(function(a, b){\n            return a - b;\n\
    \        });\n    }\n    return array;\n}\n<|endoftext|><|javascript|>'use strict';\n\
    \nvar _ = require('lodash');\nvar async = require('async');\nvar fs = require('fs');\n\
    var path = require('path');\nvar util = require('util');\nvar yaml = require('js-yaml');\n\
    \nvar config = require('./config');\nvar logger = require('./logger');\nvar utils\
    \ = require('./utils');\n\nvar configFile = path.join(__dirname, '..', 'config.yml');\n\
    \nvar configCache = {};\n\nvar configDefaults = {\n  logLevel: 'info',\n  logFormat:\
    \ 'json',\n  logFile: '',\n  logToConsole: true,\n  logToFile: false,\n  logToSyslog:\
    \ false,\n  logToRollbar: false,\n  logToGithub: false,\n  logToSlack: false,\n\
    \  logToSlackWebhook: false,\n  logToSlackChannel: '',\n  logToSlackUsername:\
    \ '',\n  logToSlackIconUrl: '',\n  logToSlackIconEmoji: '',\n  logToSlackIconText:\
    \ '',\n  logToSlackIconColor: '',\n  logToSlackIconHoverText: '',\n  logToSlackIconHoverColor:\
    \ '',\n  logToSlackHoverIconUrl: '',\n  logToSlackHoverIconEmoji: '',\n  logToSlackHoverIconText:\
    \ '',\n  logToSlackHoverIconColor: '',\n  logToSlackHoverIconHoverText: '',\n\
    \  logToSlackHoverIconHoverColor: '',\n  logToGithub\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpndp2n4fs.js:31\n<|endoftext|><|javascript|>'use strict';\n^\n\n\
    SyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for (var i = 0; i\
    \ < array.length; i++) {\n        sum += array[i];\n    }\n    if (sum % 2 ===\
    \ 1) {\n        return array.sort(function(a, b) {\n            return a - b;\n\
    \        });\n    } else {\n        return array.sort(function(a, b) {\n     \
    \       return b - a;\n        });\n    }\n}\n<|endoftext|><|javascript|>var express\
    \ = require('express');\nvar router = express.Router();\nvar User = require('../models/user');\n\
    var passport = require('passport');\nvar jwt = require('jsonwebtoken');\n\nrouter.post('/login',\
    \ function(req, res, next) {\n  passport.authenticate('local', function(err, user,\
    \ info) {\n    if (err) { return next(err); }\n    if (!user) {\n      return\
    \ res.status(401).json({\n        success: false,\n        message: info.message\n\
    \      });\n    }\n    var token = jwt.sign({\n      _id: user._id,\n      username:\
    \ user.username\n    }, process.env.SECRET);\n    return res.json({\n      success:\
    \ true,\n      message: 'Successfully logged in',\n      token: token\n    });\n\
    \  })(req, res, next);\n});\n\nrouter.post('/register', function(req, res, next)\
    \ {\n  var user = new User({\n    username: req.body.username,\n    email: req.body.email,\n\
    \    password: req.body.password\n  });\n  user.save(function(err) {\n    if (err)\
    \ { return next(err); }\n    passport.authenticate('local')(req, res, next);\n\
    \  });\n});\n\nmodule.exports = router;\n<|endoftext|><|javascript|>'use strict';\n\
    \nvar _ = require('lodash');\nvar async = require('async');\nvar fs = require('fs');\n\
    var path = require('path');\nvar util = require('util');\n\nvar logger = require('../logger');\n\
    var config = require('../\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpjz4icszn.js:30\n<|endoftext|><|javascript|>var express = require('express');\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        return array.sort(function(a, b){\n            return b - a;\n      \
    \  });\n    }\n    return array.sort(function(a, b){\n        return a - b;\n\
    \    });\n}\n<|endoftext|><|javascript|>var path = require('path');\nvar webpack\
    \ = require('webpack');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\n\
    var ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar CopyWebpackPlugin\
    \ = require('copy-webpack-plugin');\n\nmodule.exports = {\n  entry: [\n    'webpack-dev-server/client?http://localhost:3000',\n\
    \    'webpack/hot/only-dev-server',\n    './src/index'\n  ],\n  output: {\n  \
    \  path: path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath:\
    \ '/'\n  },\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n   \
    \ new webpack.NoErrorsPlugin(),\n    new HtmlWebpackPlugin({\n      template:\
    \ 'src/index.html',\n      inject: 'body',\n      filename: 'index.html'\n   \
    \ }),\n    new ExtractTextPlugin('bundle.css'),\n    new CopyWebpackPlugin([{\n\
    \      from: 'src/assets',\n      to: 'assets'\n    }])\n  ],\n  module: {\n \
    \   loaders: [{\n      test: /\\.js$/,\n      loaders: ['react-hot', 'babel'],\n\
    \      include: path.join(__dirname, 'src')\n    }, {\n      test: /\\.css$/,\n\
    \      loader: ExtractTextPlugin.extract('style', 'css')\n    }, {\n      test:\
    \ /\\.woff(2)?(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/,\n      loader: 'url-loader?limit=10000&m\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpmj3hwoak.js:29\n<|endoftext|><|javascript|>var path = require('path');\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for(var i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n    return array.sort(function(a,\
    \ b){\n      return b - a;\n    });\n  }\n  return array.sort(function(a, b){\n\
    \    return a - b;\n  });\n}\n<|endoftext|><|javascript|>import React from 'react';\n\
    import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\
    import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\
    import Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\
    import { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\n\
    \nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit * 2,\n\
    \  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\nclass App extends\
    \ React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClick = ()\
    \ => {\n    this.setState({ open: !this.state.open });\n  };\n\n  render() {\n\
    \    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n\
    \        <Grid container justify=\"center\">\n          <Grid item xs={12}>\n\
    \            <Typography variant=\"h6\" component=\"h1\">\n              React\
    \ Router Bootstrap\n            </Typography>\n            <Typography variant=\"\
    subtitle1\" component=\"p\">\n              A simple example of how to use the\n\
    \              {' '}\n              <Link to=\"/\">\n                <Button variant=\"\
    contained\" color=\"primary\" className={classes.button}>\n                  {'\
    \ '}\n                  Primary\n                </Button>\n              </Link>\n\
    \              {' '}\n              {' '}\n              <Link to=\"/\">\n   \
    \             <Button variant=\"contained\" color=\"\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpm4ni_v0i.js:29\n<|endoftext|><|javascript|>import React from 'react';\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 == 1){\n\
    \        array.sort(function(a, b){\n            return a - b;\n        });\n\
    \    }else{\n        array.sort(function(a, b){\n            return b - a;\n \
    \       });\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp8bmc1hre.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp8bmc1hre.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  var sum = 0;\n  for(var i = 0; i < array.length;\
    \ i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 1){\n    array.sort(function(a,\
    \ b){\n      return a - b;\n    });\n  }else{\n    array.sort(function(a, b){\n\
    \      return b - a;\n    });\n  }\n  return array;\n}\n<|endoftext|><|javascript|>'use\
    \ strict';\n\nvar _ = require('lodash');\nvar async = require('async');\nvar fs\
    \ = require('fs');\nvar path = require('path');\nvar util = require('util');\n\
    \nvar logger = require('../logger');\nvar utils = require('../utils');\nvar config\
    \ = require('../config');\nvar db = require('../db');\nvar models = require('../models');\n\
    var plugins = require('../plugins');\n\nvar defaultConfig = {\n  plugins: {\n\
    \    'plugins': [],\n    'enabled': [],\n    'config': {}\n  },\n  db: {\n   \
    \ 'host': 'localhost',\n    'port': 27017,\n    'name': 'test',\n    'user': '',\n\
    \    'pass': ''\n  }\n};\n\nvar defaultConfigPath = path.join(__dirname, '../../config.json');\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp33ywzpqk.js:31\n<|endoftext|><|javascript|>'use strict';\n^\n\n\
    SyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 === 0){\n\
    \        array.sort(function(a, b){\n            return b - a;\n        });\n\
    \    }else{\n        array.sort(function(a, b){\n            return a - b;\n \
    \       });\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmp_uosyra8.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp_uosyra8.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    var sum = 0;\n    for(var i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    if(sum % 2 == 0){\n\
    \        array.sort(function(a, b){\n            return b - a;\n        });\n\
    \    }else{\n        array.sort(function(a, b){\n            return a - b;\n \
    \       });\n    }\n    return array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4,\n  5,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  6,\n  5,\n\
    \  4,\n  3,\n  2,\n  1,\n  0\n]\n    at test (/tmp/tmpf_wpx_i3.js:40:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpf_wpx_i3.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1119:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 2, 3,\n    4, 5, 6\n  ],\n  expected: [\n    6, 5, 4, 3,\n    2, 1, 0\n \
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    if(array.length === 0){\n        return\
    \ array;\n    }\n    var sum = 0;\n    for(var i = 0; i < array.length; i++){\n\
    \        sum += array[i];\n    }\n    if(sum % 2 === 1){\n        array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n    }else{\n        array.sort(function(a,\
    \ b){\n            return b - a;\n        });\n    }\n    return array;\n}\n<|endoftext|><|javascript|>import\
    \ React from 'react';\nimport { shallow } from 'enzyme';\nimport { expect } from\
    \ 'chai';\nimport {\n  createStore,\n  combineReducers,\n  applyMiddleware,\n\
    \  compose\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider\
    \ } from 'react-redux';\nimport { createHistory } from 'history';\nimport { ConnectedRouter\
    \ } from 'react-router-redux';\nimport { createRoutes } from './routes';\nimport\
    \ { createStoreWithMiddleware } from './store';\nimport Root from './Root';\n\n\
    const history = createHistory();\n\ndescribe('Root', () => {\n  let store;\n \
    \ let routes;\n  let historyProp;\n  let render;\n  let wrapper;\n\n  beforeEach(()\
    \ => {\n    historyProp = {\n      push: jest.fn(),\n      replace: jest.fn(),\n\
    \      go: jest.fn(),\n      goBack: jest.fn(),\n      goForward: jest.fn(),\n\
    \      createHref: jest.fn(),\n      location: {\n        pathname: '/',\n   \
    \     search: '',\n        hash: ''\n      }\n    };\n\n    routes = createRoutes();\n\
    \n    render = (props = {}) => {\n      wrapper = shallow(\n        <Provider\
    \ store={store}>\n          <ConnectedRouter history={history}>\n            <Root\
    \ {...props} routes={routes} />\n          </ConnectedRouter>\n        </Provider>\n\
    \      );\n    };\n\n    store = create\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpmg29eqjr.js:34\n<|endoftext|><|javascript|>import React from 'react';\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length === 0){\n    return array;\n\
    \  }\n  var sum = 0;\n  for(var i = 0; i < array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum % 2 === 0){\n    return array.sort(function(a, b){\n      return\
    \ b - a;\n    });\n  }\n  return array.sort(function(a, b){\n    return a - b;\n\
    \  });\n}\n<|endoftext|><|javascript|>/*\n * Copyright (c) Microsoft Corporation.\
    \ All rights reserved.\n * Licensed under the MIT License. See License.txt in\
    \ the project root for\n * license information.\n *\n * Code generated by Microsoft\
    \ (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will\
    \ be lost if the code is\n * regenerated.\n */\n\n'use strict';\n\nconst models\
    \ = require('./index');\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpst_bajua.js:32\n<|endoftext|><|javascript|>/*\n^\n\nSyntaxError:\
    \ Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n  if(array.length === 0){\n    return array;\n\
    \  }\n  let sum = 0;\n  for(let i = 0; i < array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum % 2 === 0){\n    return array.sort((a, b) => b - a);\n  }\n  return\
    \ array.sort((a, b) => a - b);\n}\n<|endoftext|><|javascript|>/*\n * Copyright\
    \ (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\
    \ See License.txt in the project root for\n * license information.\n *\n * Code\
    \ generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect\
    \ behavior and will be lost if the code is\n * regenerated.\n */\n\n'use strict';\n\
    \nconst models = require('./index');\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4,\
    \ 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0,\
    \ 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
    \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32,\
    \ 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpxwey8jzr.js:28\n<|endoftext|><|javascript|>/*\n^\n\nSyntaxError:\
    \ Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n    at\
    \ wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534
- exit_code: 1
  program: "//Given an array of non-negative integers, return a cojs of the given\
    \ array after sorting,\n// you will sort the given array in ascending order if\
    \ the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n\
    // >>> sort_array([5])\n// [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0,\
    \ 1, 2, 3, 4, 5]\n// >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2,\
    \ 1, 0]\nfunction sort_array(array){\n    if(array.length === 0){\n        return\
    \ array;\n    }\n    var sum = 0;\n    for(var i = 0; i < array.length; i++){\n\
    \        sum += array[i];\n    }\n    if(sum % 2 === 0){\n        return array.sort(function(a,\
    \ b){\n            return b - a;\n        });\n    }\n    return array.sort(function(a,\
    \ b){\n        return a - b;\n    });\n}\n<|endoftext|><|javascript|>var gulp\
    \ = require('gulp');\nvar gutil = require('gulp-util');\nvar bower = require('bower');\n\
    var concat = require('gulp-concat');\nvar sass = require('gulp-sass');\nvar minifyCss\
    \ = require('gulp-minify-css');\nvar rename = require('gulp-rename');\nvar sh\
    \ = require('shelljs');\nvar fs = require('fs');\nvar del = require('del');\n\
    var runSequence = require('run-sequence');\nvar browserSync = require('browser-sync');\n\
    var reload = browserSync.reload;\n\nvar paths = {\n  sass: ['./scss/**/*.scss'],\n\
    \  js: ['./js/**/*.js'],\n  html: ['./www/**/*.html'],\n  dist: './dist'\n};\n\
    \ngulp.task('default', ['sass', 'js', 'html']);\n\ngulp.task('sass', function()\
    \ {\n  return gulp.src('./scss/ionic.app.scss')\n    .pipe(sass({\n      errLogToConsole:\
    \ true\n    }))\n    .pipe(gulp.dest('./www/css/'))\n    .pipe(minifyCss({\n \
    \     keepSpecialComments: 0\n    }))\n    .pipe(rename({\n      extname: '.min.css'\n\
    \    }))\n    .pipe(gulp.dest('./www/css/'))\n    .pipe(reload({\n      stream:\
    \ true\n    }));\n});\n\ngulp.task('js', function() {\n  return\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_array;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
    \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
    \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2,\
    \ 1]),[1, 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11,\
    \ 15, 32, 42, 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14,\
    \ 11]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpnqgpqvwg.js:32\n<|endoftext|><|javascript|>var gulp = require('gulp');\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371534

name: HumanEval_140_fix_spaces
language: js
prompt: "//Given a string text, replace all spaces in it with underscores, \n// and\
  \ if a string has more than 2 consecutive spaces, \n// then replace all consecutive\
  \ spaces with - \n// >>> fix_spaces(\" Example\")\n// \"Example\"\n// >>> fix_spaces(\"\
  \ Example 1\")\n// \"Example_1\"\n// >>> fix_spaces(\" Example 2\")\n// \"_Example_2\"\
  \n// >>> fix_spaces(\" Example 3\")\n// \"_Example-3\"\nfunction fix_spaces(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fix_spaces;\n  assert.deepEqual(candidate(\"Example\"),\"Example\");\n  assert.deepEqual(candidate(\"\
  Mudasir Hanif \"),\"Mudasir_Hanif_\");\n  assert.deepEqual(candidate(\"Yellow Yellow\
  \  Dirty  Fellow\"),\"Yellow_Yellow__Dirty__Fellow\");\n  assert.deepEqual(candidate(\"\
  Exa   mple\"),\"Exa-mple\");\n  assert.deepEqual(candidate(\"   Exa 1 2 2 mple\"\
  ),\"-Exa_1_2_2_mple\");\n}\n\ntest();"
completions: ["  //replace all spaces with underscores\n  text = text.replace(/ /g,\
    \ \"_\");\n  //replace all consecutive spaces with -\n  text = text.replace(/\\\
    s{2,}/g, \"-\");\n  return text;\n}\n", "    var new_text = text.replace(/ /g,\
    \ \"_\");\n    if(new_text.match(/\\s{2,}/)){\n        new_text = new_text.replace(/\\\
    s{2,}/g, \"-\");\n    }\n    return new_text;\n}\n", "    var new_text = text.replace(/\\\
    s+/g, '_');\n    if (new_text.match(/\\s{2,}/g)){\n        new_text = new_text.replace(/\\\
    s{2,}/g, '_');\n    }\n    return new_text;\n}\n", "    var new_text = text.replace(/\
    \ /g, \"_\");\n    var new_text = new_text.replace(/\\s{2,}/g, \"-\");\n    return\
    \ new_text;\n}\n", "    var new_text = text.replace(/ /g, \"_\");\n    var new_text\
    \ = new_text.replace(/\\s{2,}/g, \"_\");\n    return new_text;\n}\n", "  var new_text\
    \ = text.replace(/ /g, \"_\");\n  if(new_text.match(/\\s{2,}/)){\n    new_text\
    \ = new_text.replace(/\\s{2,}/g, \"-\");\n  }\n  return new_text;\n}\n", "   \
    \ var new_text = text.replace(/ /g, \"_\");\n    if(new_text.match(/\\s{2,}/)){\n\
    \        new_text = new_text.replace(/\\s{2,}/g, \"-\");\n    }\n    return new_text;\n\
    }\n", "  var new_text = text.replace(/ /g, \"_\");\n  if(new_text.match(/\\s{2,}/)){\n\
    \    new_text = new_text.replace(/\\s{2,}/g, \"-\");\n  }\n  return new_text;\n\
    }\n", "    var new_text = text.replace(/\\s+/g, '_');\n    if(new_text.match(/\\\
    s{2,}/g)){\n        new_text = new_text.replace(/\\s{2,}/g, '_');\n    }\n   \
    \ return new_text;\n}\n", "    var new_text = text.replace(/ /g, \"_\");\n   \
    \ var new_text = new_text.replace(/\\s{2,}/g, \"-\");\n    return new_text;\n\
    }\n", "    var new_text = text.replace(/\\s+/g, '_');\n    if(new_text.match(/\\\
    s+/g) != null){\n        new_text = new_text.replace(/\\s+/g, '-');\n    }\n \
    \   return new_text;\n}\n", "    var new_text = text.replace(/ /g, \"_\");\n \
    \   var new_text = new_text.replace(/\\s{2,}/g, \"-\");\n    return new_text;\n\
    }\n", "    var new_text = text.replace(/ /g, \"_\");\n    if(new_text.match(/\\\
    s{2,}/g)){\n        new_text = new_text.replace(/\\s{2,}/g, \"-\");\n    }\n \
    \   return new_text;\n}\n", "    var new_text = \"\";\n    for(var i=0; i<text.length;\
    \ i++){\n        if(text[i] == \" \"){\n            new_text += \"_\";\n     \
    \   }\n        else{\n            new_text += text[i];\n        }\n    }\n   \
    \ if(new_text.length > 2){\n        for(var i=0; i<new_text.length-2; i++){\n\
    \            if(new_text[i] == \" \" && new_text[i+1] == \" \" && new_text[i+2]\
    \ == \" \"){\n                new_text = new_text.substring(0, i+1) + \"-\";\n\
    \                i = i+2;\n            }\n        }\n    }\n    return new_text;\n\
    }\n", "    var result = text.replace(/ /g, \"_\");\n    if(result.match(/\\s{2,}/)){\n\
    \        result = result.replace(/\\s{2,}/g, \"-\");\n    }\n    return result;\n\
    }\n", "    var re = /\\s{2,}/g;\n    return text.replace(re, '_');\n}\n", "  \
    \  var new_text = \"\";\n    var i = 0;\n    var j = 0;\n    while(i < text.length){\n\
    \        if(text[i] == \" \"){\n            new_text += \"_\";\n            i++;\n\
    \        }\n        else{\n            new_text += text[i];\n            i++;\n\
    \        }\n    }\n    return new_text;\n}\n", "    var result = text.replace(/\
    \ /g, \"_\");\n    if (result.match(/\\s\\s/)){\n        result = result.replace(/\\\
    s\\s+/g, \"-\");\n    }\n    return result;\n}\n", "  return text.replace(/ /g,\
    \ \"_\").replace(/\\s{2,}/g, \"_\");\n}\n", "    var text = text.replace(/ /g,\
    \ \"_\");\n    var text = text.replace(/\\s{2,}/g, \"-\");\n    return text;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

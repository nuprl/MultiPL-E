language: js
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \    var vowels = 'aeiouAEIOU';\n    var new_text = '';\n    for(var i = 0; i\
    \ < text.length; i++){\n        if(vowels.indexOf(text[i]) == -1){\n         \
    \   new_text += text[i];\n        }\n    }\n    return new_text;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\n\
    ghijklm\"),\"bcdf\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpwh0s5zbw.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for(var i = 0; i < text.length;\
    \ i++){\n    if(vowels.indexOf(text[i]) === -1){\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfz0m4etw.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = ['a', 'e', 'i', 'o', 'u'];\n  var new_text = '';\n  for (var i\
    \ = 0; i < text.length; i++) {\n    if (vowels.indexOf(text[i]) == -1) {\n   \
    \   new_text += text[i];\n    }\n  }\n  return new_text;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\n\
    ghijklm\"),\"bcdf\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmphdrb2oy0.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = ['a', 'e', 'i', 'o', 'u'];\n  var new_text = \"\";\n  for(var\
    \ i = 0; i < text.length; i++){\n    if(vowels.indexOf(text[i]) == -1){\n    \
    \  new_text += text[i];\n    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6szwt66w.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  return text.replace(/[aeiou]/g, '');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbj8f4bu_.js:22\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for(var i = 0; i < text.length;\
    \ i++){\n    if(vowels.indexOf(text[i]) == -1){\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpz8lq5r5o.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for(var i = 0; i < text.length;\
    \ i++){\n    if(vowels.indexOf(text[i]) == -1){\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpz8lq5r5o.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for(var i = 0; i < text.length;\
    \ i++){\n    if(vowels.indexOf(text[i]) == -1){\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpz8lq5r5o.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for(var i = 0; i < text.length;\
    \ i++){\n    if(vowels.indexOf(text[i]) == -1){\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpz8lq5r5o.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = ['a', 'e', 'i', 'o', 'u'];\n  var new_text = '';\n  for (var i\
    \ = 0; i < text.length; i++){\n    if (vowels.indexOf(text[i]) == -1){\n     \
    \ new_text += text[i];\n    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpy404g75l.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371549
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for(var i=0; i<text.length;\
    \ i++){\n    if(vowels.indexOf(text[i]) == -1){\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpg1lz7ycy.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371549
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for (var i = 0; i < text.length;\
    \ i++) {\n    if (vowels.indexOf(text[i]) == -1) {\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpzctigt29.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371549
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for (var i = 0; i < text.length;\
    \ i++) {\n    if (vowels.indexOf(text[i]) == -1) {\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpzctigt29.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371549
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var newText = \"\";\n  for(var i = 0; i < text.length;\
    \ i++){\n    if(vowels.indexOf(text.charAt(i)) == -1){\n      newText += text.charAt(i);\n\
    \    }\n  }\n  return newText;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmph092lank.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371549
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var newText = '';\n  for(var i = 0; i < text.length;\
    \ i++){\n    if(vowels.indexOf(text[i]) == -1){\n      newText += text[i];\n \
    \   }\n  }\n  return newText;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpkog4ty92.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371549
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  return text.replace(/[aeiou]/g, '');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbj8f4bu_.js:22\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \    var vowels = 'aeiouAEIOU';\n    var new_text = '';\n    for(var i = 0; i\
    \ < text.length; i++){\n        if(vowels.indexOf(text.charAt(i)) == -1){\n  \
    \          new_text += text.charAt(i);\n        }\n    }\n    return new_text;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\nghijklm\"),\"bcdf\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp3s6w4pt5.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371549
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for(var i = 0; i < text.length;\
    \ i++){\n    if(vowels.indexOf(text[i]) == -1){\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpz8lq5r5o.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371548
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var new_text = '';\n  for (var i = 0; i < text.length;\
    \ i++){\n    if (vowels.indexOf(text[i]) == -1){\n      new_text += text[i];\n\
    \    }\n  }\n  return new_text;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpd4d_x_px.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371549
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n//\
    \ 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels(text){\n\
    \  var vowels = 'aeiouAEIOU';\n  var newText = '';\n  for (var i = 0; i < text.length;\
    \ i++) {\n    if (vowels.indexOf(text.charAt(i)) == -1) {\n      newText += text.charAt(i);\n\
    \    }\n  }\n  return newText;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"abcdef\nghijklm\"),\"bcdf\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpr6er3fqc.js:29\n  assert.deepEqual(candidate(\"abcdef\n       \
    \                      ^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n \
    \   at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1048:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1083:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1173:10)\n    at Module.load (node:internal/modules/cjs/loader:997:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\n\
    \nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662371549

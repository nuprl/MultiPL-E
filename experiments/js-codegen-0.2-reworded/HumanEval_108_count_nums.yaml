name: HumanEval_108_count_nums
language: js
prompt: "//Write a function count_nums which takes an array of integers and returns\n\
  // the number of elements which has a sum of digits > 0.\n// If a number is negative,\
  \ then its first signed digit will be negative:\n// e.g. -123 has signed digits\
  \ -1, 2, and 3.\n// >>> count_nums([])\n// 0\n// >>> count_nums([-1, 11, -11])\n\
  // 1\n// >>> count_nums([1, 1, 2])\n// 3\nfunction count_nums(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_nums;\n  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([-1,\
  \ -2, 0]),0);\n  assert.deepEqual(candidate([1, 1, 2, -2, 3, 4, 5]),6);\n  assert.deepEqual(candidate([1,\
  \ 6, 9, -6, 0, 1, 5]),5);\n  assert.deepEqual(candidate([1, 100, 98, -7, 1, -1]),4);\n\
  \  assert.deepEqual(candidate([12, 23, 34, -45, -56, 0]),5);\n  assert.deepEqual(candidate([0,\
  \ 1]),1);\n  assert.deepEqual(candidate([1]),1);\n}\n\ntest();"
completions: ["  let sum = 0\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i]\
    \ > 0){\n      sum += arr[i]\n    }\n  }\n  return sum\n}\n", "  var count = 0;\n\
    \  for(var i = 0; i < arr.length; i++){\n    if(arr[i] > 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "  var sum = 0;\n  for(var i = 0; i < arr.length;\
    \ i++){\n    if(arr[i] > 0){\n      sum += arr[i];\n    }\n  }\n  return sum;\n\
    }\n", "  var count = 0;\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i]\
    \ > 0){\n      count++;\n    }\n  }\n  return count;\n}\n", "  var count = 0;\n\
    \  for(var i = 0; i < arr.length; i++){\n    if(arr[i] > 0){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "  var count = 0;\n  for(var i = 0; i < arr.length;\
    \ i++){\n    if(arr[i] > 0){\n      count += arr[i];\n    }\n  }\n  return count;\n\
    }\n", "  var sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i] >\
    \ 0){\n      sum += arr[i];\n    }\n  }\n  return sum;\n}\n", "  var i, sum, len\
    \ = arr.length, count = 0;\n  for(i = 0; i < len; i++){\n    sum = arr[i];\n \
    \   if(sum > 0){\n      count += 1;\n    }\n  }\n  return count;\n}\n", "  let\
    \ count = 0\n  for (let i = 0; i < arr.length; i++) {\n    let num = arr[i]\n\
    \    if (num < 0) {\n      let sign = num % 10\n      num = Math.abs(num)\n  \
    \    let digits = num.toString().split('')\n      let sum = 0\n      for (let\
    \ j = 0; j < digits.length; j++) {\n        sum += parseInt(digits[j])\n     \
    \ }\n      if (sum > 0) {\n        count += 1\n      }\n    } else {\n      let\
    \ digits = num.toString().split('')\n      let sum = 0\n      for (let j = 0;\
    \ j < digits.length; j++) {\n        sum += parseInt(digits[j])\n      }\n   \
    \   if (sum > 0) {\n        count += 1\n      }\n    }\n  }\n  return count\n\
    }\n", "  var count = 0;\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i]\
    \ > 0){\n      count++;\n    }\n  }\n  return count;\n}\n", "  var count = 0;\n\
    \  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      count++;\n\
    \    } else if (arr[i] < 0) {\n      count += Math.abs(arr[i]) - 1;\n    }\n \
    \ }\n  return count;\n}\n", "  var sum = 0;\n  for (var i = 0; i < arr.length;\
    \ i++){\n    if (arr[i] > 0){\n      sum += arr[i];\n    }\n  }\n  return sum;\n\
    }\n", "  let count = 0\n  for (let i = 0; i < arr.length; i++) {\n    let num\
    \ = arr[i]\n    if (num > 0) {\n      count += 1\n    } else if (num < 0) {\n\
    \      count += 1\n      let num_str = num.toString()\n      let sign = num_str[0]\n\
    \      let digits = num_str.slice(1)\n      let sum = 0\n      for (let j = 0;\
    \ j < digits.length; j++) {\n        sum += parseInt(digits[j])\n      }\n   \
    \   if (sum > 0) {\n        count += 1\n      }\n    }\n  }\n  return count\n\
    }\n<|endoftext|><|javascript|>/*\n * Copyright (c) 2015 by Rafael Angel Aznar\
    \ Aparici (rafaaznar at gmail dot com)\n *\n * sisane: The stunning micro-library\
    \ that helps you to develop easily\n *             AJAX web applications by using\
    \ Angular.js 1.x & sisane-server\n * sisane is distributed under the MIT License\
    \ (MIT)\n * Sources at https://github.com/rafaelaznar/\n *\n * Permission is hereby\
    \ granted, free of charge, to any person obtaining a copy\n * of this software\
    \ and associated documentation files (the \"Software\"), to deal\n * in the Software\
    \ without restriction, including without limitation the rights\n * to use, copy,\
    \ modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the\
    \ Software, and to permit persons to whom the Software is\n * furnished to do\
    \ so, subject to the following conditions:\n *\n * The above copyright notice\
    \ and this permission notice shall be included in\n * all copies or substantial\
    \ portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT\
    \ WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE\
    \ WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\
    \ IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\
    \ DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\
    \ AR", "  var sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i]\
    \ > 0){\n      sum += arr[i];\n    }\n  }\n  return sum;\n}\n", "  var sum = 0;\n\
    \  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      sum +=\
    \ arr[i];\n    }\n  }\n  return sum;\n}\n", "  var count = 0;\n  for(var i = 0;\
    \ i < arr.length; i++){\n    if(arr[i] > 0){\n      count += arr[i];\n    }\n\
    \  }\n  return count;\n}\n", "  var sum = 0;\n  for(var i = 0; i < arr.length;\
    \ i++){\n    if(arr[i] > 0){\n      sum += arr[i];\n    }\n  }\n  return sum;\n\
    }\n", "  var count = 0;\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i]\
    \ > 0){\n      count++;\n    }\n  }\n  return count;\n}\n", "    var i, sum =\
    \ 0, len = arr.length;\n    for(i = 0; i < len; i++){\n        if(arr[i] > 0){\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n\
    \            sum += arr[i];\n        }\n    }\n    return arr.filter(x => x >\
    \ 0).length - sum;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

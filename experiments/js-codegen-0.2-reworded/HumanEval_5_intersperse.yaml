name: HumanEval_5_intersperse
language: js
prompt: "//Insert a number 'delimeter' between every two consecutive elements of input\
  \ array `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1, 2, 3],\
  \ 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse(numbers, delimeter){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = intersperse;\n  assert.deepEqual(candidate([], 7),[]);\n  assert.deepEqual(candidate([5,\
  \ 6, 3, 2], 8),[5, 8, 6, 8, 3, 8, 2]);\n  assert.deepEqual(candidate([2, 2, 2],\
  \ 2),[2, 2, 2, 2, 2]);\n}\n\ntest();"
completions: ["  var result = [];\n  for(var i = 0; i < numbers.length; i++){\n  \
    \  result.push(numbers[i]);\n    if(i < numbers.length - 1){\n      result.push(delimeter);\n\
    \    }\n  }\n  return result;\n}\n", "  return numbers.reduce(function(prev, curr){\n\
    \    return prev.concat([delimeter]).concat(curr);\n  }, []);\n}\n", "  var result\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "  return numbers.reduce(function(acc, num){\n    return acc.concat(delimeter).concat(num);\n\
    \  }, []);\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length; i++)\
    \ {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n      result.push(delimeter);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  for(var i = 0; i <\
    \ numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for (var i =\
    \ 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length\
    \ - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "  var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i =\
    \ 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for (var i =\
    \ 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length\
    \ - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i =\
    \ 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i =\
    \ 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    for (var i = 0; i < numbers.length; i++) {\n       \
    \ result.push(numbers[i]);\n        if (i < numbers.length - 1) {\n          \
    \  result.push(delimeter);\n        }\n    }\n    return result;\n}\n", "  var\
    \ result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i =\
    \ 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  return numbers.reduce((arr, num) => {\n    arr.push(num);\n\
    \    if(arr.length % 2 === 0) {\n      arr.push(delimeter);\n    }\n    return\
    \ arr;\n  }, []);\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  return numbers.reduce(function(acc, num){\n    return\
    \ acc.concat(delimeter).concat(num);\n  }, []);\n}\n", "  var result = [];\n \
    \ for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n \
    \   if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n       \
    \ if(i < numbers.length - 1){\n            result.push(delimeter);\n        }\n\
    \    }\n    return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n       \
    \ if(i < numbers.length - 1){\n            result.push(delimeter);\n        }\n\
    \    }\n    return result;\n}\n", "  return numbers.reduce((acc, curr) => acc.concat(curr,\
    \ delimeter), []);\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "    var result = [];\n    for (var i = 0; i < numbers.length; i++) {\n        result.push(numbers[i]);\n\
    \        if (i < numbers.length - 1) {\n            result.push(delimeter);\n\
    \        }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n       \
    \ if(i < numbers.length - 1){\n            result.push(delimeter);\n        }\n\
    \    }\n    return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for (var i =\
    \ 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length\
    \ - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  return numbers.reduce(function(a,\
    \ b){\n    a.push(b);\n    return a;\n  }, []).reduce(function(a, b){\n    a.push(delimeter);\n\
    \    return a;\n  }, []).slice(0, -1);\n}\n", "  var result = [];\n  for (var\
    \ i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i <\
    \ numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n\
    }\n", "  var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "  var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i =\
    \ 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        result.push(numbers[i]);\n        if (i < numbers.length - 1)\
    \ {\n            result.push(delimeter);\n        }\n    }\n    return result;\n\
    }\n", "  return numbers.reduce((arr, num) => {\n    arr.push(num);\n    if(arr.length\
    \ % 2 === 0){\n      arr.push(delimeter);\n    }\n    return arr;\n  }, []);\n\
    }\n", "    var result = [];\n    for (var i = 0; i < numbers.length; i++) {\n\
    \        result.push(numbers[i]);\n        if (i < numbers.length - 1) {\n   \
    \         result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "  var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  return numbers.reduce((acc,\
    \ num) => {\n    acc.push(num);\n    if(acc.length % 2 === 0){\n      acc.push(delimeter);\n\
    \    }\n    return acc;\n  }, []);\n}\n", "  var result = [];\n  for (var i =\
    \ 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length\
    \ - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    for (var i = 0; i < numbers.length; i++) {\n       \
    \ result.push(numbers[i]);\n        if (i < numbers.length - 1) {\n          \
    \  result.push(delimeter);\n        }\n    }\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n       \
    \ if(i < numbers.length - 1){\n            result.push(delimeter);\n        }\n\
    \    }\n    return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n       \
    \ if(i < numbers.length - 1){\n            result.push(delimeter);\n        }\n\
    \    }\n    return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  return numbers.reduce(function(a,\
    \ b){\n    a.push(b);\n    a.push(delimeter);\n    return a;\n  }, []).slice(0,\
    \ -1);\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length; i++)\
    \ {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n      result.push(delimeter);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  for (var i = 0; i\
    \ < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length\
    \ - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n       \
    \ if(i < numbers.length - 1){\n            result.push(delimeter);\n        }\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        result.push(numbers[i]);\n        if(i < numbers.length\
    \ - 1){\n            result.push(delimeter);\n        }\n    }\n    return result;\n\
    }\n", "  var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++) {\n        result.push(numbers[i]);\n\
    \        if (i < numbers.length - 1) {\n            result.push(delimeter);\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for (var i =\
    \ 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length\
    \ - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "  var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for (var i =\
    \ 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length\
    \ - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i =\
    \ 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  return numbers.reduce(function(a, b){\n    return\
    \ a.concat(b, delimeter);\n  }, []);\n}\n", "  return numbers.reduce((acc, num)\
    \ => acc.concat(delimeter, num), []);\n}\n", "  var result = [];\n  for(var i\
    \ = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "  var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  return numbers.reduce(function(prev,\
    \ curr){\n    return prev.concat([delimeter]).concat(curr);\n  }, []);\n}\n",
  "  var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "  var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++) {\n        result.push(numbers[i]);\n\
    \        if (i < numbers.length - 1) {\n            result.push(delimeter);\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for (var i =\
    \ 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length\
    \ - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "  var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for (var i =\
    \ 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length\
    \ - 1) {\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++) {\n        result.push(numbers[i]);\n\
    \        if (i < numbers.length - 1) {\n            result.push(delimeter);\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i =\
    \ 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n        if(i < numbers.length - 1){\n\
    \            result.push(delimeter);\n        }\n    }\n    return result;\n}\n",
  "    var result = [];\n    for (var i = 0; i < numbers.length; i++) {\n        result.push(numbers[i]);\n\
    \        if (i < numbers.length - 1) {\n            result.push(delimeter);\n\
    \        }\n    }\n    return result;\n}\n", "  var result = [];\n  for(var i\
    \ = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n    if(i < numbers.length\
    \ - 1){\n      result.push(delimeter);\n    }\n  }\n  return result;\n}\n", " \
    \ var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  return numbers.reduce(function(acc, num){\n    return\
    \ acc.concat(Array(num.length + 1).join(delimeter) + num);\n  }, []);\n}\n", " \
    \ var result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  return numbers.reduce(function(prev, curr){\n    return\
    \ prev.concat(curr, delimeter);\n  }, []);\n}\n", "  return numbers.reduce(function(acc,\
    \ num){\n    return acc.concat(delimeter).concat(num);\n  }, []);\n}\n", "  var\
    \ result = [];\n  for(var i = 0; i < numbers.length; i++){\n    result.push(numbers[i]);\n\
    \    if(i < numbers.length - 1){\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    result.push(numbers[i]);\n    if(i < numbers.length - 1){\n     \
    \ result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \    if (i < numbers.length - 1) {\n      result.push(delimeter);\n    }\n  }\n\
    \  return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n\
    \        if(i < numbers.length - 1){\n            result.push(delimeter);\n  \
    \      }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        result.push(numbers[i]);\n       \
    \ if(i < numbers.length - 1){\n            result.push(delimeter);\n        }\n\
    \    }\n    return result;\n}\n", "  var result = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i]);\n    if (i < numbers.length - 1) {\n  \
    \    result.push(delimeter);\n    }\n  }\n  return result;\n}\n", "  return numbers.reduce((arr,\
    \ num) => {\n    arr.push(num);\n    if (arr.length % 2 === 0) {\n      arr.push(delimeter);\n\
    \    }\n    return arr;\n  }, []);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

language: js
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0,\n        odd = 0;\n    while(num > 0){\n        if(num % 2 === 0){\n\
    \            even++;\n        }else{\n            odd++;\n        }\n        num\
    \ = num / 2;\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmplvs3jmew.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmplvs3jmew.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0,\n        odd = 0;\n    while(num > 0){\n        if(num % 2 === 0){\n\
    \            even++;\n        }else{\n            odd++;\n        }\n        num\
    \ = num / 2;\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmplvs3jmew.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmplvs3jmew.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0,\n        odd = 0;\n    while(num > 0){\n        if(num % 2 === 0){\n\
    \            even++;\n        }\n        else{\n            odd++;\n        }\n\
    \        num = num / 2;\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmplm6ssn5x.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmplm6ssn5x.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341911
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0,\n        odd = 0;\n    while(num > 0){\n        if(num % 2 === 0){\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  num = num / 2;\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpf2renog7.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf2renog7.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341911
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0;\n  var odd = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      even++;\n\
    \    } else {\n      odd++;\n    }\n    num = num / 2;\n  }\n  return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpflsvzz20.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpflsvzz20.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341911
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0;\n  var odd = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      even++;\n\
    \    }else{\n      odd++;\n    }\n    num = num / 2;\n  }\n  return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpakgtpa7t.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpakgtpa7t.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0, odd = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      even++;\n  \
    \  } else {\n      odd++;\n    }\n    num = num / 2;\n  }\n  return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmphcsg2lnl.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmphcsg2lnl.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0,\n        odd = 0;\n    while(num > 0){\n        if(num % 2 === 0){\n\
    \            even++;\n        }else{\n            odd++;\n        }\n        num\
    \ = num / 2;\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmplvs3jmew.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmplvs3jmew.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0, odd = 0;\n    while(num > 0){\n        if(num % 2 === 0){\n      \
    \      even++;\n        }\n        else{\n            odd++;\n        }\n    \
    \    num = num / 2;\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmplsc13at3.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmplsc13at3.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0;\n  var odd = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      even++;\n\
    \    }else{\n      odd++;\n    }\n    num = num / 2;\n  }\n  return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpakgtpa7t.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpakgtpa7t.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0;\n  var odd = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      even\
    \ += 1;\n    }else{\n      odd += 1;\n    }\n    num = num / 2;\n  }\n  return\
    \ [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpvkqbdk4x.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvkqbdk4x.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0,\n      odd = 0;\n  for(var i = 0; i < num.length; i++){\n    if(num[i]\
    \ % 2 === 0){\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp94umh5nk.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp94umh5nk.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0, odd = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      even++;\n  \
    \  } else {\n      odd++;\n    }\n    num = num / 2;\n  }\n  return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmphcsg2lnl.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmphcsg2lnl.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0, odd = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      even++;\n  \
    \  } else {\n      odd++;\n    }\n    num = num / 2;\n  }\n  return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmphcsg2lnl.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmphcsg2lnl.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0,\n        odd = 0;\n    for(var i = 0; i < num.length; i++){\n    \
    \    if(num[i] % 2 === 0){\n            even++;\n        }else{\n            odd++;\n\
    \        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpqxdd_986.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqxdd_986.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0,\n      odd = 0,\n      arr = [];\n  while(num > 0){\n    arr.push(num %\
    \ 2);\n    num = Math.floor(num / 2);\n  }\n  for(var i = arr.length - 1; i >=\
    \ 0; i--){\n    if(arr[i] === 0){\n      even += 1;\n    } else {\n      odd +=\
    \ 1;\n    }\n  }\n  return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmptl87j3im.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmptl87j3im.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n  var even\
    \ = 0;\n  var odd = 0;\n  while(num > 0){\n    if(num % 2 === 0){\n      even++;\n\
    \    }\n    else{\n      odd++;\n    }\n    num = num / 2;\n  }\n  return [even,\
    \ odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzdxdjzqs.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzdxdjzqs.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0,\n        odd = 0,\n        i = 0;\n    \n    while(num > 0){\n   \
    \     if(num % 2 === 0){\n            even++;\n        }else{\n            odd++;\n\
    \        }\n        num = num / 2;\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpcj5xp9m5.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcj5xp9m5.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0,\n        odd = 0;\n    while(num > 0){\n        if(num % 2 === 0){\n\
    \            even++;\n        }else{\n            odd++;\n        }\n        num\
    \ = num / 2;\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1078\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmplvs3jmew.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmplvs3jmew.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078\
    \ ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12) \n// (1, 1)\n\
    // >>> even_odd_count(123) \n// (1, 2)\nfunction even_odd_count(num){\n    var\
    \ even = 0,\n        odd = 0,\n        arr = [];\n    while(num > 0){\n      \
    \  arr.push(num % 2);\n        num = Math.floor(num / 2);\n    }\n    for(var\
    \ i = arr.length - 1; i >= 0; i--){\n        if(arr[i] === 1){\n            odd++;\n\
    \        } else {\n            even++;\n        }\n    }\n    return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp_pqro1ku.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_pqro1ku.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1119:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1173:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:997:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:838:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:18:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.8.0\n"
  stdout: ''
  timestamp: 1662341912

name: HumanEval_149_sorted_list_sum
language: js
prompt: "//Write a function that accepts an array of strings as a parameter,\n// deletes\
  \ the strings that have odd lengths from it,\n// and returns the resulted array\
  \ with a sorted order,\n// The array is always an array of strings and never an\
  \ array of numbers,\n// and it may contain duplicates.\n// The order of the array\
  \ should be ascending by length of each word, and you\n// should return the array\
  \ sorted by that rule.\n// If two words have the same length, sort the array alphabetically.\n\
  // The function should return an array of strings in sorted order.\n// You may assume\
  \ that all words will have the same length.\n// For example:\n// >>> list_sort([\"\
  aa\", \"a\", \"aaa\"]) \n// [\"aa\"]\n// >>> list_sort([\"ab\", \"a\", \"aaa\",\
  \ \"cd\"]) \n// [\"ab\", \"cd\"]\nfunction sorted_list_sum(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sorted_list_sum;\n  assert.deepEqual(candidate([\"aa\", \"a\", \"aaa\"]),[\"\
  aa\"]);\n  assert.deepEqual(candidate([\"school\", \"AI\", \"asdf\", \"b\"]),[\"\
  AI\", \"asdf\", \"school\"]);\n  assert.deepEqual(candidate([\"d\", \"b\", \"c\"\
  , \"a\"]),[]);\n  assert.deepEqual(candidate([\"d\", \"dcba\", \"abcd\", \"a\"]),[\"\
  abcd\", \"dcba\"]);\n  assert.deepEqual(candidate([\"AI\", \"ai\", \"au\"]),[\"\
  AI\", \"ai\", \"au\"]);\n  assert.deepEqual(candidate([\"a\", \"b\", \"b\", \"c\"\
  , \"c\", \"a\"]),[]);\n  assert.deepEqual(candidate([\"aaaa\", \"bbbb\", \"dd\"\
  , \"cc\"]),[\"cc\", \"dd\", \"aaaa\", \"bbbb\"]);\n}\n\ntest();"
completions: ["  var sorted = [];\n  var sum = 0;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i].length % 2 === 0){\n      sum += lst[i].length;\n     \
    \ sorted.push(lst[i]);\n    }\n  }\n  for(var i = 0; i < lst.length; i++){\n \
    \   if(lst[i].length % 2 !== 0){\n      sum -= lst[i].length;\n      sorted.push(lst[i]);\n\
    \    }\n  }\n  return sorted;\n}\n", "    var result = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i].length % 2 == 0){\n            result.push(lst[i]);\n\
    \        }\n    }\n    result.sort(function(a,b){\n        if(a.length == b.length){\n\
    \            return a < b ? -1 : 1;\n        }\n        return a.length < b.length\
    \ ? -1 : 1;\n    });\n    return result;\n}\n", "  var result = [];\n  var i =\
    \ 0;\n  var j = 0;\n  var sum = 0;\n  while(i < lst.length){\n    if(lst[i].length\
    \ % 2 === 0){\n      sum += lst[i].length;\n      result.push(lst[i]);\n     \
    \ i++;\n    }else{\n      j = i + 1;\n      while(j < lst.length && lst[j].length\
    \ % 2 === 1){\n        sum += lst[j].length;\n        result.push(lst[j]);\n \
    \       j++;\n      }\n      i = j;\n    }\n  }\n  return result.sort(function(a,\
    \ b){\n    return a.length - b.length;\n  });\n}\n", "  var sorted_lst = lst.sort(function(a,b){return\
    \ a.length-b.length});\n  var result = [];\n  for(var i=0; i<sorted_lst.length;\
    \ i++){\n    if(sorted_lst[i].length % 2 == 0){\n      result.push(sorted_lst[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  var result = [];\n  var sum = 0;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    sum += lst[i].length;\n    result.push(lst[i]);\n\
    \  }\n  result.sort(function(a, b){\n    return a.length - b.length;\n  });\n\
    \  return result;\n}\n", "    var result = [];\n    var len = lst.length;\n  \
    \  for(var i = 0; i < len; i++){\n        var sum = 0;\n        for(var j = 0;\
    \ j < lst[i].length; j++){\n            sum += lst[i][j];\n        }\n       \
    \ if(sum % 2 == 0){\n            result.push(lst[i]);\n        }\n    }\n    result.sort(function(a,\
    \ b){\n        if(a.length != b.length){\n            return a.length - b.length;\n\
    \        }\n        return a > b ? 1 : -1;\n    });\n    return result;\n}\n<|endoftext|><|javascript|>var\
    \ searchData=\n[\n  ['_5f_5finit',['__init',['../class_a_d_c___module.html#  \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                          ", "    var sorted = [];\n    var sum = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        sum += lst[i].length;\n        sorted.push(lst[i]);\n\
    \    }\n    sorted.sort(function(a, b){\n        return a.length - b.length;\n\
    \    });\n    return sorted;\n}\n", "    var sum = 0;\n    var result = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        sum += lst[i].length;\n   \
    \ }\n    for(var i = 0; i < lst.length; i++){\n        if(sum % 2 === 0){\n  \
    \          result.push(lst[i]);\n        }\n        else{\n            sum -=\
    \ lst[i].length;\n        }\n    }\n    return result.sort();\n}\n", "    var\
    \ result = [];\n    var len = lst.length;\n    for(var i = 0; i < len; i++){\n\
    \        var sum = 0;\n        for(var j = 0; j < lst[i].length; j++){\n     \
    \       sum += lst[i][j];\n        }\n        if(sum % 2 == 0){\n            result.push(lst[i]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        return a.length -\
    \ b.length;\n    });\n    return result;\n}\n", "    var result = [];\n    var\
    \ sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        sum += lst[i].length;\n\
    \        if(sum % 2 == 0){\n            result.push(lst[i]);\n        }\n    }\n\
    \    result.sort(function(a, b){\n        return b.length - a.length;\n    });\n\
    \    return result;\n}\n", "    var result = [];\n    var len = lst.length;\n\
    \    var i = 0;\n    var j = 0;\n    var sum = 0;\n    while(i < len){\n     \
    \   sum = 0;\n        while(j < len){\n            sum += lst[j].length;\n   \
    \         if(sum > lst[i].length){\n                break;\n            }\n  \
    \          j++;\n        }\n        result.push(lst[i]);\n        i++;\n    }\n\
    \    return result;\n}\n<|endoftext|><|javascript|>'use strict';\n\nvar _ = require('lodash');\n\
    var moment = require('moment');\nvar async = require('async');\n\nvar db = require('../../database');\n\
    var user = require('../../user');\nvar plugins = require('../../plugins');\nvar\
    \ utils = require('../../utils');\n\nmodule.exports = function (User) {\n\tUser.getSettings\
    \ = function (uid, callback) {\n\t\tif (!parseInt(uid, 10)) {\n\t\t\treturn callback(null,\
    \ {});\n\t\t}\n\t\tdb.getObject('user:' + uid + ':settings', function (err, settings)\
    \ {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!settings)\
    \ {\n\t\t\t\tsettings = {};\n\t\t\t}\n\n\t\t\tplugins.fireHook('filter:user.getSettings',\
    \ { uid: uid, settings: settings }, function (err, data) {\n\t\t\t\tif (err) {\n\
    \t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tdata.settings = _.extend({},\
    \ settings, data.settings);\n\t\t\t\tcallback(null, data.settings);\n\t\t\t});\n\
    \t\t});\n\t};\n\n\tUser.getSetting = function (uid, key, callback) {\n\t\tif (!parseInt(uid,\
    \ 10)) {\n\t\t\treturn callback(null, null);\n\t\t}\n\t\tdb.getObject('user:'\
    \ + uid + ':settings:' + key, function (err, setting) {\n\t\t\tif (err) {\n\t\t\
    \t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!setting) {\n\t\t\t\treturn callback(null,\
    \ null);\n\t\t\t}\n\n\t\t\tplugins.fireHook('filter:user.", "  var result = [];\n\
    \  var len = lst.length;\n  var i = 0;\n  var j = 0;\n  var sum = 0;\n  while(i\
    \ < len){\n    sum = 0;\n    while(j < len){\n      sum += lst[i].length;\n  \
    \    j++;\n    }\n    if(sum % 2 == 0){\n      result.push(lst[i]);\n      i++;\n\
    \    }\n    else{\n      j--;\n    }\n  }\n  return result;\n}\n", "  var arr\
    \ = lst.sort(function(a,b){return a.length - b.length});\n  var result = [];\n\
    \  for(var i = 0; i < arr.length; i++){\n    if(arr[i].length % 2 == 0){\n   \
    \   result.push(arr[i]);\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ [];\n  var len = lst.length;\n  for(var i=0; i<len; i++){\n    if(lst[i].length\
    \ % 2 == 1){\n      result.push(lst[i]);\n    }\n  }\n  result.sort(function(a,b){\n\
    \    if(a.length > b.length){\n      return -1;\n    }\n    else if(a.length <\
    \ b.length){\n      return 1;\n    }\n    else{\n      return a > b ? 1 : -1;\n\
    \    }\n  });\n  return result;\n}\n", "    var arr = [];\n    for(var i=0; i<lst.length;\
    \ i++){\n        if(lst[i].length % 2 == 0){\n            arr.push(lst[i]);\n\
    \        }\n    }\n    arr.sort(function(a,b){\n        if(a.length < b.length){\n\
    \            return -1;\n        }\n        else if(a.length > b.length){\n  \
    \          return 1;\n        }\n        else{\n            return a > b ? 1 :\
    \ -1;\n        }\n    });\n    return arr;\n}\n<|endoftext|><|javascript|>var\
    \ _ = require('lodash');\nvar path = require('path');\nvar fs = require('fs');\n\
    var glob = require('glob');\nvar webpack = require('webpack');\nvar config = require('./webpack.config.js');\n\
    \nvar webpackConfig = {\n  entry: {\n    app: [\n      'webpack-dev-server/client?http://localhost:8080',\n\
    \      'webpack/hot/only-dev-server',\n      './src/index'\n    ]\n  },\n  output:\
    \ {\n    path: path.join(__dirname, 'dist'),\n    filename: 'bundle.js'\n  },\n\
    \  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NoErrorsPlugin()\n\
    \  ],\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n       \
    \ loaders: ['react-hot', 'babel'],\n        include: path.join(__dirname, 'src')\n\
    \      },\n      {\n        test: /\\.css$/,\n        loaders: ['style', 'css']\n\
    \      },\n      {\n        test: /\\.less$/,\n        loaders: ['style', 'css',\
    \ 'less']\n      },\n      {\n        test: /\\.woff$/,\n        loader: 'url?limit=10000&mimetype=application/font-woff'\n\
    \      },\n      {\n        test: /\\.woff2$/,\n        loader: 'url?limit=10000&mimety",
  "  var result = [];\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i].length\
    \ % 2 === 0){\n      result.push(lst[i]);\n    }\n  }\n  result.sort(function(a,\
    \ b){\n    if(a.length > b.length){\n      return -1;\n    }\n    if(a.length\
    \ < b.length){\n      return 1;\n    }\n    return a > b ? 1 : -1;\n  });\n  return\
    \ result;\n}\n", "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i].length % 2 == 0){\n            result.push(lst[i]);\n     \
    \   }\n    }\n    result.sort(function(a, b){\n        if(a.length < b.length){\n\
    \            return -1;\n        }\n        if(a.length > b.length){\n       \
    \     return 1;\n        }\n        return a > b ? 1 : -1;\n    });\n    return\
    \ result;\n}\n<|endoftext|><|javascript|>/*\n * Copyright (c) 2015 by Rafael Angel\
    \ Aznar Aparici (rafaaznar at gmail dot com)\n *\n * sisane: The stunning micro-library\
    \ that helps you to develop easily\n *             AJAX web applications by using\
    \ Angular.js 1.x & sisane-server\n * sisane is distributed under the MIT License\
    \ (MIT)\n * Sources at https://github.com/rafaelaznar/\n *\n * Permission is hereby\
    \ granted, free of charge, to any person obtaining a copy\n * of this software\
    \ and associated documentation files (the \"Software\"), to deal\n * in the Software\
    \ without restriction, including without limitation the rights\n * to use, copy,\
    \ modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the\
    \ Software, and to permit persons to whom the Software is\n * furnished to do\
    \ so, subject to the following conditions:\n *\n * The above copyright notice\
    \ and this permission notice shall be included in\n * all copies or substantial\
    \ portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT\
    \ WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE\
    \ WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\
    \ IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\
    \ DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\
    \ ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\
    \ DEALINGS IN\n * THE SOFTWARE.\n *\n */\n", "  var sorted = [];\n  var i = 0;\n\
    \  var j = 0;\n  var sum = 0;\n  while(i < lst.length){\n    if(lst[i].length\
    \ % 2 == 0){\n      sum = sum + lst[i].length;\n      sorted.push(lst[i]);\n \
    \     i++;\n    } else {\n      j = i;\n      while(j < lst.length && lst[j].length\
    \ % 2 != 0){\n        j++;\n      }\n      if(j < lst.length){\n        sum =\
    \ sum + lst[j].length;\n        sorted.push(lst[j]);\n        i = j + 1;\n   \
    \   } else {\n        sorted.push(lst[i]);\n        i++;\n      }\n    }\n  }\n\
    \  return sorted;\n}\n", "    var result = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i].length % 2 === 0){\n            result.push(lst[i]);\n\
    \        }\n    }\n    result.sort(function(a, b){\n        if(a.length < b.length){\n\
    \            return 1;\n        }\n        if(a.length > b.length){\n        \
    \    return -1;\n        }\n        return 0;\n    });\n    return result;\n}\n",
  "    var sorted_lst = [];\n    var sum = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i].length % 2 == 0){\n            sum += lst[i].length;\n\
    \            sorted_lst.push(lst[i]);\n        }\n    }\n    for(var i = 0; i\
    \ < lst.length; i++){\n        if(lst[i].length % 2 != 0){\n            sum +=\
    \ lst[i].length;\n            sorted_lst.push(lst[i]);\n        }\n    }\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(lst[i].length % 2 == 0){\n\
    \            sum -= lst[i].length;\n            sorted_lst.push(lst[i]);\n   \
    \     }\n    }\n    return sorted_lst;\n}\n<|endoftext|><|javascript|>/*\n * Copyright\
    \ (c) 2015 by Rafael Angel Aznar Aparici (rafaaznar at gmail dot com)\n * \n *\
    \ openAUSIAS: The stunning micro-library that helps you to develop easily \n *\
    \ AJAX web applications by using Java and jQuery\n * openAUSIAS is distributed\
    \ under the MIT License (MIT)\n * Sources at https://github.com/rafaelaznar/openAUSIAS\n\
    \ * \n * Permission is hereby granted, free of charge, to any person obtaining\
    \ a copy\n * of this software and associated documentation files (the \"Software\"\
    ), to deal\n * in the Software without restriction, including without limitation\
    \ the rights\n * to use, copy, modify, merge, publish, distribute, sublicense,\
    \ and/or sell\n * copies of the Software, and to permit persons to whom the Software\
    \ is\n * furnished to do so, subject to the following conditions:\n * \n * The\
    \ above copyright notice and this permission notice shall be included in\n * all\
    \ copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED\
    \ \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT\
    \ NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR\
    \ PURPOSE AND"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

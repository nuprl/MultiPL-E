{
  "name": "HumanEval_99_closest_integer",
  "language": "js",
  "prompt": "//Create a function that takes a value (string) representing a number\n// and returns the closest integer to it. If the number is equidistant\n// from two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from zero means that if the given number is equidistant\n// from two integers, the one you should return is the one that is the\n// farthest from zero. For example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\") should return -15.\nfunction closest_integer(value){\n",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();",
  "completions": [
    "  var num = parseFloat(value);\n  var sign = (num > 0) - (num < 0);\n  var num_int = Math.round(num);\n  return sign * num_int;\n}\n",
    "    var num = parseInt(value);\n    if (isNaN(num)) {\n        return 0;\n    }\n    if (num === 0) {\n        return 0;\n    }\n    if (num % 1 === 0) {\n        return num;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    var diffs_num = [];\n    for (var i = 1; i <= diff; i++) {\n        diffs.push(diff - i);\n        diffs_num.push(i);\n    }\n    var diffs_num_sorted = diffs_num.sort(function(a, b) {\n        return a - b;\n    });\n    var diffs_sorted = diffs.sort(function(a, b) {\n        return a - b;\n    });\n    var diffs_num_index = diffs_num_sorted.indexOf(diffs_sorted[0]);\n    var diffs_num_index_sorted = diffs_num_sorted[diffs_num_index];\n    return diffs_num_index_sorted;\n}\n",
    "    var number = parseInt(value);\n    var result = number;\n    if(isNaN(number)){\n        return 0;\n    }\n    if(number < 0){\n        result = Math.ceil(number);\n    }else{\n        result = Math.floor(number);\n    }\n    return result;\n}\n",
    "    var num = parseFloat(value);\n    var int = Math.round(num);\n    if(num === int){\n        if(Math.abs(num) - Math.abs(int) > 0.5){\n            int += 1;\n        }\n    }\n    return int;\n}\n",
    "  var number = parseInt(value);\n  if(isNaN(number)){\n    return 0;\n  }\n  var diff = Math.abs(number);\n  var diffs = [];\n  var diffs_count = 0;\n  while(diff > 0){\n    diffs.push(diff);\n    diff = diff / 2;\n    diffs_count++;\n  }\n  var diffs_sorted = diffs.sort(function(a,b){return a-b});\n  var diffs_sorted_count = diffs_sorted.length;\n  var closest_diff = diffs_sorted[diffs_sorted_count - 1];\n  if(diffs_count % 2 === 0){\n    return number + closest_diff;\n  }\n  else{\n    return number - closest_diff;\n  }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    var diffs_num = [];\n    var diffs_num_abs = [];\n    var diffs_num_abs_num = [];\n    var diffs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs",
    "    var num = parseFloat(value);\n    var num_int = Math.round(num);\n    if(num_int == num){\n        return num_int;\n    }\n    else{\n        return num_int + (num - num_int) * 0.5;\n    }\n}\n",
    "  var number = parseFloat(value);\n  var floor = Math.floor(number);\n  var ceil = Math.ceil(number);\n  if (number === ceil && ceil - number < 0.5) {\n    return ceil;\n  } else if (number === floor && floor - number > 0.5) {\n    return floor;\n  } else {\n    return Math.round(number);\n  }\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num === num_int){\n    if(num > 0){\n      return Math.ceil(num);\n    } else {\n      return Math.floor(num);\n    }\n  } else {\n    return num_int;\n  }\n}\n",
    "    var num = parseFloat(value);\n    var num_int = Math.round(num);\n    if(num_int == num){\n        if(num > 0){\n            return Math.ceil(num);\n        } else {\n            return Math.floor(num);\n        }\n    } else {\n        return num_int;\n    }\n}\n",
    "    var number = parseFloat(value);\n    var sign = value[0] === '-' ? -1 : 1;\n    var result = Math.round(number);\n    if (result === number) {\n        return sign * result;\n    }\n    return sign * Math.ceil(number);\n}\n",
    "    var num = parseInt(value);\n    var num_int = Math.round(num);\n    if(num === num_int){\n        if(num_int > 0){\n            return num_int;\n        }else{\n            return num_int * -1;\n        }\n    }else{\n        return num_int;\n    }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var diffs = diff.toString().split(\".\");\n  var diff_int = diffs[0];\n  var diff_dec = diffs[1];\n  if(diff_dec.length > 0){\n    var diff_dec_int = parseInt(diff_dec.substring(0, diff_dec.length - 1));\n    var diff_dec_dec = parseFloat(diff_dec.substring(diff_dec.length - 1));\n    if(diff_dec_dec > 0.5){\n      return num + diff_dec_int;\n    }\n    else{\n      return num - diff_dec_int;\n    }\n  }\n  else{\n    return num;\n  }\n}\n",
    "  var number = parseFloat(value);\n  var sign = Math.sign(number);\n  number = Math.abs(number);\n  var result = Math.round(number);\n  if(result === number){\n    if(result === 0){\n      result = 0;\n    }else if(result === 1){\n      result = 1;\n    }else if(result === -1){\n      result = -1;\n    }else if(result === 2){\n      result = 2;\n    }else if(result === -2){\n      result = -2;\n    }else if(result === 3){\n      result = 3;\n    }else if(result === -3){\n      result = -3;\n    }else if(result === 4){\n      result = 4;\n    }else if(result === -4){\n      result = -4;\n    }else if(result === 5){\n      result = 5;\n    }else if(result === -5){\n      result = -5;\n    }else if(result === 6){\n      result = 6;\n    }else if(result === -6){\n      result = -6;\n    }else if(result === 7){\n      result = 7;\n    }else if(result === -7){\n      result = -7;\n    }else if(result === 8){\n      result = 8;\n    }else if(result === -8){\n      result = -8;\n    }else if(result === 9){\n      result = 9;\n    }else if(result === -9){\n      result = -9;\n    }else if(result === 10){\n      result = 10;\n    }else if(result === -10){\n      result = -10;\n    }else if(result === 11){\n      result = 11;\n    }else if(result === -11){\n      result = -11;\n    }else if(result === 12){\n      result = 12;\n    }else if(result === -12){\n      result = -12;\n    }else if(result === 13){\n      result = 13;\n    }else if(result === -13){\n      result = -13;\n    }else if(result",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "  var num = parseFloat(value);\n  var int = Math.round(num);\n  if(num === int){\n    if(Math.abs(num) - Math.abs(int) === 0.5){\n      return int + 1;\n    }\n    return int;\n  }\n  return num;\n}\n",
    "  var number = parseInt(value);\n  var difference = Math.abs(number - value);\n  if(difference < 0.5){\n    return number;\n  }\n  else if(difference > 0.5){\n    return number + 1;\n  }\n  else{\n    return number - 1;\n  }\n}\n",
    "  var number = parseInt(value);\n  var result = number;\n  if (isNaN(number)){\n    return 0;\n  }\n  if (number < 0){\n    result = Math.ceil(number);\n  } else {\n    result = Math.floor(number);\n  }\n  return result;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  if(diff === 0){\n    return num;\n  }\n  if(diff < 0.5){\n    return num;\n  }\n  if(diff > 0.5){\n    return num + 1;\n  }\n}\n",
    "    var number = parseInt(value);\n    if(isNaN(number)){\n        return 0;\n    }\n    var sign = number < 0 ? -1 : 1;\n    number = Math.abs(number);\n    var result = Math.round(number);\n    if(result === number){\n        return sign * result;\n    }\n    var diff = Math.abs(number - result);\n    if(diff === 0){\n        return sign * result;\n    }\n    return sign * Math.round(number / diff) * diff;\n}\n",
    "  var num = parseFloat(value);\n  var sign = value[0] === '-' ? -1 : 1;\n  var num_int = Math.round(num);\n  if(num_int === num){\n    return sign * num_int;\n  }\n  var diff = Math.abs(num_int - num);\n  var diff_int = Math.round(diff);\n  if(diff_int === diff){\n    return sign * diff_int;\n  }\n  return sign * Math.round(num);\n}\n",
    "  var num = parseFloat(value);\n  var sign = value[0] === '-' ? -1 : 1;\n  var result = Math.round(num);\n  if (result === num) {\n    if (num === 0) {\n      return 0;\n    }\n    return result * sign;\n  }\n  return result * sign;\n}\n",
    "    var number = parseFloat(value);\n    var num = Math.round(number);\n    if(number === num){\n        if(number > 0){\n            return Math.ceil(number);\n        }\n        else{\n            return Math.floor(number);\n        }\n    }\n    else{\n        return num;\n    }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num);\n  var diffs = [];\n  var diffs_num = [];\n  var diffs_num_str = [];\n  var diffs_num_str_num = [];\n  var diffs_num_str_num_num = [];\n  var diffs_num_str_num_num_num = [];\n  var diffs_num_str_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num_num_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num = [];\n  var diffs_num_str_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num_num",
    "  var number = parseInt(value);\n  var difference = Math.abs(number - value);\n  if(difference === 0){\n    return number;\n  }\n  else if(difference > 0){\n    return number + 1;\n  }\n  else{\n    return number - 1;\n  }\n}\n",
    "    var number = parseInt(value);\n    if(isNaN(number)){\n        return 0;\n    }\n    var diff = Math.abs(number);\n    var diffs = [];\n    for(var i = 1; i <= diff; i++){\n        diffs.push(diff - i);\n        diffs.push(diff + i);\n    }\n    var min = diffs[0];\n    for(var i = 1; i < diffs.length; i++){\n        if(diffs[i] < min){\n            min = diffs[i];\n        }\n    }\n    if(min === diff){\n        return number;\n    }\n    return number - min;\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    if(num > 0){\n      return Math.ceil(num);\n    }else{\n      return Math.floor(num);\n    }\n  }else{\n    return num_int;\n  }\n}\n",
    "  var num = Number(value);\n  var floor = Math.floor(num);\n  var ceil = Math.ceil(num);\n  if(num === floor){\n    return ceil;\n  }\n  else if(num === ceil){\n    return floor;\n  }\n  else{\n    return Math.round(num);\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  var diffs = [];\n  for(var i = 0; i < 10; i++){\n    diffs[i] = Math.abs(num - i);\n  }\n  for(var i = 0; i < 10; i++){\n    for(var j = 0; j < 10; j++){\n      if(diffs[i] < diff && diffs[i] < diffs[j]){\n        diff = diffs[i];\n        closest = i;\n      }\n    }\n  }\n  return closest;\n}\n",
    "    var num = parseInt(value);\n    var num_str = value.toString();\n    var num_str_len = num_str.length;\n    var num_str_arr = num_str.split(\".\");\n    var num_str_arr_len = num_str_arr.length;\n    var num_str_arr_len_2 = num_str_arr_len - 1;\n    var num_str_arr_len_3 = num_str_arr_len - 2;\n    var num_str_arr_len_4 = num_str_arr_len - 3;\n    var num_str_arr_len_5 = num_str_arr_len - 4;\n    var num_str_arr_len_6 = num_str_arr_len - 5;\n    var num_str_arr_len_7 = num_str_arr_len - 6;\n    var num_str_arr_len_8 = num_str_arr_len - 7;\n    var num_str_arr_len_9 = num_str_arr_len - 8;\n    var num_str_arr_len_10 = num_str_arr_len - 9;\n    var num_str_arr_len_11 = num_str_arr_len - 10;\n    var num_str_arr_len_12 = num_str_arr_len - 11;\n    var num_str_arr_len_13 = num_str_arr_len - 12;\n    var num_str_arr_len_14 = num_str_arr_len - 13;\n    var num_str_arr_len_15 = num_str_arr_len - 14;\n    var num_str_arr_len_16 = num_str_arr_len - 15;\n    var num_str_arr_len_17 = num_str_arr_len - 16;\n    var num_str_arr_len_18 = num_str_arr_len - 17;\n    var num_str_arr_len_19 = num_str_arr_len - 18;\n    var num_str_arr_len_20 = num_str_arr_len - 19;\n    var",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int === num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return 0;\n  }\n  var diff = Math.abs(num);\n  var diffs = [];\n  var diffs_num = [];\n  for(var i = 1; i <= diff; i++){\n    diffs.push(num + i);\n    diffs_num.push(num + i);\n    diffs_num.push(num - i);\n  }\n  var diffs_num_sorted = diffs_num.sort(function(a,b){return a-b});\n  var diffs_sorted = diffs.sort(function(a,b){return a-b});\n  var diffs_num_index = diffs_num_sorted.indexOf(diff);\n  var diffs_sorted_index = diffs_sorted.indexOf(diff);\n  if(diffs_num_index == diffs_sorted_index){\n    return diffs_num_sorted[diffs_num_index];\n  }\n  else{\n    return diffs_sorted[diffs_sorted_index];\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "  var number = parseFloat(value);\n  var int_number = Math.round(number);\n  if(number === int_number){\n    if(number > 0){\n      return Math.ceil(number);\n    }\n    else{\n      return Math.floor(number);\n    }\n  }\n  else{\n    return int_number;\n  }\n}\n",
    "  var number = parseFloat(value);\n  var result = Math.round(number);\n  if(result === number){\n    if(number > 0){\n      result = result + 1;\n    } else {\n      result = result - 1;\n    }\n  }\n  return result;\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    return Math.round(num);\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    var diff = Math.abs(num - value);\n    var closest = num;\n    if(diff < 0.5){\n        closest = num - 1;\n    }\n    else if(diff > 0.5){\n        closest = num + 1;\n    }\n    return closest;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num);\n  var diffs = [];\n  var diffs_num = [];\n  var diffs_num_abs = [];\n  var diffs_num_abs_num = [];\n  var diffs_num_abs_num_abs = [];\n  var diffs_num_abs_num_abs_num = [];\n  var diffs_num_abs_num_abs_num_abs = [];\n  var diffs_num_abs_num_abs_num_abs_num = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n  var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  if(diff < 0.5){\n    return num;\n  }\n  else if(diff > 0.5){\n    return num + 1;\n  }\n  else{\n    return num - 1;\n  }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    if(num === 0){\n        return 0;\n    }\n    if(num > 0){\n        return Math.ceil(num);\n    }\n    return Math.floor(num);\n}\n",
    "    var number = parseFloat(value);\n    var closest = Math.round(number);\n    if(Math.abs(number - closest) < 0.5){\n        return closest;\n    }\n    else{\n        return closest + (number > closest ? 1 : -1);\n    }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    for(var i=1; i<=diff; i++){\n        diffs.push(diff - i);\n        diffs.push(diff + i);\n    }\n    var closest = diffs[0];\n    for(var i=1; i<diffs.length; i++){\n        if(diffs[i] < closest){\n            closest = diffs[i];\n        }\n    }\n    return closest;\n}\n",
    "    var number = parseFloat(value);\n    var sign = Math.sign(number);\n    number = Math.abs(number);\n    var result = Math.round(number);\n    return sign * result;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var diffs = diff.toString().split(\".\");\n  var diff_int = diffs[0];\n  var diff_dec = diffs[1];\n  if(diff_dec.length > 1){\n    return num;\n  }\n  if(diff_int.length > 1){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){\n    return num;\n  }\n  if(diff_int.length === 1){\n    return num;\n  }\n  if(diff_int.length === 0){",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    if(num > 0){\n      return Math.ceil(num);\n    } else {\n      return Math.floor(num);\n    }\n  } else {\n    return num_int;\n  }\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "  var num = parseFloat(value);\n  var int = Math.round(num);\n  if(num - int === 0){\n    return int;\n  }\n  else if(num - int > 0){\n    return int + 1;\n  }\n  else{\n    return int - 1;\n  }\n}\n",
    "  var num = parseInt(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "  var number = parseInt(value);\n  var number_string = value + \"\";\n  var decimal_places = value.indexOf(\".\");\n  var decimal_places_string = value.substr(decimal_places, value.length);\n  var decimal_places_int = parseInt(decimal_places_string);\n  var decimal_places_float = parseFloat(decimal_places_string);\n  var decimal_places_float_int = parseInt(decimal_places_float);\n  var decimal_places_float_float = parseFloat(decimal_places_float);\n  var decimal_places_float_float_int = parseInt(decimal_places_float_float);\n  var decimal_places_float_float_float = parseFloat(decimal_places_float_float);\n  var decimal_places_float_float_float_int = parseInt(decimal_places_float_float_float);\n  var decimal_places_float_float_float_float = parseFloat(decimal_places_float_float_float);\n  var decimal_places_float_float_float_float_int = parseInt(decimal_places_float_float_float_float);\n  var decimal_places_float_float_float_float_float = parseFloat(decimal_places_float_float_float_float);\n  var decimal_places_float_float_float_float_float_int = parseInt(decimal_places_float_float_float_float_float);\n  var decimal_places_float_float_float_float_float_float = parseFloat(decimal_places_float_float_float_float_float);\n  var decimal_places_float_float_float_float_float_float_int = parseInt(decimal_places_float_float_float_float_float_float);\n  var decimal_places_float_float_float_float_float_float_float = parseFloat(decimal_places_float_float_float_float_float_float);\n  var decimal_places_float_float_float_float_float_float_float_int = parseInt(decimal_places_float_float_float_float_float_float_float);",
    "  var int = parseInt(value);\n  if(isNaN(int)){\n    return value;\n  }\n  var diff = Math.abs(int - value);\n  if(diff < 0.5){\n    return int;\n  }\n  return int + (diff > 1.5 ? 1 : -1);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  if(diff < 0.5){\n    return num;\n  }\n  return num + (diff > 1 ? 1 : -1);\n}\n",
    "  var number = parseInt(value);\n  var result = number;\n  if(isNaN(number)){\n    return value;\n  }\n  if(number < 0){\n    result = Math.ceil(number);\n  }else{\n    result = Math.floor(number);\n  }\n  return result;\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  if(diff < 0.5){\n    return num;\n  }\n  if(diff > 1.5){\n    return num;\n  }\n  return num + 1;\n}\n",
    "  var number = parseFloat(value);\n  var closest = Math.round(number);\n  if(number === closest){\n    if(number > 0){\n      closest = closest + 1;\n    } else {\n      closest = closest - 1;\n    }\n  }\n  return closest;\n}\n",
    "  var number = parseFloat(value);\n  var sign = Math.sign(number);\n  number = Math.abs(number);\n  var result = Math.round(number);\n  if (result === number) {\n    if (result === 0) {\n      result = 0;\n    } else if (result === 1) {\n      result = 1;\n    } else if (result === -1) {\n      result = -1;\n    } else if (result === -0) {\n      result = -0;\n    } else if (result === 2) {\n      result = 2;\n    } else if (result === -2) {\n      result = -2;\n    } else if (result === 3) {\n      result = 3;\n    } else if (result === -3) {\n      result = -3;\n    } else if (result === 4) {\n      result = 4;\n    } else if (result === -4) {\n      result = -4;\n    } else if (result === 5) {\n      result = 5;\n    } else if (result === -5) {\n      result = -5;\n    } else if (result === 6) {\n      result = 6;\n    } else if (result === -6) {\n      result = -6;\n    } else if (result === 7) {\n      result = 7;\n    } else if (result === -7) {\n      result = -7;\n    } else if (result === 8) {\n      result = 8;\n    } else if (result === -8) {\n      result = -8;\n    } else if (result === 9) {\n      result = 9;\n    } else if (result === -9) {\n      result = -9;\n    } else if (result === 10) {\n      result = 10;\n    } else if (result === -10) {\n      result = -10;\n    } else if (result === 11) {\n      result = 11;\n    } else if (result === -11) {\n      result = -11;\n    } else if (result === 12) {\n      result = 12;\n    } else if (result === -12) {\n      result",
    "    var number = parseFloat(value);\n    var sign = value[0] === '-' ? -1 : 1;\n    var result = Math.round(number);\n    return sign * result;\n}\n",
    "    var number = parseFloat(value);\n    var sign = value[0] === '-' ? -1 : 1;\n    var result = Math.round(number);\n    if (result === number) {\n        if (result === 0) {\n            result = sign;\n        } else if (result === -0) {\n            result = -sign;\n        }\n    }\n    return result;\n}\n",
    "    var number = parseFloat(value);\n    var rounded = Math.round(number);\n    if (number === rounded) {\n        if (number > 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    } else {\n        return rounded;\n    }\n}\n",
    "  var num = parseInt(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var diffs = [];\n  var diffs_num = [];\n  var diffs_num_str = [];\n  var diffs_num_str_str = [];\n  var diffs_num_str_str_str = [];\n  var diffs_num_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str = [];\n  var diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str",
    "    var number = parseFloat(value);\n    var rounded = Math.round(number);\n    if (number === rounded) {\n        if (number > 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    } else {\n        return rounded;\n    }\n}\n",
    "    var number = parseInt(value);\n    var difference = Math.abs(number - value);\n    if(difference === 0){\n        return number;\n    }\n    else if(difference > 0){\n        return number + 1;\n    }\n    else{\n        return number - 1;\n    }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    if(num === 0){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    for(var i = 1; i < diff; i++){\n        diffs.push(diff - i);\n        diffs.push(diff + i);\n    }\n    var min = diffs[0];\n    var minIndex = 0;\n    for(var i = 1; i < diffs.length; i++){\n        if(diffs[i] < min){\n            min = diffs[i];\n            minIndex = i;\n        }\n    }\n    if(minIndex === 0){\n        return Math.ceil(num);\n    }\n    else{\n        return Math.floor(num);\n    }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    return num;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  if(diff < 0.5){\n    closest = Math.ceil(num);\n  }else{\n    closest = Math.floor(num);\n  }\n  return closest;\n}\n",
    "  var num = parseFloat(value);\n  var sign = Math.sign(num);\n  var num_int = Math.floor(num);\n  var num_dec = num - num_int;\n  var num_dec_int = Math.floor(num_dec);\n  var num_dec_dec = num_dec - num_dec_int;\n  if(num_dec_dec === 0){\n    return num_int;\n  }\n  else if(num_dec_dec < 0){\n    return num_int + 1;\n  }\n  else{\n    return num_int - 1;\n  }\n}\n",
    "    var number = parseFloat(value);\n    var int_number = Math.round(number);\n    if (number === int_number) {\n        return int_number;\n    } else {\n        return Math.abs(int_number - number) > Math.abs(int_number + 1 - number) ? int_number - 1 : int_number + 1;\n    }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    var diff = Math.abs(num - value);\n    if(diff < 0.5){\n        return num;\n    }\n    return num > 0 ? Math.ceil(num) : Math.floor(num);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  if(diff < 0.5){\n    closest = Math.floor(num);\n  }else if(diff > 0.5){\n    closest = Math.ceil(num);\n  }\n  return closest;\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    for(var i = 1; i <= diff; i++){\n        diffs.push(diff - i);\n        diffs.push(diff + i);\n    }\n    var min = diffs[0];\n    var minIndex = 0;\n    for(var i = 1; i < diffs.length; i++){\n        if(diffs[i] < min){\n            min = diffs[i];\n            minIndex = i;\n        }\n    }\n    if(minIndex === 0){\n        return Math.round(num);\n    }\n    else{\n        return Math.round(num) + minIndex;\n    }\n}\n",
    "  var number = parseFloat(value);\n  var sign = value[0] === '-' ? -1 : 1;\n  var result = Math.round(number);\n  if(result === number){\n    if(result === 0){\n      result = sign;\n    }else if(result === 1){\n      result = sign * 2;\n    }else if(result === -1){\n      result = sign * -2;\n    }\n  }\n  return result;\n}\n",
    "  var num = parseInt(value);\n  var diff = Math.abs(num - value);\n  if(diff === 0){\n    return num;\n  }\n  else if(diff > 0.5){\n    return num + 1;\n  }\n  else{\n    return num - 1;\n  }\n}\n",
    "    var number = parseFloat(value);\n    var rounded = Math.round(number);\n    if (number === rounded) {\n        if (number > 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    } else {\n        return rounded;\n    }\n}\n",
    "    var num = parseFloat(value);\n    var num_int = Math.round(num);\n    if (num === num_int) {\n        return num_int;\n    } else {\n        return num_int + (num - num_int) * 0.5;\n    }\n}\n",
    "    var number = parseFloat(value);\n    var closest = Math.round(number);\n    if (number === closest) {\n        if (Math.abs(number) === Math.abs(closest)) {\n            if (number > 0) {\n                closest = closest + 1;\n            } else {\n                closest = closest - 1;\n            }\n        }\n    }\n    return closest;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num);\n  var diffs = [];\n  for(var i=1; i<=diff; i++){\n    diffs.push(diff - i);\n    diffs.push(diff + i);\n  }\n  var min = diffs[0];\n  for(var i=1; i<diffs.length; i++){\n    if(diffs[i] < min){\n      min = diffs[i];\n    }\n  }\n  if(min === diff){\n    return num;\n  }\n  return num - min;\n}\n",
    "  var int = parseInt(value);\n  if(isNaN(int)){\n    return value;\n  }\n  var diff = Math.abs(int - value);\n  if(diff === 0){\n    return int;\n  }\n  if(diff < 0.5){\n    return int + 1;\n  }\n  return int - 1;\n}\n",
    "  var number = parseInt(value);\n  var diff = Math.abs(number - value);\n  if(diff < 0.5){\n    return number;\n  }\n  else if(diff > 0.5){\n    return number + 1;\n  }\n  else{\n    return number - 1;\n  }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    return Math.round(num);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "    var num = parseInt(value);\n    var diff = Math.abs(num - value);\n    if(diff < 0.5){\n        return num;\n    }\n    else if(diff < 1.5){\n        return num + 1;\n    }\n    else if(diff < 2.5){\n        return num - 1;\n    }\n    else{\n        return num;\n    }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "  var num = parseInt(value);\n  var num_str = value.toString();\n  var num_str_len = num_str.length;\n  var num_str_digits = num_str.match(/\\d/g);\n  var num_str_digits_len = num_str_digits.length;\n  var num_str_digits_last = num_str_digits[num_str_digits_len - 1];\n  var num_str_digits_last_len = num_str_digits_last.length;\n  var num_str_digits_last_last = num_str_digits_last[num_str_digits_last_len - 1];\n  var num_str_digits_last_last_len = num_str_digits_last_last.length;\n  var num_str_digits_last_last_last = num_str_digits_last_last[num_str_digits_last_last_len - 1];\n  var num_str_digits_last_last_last_len = num_str_digits_last_last_last.length;\n  var num_str_digits_last_last_last_last = num_str_digits_last_last_last[num_str_digits_last_last_last_len - 1];\n  var num_str_digits_last_last_last_last_len = num_str_digits_last_last_last_last.length;\n  var num_str_digits_last_last_last_last_last = num_str_digits_last_last_last_last[num_str_digits_last_last_last_last_len - 1];\n  var num_str_digits_last_last_last_last_last_len = num_str_digits_last_last_last_last_last.length;\n  var num_str_digits_last_last_last_last_last_last = num_str_digits_last_last_last_last_last[num_str_digits_last_last_last_last_last_len -",
    "    var num = parseFloat(value);\n    var num_int = Math.round(num);\n    if(num_int == num){\n        return num_int;\n    }\n    else{\n        return num_int + (num - num_int) * 0.5;\n    }\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num === num_int){\n    if(num > 0){\n      return num_int + 1;\n    }\n    else{\n      return num_int - 1;\n    }\n  }\n  else{\n    return num_int;\n  }\n}\n",
    "  var num = parseFloat(value);\n  var int = Math.round(num);\n  if(num - int === 0){\n    return int;\n  }\n  else if(num - int > 0){\n    return int + 1;\n  }\n  else{\n    return int - 1;\n  }\n}\n",
    "    var number = parseFloat(value);\n    var rounded_number = Math.round(number);\n    if (number === rounded_number) {\n        if (number > 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    } else {\n        return rounded_number;\n    }\n}\n",
    "    var number = parseFloat(value);\n    var number_int = Math.round(number);\n    if (number === number_int) {\n        return number_int;\n    } else {\n        return number_int + (number - number_int > 0 ? 1 : -1);\n    }\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "    var number = parseFloat(value);\n    var int = Math.round(number);\n    if(number === int){\n        if(number > 0){\n            return int + 1;\n        }\n        else{\n            return int - 1;\n        }\n    }\n    else{\n        return int;\n    }\n}\n",
    "    var num = parseInt(value);\n    var num_int = Math.round(num);\n    if(num === num_int) {\n        if(num > 0) {\n            return num_int + 1;\n        } else {\n            return num_int - 1;\n        }\n    } else {\n        return num_int;\n    }\n}\n",
    "  var num = parseInt(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num);\n  var closest = num;\n  if(diff > 1){\n    var diff2 = diff/2;\n    closest = num - diff2;\n    if(Math.abs(closest) < diff2){\n      closest = num + diff2;\n    }\n  }\n  return closest;\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    return Math.round(num);\n}\n",
    "    var number = parseFloat(value);\n    var result = Math.round(number);\n    if (result == number) {\n        if (number < 0) {\n            result = Math.ceil(number);\n        } else {\n            result = Math.floor(number);\n        }\n    }\n    return result;\n}\n",
    "  var number = parseInt(value);\n  if(isNaN(number)){\n    return 0;\n  }\n  var diff = Math.abs(number);\n  var closest = number;\n  if(diff > 0.5){\n    closest = number + 1;\n  }\n  else if(diff < 0.5){\n    closest = number - 1;\n  }\n  return closest;\n}\n",
    "  var num = parseInt(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  if(diff < 0.5){\n    closest = num + 1;\n  }else if(diff > 0.5){\n    closest = num - 1;\n  }\n  return closest;\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "  var num = parseInt(value);\n  var num_int = Math.round(num);\n  if(num_int === num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "  var number = parseInt(value);\n  if(isNaN(number)){\n    return value;\n  }\n  return Math.round(number);\n}\n",
    "    var number = parseFloat(value);\n    var closest = Math.round(number);\n    if(number === closest){\n        if(Math.abs(number) - Math.abs(closest) === 0){\n            closest = closest * 2;\n        }\n    }\n    return closest;\n}\n",
    "  var number = parseFloat(value);\n  var sign = value[0] === '-' ? -1 : 1;\n  var result = Math.round(number);\n  if (result === number) {\n    return sign * result;\n  }\n  return sign * Math.ceil(number);\n}\n",
    "  var number = parseFloat(value);\n  var closest = Math.round(number);\n  if(Math.abs(number - closest) === 0.5){\n    closest = closest + (number > closest ? 1 : -1);\n  }\n  return closest;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return 0;\n  }\n  if(num === 0){\n    return 0;\n  }\n  if(num < 0){\n    return Math.ceil(num);\n  }\n  return Math.floor(num);\n}\n",
    "  var num = parseFloat(value);\n  var int = Math.round(num);\n  if(num === int){\n    if(Math.abs(num) - Math.abs(int) === 0){\n      return int;\n    }else{\n      return int + 1;\n    }\n  }else{\n    return int;\n  }\n}\n",
    "  var number = parseFloat(value);\n  var int = Math.round(number);\n  if (number === int) {\n    if (Math.abs(number) === Math.abs(int)) {\n      return int;\n    } else {\n      return number > 0 ? Math.ceil(number) : Math.floor(number);\n    }\n  } else {\n    return int;\n  }\n}\n",
    "  var num = parseFloat(value);\n  var sign = Math.sign(num);\n  var num_int = Math.floor(Math.abs(num));\n  var num_dec = Math.abs(num) - num_int;\n  var num_dec_int = Math.floor(num_dec);\n  var num_dec_dec = num_dec - num_dec_int;\n  if (num_dec_dec > 0.5) {\n    num_dec_dec = 1;\n  } else {\n    num_dec_dec = 0;\n  }\n  return sign * (num_int + num_dec_int + num_dec_dec);\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    if(num === 0){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    for(var i = 1; i <= diff; i++){\n        diffs.push(diff - i);\n        diffs.push(diff + i);\n    }\n    var closest = diffs[0];\n    for(var i = 1; i < diffs.length; i++){\n        if(Math.abs(diffs[i]) < Math.abs(closest)){\n            closest = diffs[i];\n        }\n    }\n    return closest;\n}\n",
    "    var number = parseInt(value);\n    if(isNaN(number)){\n        return value;\n    }\n    if(number === 0){\n        return 0;\n    }\n    var diff = Math.abs(number);\n    var closest = Math.round(number);\n    if(diff === closest){\n        if(number > 0){\n            closest = closest + 1;\n        }else{\n            closest = closest - 1;\n        }\n    }\n    return closest;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return 0;\n  }\n  var diff = Math.abs(num - value);\n  if(diff < 0.5){\n    return num;\n  }\n  if(diff < 1.5){\n    return num + 1;\n  }\n  return num - 1;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return num;\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    var num_int = Math.round(num);\n    if(num === num_int){\n        if(num_int === 0){\n            return 1;\n        }else if(num_int === -1){\n            return -1;\n        }\n    }\n    return num_int;\n}\n",
    "    var number = parseInt(value);\n    if(isNaN(number)){\n        return value;\n    }\n    var diff = Math.abs(number);\n    var diffs = [];\n    var diffs_string = [];\n    var diffs_string_length = 0;\n    var diffs_string_max_length = 0;\n    var diffs_string_max_value = 0;\n    var diffs_string_min_value = 0;\n    var diffs_string_min_length = 0;\n    var diffs_string_min_length_value = 0;\n    var diffs_string_min_value = 0;\n    var diffs_string_max_value = 0;\n    var diffs_string_max_length_value = 0;\n    var diffs_string_min_length_value = 0;\n    var diffs_string_min_value_value = 0;\n    var diffs_string_max_value_value = 0;\n    var diffs_string_max_length_value_value = 0;\n    var diffs_string_min_length_value_value = 0;\n    var diffs_string_min_value_value = 0;\n    var diffs_string_max_value_value = 0;\n    var diffs_string_max_length_value_value = 0;\n    var diffs_string_min_length_value_value = 0;\n    var diffs_string_min_value_value_value = 0;\n    var diffs_string_max_value_value_value = 0;\n    var diffs_string_max_length_value_value_value = 0;\n    var diffs_string_min_length_value_value_value = 0;\n    var diffs_string_min_value_value_value = 0;\n    var diffs_string_max_value_value_value = 0;\n    var diffs_string_max_length_value_value_value = 0;\n    var diffs_string_min_length_value_value_value = 0;\n    var diffs_string_min_value_value_value_value = 0;\n    var diffs",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    var diff = Math.abs(num - value);\n    if(diff < 0.5){\n        return num;\n    }\n    if(diff > 0.5){\n        return num + 1;\n    }\n    return num - 1;\n}\n",
    "    var number = parseFloat(value);\n    var int = Math.round(number);\n    if (number === int) {\n        if (Math.abs(number) === Math.abs(int)) {\n            return int;\n        } else {\n            return number > 0 ? Math.ceil(number) : Math.floor(number);\n        }\n    } else {\n        return int;\n    }\n}\n",
    "    var number = parseFloat(value);\n    var sign = value[0] === '-' ? -1 : 1;\n    var result = Math.round(number);\n    return sign * result;\n}\n",
    "    var num = parseInt(value);\n    var num_str = value + \"\";\n    var num_str_len = num_str.length;\n    var num_str_arr = num_str.split(\"\");\n    var num_str_arr_len = num_str_arr.length;\n    var num_str_arr_arr = num_str_arr.slice(0, num_str_arr_len - 1);\n    var num_str_arr_arr_len = num_str_arr_arr.length;\n    var num_str_arr_arr_arr = num_str_arr_arr.slice(0, num_str_arr_arr_len - 1);\n    var num_str_arr_arr_arr_len = num_str_arr_arr_arr.length;\n    var num_str_arr_arr_arr_arr = num_str_arr_arr_arr.slice(0, num_str_arr_arr_arr_len - 1);\n    var num_str_arr_arr_arr_arr_len = num_str_arr_arr_arr_arr.length;\n    var num_str_arr_arr_arr_arr_arr = num_str_arr_arr_arr_arr_arr.slice(0, num_str_arr_arr_arr_arr_len - 1);\n    var num_str_arr_arr_arr_arr_arr_len = num_str_arr_arr_arr_arr_arr.length;\n    var num_str_arr_arr_arr_arr_arr_arr = num_str_arr_arr_arr_arr_arr_arr.slice(0, num_str_arr_arr_arr_arr_arr_len - 1);\n    var num_str_arr_arr_arr_arr_arr_arr_len = num_str_arr_arr_arr_arr_arr_arr_arr.length;\n    var num_str_arr_arr_arr_arr_arr_arr_arr = num_str_arr_arr_arr_arr_arr_arr_arr.slice(0, num_str_arr_arr_arr_arr_arr_arr_len - 1);\n    var",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "  var number = parseFloat(value);\n  var sign = (number > 0) - (number < 0);\n  number = Math.abs(number);\n  var result = Math.round(number);\n  return sign * result;\n}\n",
    "  var num = parseInt(value);\n  var sign = value[0] === '-' ? -1 : 1;\n  return sign * Math.round(num);\n}\n",
    "    var number = parseFloat(value);\n    var sign = Math.sign(number);\n    var rounded = Math.round(number);\n    if (rounded === number) {\n        return sign * rounded;\n    } else {\n        return sign * Math.ceil(number);\n    }\n}\n",
    "  var num = parseFloat(value);\n  var sign = Math.sign(num);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return sign * num_int;\n  }\n  else{\n    return sign * Math.ceil(num);\n  }\n}\n",
    "  var num = parseInt(value);\n  var num_str = value + \"\";\n  var num_str_len = num_str.length;\n  var num_str_arr = num_str.split(\".\");\n  var num_str_arr_len = num_str_arr.length;\n  var num_str_arr_arr = num_str_arr.slice(0, num_str_arr_len - 1);\n  var num_str_arr_arr_len = num_str_arr_arr.length;\n  var num_str_arr_arr_arr = num_str_arr_arr.slice(0, num_str_arr_arr_len - 1);\n  var num_str_arr_arr_arr_len = num_str_arr_arr_arr.length;\n  var num_str_arr_arr_arr_arr = num_str_arr_arr_arr.slice(0, num_str_arr_arr_arr_len - 1);\n  var num_str_arr_arr_arr_arr_len = num_str_arr_arr_arr_arr.length;\n  var num_str_arr_arr_arr_arr_arr = num_str_arr_arr_arr_arr.slice(0, num_str_arr_arr_arr_arr_len - 1);\n  var num_str_arr_arr_arr_arr_arr_len = num_str_arr_arr_arr_arr_arr.length;\n  var num_str_arr_arr_arr_arr_arr_arr = num_str_arr_arr_arr_arr_arr.slice(0, num_str_arr_arr_arr_arr_arr_len - 1);\n  var num_str_arr_arr_arr_arr_arr_arr_len = num_str_arr_arr_arr_arr_arr_arr.length;\n  var num_str_arr_arr_arr_arr_arr_arr_arr = num_str_arr_arr_arr_arr_arr_arr.slice(0, num_str_arr_arr_arr_arr_arr_arr_len - 1);\n  var num_str_arr_arr",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    var diffs_num = [];\n    for(var i=1; i<=diff; i++){\n        diffs.push(num+i);\n        diffs_num.push(num+i);\n        diffs_num.push(num-i);\n    }\n    var diffs_num_sorted = diffs_num.sort(function(a,b){return a-b});\n    var diffs_sorted = diffs.sort(function(a,b){return a-b});\n    var diffs_sorted_num = diffs_sorted.map(function(a){return parseInt(a)});\n    var diffs_sorted_num_sorted = diffs_sorted_num.sort(function(a,b){return a-b});\n    var diffs_sorted_num_sorted_index = diffs_sorted_num_sorted.indexOf(diffs_num_sorted[0]);\n    var diffs_sorted_num_sorted_index_2 = diffs_sorted_num_sorted.indexOf(diffs_num_sorted[1]);\n    if(diffs_sorted_num_sorted_index == diffs_sorted_num_sorted_index_2){\n        return diffs_sorted_num_sorted[diffs_sorted_num_sorted_index];\n    }\n    else{\n        return diffs_sorted_num_sorted[diffs_sorted_num_sorted_index_2];\n    }\n}\n",
    "  var number = parseFloat(value);\n  var int = Math.round(number);\n  if (number === int) {\n    if (Math.abs(number) === Math.abs(int)) {\n      return int;\n    } else {\n      return number > 0 ? Math.ceil(number) : Math.floor(number);\n    }\n  } else {\n    return int;\n  }\n}\n",
    "  var number = parseInt(value);\n  if(isNaN(number)){\n    return 0;\n  }\n  var diff = Math.abs(number);\n  var closest = number;\n  var closest_diff = diff;\n  for(var i = 1; i < 10; i++){\n    var new_diff = Math.abs(number - i);\n    if(new_diff < closest_diff){\n      closest_diff = new_diff;\n      closest = i;\n    }\n  }\n  return closest;\n}\n",
    "    var num = parseFloat(value);\n    var num_int = Math.round(num);\n    if(num_int === num){\n        if(num > 0){\n            return num_int + 1;\n        } else {\n            return num_int - 1;\n        }\n    } else {\n        return num_int;\n    }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  if(diff < 0.5){\n    return num;\n  }\n  if(diff < 1.5){\n    return num + 1;\n  }\n  if(diff < 2.5){\n    return num - 1;\n  }\n  return num;\n}\n",
    "  var number = parseFloat(value);\n  var sign = Math.sign(number);\n  number = Math.abs(number);\n  var result = Math.round(number);\n  if (result === number) {\n    if (result % 1 === 0) {\n      result = result + sign;\n    } else {\n      result = result - sign;\n    }\n  }\n  return result;\n}\n",
    "    var int_value = parseInt(value);\n    if(isNaN(int_value)){\n        return value;\n    }\n    var diff = Math.abs(int_value - value);\n    var closest = int_value;\n    if(diff > 0.5){\n        closest = int_value + 1;\n    }\n    else if(diff < 0.5){\n        closest = int_value - 1;\n    }\n    return closest;\n}\n",
    "    var num = parseFloat(value);\n    var num_int = Math.round(num);\n    if(num_int == num){\n        return num_int;\n    }\n    else{\n        return num_int + (num - num_int) * 0.5;\n    }\n}\n",
    "    var number = parseInt(value);\n    if(isNaN(number)){\n        return 0;\n    }\n    var diff = Math.abs(number);\n    var diffs = [];\n    var diffs_count = 0;\n    while(diff > 0){\n        diffs.push(diff);\n        diff = diff / 10;\n        diffs_count++;\n    }\n    var diffs_sorted = diffs.sort(function(a, b){\n        return a - b;\n    });\n    var closest = diffs_sorted[diffs_count - 1];\n    if(diffs_count > 1){\n        var diffs_sorted_count = diffs_sorted.length;\n        var diffs_sorted_index = diffs_sorted_count - 2;\n        while(diffs_sorted_index >= 0){\n            if(diffs[diffs_sorted_index] == closest){\n                closest = diffs[diffs_sorted_index];\n                break;\n            }\n            diffs_sorted_index--;\n        }\n    }\n    return number + closest;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  if(diff < 0.5){\n    closest = Math.ceil(num);\n  }else if(diff > 0.5){\n    closest = Math.floor(num);\n  }\n  return closest;\n}\n",
    "  var number = parseFloat(value);\n  var sign = (number > 0) - (number < 0);\n  var result = Math.round(Math.abs(number));\n  return sign * result;\n}\n",
    "    var number = parseFloat(value);\n    var sign = value[0] === \"-\"? -1 : 1;\n    var result = Math.round(number);\n    if(result === number){\n        if(Math.abs(number) === Math.floor(Math.abs(number))){\n            result = sign * Math.floor(Math.abs(number));\n        }\n    }\n    return result;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num - Math.round(num));\n    if(diff < 0.5){\n        return Math.round(num);\n    }\n    else{\n        return Math.round(num) + 1;\n    }\n}\n",
    "    var number = parseFloat(value);\n    var closest = Math.round(number);\n    if (number === closest) {\n        if (Math.abs(number) === Math.abs(closest)) {\n            if (number > 0) {\n                closest = closest + 1;\n            } else {\n                closest = closest - 1;\n            }\n        }\n    }\n    return closest;\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    var diff = Math.abs(num);\n    var closest = num;\n    if(diff > 0.5){\n        closest = num + 1;\n    }else if(diff < 0.5){\n        closest = num - 1;\n    }\n    return closest;\n}\n",
    "    var number = parseFloat(value);\n    var int = Math.round(number);\n    if (number === int) {\n        if (Math.abs(number) === Math.abs(int)) {\n            return int;\n        } else {\n            return number > 0 ? Math.ceil(number) : Math.floor(number);\n        }\n    } else {\n        return int;\n    }\n}\n",
    "    var number = parseFloat(value);\n    var sign = Math.sign(number);\n    var result = Math.round(Math.abs(number));\n    if(result === number){\n        if(result === 0){\n            result = 0;\n        }\n        else if(result === 1){\n            result = 1;\n        }\n        else if(result === -1){\n            result = -1;\n        }\n        else if(result === -2){\n            result = -2;\n        }\n        else if(result === -3){\n            result = -3;\n        }\n        else if(result === -4){\n            result = -4;\n        }\n        else if(result === -5){\n            result = -5;\n        }\n        else if(result === -6){\n            result = -6;\n        }\n        else if(result === -7){\n            result = -7;\n        }\n        else if(result === -8){\n            result = -8;\n        }\n        else if(result === -9){\n            result = -9;\n        }\n        else if(result === -10){\n            result = -10;\n        }\n        else if(result === -11){\n            result = -11;\n        }\n        else if(result === -12){\n            result = -12;\n        }\n        else if(result === -13){\n            result = -13;\n        }\n        else if(result === -14){\n            result = -14;\n        }\n        else if(result === -15){\n            result = -15;\n        }\n        else if(result === -16){\n            result = -16;\n        }\n        else if(result === -17){\n            result = -17;\n        }\n        else if(result === -18){\n            result = -18;\n        }\n        else if(result === -19){\n            result = -19;\n        }\n        else if(result === -20){\n            result = -20;\n        }\n        else if(result === -21){\n            result = -21;\n        }\n        else if(result === -22){\n            result =",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    for(var i = 1; i <= diff; i++){\n        diffs.push(diff - i);\n        diffs.push(diff + i);\n    }\n    var min = diffs[0];\n    var minIndex = 0;\n    for(var i = 1; i < diffs.length; i++){\n        if(diffs[i] < min){\n            min = diffs[i];\n            minIndex = i;\n        }\n    }\n    if(minIndex === 0){\n        return num;\n    }\n    if(minIndex === 1){\n        return num + min;\n    }\n    return num - min;\n}\n",
    "  var number = parseInt(value);\n  if(isNaN(number)){\n    return 0;\n  }\n  var diff = Math.abs(number);\n  var diffs = diff.toString().split(\".\");\n  var integer = diffs[0];\n  var decimal = diffs[1] ? \".\" + diffs[1] : \"\";\n  var diffs = integer.split(\"\");\n  var diffs_length = diffs.length;\n  var diffs_index = diffs_length - 1;\n  var diffs_value = diffs[diffs_index];\n  var diffs_value_length = diffs_value.length;\n  var diffs_value_index = diffs_value_length - 1;\n  var diffs_value_value = diffs_value[diffs_value_index];\n  var diffs_value_value_length = diffs_value_value.length;\n  var diffs_value_value_index = diffs_value_value_length - 1;\n  var diffs_value_value_value = diffs_value_value[diffs_value_value_index];\n  if(diffs_value_value_value === \"5\" && diffs_value_value_length === 1){\n    integer = integer + 1;\n  }\n  else if(diffs_value_value_value === \"5\" && diffs_value_value_length === 2){\n    integer = integer + 0.5;\n  }\n  else if(diffs_value_value_value === \"0\" && diffs_value_value_length === 1){\n    integer = integer - 1;\n  }\n  else if(diffs_value_value_value === \"0\" && diffs_value_value_length === 2){\n    integer = integer - 0.5;\n  }\n  else if(diffs_value_value_value === \"1\" && diffs_value_value_length === 1){\n    integer = integer + 1;\n  }\n  else if(diffs_value_value_value === \"1\" && diffs_value_value_length === 2){\n    integer = integer + 0.5",
    "  var num = parseFloat(value);\n  var sign = Math.sign(num);\n  var num_int = Math.floor(num);\n  var num_dec = num - num_int;\n  var num_dec_int = Math.floor(num_dec);\n  var num_dec_dec = num_dec - num_dec_int;\n  if(num_dec_dec > 0){\n    return num_int + 1;\n  }\n  else if(num_dec_dec < 0){\n    return num_int - 1;\n  }\n  else{\n    return num_int;\n  }\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num === num_int) {\n    if(num > 0) {\n      return num_int + 1;\n    } else {\n      return num_int - 1;\n    }\n  } else {\n    return num_int;\n  }\n}\n",
    "    var number = parseInt(value);\n    if(isNaN(number)){\n        return 0;\n    }\n    var diff = Math.abs(number - Math.round(number));\n    if(diff < 0.5){\n        return Math.round(number);\n    }\n    else{\n        return Math.round(number) + 1;\n    }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    return Math.round(num);\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num === num_int){\n    if(num > 0){\n      return Math.ceil(num);\n    } else {\n      return Math.floor(num);\n    }\n  } else {\n    return num_int;\n  }\n}\n",
    "  var number = parseFloat(value);\n  var int = Math.round(number);\n  if (number === int) {\n    if (Math.abs(number) === Math.abs(int)) {\n      return int;\n    } else {\n      return number > 0 ? Math.ceil(number) : Math.floor(number);\n    }\n  } else {\n    return int;\n  }\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num === num_int){\n    if(num > 0){\n      return Math.ceil(num);\n    }else{\n      return Math.floor(num);\n    }\n  }else{\n    return num_int;\n  }\n}\n",
    "    var num = parseInt(value);\n    var num_int = num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parseInt(num_int);\n}\n",
    "  var number = parseFloat(value);\n  var closest = Math.round(number);\n  if(Math.abs(number - closest) < 0.5){\n    return closest;\n  }\n  else{\n    return closest + (number > closest ? 1 : -1);\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  if(diff === 0){\n    return num;\n  }\n  if(diff < 0.5){\n    return num;\n  }\n  if(diff > 0.5){\n    return num + 1;\n  }\n}\n",
    "    var number = parseInt(value);\n    var diff = Math.abs(number - value);\n    if(diff < 0.5){\n        return number;\n    }\n    else if(diff < 1.5){\n        return number + 1;\n    }\n    else if(diff < 2.5){\n        return number - 1;\n    }\n    else{\n        return number;\n    }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  if(diff < 0.5){\n    return num;\n  }\n  return num > 0 ? Math.ceil(num) : Math.floor(num);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  if(diff < 0.5){\n    closest = num - 1;\n  }\n  else if(diff > 0.5){\n    closest = num + 1;\n  }\n  return closest;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  if(diff < 0.5){\n    closest = num - 1;\n  }else if(diff > 0.5){\n    closest = num + 1;\n  }\n  return closest;\n}\n",
    "    var number = parseFloat(value);\n    var closest = Math.round(number);\n    if (number === closest) {\n        if (Math.abs(number) > Math.abs(closest)) {\n            closest = closest + 1;\n        } else {\n            closest = closest - 1;\n        }\n    }\n    return closest;\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    if(num > 0){\n      return Math.ceil(num);\n    } else {\n      return Math.floor(num);\n    }\n  } else {\n    return num_int;\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  if(diff < 0.5){\n    closest = num + 1;\n  }\n  else if(diff > 0.5){\n    closest = num - 1;\n  }\n  return closest;\n}\n",
    "  var number = parseInt(value);\n  if(isNaN(number)){\n    return value;\n  }\n  var diff = Math.abs(number - Math.round(number));\n  if(diff < 0.5){\n    return Math.round(number);\n  }\n  return Math.round(number) + (diff > 1 ? 1 : -1);\n}\n",
    "    var int = parseInt(value);\n    if (isNaN(int)) {\n        return 0;\n    }\n    return Math.round(int);\n}\n",
    "    var num = parseFloat(value);\n    var num_int = Math.round(num);\n    if(num === num_int){\n        if(num > 0){\n            return num_int + 1;\n        }\n        else{\n            return num_int - 1;\n        }\n    }\n    else{\n        return num_int;\n    }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    return Math.round(num);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  if(num === 0){\n    return 0;\n  }\n  var diff = Math.abs(num);\n  var diffs = [];\n  var diffs_num = [];\n  for(var i = 1; i <= diff; i++){\n    diffs.push(num + i);\n    diffs_num.push(i);\n    diffs.push(num - i);\n    diffs_num.push(-i);\n  }\n  var min = diffs[0];\n  var min_num = diffs_num[0];\n  for(var i = 1; i < diffs.length; i++){\n    if(diffs[i] < min){\n      min = diffs[i];\n      min_num = diffs_num[i];\n    }\n  }\n  return min_num;\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    var diffs_num = [];\n    var diffs_num_abs = [];\n    var diffs_num_abs_diff = [];\n    var diffs_num_abs_diff_abs = [];\n    var diffs_num_abs_diff_abs_diff = [];\n    var diffs_num_abs_diff_abs_diff_abs = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff_abs = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs = [];\n    var diffs_num_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs_diff_abs",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var closest = num;\n    if(diff < 10){\n        return num;\n    }\n    if(diff >= 10 && diff < 100){\n        closest = Math.round(num);\n    }\n    if(diff >= 100 && diff < 1000){\n        closest = Math.round(num);\n    }\n    if(diff >= 1000 && diff < 10000){\n        closest = Math.round(num);\n    }\n    if(diff >= 10000 && diff < 100000){\n        closest = Math.round(num);\n    }\n    if(diff >= 100000 && diff < 1000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 1000000 && diff < 10000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 10000000 && diff < 100000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 100000000 && diff < 1000000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 1000000000 && diff < 10000000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 10000000000 && diff < 100000000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 100000000000 && diff < 1000000000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 1000000000000 && diff < 10000000000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 10000000000000 && diff < 100000000000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 100000000000000 && diff < 1000000000000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 1000000000000000 && diff < 10000000000000000){\n        closest = Math.round(num);\n    }\n    if(diff >= 10000000000000000 && diff",
    "    var number = parseFloat(value);\n    var sign = Math.sign(number);\n    var rounded = Math.round(number);\n    if(Math.abs(rounded - number) === 0){\n        return sign * rounded;\n    }\n    else{\n        return sign * Math.ceil(number);\n    }\n}\n",
    "  var number = parseInt(value);\n  if (isNaN(number)) {\n    return value;\n  }\n  var diff = Math.abs(number - Math.round(number));\n  if (diff < 0.5) {\n    return Math.round(number);\n  } else {\n    return Math.round(number) + 1;\n  }\n}\n",
    "  var num = parseFloat(value);\n  var sign = Math.sign(num);\n  var rounded = Math.round(num);\n  if(rounded === num){\n    if(Math.abs(rounded) === Math.abs(num)){\n      return sign * Math.abs(rounded);\n    }\n    else{\n      return sign * Math.abs(rounded) + 1;\n    }\n  }\n  else{\n    return sign * rounded;\n  }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  return Math.round(num);\n}\n",
    "    var number = parseFloat(value);\n    var sign = Math.sign(number);\n    number = Math.abs(number);\n    var result = Math.round(number);\n    if(result === number){\n        if(result % 1 === 0){\n            result = result + sign;\n        }else{\n            result = result - sign;\n        }\n    }\n    return result;\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var closest = Math.round(num);\n    if(diff === closest){\n        if(num > 0){\n            closest = closest + 1;\n        }else{\n            closest = closest - 1;\n        }\n    }\n    return closest;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return 0;\n  }\n  var diff = Math.abs(num);\n  var diffs = [];\n  var diffs_num = [];\n  for(var i = 1; i <= diff; i++){\n    diffs.push(i);\n    diffs_num.push(i);\n  }\n  for(var i = diff; i >= 1; i--){\n    diffs.push(i);\n    diffs_num.push(i);\n  }\n  var diffs_num_sorted = diffs_num.sort(function(a,b){return a-b});\n  var diffs_sorted = diffs.sort(function(a,b){return a-b});\n  var diffs_num_sorted_index = diffs_num_sorted.indexOf(diff);\n  var diffs_sorted_index = diffs_sorted.indexOf(diff);\n  var diffs_num_sorted_index_plus_1 = diffs_num_sorted_index + 1;\n  var diffs_sorted_index_plus_1 = diffs_sorted_index + 1;\n  var diffs_num_sorted_index_minus_1 = diffs_num_sorted_index - 1;\n  var diffs_sorted_index_minus_1 = diffs_sorted_index - 1;\n  if(diffs_num_sorted_index_plus_1 == diffs_sorted_index_plus_1){\n    return diffs_num_sorted_index_plus_1;\n  }\n  if(diffs_num_sorted_index_minus_1 == diffs_sorted_index_minus_1){\n    return diffs_num_sorted_index_minus_1;\n  }\n  if(diffs_sorted_index_plus_1 == diffs_num_sorted_index_plus_1){\n    return diffs_sorted_index_plus_1;\n  }\n  if(diffs_sorted_index_minus_1 == diffs_num_",
    "  var number = parseFloat(value);\n  var sign = (number > 0) - (number < 0);\n  var integer = Math.round(number);\n  return sign * integer;\n}\n",
    "  var int_value = parseInt(value);\n  if(isNaN(int_value)){\n    return value;\n  }\n  var diff = Math.abs(int_value) - Math.abs(value);\n  if(diff === 0){\n    return int_value;\n  }\n  if(diff > 0){\n    return int_value + 1;\n  }\n  return int_value - 1;\n}\n",
    "  var number = parseFloat(value);\n  var closest = Math.round(number);\n  if(number === closest){\n    if(Math.abs(number) > Math.abs(closest)){\n      closest = closest + 1;\n    } else {\n      closest = closest - 1;\n    }\n  }\n  return closest;\n}\n",
    "    var num = parseFloat(value);\n    var num_int = Math.round(num);\n    if(num_int == num){\n        return num_int;\n    }\n    else{\n        return num_int + (num - num_int) * 0.5;\n    }\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return 0;\n  }\n  if(num === 0){\n    return 0;\n  }\n  if(num > 0){\n    return Math.ceil(num);\n  }\n  return Math.floor(num);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  if(diff < 0.5){\n    return num;\n  }\n  return num > 0 ? Math.ceil(num) : Math.floor(num);\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  if(diff < 0.5){\n    closest = Math.ceil(num);\n  }else if(diff > 0.5){\n    closest = Math.floor(num);\n  }\n  return closest;\n}\n",
    "  var num = parseInt(value);\n  if(isNaN(num)){\n    return value;\n  }\n  var diff = Math.abs(num - value);\n  var closest = num;\n  if(diff < 0.5){\n    closest = Math.ceil(num);\n  }else{\n    closest = Math.floor(num);\n  }\n  return closest;\n}\n",
    "  var number = parseFloat(value);\n  var closest = Math.round(number);\n  if (number === closest) {\n    if (number > 0) {\n      closest = closest + 1;\n    } else {\n      closest = closest - 1;\n    }\n  }\n  return closest;\n}\n",
    "  var num = parseFloat(value);\n  var num_int = Math.round(num);\n  if(num_int == num){\n    return num_int;\n  }\n  else{\n    return num_int + (num - num_int) * 0.5;\n  }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var diffs = [];\n    var diffs_num = [];\n    var diffs_num_abs = [];\n    var diffs_num_abs_num = [];\n    var diffs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num = [];\n    var diffs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs_num_abs",
    "    var number = parseFloat(value);\n    var sign = value[0] === '-' ? -1 : 1;\n    var result = Math.round(number);\n    if (result === number) {\n        return sign * result;\n    }\n    return sign * Math.ceil(number);\n}\n",
    "    var number = parseFloat(value);\n    var sign = Math.sign(number);\n    var result = Math.round(number);\n    if (result === number) {\n        result = sign * result;\n    }\n    return result;\n}\n",
    "    var number = parseInt(value);\n    if(isNaN(number)){\n        return 0;\n    }\n    var diff = Math.abs(number);\n    var diffs = [];\n    var diffs_count = 0;\n    for(var i = 1; i < diff; i++){\n        diffs.push(diff - i);\n        diffs_count++;\n    }\n    diffs.push(diff);\n    diffs_count++;\n    var closest = diffs[0];\n    for(var i = 0; i < diffs_count; i++){\n        if(Math.abs(diffs[i]) < Math.abs(closest)){\n            closest = diffs[i];\n        }\n    }\n    return number + closest;\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return 0;\n    }\n    var diff = Math.abs(num);\n    var closest = diff;\n    var closest_diff = diff;\n    var closest_num = num;\n    var closest_num_diff = diff;\n    var i = 1;\n    while(i <= diff){\n        i++;\n        var num_diff = Math.abs(num - i);\n        if(num_diff < closest_diff){\n            closest_diff = num_diff;\n            closest = i;\n            closest_num_diff = num_diff;\n            closest_num = i;\n        }\n    }\n    if(closest_diff === diff){\n        return closest_num;\n    }\n    else{\n        return closest;\n    }\n}\n",
    "    var number = parseFloat(value);\n    var closest = Math.round(number);\n    if(Math.abs(number - closest) == 0.5){\n        if(number > 0){\n            closest = closest + 1;\n        } else {\n            closest = closest - 1;\n        }\n    }\n    return closest;\n}\n",
    "    var number = parseInt(value);\n    if(isNaN(number)){\n        return 0;\n    }\n    var diff = Math.abs(number);\n    var closest = number;\n    if(diff > 1){\n        var diff2 = diff/2;\n        if(diff2 == Math.floor(diff2)){\n            closest = Math.floor(closest);\n        }else{\n            closest = Math.ceil(closest);\n        }\n    }\n    return closest;\n}\n",
    "  var number = parseFloat(value);\n  var sign = value[0] === \"-\"? -1 : 1;\n  var result = Math.round(number);\n  if(result === number){\n    if(Math.abs(number) === 1){\n      result = sign;\n    }else{\n      result = sign * Math.ceil(number);\n    }\n  }\n  return result;\n}\n",
    "  var number = parseFloat(value);\n  var int = Math.round(number);\n  if (number === int) {\n    if (number < 0) {\n      return Math.ceil(number);\n    } else {\n      return Math.floor(number);\n    }\n  } else {\n    return int;\n  }\n}\n",
    "    var num = parseInt(value);\n    if(isNaN(num)){\n        return value;\n    }\n    var diff = Math.abs(num - value);\n    var closest = num;\n    if(diff < 0.5){\n        closest = Math.ceil(num);\n    }\n    else if(diff > 0.5){\n        closest = Math.floor(num);\n    }\n    return closest;\n}\n"
  ],
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ]
}
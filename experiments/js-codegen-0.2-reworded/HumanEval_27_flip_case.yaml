name: HumanEval_27_flip_case
language: js
prompt: "//For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
  Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have\
  \ violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
completions: ["    return string.replace(/[a-z]/gi, function(letter){\n        return\
    \ String.fromCharCode(letter.charCodeAt(0) - 32);\n    });\n}\n", "    var new_string\
    \ = string.toLowerCase();\n    for(var i=0; i<string.length; i++){\n        if(string.charAt(i)\
    \ >= 'a' && string.charAt(i) <= 'z'){\n            new_string = new_string.charAt(i).toUpperCase()\
    \ + new_string.slice(i+1);\n        }\n    }\n    return new_string;\n}\n", " \
    \   var new_string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.charAt(i) >= 'a' && string.charAt(i) <= 'z'){\n   \
    \         new_string = new_string.charAt(i).toUpperCase() + new_string.slice(i+1);\n\
    \        }\n    }\n    return new_string;\n}\n", "  var new_string = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string.charAt(i).toLowerCase() != string.charAt(i)){\n\
    \      new_string += string.charAt(i).toUpperCase();\n    } else {\n      new_string\
    \ += string.charAt(i).toLowerCase();\n    }\n  }\n  return new_string;\n}\n",
  "    var new_string = string.toLowerCase();\n    for(var i=0; i<string.length; i++){\n\
    \        if(string.charAt(i) === string.charAt(i).toUpperCase()){\n          \
    \  new_string = new_string.charAt(i).toLowerCase() + new_string.slice(i+1);\n\
    \        }\n    }\n    return new_string;\n}\n", "  return string.replace(/[a-z]/gi,\
    \ function(letter){\n    return String.fromCharCode(letter.charCodeAt(0) - 32);\n\
    \  });\n}\n", "  return string.replace(/[a-z]/gi, function(letter){\n    return\
    \ String.fromCharCode(letter.charCodeAt(0) - 32);\n  });\n}\n", "    return string.replace(/[a-z]/gi,\
    \ function(letter){\n        return String.fromCharCode(letter.charCodeAt(0) -\
    \ 32);\n    });\n}\n", "    var new_string = string.toLowerCase();\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(string.charAt(i) >= 'a' && string.charAt(i)\
    \ <= 'z'){\n            new_string = new_string.substring(0, i) + string.charAt(i).toUpperCase()\
    \ + new_string.substring(i+1);\n        }\n    }\n    return new_string;\n}\n",
  "  return string.replace(/[a-z]/gi, function(letter){\n    return String.fromCharCode(letter.charCodeAt(0)\
    \ - 32);\n  });\n}\n", "  return string.replace(/[a-z]/gi, function(letter){\n\
    \    return String.fromCharCode(letter.charCodeAt(0) - 32);\n  });\n}\n", "  var\
    \ new_string = string.toLowerCase();\n  for(var i=0; i<string.length; i++){\n\
    \    if(string.charAt(i) === string.charAt(i).toUpperCase()){\n      new_string\
    \ = new_string.charAt(i).toLowerCase() + new_string.slice(i+1);\n    }\n  }\n\
    \  return new_string;\n}\n", "  return string.replace(/[a-z]/gi, function(letter){\n\
    \    return String.fromCharCode(letter.charCodeAt(0) - 32);\n  });\n}\n", "  var\
    \ new_string = '';\n  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i).toLowerCase()\
    \ != string.charAt(i)){\n      new_string += string.charAt(i).toUpperCase();\n\
    \    } else {\n      new_string += string.charAt(i).toLowerCase();\n    }\n  }\n\
    \  return new_string;\n}\n", "    return string.replace(/[a-z]/gi, function(letter){\n\
    \        return String.fromCharCode(letter.charCodeAt(0) - 32);\n    });\n}\n",
  "  return string.replace(/[a-z]/gi, function(letter){\n    return String.fromCharCode(letter.charCodeAt(0)\
    \ - 32);\n  });\n}\n", "  var flipped = string.toLowerCase();\n  flipped = flipped.replace(/[a-z]/g,\
    \ function(letter){\n    return String.fromCharCode(letter.charCodeAt(0) - 32);\n\
    \  });\n  return flipped.toUpperCase();\n}\n", "  return string.replace(/[a-z]/gi,\
    \ function(letter){\n    return String.fromCharCode(letter.charCodeAt(0) - 32);\n\
    \  });\n}\n", "  return string.replace(/[a-z]/gi, function(letter){\n    return\
    \ String.fromCharCode(letter.charCodeAt(0) - 32);\n  });\n}\n", "  return string.replace(/[a-z]/gi,\
    \ function(letter){\n    return String.fromCharCode(letter.charCodeAt(0) - 32);\n\
    \  });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

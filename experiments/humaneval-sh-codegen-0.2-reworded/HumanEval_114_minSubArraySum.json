{
  "name": "HumanEval_114_minSubArraySum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1 is a space-separated list\nminSubArraySum() {\n",
  "tests": "}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test",
  "completions": [
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_len_i\n    local nums_len_j\n\n    nums=$1\n    nums_len=$(len $nums)\n    nums_i=0\n    nums_j=0\n    nums_len_i=0\n    nums_len_j=0\n\n    while [ $nums_i < $nums_len ]; do\n        curr_sum=$(($nums_i+1))\n        nums_i=$(($nums_i+1))\n        while [ $nums_j < $nums_len ]; do\n            if [ $nums_j - $nums_i - 1 < 0 ]; then\n                break\n            nums_j=$(($nums_j+1))\n            nums_len_i=$(($nums_i+1))\n            nums_len_j=$(($nums_j+1))\n            min_sum=$(($curr_sum+$nums_j-nums_i))\n            if [ $min_sum - $nums_len_i - 1 < 0 ]; then\n                break\n            if [ $min_sum - $nums_len_j - 1 < 0 ]; then\n                break\n            if [ $min_sum - $nums_len_i - 1 < 0 ]; then\n                break\n            if [ $min_sum - $nums_len_j - 1 < 0 ]; then\n                break\n            if [ $min_sum - $nums_len_i - 1 < 0 ]; then\n                break\n            if [ $min_sum - $nums_len_j - 1 < 0 ]; then\n                break\n            if [ $min_sum - $nums_len_i - 1 < 0 ]; then\n                break\n            if [ $min_sum - $nums_len_j - 1 < 0 ]; then\n                break\n            if [ $min_sum - $nums_len_i - 1 < 0 ]; then\n                break\n            ",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_len_i\n    local nums_len_j\n    local nums_i_j\n    local nums_i_j_len\n    local nums_i_j_len_i\n    local nums_i_j_len_j\n    local nums_i_j_len_i_j\n    local nums_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_j\n    local nums_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j_len_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j",
    "    local currSum\n    local minSum\n    local i\n    local j\n    local nums\n    local minSubArraySum\n\n    nums=$1\n    minSubArraySum=\"$1\"\n\n    for i in $nums\n    do\n        currSum=$i\n        for j in $nums\n        do\n            if [ $j -gt $i ]\n            then\n                currSum=$currSum + $j\n            fi\n        done\n        if [ $currSum -lt $minSum ]\n        then\n            minSum=$currSum\n        fi\n    done\n\n    minSubArraySum=$minSum\n    return $minSubArraySum",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local min_i\n  local min_j\n  local nums\n  local nums_len\n  local result\n  local start\n  local stop\n\n  nums=$1\n  nums_len=${#nums}\n\n  for i in $(seq 1 ${nums_len}); do\n    curr_sum=$((nums[i]))\n    for j in $(seq 1 ${nums_len} - i); do\n      curr_sum=$((curr_sum + nums[j]))\n    done\n    if [ $curr_sum -lt $min_sum ]; then\n      min_sum=$curr_sum\n      min_i=$i\n      min_j=$j\n    fi\n  done\n\n  result=$(printf '%d' \"$min_sum\")\n  start=$min_i\n  stop=$min_j\n  if [ $start -gt 0 ]; then\n    start=$start - 1\n  fi\n  if [ $stop -lt $nums_len ]; then\n    stop=$stop + 1\n  fi\n  printf '%s %d %d' \"$result\" \"$start\" \"$stop\"",
    "  local i\n  local j\n  local sum\n  local min\n  local nums\n  local min_sum\n  local min_index\n  local min_index_sum\n  local min_index_index\n  local min_index_index_sum\n  local min_index_index_index\n\n  nums=$1\n  min_index_index_index=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=0\n  min_index=0\n  min_sum=0\n  min_index_index_sum=0\n  min_index_index=",
    "    local curr_sum\n    local i\n    local j\n    local min_sum\n    local nums\n    local sum\n\n    nums=$1\n    min_sum=$2\n    sum=0\n    for i in $nums; do\n        sum=$(($sum + $i))\n        if [ $sum -lt $min_sum ]; then\n            min_sum=$sum\n        fi\n    done\n    return $min_sum",
    "  local i j k\n  for i in \"$@\"; do\n    j=0\n    while [ $j -lt $# ]; do\n      k=0\n      while [ $k -lt $# ]; do\n        if [ $i -ge $j ]; then\n          if [ $i -lt $k ]; then\n            echo $i\n          fi\n          k=$((k+1))\n        fi\n        j=$((j+1))\n      done\n    done\n  done",
    "    local i\n    local j\n    local sum\n    local min\n    local min_sum\n    local nums\n    local min_sub_array\n    local min_sub_array_sum\n\n    nums=$1\n    min_sub_array_sum=0\n    min_sub_array=\"\"\n    for i in $nums; do\n        sum=0\n        min_sub_array=\"\"\n        for j in $nums; do\n            sum=$(($sum + $j))\n            if [ $sum -lt $min_sub_array_sum ]; then\n                min_sub_array_sum=$sum\n                min_sub_array=$j\n            fi\n        done\n        if [ $sum -lt $min_sub_array_sum ]; then\n            min_sub_array_sum=$sum\n            min_sub_array=$j\n        fi\n    done\n    min_sub_array_sum=$min_sub_array_sum\n    min_sub_array=$min_sub_array\n    min=$min_sub_array_sum\n    for i in $nums; do\n        sum=$(($sum + $i))\n        if [ $sum -lt $min ]; then\n            min=$sum\n        fi\n    done\n    min",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local len\n    local min_len\n    local min_start\n    local min_end\n\n    nums=$1\n    min_sum=0\n    min_len=0\n    min_start=0\n    min_end=0\n\n    for i in $nums; do\n        curr_sum=$(($i))\n        if [ $curr_sum -lt 0 ]; then\n            min_sum=$min_sum\n            min_len=$min_len\n            min_start=$min_start\n            min_end=$min_end\n            break\n        fi\n        min_sum=$curr_sum\n        min_len=1\n        min_start=i\n        min_end=i\n        continue\n    done\n\n    for i in $nums; do\n        curr_sum=$(($i))\n        if [ $curr_sum -lt 0 ]; then\n            min_sum=$min_sum\n            min_len=$min_len\n            min_start=$min_start\n            min_end=$min_end\n            break\n        fi\n        if [ $curr_sum -eq 0 ]; then\n            continue\n        fi\n        if [ $min_len -gt 1 ]; then\n            min_sum=$curr_sum\n            min_len=1\n            min_start=i\n            min_end=i\n            continue\n        fi\n        if [ $curr_sum -lt $min_sum ]; then\n            min_sum=$curr_sum\n            min_len=min_len+1\n            min_start=min_start\n            min_end=min_end\n            continue\n        fi\n        if [ $curr_sum -gt $min_sum ]; then\n            min_sum=$curr_sum\n            min_len=1\n            min_start=i\n            min_end=i\n            continue\n        fi\n    done\n\n    if [ $min_len -gt 1 ]; then\n        min_sum=$min_sum\n        min_len=1\n        min_start=min_start\n        min_end=min_end\n    fi\n\n",
    "  local i j k\n  while read i j k\n  do\n    if [ $? -ne 0 ]; then\n      return 1\n    fi\n    if [ $i -lt 0 ]; then\n      continue\n    fi\n    if [ $j -lt 0 ]; then\n      continue\n    fi\n    if [ $k -lt 0 ]; then\n      continue\n    fi\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i))\n    min=$(($k - $i))\n    min=$(($j - $i",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_i\n  local min_j\n  local min_sum_i\n  local min_sum_j\n  local nums\n  local nums_i\n  local nums_j\n  local nums_sum\n  local nums_sum_i\n  local nums_sum_j\n  local nums_sum_sum\n\n  nums=$1\n  min_sum=0\n  min_i=0\n  min_j=0\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  nums_sum_i=0\n  nums_sum_j=0\n  nums_sum_sum=0\n\n  for ((i=0; i<=nums_i; i++)); do\n    for ((j=0; j<=nums_j; j++)); do\n      nums_sum=nums_sum+nums[i][j]\n      nums_sum_i=nums_sum_i+nums[i]\n      nums_sum_j=nums_sum_j+nums[j]\n      nums_sum_sum=nums_sum_sum+nums[i][j]\n      if (nums_sum_sum<min_sum_sum); then\n        min_sum_sum=nums_sum_sum\n        min_sum_i=nums_sum_i\n        min_sum_j=nums_sum_j\n        min_i=i\n        min_j=j\n      fi\n    done\n  done\n\n  min_sum=nums_sum-min_sum_sum\n  min_i=min_i-min_sum_i\n  min_j=min_j-min_sum_j\n\n  if (min_i<0); then\n    min_i=0\n  fi\n\n  if (min_j<0); then\n    min_j=0\n  fi\n\n  if (min_i>nums_i); then\n    min_i=nums_i\n  fi\n\n  if (min_j>nums_",
    "  local i j k\n  while read i j k\n  do\n    if [ $k -gt 0 ]; then\n      echo $i $j $k\n      minSubArraySum $i $j $k\n    fi\n  done < $1",
    "  local i j k\n  local min_sum\n  local nums\n\n  nums=$1\n  min_sum=$2\n\n  for i in \"${nums[@]}\"; do\n    for j in \"${nums[@]}\"\n      do\n        for k in \"${nums[@]}\"\n          do\n            if [[ $j -lt $k ]]\n              then\n              min_sum=$((min_sum + $i))\n            fi\n          done\n        done\n      done\n    done\n  done\n\n  echo $min_sum",
    "  local i j\n  local min_sum\n  local nums\n  local sum\n  local min_sum_index\n  local min_sum_value\n\n  min_sum_index=0\n  min_sum_value=0\n\n  nums=$1\n  sum=0\n\n  for i in $nums; do\n    sum=$(($sum + $i))\n  done\n\n  for i in $nums; do\n    for j in $nums; do\n      if [ $i + $j - $sum - 1 > 0 ]; then\n        min_sum=$(($min_sum + $i + $j - $sum - 1))\n        min_sum_index=$(($min_sum_index + 1))\n        min_sum_value=$(($min_sum_value + $i + $j - $sum - 1))\n      fi\n    done\n  done\n\n  echo $min_sum_value",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_len_i\n    local nums_len_j\n    local nums_i_j\n    local nums_i_j_len\n    local nums_i_j_len_i\n    local nums_i_j_len_j\n    local nums_i_j_len_i_j\n    local nums_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len\n    local nums_i_j_",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local start\n  local end\n\n  nums=$1\n  min_sum=$2\n\n  for i in \"${nums[@]}\"; do\n    curr_sum=0\n    start=1\n    end=1\n    for j in \"${nums[@]}\"; do\n      if [[ $j -gt $i ]]; then\n        curr_sum=$(($curr_sum + $j))\n        start=$(($start + 1))\n      else\n        end=$(($end + 1))\n      fi\n    done\n    if [[ $curr_sum -lt $min_sum ]]; then\n      min_sum=$curr_sum\n      start=$start\n      end=$end\n    fi\n  done\n\n  echo $min_sum",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local start\n  local end\n\n  nums=$1\n  min_sum=$2\n\n  for i in \"${nums[@]}\"; do\n    curr_sum=0\n    start=0\n    end=0\n    for j in \"${nums[@]}\"; do\n      if [[ $j -gt $i ]]; then\n        curr_sum=$(($curr_sum + $j))\n        start=$(($start + 1))\n        end=$(($end + 1))\n      fi\n    done\n    if [[ $curr_sum -lt $min_sum ]]; then\n      min_sum=$curr_sum\n      start=$start\n      end=$end\n    fi\n  done\n  echo $min_sum",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local start\n  local end\n\n  nums=$1\n  min_sum=$2\n  start=1\n  end=1\n  for ((i=1;i<=nums[0];i++)); do\n    for ((j=1;j<=nums[0];j++)); do\n      curr_sum=$((nums[j]-$nums[i]))\n      if [ $curr_sum -lt $min_sum ]; then\n        min_sum=$curr_sum\n        start=$i\n        end=$j\n      fi\n    done\n  done\n  echo $min_sum",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local start\n  local end\n\n  nums=$1\n  min_sum=0\n  for i in $nums; do\n    curr_sum=$(($i))\n    start=0\n    end=0\n    for j in $nums; do\n      if [[ $j -ge $i ]]; then\n        end=$j\n        break\n      fi\n    done\n    if [[ $end -ne 0 ]]; then\n      for j in $nums; do\n        if [[ $j -ge $start ]] && [[ $j -lt $end ]]; then\n          curr_sum=$(($curr_sum + $j))\n        fi\n      done\n      if [[ $curr_sum -lt $min_sum ]]; then\n        min_sum=$curr_sum\n      fi\n      start=$end+1\n    fi\n  done\n  echo $min_sum",
    "  local currMin=$1\n  local i\n  for ((i=1; i<=${#1}; i++)) {\n    local currSum=$1[i]\n    if [[ $currSum -gt 0 ]] {\n      currMin=$((currMin + $currSum))\n    }\n  }\n  echo $currMin",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local start\n  local end\n\n  nums=$1\n  min_sum=$2\n\n  for i in $nums; do\n    curr_sum=0\n    start=0\n    end=0\n    for j in $nums; do\n      if [[ $j -gt $i ]]; then\n        curr_sum=$curr_sum + $j\n        end=1\n        break\n      fi\n    done\n\n    if [[ $end -eq 0 ]]; then\n      if [[ $curr_sum -lt $min_sum ]]; then\n        min_sum=$curr_sum\n      fi\n    fi\n\n    if [[ $end -eq 0 ]]; then\n      start=1\n    fi\n\n    i=$i+1\n  done\n\n  echo $min_sum",
    "    local curr_sum\n    local i\n    local j\n    local min_sum\n    local nums\n    local sum\n    local sum_len\n    local sum_len_prev\n    local sum_len_prev_prev\n    local sum_len_prev_prev_prev\n\n    nums=$1\n    sum_len=$2\n    sum_len_prev=$3\n    sum_len_prev_prev=$4\n    sum_len_prev_prev_prev=$5\n\n    sum=0\n    sum_len_prev=0\n    sum_len_prev_prev=0\n    sum_len_prev_prev_prev=0\n\n    for i in $nums; do\n        curr_sum=$(expr $sum + $i)\n        sum_len_prev=$(expr $sum_len_prev + 1)\n        sum_len_prev_prev=$(expr $sum_len_prev_prev + 1)\n        sum_len_prev_prev_prev=$(expr $sum_len_prev_prev_prev + 1)\n\n        if [ $sum_len_prev_prev_prev - $sum_len_prev_prev - $sum_len_prev - 1 == 0 ]; then\n            sum_len_prev_prev_prev=$(expr $sum_len_prev_prev_prev - 1)\n        fi\n\n        if [ $sum_len_prev_prev_prev - $sum_len_prev_prev - $sum_len_prev - 1 == 0 ]; then\n            sum_len_prev_prev_prev=$(expr $sum_len_prev_prev_prev - 1)\n        fi\n\n        if [ $sum_len_prev_prev_prev - $sum_len_prev_prev - $sum_len_prev - 1 == 0 ]; then\n            sum_len_prev_prev_prev=$(expr $sum_len_prev_prev_prev - 1)\n        fi\n\n        if [ $sum_len_prev_prev_prev - $sum_len_prev_prev - $sum_len_prev - 1 == 0 ]; then\n            sum_len_prev_prev_prev=$(expr $sum_len_prev_prev_prev - 1)\n        fi\n\n        if [ $",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_i\n  local min_j\n  local nums\n  local nums_i\n  local nums_j\n  local nums_sum\n  local nums_min\n  local nums_min_i\n  local nums_min_j\n  local nums_min_sum\n  local nums_min_min_i\n  local nums_min_min_j\n  local nums_min_min_sum\n\n  nums=$1\n  min_sum=0\n  min_i=0\n  min_j=0\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  nums_min=0\n  nums_min_i=0\n  nums_min_j=0\n  nums_min_sum=0\n  nums_min_min_i=0\n  nums_min_min_j=0\n  nums_min_min_sum=0\n\n  for ((i=0;i<nums.length;i++)); do\n    for ((j=i;j<nums.length;j++)); do\n      nums_i=$(echo $nums[$i])\n      nums_j=$(echo $nums[$j])\n      nums_sum=$(echo $nums_i + $nums_j)\n      nums_min=$(echo $nums_sum - $min_sum)\n      nums_min_i=$(echo $nums_i - $nums_min)\n      nums_min_j=$(echo $nums_j - $nums_min)\n      nums_min_sum=$(echo $nums_min_i + $nums_min_j)\n      nums_min_min_i=$(echo $nums_min_i - $nums_min_sum)\n      nums_min_min_j=$(echo $nums_min_j - $nums_min_sum)\n      nums_min_min_sum=$(echo $nums_min_",
    "    local result\n    local i\n    local j\n    local sum\n    local nums\n    local min\n    local min_index\n    local min_sum\n\n    nums=$1\n    min_sum=0\n    min_index=0\n    for i in $nums; do\n        sum=$(($i))\n        if [ $sum -lt 0 ]; then\n            min_sum=$sum\n            min_index=$i\n        fi\n    done\n    if [ $min_sum -eq 0 ]; then\n        min_sum=$min_index\n    fi\n    result=$(($min_sum))\n    return $result",
    "  local result\n  local i\n  local j\n  local k\n  local sum\n  local nums\n  local min\n  local min_sum\n  local min_start\n  local min_end\n\n  nums=()\n  min_sum=0\n  min_start=0\n  min_end=0\n  for ((i=1; i<=${#nums[@]}; i++)) {\n    sum=0\n    for ((j=1; j<=i; j++)) {\n      sum=sum + nums[j]\n    }\n    if (sum < min_sum) {\n      min_sum=sum\n      min_start=1\n      min_end=i\n    }\n  }\n  for ((i=min_start; i<=min_end; i++)) {\n    sum=0\n    for ((j=1; j<=i; j++)) {\n      sum=sum + nums[j]\n    }\n    if (sum < min_sum) {\n      min_sum=sum\n      min_start=1\n      min_end=i\n    }\n  }\n  result=$(printf '%d' \"${min_sum}\")\n  return $result",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_i\n  local min_j\n  local min_sum_i\n  local min_sum_j\n  local nums\n  local nums_i\n  local nums_j\n  local nums_sum\n  local nums_sum_i\n  local nums_sum_j\n  local nums_sum_sum\n\n  nums=$1\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  nums_sum_i=0\n  nums_sum_j=0\n  nums_sum_sum=0\n\n  while [ $# -gt 0 ]; do\n    sum=$1\n    i=$2\n    j=$3\n\n    nums_i=$(expr $i + 1)\n    nums_j=$(expr $j + 1)\n    nums_sum=$(expr $sum + $nums_i)\n    nums_sum_i=$(expr $nums_i + 1)\n    nums_sum_j=$(expr $nums_j + 1)\n    nums_sum_sum=$(expr $nums_sum + $nums_sum_i)\n\n    if [ $nums_i -gt 0 ]; then\n      if [ $nums_sum_i -gt 0 ]; then\n        min_sum_i=$(expr $nums_sum_i - 1)\n        min_sum_j=$(expr $nums_sum_j - 1)\n        min_sum_sum=$(expr $nums_sum_sum - $min_sum_i)\n        min_i=$(expr $i + 1)\n        min_j=$(expr $j + 1)\n        min_sum=$(expr $sum - $min_sum_i + $min_sum_j)\n        echo $min_sum\n        return 0\n      else\n        min_sum_i=$(expr $nums_sum_i - 1)\n        min_sum_j=$(expr $nums_sum_j - 1)\n        min_sum_sum=$(expr $nums_sum_sum - $",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local len\n    local start\n    local end\n\n    nums=$1\n    len=$(expr len \"$nums\")\n\n    for i in $(seq 1 \"$len\"); do\n        curr_sum=$(expr $i + $i)\n        for j in $(seq 1 \"$len\"); do\n            if [ $j -lt $i ]; then\n                continue\n            fi\n            start=$(expr $j * 2)\n            end=$(expr $j * 2 + 1)\n            if [ $start -lt $len ]; then\n                start=$start\n            fi\n            if [ $end -lt $len ]; then\n                end=$end\n            fi\n            if [ $start -le $end ]; then\n                min_sum=$(min $min_sum $curr_sum $nums[$start..$end])\n            fi\n        done\n    done\n\n    echo $min_sum",
    "    local i j k\n    while read i j k\n    do\n        if [ $? -ne 0 ]; then\n            return 1\n        fi\n        if [ $i -lt 0 ]; then\n            continue\n        fi\n        if [ $j -lt 0 ]; then\n            continue\n        fi\n        if [ $k -lt 0 ]; then\n            continue\n        fi\n        if [ $i -gt $j ]; then\n            continue\n        fi\n        if [ $k -gt $j ]; then\n            continue\n        fi\n        if [ $i -gt $k ]; then\n            continue\n        fi\n        if [ $j -gt $k ]; then\n            continue\n        fi\n        if [ $i -gt 0 ]; then\n            sum=$(($j+1))\n        fi\n        if [ $j -gt 0 ]; then\n            sum=$(($k+1))\n        fi\n        if [ $k -gt 0 ]; then\n            sum=$(($i+1))\n        fi\n        if [ $sum -lt 0 ]; then\n            sum=0\n        fi\n        echo $sum\n    done",
    "  local result=0\n  local i=0\n  local j=0\n  local sum=0\n  local nums=()\n  local min=0\n  local min_sum=0\n  local min_start=0\n  local min_end=0\n  local min_sum_start=0\n  local min_sum_end=0\n\n  while true; do\n    if [[ $i -ge 0 ]]; then\n      sum=$((sum + $nums[$i]))\n      if [[ $sum -lt $min_sum ]]; then\n        min_sum=$sum\n        min_start=$i\n        min_end=$i\n      fi\n    fi\n    i=$((i + 1))\n    if [[ $i -ge $#nums ]]; then\n      break\n    fi\n  done\n\n  while true; do\n    if [[ $j -ge 0 ]]; then\n      sum=$((sum + $nums[$j]))\n      if [[ $sum -lt $min_sum ]]; then\n        min_sum=$sum\n        min_start=$j\n        min_end=$j\n      fi\n    fi\n    j=$((j + 1))\n    if [[ $j -ge $#nums ]]; then\n      break\n    fi\n  done\n\n  min_sum_start=$((min_start - 1))\n  min_sum_end=$((min_end + 1))\n\n  min_sum=$((min_sum + $nums[min_sum_start]))\n  for i in $(seq $min_sum_start $min_sum_end); do\n    sum=$((sum + $nums[$i]))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n      min_start=$i\n      min_end=$i\n    fi\n  done\n\n  result=$((min_sum - $nums[min_start]))\n  return $result",
    "    local result=0\n    local i=0\n    local j=0\n    local sum=0\n    local min=0\n    local min_sum=0\n    local min_index=0\n    local nums=()\n    local nums_len=0\n    local nums_index=0\n    local nums_index_min=0\n    local nums_index_min_sum=0\n    local nums_index_min_index=0\n    local nums_index_min_index_sum=0\n    local nums_index_min_index_sum_min=0\n    local nums_index_min_index_sum_min_index=0\n\n    while [ $# -gt 0 ]; do\n        sum=$1\n        nums=($1)\n        nums_len=$#\n        nums_index=0\n        while [ $nums_index -lt $nums_len ]; do\n            sum=$(($sum + $nums[$nums_index]))\n            nums_index=$(($nums_index + 1))\n        done\n        min_sum=$(($sum + $min))\n        min_index=$(($min_index + 1))\n        min=$(($min + $min_sum))\n        min_index_min=$(($min_index_min + 1))\n        min_index_min_sum=$(($min_index_min_sum + $min_sum))\n        min_index_min_index=$(($min_index_min_index + 1))\n        min_index_min_index_sum=$(($min_index_min_index_sum + $sum))\n        min_index_min_index_sum_min=$(($min_index_min_index_sum_min + $min_sum))\n        min_index_min_index_sum_min_index=$(($min_index_min_index_sum_min_index + $min_index_min_sum))\n        if [ $min_index_min_index_sum_min_index -gt 0 ]; then\n            min_index_min_index_sum_min_index=$(($min_index_min_index_sum_min",
    "    local curr_sum\n    local curr_min\n    local i\n    local j\n    local k\n    local nums\n    local min_sum\n    local min_index\n    local min_value\n\n    nums=$1\n    min_sum=0\n    min_index=0\n    min_value=0\n\n    for i in \"${nums[@]}\"\n    do\n        curr_sum=0\n        curr_min=0\n        for j in \"${nums[@]}\"\n        do\n            curr_sum=`echo $curr_sum $j | bc`\n            if [ $curr_sum -lt $min_sum ]; then\n                min_sum=`echo $curr_sum $j | bc`\n                min_index=`echo $i $j | bc`\n                min_value=`echo $j | bc`\n            fi\n        done\n    done\n\n    echo $min_value\n    echo $min_index\n    echo $min_sum",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_i\n  local min_j\n  local min_sum_i\n  local min_sum_j\n  local nums\n  local nums_i\n  local nums_j\n  local nums_sum\n  local nums_sum_i\n  local nums_sum_j\n  local nums_sum_sum\n\n  nums=$1\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  nums_sum_i=0\n  nums_sum_j=0\n  nums_sum_sum=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_sum_i=0\n  min_sum_j=0\n  min_sum_sum=0\n  for ((i=0;i<=nums_i;i++)); do\n    for ((j=0;j<=nums_j;j++)); do\n      nums_sum=nums_sum+nums[i]\n      nums_sum_i=nums_sum_i+nums[i]\n      nums_sum_j=nums_sum_j+nums[j]\n      nums_sum_sum=nums_sum_sum+nums[i]+nums[j]\n      if ((nums_sum_sum < min_sum_sum) && (nums_sum_sum > 0)); then\n        min_sum_sum=nums_sum_sum\n        min_i=i\n        min_j=j\n      fi\n    done\n  done\n  min_sum=nums_sum_sum\n  min_i=min_i\n  min_j=min_j\n  min_sum_i=nums_sum_i\n  min_sum_j=nums_sum_j\n  min_sum_sum=min_sum_sum\n  for ((i=min_i;i<=nums_i;i++)); do\n    for ((j=min_j;j<=nums_j;",
    "  local result\n  local nums\n  local i\n  local j\n  local sum\n  local min\n\n  nums=$1\n  result=0\n  for ((i=0;i<=nums[0];i++)); do\n    for ((j=i;j<=nums[0];j++)); do\n      sum=0\n      for ((k=i;k<=j;k++)); do\n        sum=$(($sum + $nums[k]))\n      done\n      if ((sum < result)); then\n        result=$sum\n      fi\n    done\n  done\n  echo $result",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_i\n  local min_j\n  local nums\n\n  nums=$1\n  min_sum=0\n  min_i=0\n  min_j=0\n\n  for i in $nums; do\n    sum=0\n    for j in $nums; do\n      sum=$(($sum + $j))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_i=$i\n        min_j=$j\n      fi\n    done\n  done\n\n  if [ $min_sum -lt $min_sum ]; then\n    min_sum=$min_sum\n    min_i=$min_i\n    min_j=$min_j\n  fi\n\n  echo $min_i $min_j $min_sum",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local k\n  local nums\n  local start\n  local end\n\n  nums=$1\n  min_sum=0\n\n  for i in \"${nums[@]}\"\n  do\n    curr_sum=0\n    start=0\n    end=0\n    for j in \"${nums[@]}\"\n    do\n      if [ \"${j}\" -ge \"${i}\" ]\n      then\n        start=1\n        break\n      fi\n    done\n\n    for k in \"${nums[@]}\"\n    do\n      if [ \"${k}\" -le \"${i}\" ]\n      then\n        end=1\n        break\n      fi\n    done\n\n    if [ $start -eq 1 ] && [ $end -eq 1 ]\n    then\n      curr_sum=$((${i}+${j}))\n    else\n      curr_sum=$((${i}+${j}))\n    fi\n\n    if [ $curr_sum -lt $min_sum ]\n    then\n      min_sum=$curr_sum\n    fi\n  done\n\n  echo $min_sum",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local nums\n  local min_nums\n\n  nums=$1\n  min_nums=$2\n\n  for i in $nums; do\n    sum=0\n    min_sum=0\n    for j in $nums; do\n      sum=$(($sum + $j))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n      fi\n    done\n    if [ $min_sum -lt $min_nums ]; then\n      min_nums=$min_sum\n    fi\n  done\n\n  min=$min_nums\n  for i in $nums; do\n    sum=$(($sum + $i))\n    if [ $sum -lt $min ]; then\n      min=$sum\n    fi\n  done\n\n  echo $min",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local minSubArraySum\n  local minSubArraySum_i\n  local minSubArraySum_j\n  local minSubArraySum_i_j\n\n  nums=$1\n  minSubArraySum=\"$1\"\n  minSum=\"$1\"\n\n  for i in $nums; do\n    currSum=$(($i))\n    minSubArraySum_i=$(minSubArraySum)\n    minSubArraySum_i_j=$(minSubArraySum_i)\n    for j in $nums; do\n      if [ $j -lt $i ]; then\n        continue\n      fi\n      minSubArraySum_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(minSubArraySum_i_j)\n      minSubArraySum_i_j=$(min",
    "  local i j k\n  while read i j k\n  do\n    if [ $# -eq 0 ]; then\n      echo -n \"0\"\n    else\n      echo $((minSubArraySum $1 $2 $3))\n    fi\n  done < $1",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local minSubArraySum\n\n  nums=$1\n  minSubArraySum=$2\n\n  for ((i=0;i<=nums[0];i++)); do\n    for ((j=i;j<=nums[0];j++)); do\n      currSum=0\n      for ((k=i;k<=j;k++)); do\n        currSum=$(($currSum + nums[k]))\n      done\n      if ((currSum < minSum)); then\n        minSum=$currSum\n      fi\n    done\n  done\n\n  echo $minSubArraySum",
    "  local i j k\n  while read i j k\n  do\n    if [[ $i -ge 0 ]]\n      then\n        if [[ $j -ge 0 ]]\n          then\n            if [[ $k -ge 0 ]]\n              then\n                echo $i $j $k\n            else\n              echo $i $j\n          else\n            echo $i\n        else\n          echo $i\n      else\n        echo $i\n    fi\n  done < $1",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local sub_sum\n  local sub_sum_i\n  local sub_sum_j\n\n  nums=$1\n  min_sum=$2\n\n  for i in $nums; do\n    curr_sum=$(($i))\n    for j in $nums; do\n      sub_sum=$(($j))\n      sub_sum_i=$(($i+1))\n      sub_sum_j=$(($j+1))\n      if [ $sub_sum_i -gt 0 ]; then\n        sub_sum_i=$(($sub_sum_i))\n      fi\n      if [ $sub_sum_j -gt 0 ]; then\n        sub_sum_j=$(($sub_sum_j))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum_i -gt 0 && $sub_sum_j -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_sum))\n      fi\n      if [ $sub_sum -gt 0 ]; then\n        sub_sum=$(($sub_",
    "  local curr_sum curr_min\n  local i\n  for i in \"$@\"; do\n    curr_sum=0\n    curr_min=$(printf \"%d\" \"$1\")\n    for j in \"${i[@]}\" ; do\n      curr_sum=$(($curr_sum + $j))\n      if [[ $curr_sum -lt $curr_min ]]; then\n        curr_min=$curr_sum\n      fi\n    done\n    printf \"%s\\n\" \"$curr_min\"\n  done",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_index\n  local min_index_sum\n  local min_index_sum_sum\n  local min_index_sum_sum_sum\n  local min_index_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_i_len\n    local nums_j_len\n    local nums_i_j_len\n    local nums_i_j_len_sum\n    local nums_i_j_len_sum_min\n    local nums_i_j_len_sum_min_i\n    local nums_i_j_len_sum_min_j\n    local nums_i_j_len_sum_min_i_j\n    local nums_i_j_len_sum_min_i_j_sum\n    local nums_i_j_len_sum_min_i_j_sum_i\n    local nums_i_j_len_sum_min_i_j_sum_j\n    local nums_i_j_len_sum_min_i_j_sum_i_j\n    local nums_i_j_len_sum_min_i_j_sum_i_j_sum\n    local nums_i_j_len_sum_min_i_j_sum_i_j_sum_i\n    local nums_i_j_len_sum_min_i_j_sum_i_j_sum_j\n    local nums_i_j_len_sum_min_i_j_sum_i_j_sum_i_j\n    local nums_i_j_len_sum_min_i_j_sum_i_j_sum_i_j_sum\n\n    nums=$1\n    nums_len=$(echo $nums | wc -w)\n    nums_i=0\n    nums_j=0\n    nums_i_len=0\n    nums_j_len=0\n    nums_i_j_len=0\n    nums_i_j_len_sum=0\n    nums_i_j_len_sum_min=0\n    nums_i_j_len_sum_",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_index\n  local min_index_start\n  local min_index_end\n  local min_index_start_end\n  local min_index_start_end_sum\n  local min_index_start_end_sum_sum\n  local min_index_start_end_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local min_len\n    local min_start\n    local min_end\n\n    nums=$1\n    nums_len=`expr ${#nums} + 1`\n    min_len=`expr ${#nums} + 1`\n    min_start=0\n    min_end=0\n\n    for i in `seq 1 ${nums_len}`; do\n        curr_sum=0\n        for j in `seq 1 ${nums_len}`; do\n            curr_sum=`expr $curr_sum + $nums[$j]`\n            if [ $curr_sum - $min_sum > 0 ]; then\n                min_sum=`expr $curr_sum - $min_sum`\n                min_start=`expr $i - $min_len`\n                min_end=`expr $j - $min_len`\n                break\n            fi\n        done\n        if [ $curr_sum - $min_sum > 0 ]; then\n            min_sum=`expr $curr_sum - $min_sum`\n            min_start=`expr $i - $min_len`\n            min_end=`expr $j - $min_len`\n        fi\n    done\n\n    echo $min_sum $min_start $min_end",
    "  local i j k\n  local sum\n  local nums\n  nums=$1\n  sum=0\n  for i in $nums\n  do\n    sum=$(($sum $i))\n    j=$((i+1))\n    while [ $j -gt 0 ]\n      do\n        k=$((j-1))\n        while [ $k -gt 0 ]\n          do\n            sum=$((sum $i $j))\n            j=$((j+1))\n          done\n        k=$((k-1))\n      done\n    done\n  done\n  echo $sum",
    "  local currMin\n  local currSum\n  local i\n  local j\n  local nums\n  local minSum\n  local minSubSum\n  local minSubArraySum\n\n  nums=$1\n  minSum=0\n  minSubSum=0\n  for ((i=0;i<=nums[0];i++)); do\n    for ((j=i;j<=nums[0];j++)); do\n      currSum=0\n      currMin=0\n      for ((k=i;k<=j;k++)); do\n        currSum=currSum+nums[k]\n        if (currMin==0 || currMin>nums[k]) {\n          currMin=nums[k]\n        }\n      done\n      if (currMin==0) {\n        continue\n      }\n      minSum=minSum+currMin\n      minSubSum=minSubSum+currMin*(j-i+1)\n      minSubArraySum=$(printf \"%s%d\" \"$1\" \"$minSubSum\")\n      minSum=$(printf \"%s%d\" \"$1\" \"$minSum\")\n    done\n  done\n  echo $minSubArraySum",
    "  local curr_sum\n  local curr_min\n  local i\n  local j\n  local nums\n  local min_sum\n\n  nums=$1\n  min_sum=$2\n\n  for i in $nums\n  do\n    curr_sum=0\n    curr_min=0x7fffffff\n    for j in $nums\n    do\n      curr_sum=`expr $curr_sum + $j`\n      if [ $curr_sum - $min_sum ] < $curr_min\n      then\n        curr_min=$curr_sum - $min_sum\n      fi\n    done\n    echo $curr_min\n    min_sum=`expr $min_sum + $curr_min`\n  done",
    "  local i j k\n  for i in \"$@\"; do\n    j=0\n    while [ $j -lt $# ]; do\n      k=0\n      while [ $k -lt $# ]; do\n        if [ $i -ge $j ]; then\n          if [ $i -lt $k ]; then\n            echo $i\n            break\n          fi\n          k=$(($k+1))\n        fi\n        j=$(($j+1))\n      done\n    done\n  done",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local start\n    local end\n\n    nums=$1\n    min_sum=$2\n\n    for i in \"${nums[@]}\"\n    do\n        curr_sum=0\n        start=1\n        end=1\n        for j in \"${nums[@]}\"\n        do\n            if [[ $j -gt $i ]]\n            then\n                end=1\n            else\n                end=end+1\n            fi\n        done\n\n        if [[ $end -gt 1 ]]\n        then\n            curr_sum=$curr_sum+$i\n            if [[ $curr_sum -lt $min_sum ]]\n            then\n                min_sum=$curr_sum\n            fi\n        fi\n    done\n\n    echo $min_sum",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local min_nums\n    local min_nums_sum\n    local min_nums_sum_sum\n    local min_nums_sum_sum_sum\n    local min_nums_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local min_nums_sum_sum_",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local sum\n\n  nums=$1\n  min_sum=$2\n\n  for i in $nums\n  do\n    sum=$i\n    curr_sum=0\n    for j in $nums\n    do\n      if [ $j -lt $i ]\n      then\n        sum=$sum+$j\n        curr_sum=$curr_sum+$j\n      fi\n    done\n\n    if [ $curr_sum -lt $min_sum ]\n    then\n      min_sum=$curr_sum\n    fi\n  done\n\n  echo $min_sum",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_i\n  local min_j\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n\n  nums=$1\n  nums_len=$(echo $nums | wc -w)\n  nums_i=0\n  nums_j=0\n\n  while [ $nums_i < $nums_len ]; do\n    sum=$(echo $nums | awk '{print $0}')\n    min_sum=$(echo $sum | awk '{print $1}')\n    min_i=$(echo $sum | awk '{print $2}')\n    min_j=$(echo $sum | awk '{print $3}')\n\n    nums_i=$(echo $nums | awk '{print $0}')\n    nums_j=$(echo $nums | awk '{print $1}')\n\n    if [ $nums_i == $min_i && $nums_j == $min_j ]; then\n      break\n    fi\n    nums_i=$(echo $nums | awk '{print $0}')\n    nums_j=$(echo $nums | awk '{print $1}')\n  done\n\n  echo $min_sum",
    "  local i\n  local j\n  local min_sum\n  local nums\n  local sum\n  local start\n  local end\n\n  nums=$1\n  min_sum=$2\n\n  for i in \"${nums[@]}\"\n  do\n    sum=0\n    start=0\n    end=0\n    for j in \"${nums[@]}\"\n    do\n      sum=$(($sum $j))\n      if [[ $j -gt $i ]]\n      then\n        start=$j\n        end=$i\n        break\n      fi\n    done\n    if [[ $sum -lt $min_sum ]]\n    then\n      min_sum=$sum\n      start=$start\n      end=$end\n    fi\n  done\n\n  echo $min_sum",
    "  local result=0\n  local i\n  local j\n  local min\n  local nums\n\n  nums=$1\n  min=$2\n\n  for i in $nums\n  do\n    for j in $nums\n    do\n      if [ $i -lt $j ]\n      then\n        result=$(($result + $i))\n      fi\n    done\n  done\n\n  if [ $result -lt $min ]\n  then\n    result=$min\n  fi\n\n  echo $result",
    "  local i j k\n  while read i j k\n  do\n    if [ $# -eq 0 ]; then\n      echo \"Usage: $0 <array> <space-separated list of integers> <space-separated list of integers>\"\n      exit 1\n    fi\n    if [ $# -eq 1 ]; then\n      echo \"Usage: $0 <array> <space-separated list of integers> <space-separated list of integers>\"\n      exit 1\n    fi\n    if [ $# -gt 2 ]; then\n      echo \"Usage: $0 <array> <space-separated list of integers> <space-separated list of integers>\"\n      exit 1\n    fi\n    if [ $# -eq 2 ]; then\n      minSubArraySum $1 $2\n    fi\n    if [ $# -eq 3 ]; then\n      minSubArraySum $1 $2 $3\n    fi\n  done",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local k\n    local nums\n    local start\n    local end\n    local min_start\n    local min_end\n    local min_sum_start\n    local min_sum_end\n    local min_sum_start_end\n    local min_sum_start_end_start\n    local min_sum_start_end_end\n    local min_sum_start_end_start_end\n    local min_sum_start_end_end_start\n    local min_sum_start_end_end_end\n    local min_sum_start_end_start_end_start\n    local min_sum_start_end_start_end_end\n    local min_sum_start_end_start_end_start_end\n    local min_sum_start_end_start_end_end_start\n    local min_sum_start_end_start_end_end_end\n    local min_sum_start_end_start_end_start_end_start\n    local min_sum_start_end_start_end_end_start_end_end\n    local min_sum_start_end_start_end_start_end_start_end_start\n    local min_sum_start_end_start_end_start_end_start_end_end\n    local min_sum_start_end_start_end_start_end_start_end_start_end\n    local min_sum_start_end_start_end_start_end_start_end_end_start\n    local min_sum_start_end_start_end_start_end_start_end_end_end\n    local min_sum_start_end_start_end_start_end_start_end_start_end_start\n    local min_sum_start_end_start_end_start_end_start_end_end_end_start\n    local min_sum_start_end_start_end_start_end_start_end_end_end_end\n    local min_sum_start_end_start_end_start_end_start_end_start_end_start_end\n    local",
    "  local result\n  local i\n  local j\n  local min\n  local sum\n  local nums\n\n  nums=$1\n  result=0\n  for i in \"${nums[@]}\"\n  do\n    sum=0\n    for j in \"${nums[@]}\"\n    do\n      sum=$(($sum $j))\n    done\n    if [ $sum -lt 0 ]; then\n      sum=0\n    fi\n    if [ $sum -gt 0 ]; then\n      sum=$sum\n    fi\n    if [ $sum -lt $result ]; then\n      result=$sum\n    fi\n  done\n  echo $result",
    "  local curr_sum\n  local curr_min\n  local i\n  local j\n  local nums\n  local min_sum\n\n  nums=$1\n  min_sum=$2\n\n  for i in \"${nums[@]}\"\n  do\n    curr_sum=0\n    curr_min=0\n    for j in \"${nums[@]}\"\n    do\n      curr_sum=`expr $curr_sum + $j`\n      if [ $curr_sum - $min_sum ] < 0\n      then\n        min_sum=`expr $min_sum + $j`\n        break\n      fi\n    done\n  done\n\n  echo $min_sum",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local k\n  local nums\n  local start\n  local end\n\n  nums=$1\n  min_sum=$2\n\n  for i in \"${nums[@]}\"; do\n    curr_sum=0\n    start=0\n    end=0\n    for j in \"${nums[@]}\"; do\n      if [[ $j -ge $i ]]; then\n        curr_sum=$((curr_sum + $j))\n        end=$((end + 1))\n      else\n        if [[ $end -eq 0 ]]; then\n          if [[ $start -ne 0 ]]; then\n            curr_sum=$((curr_sum + $start))\n          fi\n          start=$((start + 1))\n        fi\n      fi\n    done\n    if [[ $curr_sum -lt $min_sum ]]; then\n      min_sum=$curr_sum\n    fi\n  done\n\n  echo $min_sum",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_start\n  local min_end\n  local nums\n  local min_start_index\n  local min_end_index\n\n  nums=$1\n  min_sum=0\n  min_start_index=0\n  min_end_index=0\n  for i in $nums; do\n    sum=$(($i+$((1+$nums[$i]-1))-1))\n    if [ $sum -lt $min_sum ]; then\n      min_sum=$sum\n      min_start_index=$i\n      min_end_index=$((1+$nums[$i]-1))\n    fi\n  done\n  min_start=$min_start_index\n  min_end=$min_end_index\n  min_start_index=$min_start_index\n  min_end_index=$min_end_index\n  for i in $nums; do\n    if [ $i -lt $min_start ]; then\n      min_start=$i\n      min_start_index=$i\n    fi\n    if [ $i -gt $min_end ]; then\n      min_end=$i\n      min_end_index=$i\n    fi\n  done\n  min_start=$min_start_index\n  min_end=$min_end_index\n  min_start_index=$min_start_index\n  min_end_index=$min_end_index\n  for i in $nums; do\n    if [ $i -lt $min_start ]; then\n      min_start=$i\n      min_start_index=$i\n    fi\n    if [ $i -gt $min_end ]; then\n      min_end=$i\n      min_end_index=$i\n    fi\n  done\n  min_start=$min_start_index\n  min_end=$min_end_index\n  min_start_index=$min_start_index\n  min_end_index=$min_end_index\n  for i in $nums; do\n    if [ $i -lt $min_start ]; then\n      min_start=$i\n      min_start_index=$",
    "  local i j k\n  local min_sum\n  local nums\n  local sum\n  local start\n  local end\n\n  nums=$1\n  min_sum=$2\n\n  for i in $nums\n  do\n    sum=$i\n    start=1\n    end=1\n    for j in $nums\n    do\n      if [ $j -lt $i ]\n      then\n        sum=$sum+$j\n        end=end+1\n      else\n        start=start+1\n        sum=sum\n      fi\n    done\n\n    if [ $sum -lt $min_sum ]\n    then\n      min_sum=$sum\n      for k in $nums\n      do\n        if [ $k -le $i ]\n        then\n          sum=$sum+$k\n        else\n          sum=$sum\n        fi\n      done\n    fi\n  done\n\n  echo $min_sum",
    "  local nums\n  local min_sum\n  local i\n  local j\n  local k\n  local sum\n  local min_sum_i\n  local min_sum_j\n  local min_sum_k\n  local min_sum_sum\n\n  nums=()\n  min_sum=0\n  for i in \"$@\"; do\n    sum=0\n    min_sum_i=0\n    min_sum_j=0\n    min_sum_k=0\n    for j in \"${i//[0-9]/}\"; do\n      for k in \"${j//[0-9]/}\"; do\n        sum=$(($sum + $(nums[$j])))\n        if [ $sum -lt $min_sum ]; then\n          min_sum_i=$j\n          min_sum_j=$k\n          min_sum_k=$sum\n        fi\n      done\n    done\n    if [ $sum -lt $min_sum ]; then\n      min_sum_i=$i\n      min_sum_j=$j\n      min_sum_k=$sum\n    fi\n    nums=($nums $i)\n    min_sum=$min_sum\n  done\n  min_sum_sum=$min_sum\n  if [ $min_sum_sum -lt $min_sum ]; then\n    min_sum_i=$min_sum_i\n    min_sum_j=$min_sum_j\n    min_sum_k=$min_sum_k\n  fi\n  echo $min_sum_i $min_sum_j $min_sum_k",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local minSubArraySum\n\n  nums=$1\n  minSubArraySum=\"$1\"\n\n  for ((i=0; i<=nums[0]; i++)); do\n    for ((j=0; j<=nums[0]; j++)); do\n      currSum=0\n      for ((k=i; k<=j; k++)); do\n        currSum=$(($currSum + nums[k]))\n      done\n      if ((currSum < minSum)); then\n        minSum=$currSum\n      fi\n    done\n  done\n\n  minSubArraySum=$minSum\n  return $minSubArraySum",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_i\n  local min_j\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_sum\n\n  nums=$1\n  nums_len=$(echo $nums | wc -c)\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  min_i=0\n  min_j=0\n  min_sum=0\n\n  while [ $nums_i < $nums_len ]; do\n    while [ $nums_j < $nums_len ]; do\n      nums_i=$(echo $nums | sed -n '$(($nums_i+1))p')\n      nums_j=$(echo $nums | sed -n '$(($nums_j+1))p')\n      nums_sum=$(echo $nums | sed -n '$(($nums_i+1))p')\n      if [ $nums_i == $nums_j ]; then\n        min_i=$nums_i\n        min_j=$nums_j\n        min_sum=$nums_sum\n        break\n      fi\n      nums_j=$(echo $nums | sed -n '$(($nums_j+1))p')\n      nums_sum=$(echo $nums | sed -n '$(($nums_i+1))p')\n      if [ $nums_i == $nums_j ]; then\n        min_i=$nums_i\n        min_j=$nums_j\n        min_sum=$nums_sum\n        break\n      fi\n    done\n    nums_i=$(echo $nums | sed -n '$(($nums_i+1))p')\n    nums_j=0\n    nums_sum=0\n  done\n\n  echo $min_i $min_j $min_sum",
    "  local -a\n  local -a nums\n  local -a min\n  local -a sum\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a bb\n  local -a cc\n  local -a dd\n  local -a ee\n  local -a ff\n  local -a gg\n  local -a hh\n  local -a ii\n  local -a jj\n  local -a kk\n  local -a ll\n  local -a mm\n  local -a nn\n  local -a oo\n  local -a pp\n  local -a qq\n  local -a rr\n  local -a ss\n  local -a tt\n  local -a uu\n  local -a vv\n  local -a ww\n  local -a xx\n  local -a yy\n  local -a zz\n  local -a aaa\n  local -a bbb\n  local -a ccc\n  local -a ddd\n  local -a eee\n  local -a fff\n  local -a ggg\n  local -a hhh\n  local -a iii\n  local -a jjj\n  local -a kkk\n  local -a lll\n  local -a mmm\n  local -a nnn\n  local -a ooo\n  local -a ppp\n  local -a qqq\n  local -a rrr\n  local -a sss\n  local -a ttt\n  local -a uuu\n  local -a vvv\n  local -a www\n  local -a xxx\n  local -a yyy\n  local -a zzz\n  local -a aaaa\n  local -a bbbb\n  local -a cccc\n  local -a",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_len_i\n    local nums_len_j\n    local nums_i_j\n\n    nums=$1\n    nums_len=$(len $nums)\n\n    if [ $nums_len == 0 ]; then\n        min_sum=$0\n    else\n        min_sum=$(min $nums)\n    fi\n\n    for i in $(seq 1 $nums_len); do\n        curr_sum=$(min $nums[$i] $nums[$i+1])\n        if [ $curr_sum -lt $min_sum ]; then\n            min_sum=$curr_sum\n        fi\n    done\n\n    return $min_sum",
    "  local currMin=$1\n  local i\n  for ((i=1; i<=${#1}; i++)) {\n    currMin=$((min(${currMin}, ${#nums[@]}*${nums[$i]})))\n  }\n  echo $currMin",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_index\n  local min_value\n\n  min_sum=0\n  min_index=0\n  min_value=0\n\n  for i in \"$@\"; do\n    sum=0\n    for j in \"${i//[0-9]/}\"; do\n      sum=sum+$j\n    done\n    if [ $sum -lt $min_sum ]; then\n      min_sum=$sum\n      min_index=$i\n      min_value=$j\n    fi\n  done\n\n  echo $min_index\n  echo $min_value\n  echo $min_sum",
    "  local result=0\n  local i=0\n  local j=0\n  local nums=()\n  local min=0\n  local min_index=0\n  local min_sum=0\n  local min_sum_index=0\n  local min_sum_sum=0\n  local min_sum_sum_index=0\n  local min_sum_sum_sum=0\n  local min_sum_sum_sum_index=0\n\n  while true; do\n    if [[ $i -lt 0 ]]; then\n      break\n    fi\n    nums=(${nums[@]} $i)\n    i=${i+1}\n  done\n\n  while true; do\n    if [[ $j -lt 0 ]]; then\n      break\n    fi\n    nums=(${nums[@]} $j)\n    j=${j+1}\n  done\n\n  for i in ${nums[@]}; do\n    if [[ $i -ge 0 ]]; then\n      result=$(($result + $i))\n    fi\n  done\n\n  if [[ $result -gt 0 ]]; then\n    min_sum=$result\n    min_sum_index=0\n    min_sum_sum=$result\n    min_sum_sum_index=0\n  fi\n\n  for i in ${nums[@]}; do\n    if [[ $i -ge 0 ]]; then\n      result=$(($result + $i))\n    fi\n  done\n\n  if [[ $result -gt 0 ]]; then\n    min_sum=$result\n    min_sum_index=0\n    min_sum_sum=$result\n    min_sum_sum_index=0\n  fi\n\n  for i in ${nums[@]}; do\n    if [[ $i -ge 0 ]]; then\n      result=$(($result + $i))\n    fi\n  done\n\n  if [[ $result -gt 0 ]]; then\n    min_sum=$result\n    min_sum_index=0\n    min_sum_sum=$result\n    min_sum_sum_index=0\n  fi\n\n  for i in ${nums[@]}; do\n    if [[ $i -ge 0 ]]; then\n      result=$",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local min_sub_array_sum\n  local min_sub_array_sum_index\n\n  min_sub_array_sum=0\n  min_sub_array_sum_index=0\n\n  nums=$1\n  for i in $nums; do\n    curr_sum=$(($i))\n    min_sub_array_sum=$(($min_sub_array_sum + $curr_sum))\n    min_sub_array_sum_index=$(($min_sub_array_sum_index + 1))\n    if [ $min_sub_array_sum_index -gt 0 ]; then\n      min_sub_array_sum=$(($min_sub_array_sum - $curr_sum))\n      min_sub_array_sum_index=$(($min_sub_array_sum_index - 1))\n    fi\n  done\n\n  echo $min_sub_array_sum",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_start\n  local min_end\n  local nums\n  local min_start_index\n  local min_end_index\n  local min_start_value\n  local min_end_value\n\n  nums=$1\n  min_sum=0\n  min_start=0\n  min_end=0\n  min_start_index=0\n  min_end_index=0\n  min_start_value=0\n  min_end_value=0\n\n  for i in $nums; do\n    sum=$(($i+min_sum))\n    if [ $sum -lt $min_sum ]; then\n      min_sum=$sum\n      min_start=$i\n      min_start_index=i\n      min_start_value=$i\n      min_end_index=i\n      min_end_value=$i\n    fi\n  done\n\n  for i in $nums; do\n    if [ $i -gt $min_start ]; then\n      sum=$(($i+min_sum))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_start=$i\n        min_start_index=i\n        min_start_value=$i\n        min_end_index=i\n        min_end_value=$i\n      fi\n    fi\n  done\n\n  for i in $nums; do\n    if [ $i -gt $min_start ]; then\n      sum=$(($i+min_sum))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_start=$i\n        min_start_index=i\n        min_start_value=$i\n        min_end_index=i\n        min_end_value=$i\n      fi\n    fi\n  done\n\n  for i in $nums; do\n    if [ $i -gt $min_start ]; then\n      sum=$(($i+min_sum))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_start=$i\n        min_start_index=i",
    "  local i j k\n  local min sum\n  local nums\n  local result\n\n  nums=()\n  while read -r i j k\n    nums=($nums $(($i $j $k)))\n  end\n\n  min=0\n  for i in \"${nums[@]}\"; do\n    sum=$(($i))\n    if [ $sum -lt 0 ]; then\n      min=$sum\n    fi\n  done\n\n  result=$(($min))\n  return $result",
    "  local result\n  local i\n  local j\n  local sum\n  local nums\n  local min\n\n  nums=$1\n  min=$2\n\n  for i in $nums\n  do\n    sum=$i\n    for j in $nums[@]\n    do\n      sum=$(($sum $j))\n    done\n    if [ $sum -lt $min ]; then\n      min=$sum\n    fi\n  done\n\n  result=$min\n  return $result",
    "  local result=0\n  local i=0\n  local j=0\n  local nums=()\n  local min=0\n  local sum=0\n  local minSum=0\n  local minSumIndex=0\n  local minSumIndex2=0\n  local minSumIndex3=0\n  local minSumIndex4=0\n  local minSumIndex5=0\n  local minSumIndex6=0\n  local minSumIndex7=0\n  local minSumIndex8=0\n  local minSumIndex9=0\n  local minSumIndex10=0\n  local minSumIndex11=0\n  local minSumIndex12=0\n  local minSumIndex13=0\n  local minSumIndex14=0\n  local minSumIndex15=0\n  local minSumIndex16=0\n  local minSumIndex17=0\n  local minSumIndex18=0\n  local minSumIndex19=0\n  local minSumIndex20=0\n  local minSumIndex21=0\n  local minSumIndex22=0\n  local minSumIndex23=0\n  local minSumIndex24=0\n  local minSumIndex25=0\n  local minSumIndex26=0\n  local minSumIndex27=0\n  local minSumIndex28=0\n  local minSumIndex29=0\n  local minSumIndex30=0\n  local minSumIndex31=0\n  local minSumIndex32=0\n  local minSumIndex33=0\n  local minSumIndex34=0\n  local minSumIndex35=0\n  local minSumIndex36=0\n  local minSumIndex37=0\n  local minSumIndex38=0\n  local minSumIndex39=0\n  local minSumIndex40=0\n  local minSumIndex41=0\n  local minSumIndex42=0\n  local minSumIndex43=0\n  local minSumIndex44=0\n  local minSumIndex45=0\n  local minSumIndex46=0\n  local minSumIndex47=0\n  local minSumIndex48=0\n  local minSumIndex49=0\n  local minSumIndex50=0\n  local minSumIndex51=0\n  local minSumIndex52=0\n  ",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_len_i\n    local nums_len_j\n\n    nums=$1\n    nums_len=0\n    nums_i=0\n    nums_j=0\n    nums_len_i=0\n    nums_len_j=0\n\n    while [ $nums_i -lt $nums_len ]; do\n        nums_i=$((nums_i+1))\n        nums_len_i=$((nums_len_i+1))\n        nums_j=$((nums_j+1))\n        nums_len_j=$((nums_len_j+1))\n    done\n\n    while [ $nums_j -lt $nums_len ]; do\n        nums_j=$((nums_j+1))\n        nums_len_j=$((nums_len_j+1))\n    done\n\n    while [ $nums_i -lt $nums_len ]; do\n        nums_i=$((nums_i+1))\n        nums_len_i=$((nums_len_i+1))\n    done\n\n    while [ $nums_j -lt $nums_len ]; do\n        nums_j=$((nums_j+1))\n        nums_len_j=$((nums_len_j+1))\n    done\n\n    while [ $nums_i -lt $nums_len ]; do\n        nums_i=$((nums_i+1))\n        nums_len_i=$((nums_len_i+1))\n    done\n\n    while [ $nums_j -lt $nums_len ]; do\n        nums_j=$((nums_j+1))\n        nums_len_j=$((nums_len_j+1))\n    done\n\n    while [ $nums_i -lt $nums_len ]; do\n        nums_i=$((nums_i+1))\n",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_len_i\n    local nums_len_j\n    local nums_i_j\n\n    nums=$1\n    nums_len=$(echo $nums | wc -l)\n    nums_i=0\n    nums_j=0\n    nums_len_i=0\n    nums_len_j=0\n    nums_i_j=0\n\n    while [ $nums_i < $nums_len ]; do\n        curr_sum=$(echo $nums | awk '{print $1}')\n        min_sum=$(echo $nums | awk '{print $1}')\n        i=$(echo $nums | awk -F \" \" '{print $1}')\n        j=$(echo $nums | awk -F \" \" '{print $2}')\n        nums_i=$(echo $nums | awk -F \" \" '{print $1}')\n        nums_j=$(echo $nums | awk -F \" \" '{print $2}')\n        nums_len_i=$(echo $nums | awk -F \" \" '{print $1}')\n        nums_len_j=$(echo $nums | awk -F \" \" '{print $2}')\n        nums_i_j=$(echo $nums | awk -F \" \" '{print $1}')\n        nums_i_j=$(echo $nums | awk -F \" \" '{print $2}')\n        nums_i_j=$(echo $nums | awk -F \" \" '{print $3}')\n        nums_i_j=$(echo $nums | awk -F \" \" '{print $4}')\n        nums_i_j=$(echo $nums | awk -F \" \" '{print $5}')\n        nums_i_j=$(echo $nums |",
    "  local -a\n  local -a nums\n  local -a min\n  local -a sum\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a aaa\n  local -a aab\n  local -a aac\n  local -a aad\n  local -a aae\n  local -a aaf\n  local -a aag\n  local -a aah\n  local -a aai\n  local -a aaj\n  local -a aak\n  local -a aal\n  local -a aam\n  local -a aan\n  local -a aao\n  local -a aap\n  local -a aaq\n  local -a aar\n  local -a aas\n  local -a aat\n  local -a aau\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a aaaa\n  local -a aaab\n  local -a aaac\n  local -a aaad\n  local -a aaae\n  local",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_len_i\n  local nums_len_j\n  local nums_i_j\n  local nums_i_j_len\n  local nums_i_j_len_i\n  local nums_i_j_len_j\n  local nums_i_j_len_i_j\n  local nums_i_j_len_i_j_len\n  local nums_i_j_len_i_j_len_i\n  local nums_i_j_len_i_j_len_j\n  local nums_i_j_len_i_j_len_i_j\n  local nums_i_j_len_i_j_len_i_j_len\n  local nums_i_j_len_i_j_len_i_j_len_i\n  local nums_i_j_len_i_j_len_i_j_len_j\n  local nums_i_j_len_i_j_len_i_j_len_i_j\n  local nums_i_j_len_i_j_len_i_j_len_i_j_len\n  local nums_i_j_len_i_j_len_i_j_len_i_j_len_i\n  local nums_i_j_len_i_j_len_i_j_len_i_j_len_j\n  local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j\n  local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len\n  local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len_i\n  local nums_i_j_len_i_j",
    "  local curr_sum\n  local i\n  local j\n  local nums\n  local min_sum\n  local min_start\n  local min_end\n\n  nums=$1\n  min_sum=0\n  min_start=0\n  min_end=0\n\n  for i in $nums; do\n    curr_sum=$(($i))\n    if [ $curr_sum -lt 0 ]; then\n      min_sum=$(($min_sum))\n      min_start=$(($min_start))\n      min_end=$(($min_end))\n      break\n    fi\n  done\n\n  for i in $nums; do\n    curr_sum=$(($i))\n    if [ $curr_sum -lt 0 ]; then\n      continue\n    fi\n    if [ $curr_sum -lt $min_sum ]; then\n      min_sum=$(($curr_sum))\n      min_start=$(($i-1))\n      min_end=$(($i))\n    fi\n  done\n\n  echo $min_start $min_end",
    "  local i j k\n  while read i j k\n  do\n    if [ $? -ne 0 ]\n    then\n      return 1\n    fi\n    if [ $i -lt 0 ]\n    then\n      continue\n    fi\n    if [ $j -lt 0 ]\n    then\n      continue\n    fi\n    if [ $k -lt 0 ]\n    then\n      continue\n    fi\n    if [ $i -gt $j ]\n    then\n      continue\n    fi\n    if [ $k -gt $j ]\n    then\n      continue\n    fi\n    if [ $i -gt $k ]\n    then\n      continue\n    fi\n    if [ $j -gt $k ]\n    then\n      continue\n    fi\n    if [ $i -gt 0 ]\n    then\n      ((min_sum += $i))\n    fi\n    if [ $j -gt 0 ]\n    then\n      ((min_sum += $j))\n    fi\n    if [ $k -gt 0 ]\n    then\n      ((min_sum += $k))\n    fi\n  done < $1\n  return 0",
    "  local result=0\n  local i=0\n  local j=0\n  local sum=0\n  local nums=()\n  local min=0\n  local min_index=0\n  local min_sum=0\n  local min_i=0\n  local min_j=0\n  local min_num=0\n  local min_num_index=0\n\n  while true; do\n    if [[ $i -lt 0 ]]; then\n      break\n    fi\n    if [[ $j -lt 0 ]]; then\n      break\n    fi\n    sum=$(echo $nums[$i] | tr -d ' ')\n    if [[ $sum -gt 0 ]]; then\n      sum=$(echo $nums[$j] | tr -d ' ')\n      if [[ $sum -gt 0 ]]; then\n        sum=$(echo $nums[$i] | tr -d ' ')\n        if [[ $sum -gt 0 ]]; then\n          sum=$(echo $nums[$j] | tr -d ' ')\n          if [[ $sum -gt 0 ]]; then\n            sum=$(echo $nums[$i] | tr -d ' ')\n            if [[ $sum -gt 0 ]]; then\n              sum=$(echo $nums[$j] | tr -d ' ')\n              if [[ $sum -gt 0 ]]; then\n                sum=$(echo $nums[$i] | tr -d ' ')\n                if [[ $sum -gt 0 ]]; then\n                  sum=$(echo $nums[$j] | tr -d ' ')\n                  if [[ $sum -gt 0 ]]; then\n                    sum=$(echo $nums[$i] | tr -d ' ')\n                    if [[ $sum -gt 0 ]]; then\n                      sum=$(echo $nums[$j] | tr -d ' ')\n                      if [[ $sum -gt 0 ]]; then\n                        sum=$(echo $nums[$i] | tr -d ' ')\n                        if [[ $sum -gt 0 ]]; then\n                          sum=$(echo $nums[$j] | tr -d ' ')\n                          if [[ $sum -gt 0 ]]; then",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_sum\n\n  nums=$1\n  nums_len=0\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  min_sum=0\n  min=\"\"\n\n  for ((i=0;i<nums_len;i++)); do\n    nums_i=$i\n    nums_j=0\n    nums_sum=0\n    for ((j=i;j<nums_len;j++)); do\n      nums_j=$j\n      nums_sum=$((nums_sum + nums[nums_i] + nums[nums_j]))\n      if ((nums_sum < min_sum)); then\n        min_sum=$nums_sum\n        min=$nums[nums_i] + nums[nums_j]\n      fi\n    done\n  done\n\n  if ((min_sum == 0)); then\n    min_sum=min\n  fi\n\n  echo $min_sum",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_len_i\n  local nums_len_j\n\n  nums=$1\n  nums_len=$(echo $nums | wc -c)\n  nums_i=0\n  nums_j=0\n  nums_len_i=0\n  nums_len_j=0\n\n  while [ $nums_i < $nums_len ]; do\n    nums_i=$(echo $nums | awk '{print $1}')\n    nums_len_i=$(echo $nums | wc -c)\n    nums_j=0\n    nums_len_j=0\n    while [ $nums_j < $nums_len_i ]; do\n      nums_j=$(echo $nums | awk '{print $1}')\n      nums_len_j=$(echo $nums | wc -c)\n      curr_sum=$(echo $nums | awk '{print $1}')\n      min_sum=$(echo $nums | awk '{print $1}')\n      if [ $nums_len_j - $nums_len_i - 1 > 0 ]; then\n        min_sum=$(echo $nums | awk '{print $1}')\n      fi\n      if [ $curr_sum - $min_sum > 0 ]; then\n        min_sum=$curr_sum\n      fi\n      nums_j=$(echo $nums | awk '{print $1}')\n      nums_len_j=$(echo $nums | wc -c)\n    done\n    nums_i=$(echo $nums | awk '{print $1}')\n    nums_len_i=$(echo $nums | wc -c)\n  done\n  echo $min_sum",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_index\n  local min_index_str\n  local nums\n  local nums_len\n  local nums_str\n  local nums_str_len\n  local nums_str_i\n  local nums_str_j\n  local nums_str_k\n  local nums_str_l\n  local nums_str_m\n  local nums_str_n\n  local nums_str_o\n  local nums_str_p\n  local nums_str_q\n  local nums_str_r\n  local nums_str_s\n  local nums_str_t\n  local nums_str_u\n  local nums_str_v\n  local nums_str_w\n  local nums_str_x\n  local nums_str_y\n  local nums_str_z\n\n  nums_str=\"$1\"\n  nums_str_len=$#nums_str\n  nums_str_i=0\n  nums_str_j=0\n  nums_str_k=0\n  nums_str_l=0\n  nums_str_m=0\n  nums_str_n=0\n  nums_str_o=0\n  nums_str_p=0\n  nums_str_q=0\n  nums_str_r=0\n  nums_str_s=0\n  nums_str_t=0\n  nums_str_u=0\n  nums_str_v=0\n  nums_str_w=0\n  nums_str_x=0\n  nums_str_y=0\n  nums_str_z=0\n\n  nums_str_i=0\n  nums_str_j=0\n  nums_str_k=0\n  nums_str_l=0\n  nums_str_m=0\n  nums_str_n=0\n  nums_str_o=0\n  nums_str_p=0\n  nums_str_",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local len\n    local min_len\n    local min_i\n    local min_j\n\n    nums=$1\n    len=${#nums}\n    min_len=${#nums[0]}\n    min_i=0\n    min_j=0\n\n    for i in $(seq 1 $len); do\n        curr_sum=0\n        for j in $(seq 1 $len); do\n            curr_sum=$(($curr_sum + $nums[$j]))\n            if [ $curr_sum - $min_sum > 0 ]; then\n                min_sum=$curr_sum\n                min_i=$i\n                min_j=$j\n            fi\n        done\n    done\n\n    echo $min_i $min_j",
    "  local currMin\n  local currSum\n  local i\n  local j\n  local nums\n  local minSum\n  local minSubArraySum\n  local minSubArraySum_i\n  local minSubArraySum_j\n  local minSubArraySum_i_j\n\n  nums=$1\n  minSubArraySum=\"$1\"\n\n  for i in $nums; do\n    currSum=$i\n    minSum=$i\n\n    for j in $(seq 1 $((len(nums)-1))); do\n      currSum=$(($currSum + $nums[$j]))\n      if [ $currSum - $minSum > 0 ]; then\n        minSum=$currSum\n      fi\n    done\n\n    minSubArraySum_i=$minSum\n    minSubArraySum_j=$i\n\n    for j in $(seq 1 $((len(nums)-1))); do\n      currSum=$(($currSum + $nums[$j]))\n      if [ $currSum - $minSum > 0 ]; then\n        minSum=$currSum\n        minSubArraySum_i=$minSum\n        minSubArraySum_j=$j\n      fi\n    done\n\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j\n    minSubArraySum_i_j=$minSubArraySum_i_j",
    "  local result=0\n  local i\n  local j\n  local min\n  local sum\n  local nums\n\n  nums=$1\n  min=$2\n\n  for i in $nums\n  do\n    sum=$i\n    for j in $nums[@]\n    do\n      sum=$sum + $j\n    done\n    if [ $sum -lt $min ]; then\n      min=$sum\n    fi\n  done\n\n  result=$min\n  return $result",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_index\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_sum\n\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  nums_len=0\n  while true; do\n    if [[ $# -eq 0 ]]; then\n      break\n    fi\n    nums_i=$((nums_i + 1))\n    nums_j=$((nums_j + 1))\n    nums_sum=$((nums_sum + $1))\n  done\n\n  nums_len=$((nums_i - 1))\n  min_index=$((nums_len + 1))\n  min_sum=$((nums_sum))\n  for i in $(seq 1 $nums_len); do\n    for j in $(seq 1 $nums_len); do\n      if [[ $((nums_i - 1) - $i) - $((nums_j - 1) - $j) ]]; then\n        nums_sum=$((nums_sum - $1))\n        if [[ $nums_sum -lt $min_sum ]]; then\n          min_sum=$nums_sum\n          min_index=$((i + j))\n        fi\n      fi\n    done\n  done\n\n  echo $min_index",
    "    local curr_sum\n    local i\n    local j\n    local min_sum\n    local nums\n    local sub_sum\n    local sub_sum_i\n    local sub_sum_j\n    local sub_sum_len\n    local sub_sum_start\n    local sub_sum_end\n\n    nums=$1\n    min_sum=$2\n\n    # Initialize\n    sub_sum_len=0\n    sub_sum_start=0\n    sub_sum_end=0\n    sub_sum_i=0\n    sub_sum_j=0\n\n    # Iterate over the array\n    for i in $nums; do\n        curr_sum=$(($i))\n        # If the current sum is less than the minimum sum, update the minimum sum\n        if [[ $curr_sum -lt $min_sum ]]; then\n            min_sum=$curr_sum\n        fi\n        # If the current sum is greater than zero, then we have a non-empty sub-array\n        if [[ $curr_sum -gt 0 ]]; then\n            # If the sub-array is the first one, then we need to initialize\n            if [[ $sub_sum_len == 0 ]]; then\n                sub_sum_start=$i\n                sub_sum_end=$i\n                sub_sum_i=0\n                sub_sum_j=0\n            fi\n            # If the sub-array is not the first one, then we need to update\n            else\n                sub_sum_i=$sub_sum_i\n                sub_sum_j=$sub_sum_j\n                sub_sum_len=$sub_sum_len\n                sub_sum_start=$sub_sum_start\n                sub_sum_end=$sub_sum_end\n            fi\n            # Iterate over the sub-array\n            for j in $(seq $sub_sum_i $sub_sum_j); do\n                sub_sum_i=$(($j))\n                sub_sum_j=$(($j+1))\n                sub_sum=$(($sub_sum_i + $sub_sum_j))\n                # If the sub-array is the last one, then we need to update\n                if [[ $",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_len_i\n    local nums_len_j\n    local nums_i_j\n    local nums_i_j_len\n    local nums_i_j_len_i\n    local nums_i_j_len_j\n    local nums_i_j_len_i_j\n    local nums_i_j_len_i_j_i\n    local nums_i_j_len_i_j_i_j\n    local nums_i_j_len_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_",
    "  local i j k\n  while read i j k\n  do\n    if [[ $i -lt 0 ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $j -lt 0 ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $k -lt 0 ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $i -gt $j ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $j -gt $k ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $i -gt $k ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $j -gt $i ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $k -gt $j ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $i -gt $j ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $k -gt $i ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $j -gt $k ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      fi\n    fi\n    if [[ $i -gt $k ]]\n      then\n        echo \"Usage: $0 <array> <start> <end>\"\n        exit 1\n      ",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local start\n    local end\n\n    nums=$1\n    min_sum=$2\n\n    for i in $nums\n    do\n        curr_sum=0\n        start=0\n        end=0\n        for j in $nums\n        do\n            if $j == i\n            then\n                start=$j\n                end=$j\n                break\n            fi\n        done\n\n        for j in $nums\n        do\n            if $j == i\n            then\n                continue\n            fi\n            curr_sum=$((curr_sum + $j))\n            if $j < $start\n            then\n                start=$j\n            fi\n            if $j > $end\n            then\n                end=$j\n            fi\n        done\n\n        if $curr_sum < $min_sum\n        then\n            min_sum=$curr_sum\n        fi\n    done\n\n    echo $min_sum",
    "  local currMin=$1\n  local i\n  for ((i=1; i<=${#1}-1; i++)); do\n    currMin=$((currMin + $1[i]))\n  done\n  echo $currMin",
    "  local result\n  local i\n  local j\n  local min\n  local sum\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_len_i\n  local nums_len_j\n  local nums_i_j\n\n  nums=$1\n  nums_len=$(echo $nums | wc -w)\n  nums_i=0\n  nums_j=0\n  nums_len_i=0\n  nums_len_j=0\n  nums_i_j=0\n\n  while [ $nums_i < $nums_len ]; do\n    sum=$(echo $nums | awk '{print $1}')\n    if [ $sum == \"\" ]; then\n      break\n    fi\n    nums_i=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_len_i=$(echo $nums | awk '{print $1}')\n    nums_len_j=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_i_j=$(echo $nums | awk '{print $1}')\n    nums_i_j",
    "  local i j k\n  local result\n  for ((i=1; i<=${#nums[@]}; i++)) {\n    for ((j=i; j<=${#nums[@]}; j++)) {\n      for ((k=j; k<=${#nums[@]}; k++)) {\n        if ((i != j) && (j != k) && (k != i)) {\n          result=$((nums[i] + nums[j] + nums[k]))\n          if (($result < nums[i]) || ($result < nums[j]) || ($result < nums[k])) {\n            nums[i]=nums[i] + nums[j] + nums[k]\n            nums[j]=nums[i] + nums[j] + nums[k]\n            nums[k]=nums[i] + nums[j] + nums[k]\n          }\n        }\n      }\n    }\n  }\n  echo $nums[1]",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local result\n\n  nums=$1\n  min_sum=$2\n\n  for i in \"${nums[@]}\"\n  do\n    curr_sum=0\n    for j in \"${nums[@]}\"\n    do\n      curr_sum=$(($curr_sum $j))\n    done\n    if [ $curr_sum -lt $min_sum ]; then\n      min_sum=$curr_sum\n    fi\n  done\n\n  result=$(($min_sum))\n  echo $result",
    "  local i\n  local j\n  local sum\n  local min\n  local nums\n  local min_sum\n  local min_start\n  local min_end\n\n  nums=()\n  min_sum=0\n  min_start=0\n  min_end=0\n\n  for i in \"$@\"; do\n    sum=0\n    for j in \"${nums[@]}\"; do\n      sum=$(($sum + $j))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_start=$i\n        min_end=$j\n      fi\n    done\n    nums=($nums $i)\n  done\n\n  if [ $min_sum -lt 0 ]; then\n    min_sum=0\n  fi\n\n  echo $min_sum",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local minSubArray\n  local minSubArraySum\n\n  nums=$1\n  minSubArraySum=$2\n  minSum=$3\n\n  for i in \"${nums[@]}\"; do\n    currSum=0\n    minSubArray=0\n    for j in \"${nums[@]}\"; do\n      currSum=$(($currSum + $j))\n      if [ $currSum - $minSum ] < 0; then\n        minSubArray=$j\n        minSum=$currSum\n      fi\n    done\n    if [ $minSubArray - $minSubArraySum ] < 0; then\n      minSubArraySum=$minSubArray\n    fi\n  done\n  echo $minSubArraySum",
    "  local result\n  local i\n  local j\n  local sum\n  local nums\n  local min\n  local min_index\n  local min_sum\n\n  nums=$1\n  min_index=0\n  min_sum=0\n  for i in $nums; do\n    sum=$(($i+1))\n    if [ $sum -lt 0 ]; then\n      min_sum=$sum\n      min_index=$i\n    fi\n  done\n\n  for i in $nums; do\n    if [ $i -gt 0 ]; then\n      sum=$(($i+1))\n      if [ $sum -lt 0 ]; then\n        min_sum=$sum\n        min_index=$i\n      fi\n    fi\n  done\n\n  result=$(($min_index))\n  return $result",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_i\n  local min_j\n\n  min_sum=0\n  min_i=0\n  min_j=0\n\n  for i in \"${1[@]}\"; do\n    sum=0\n    for j in \"${i[@]}\"; do\n      sum=sum+$j\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_i=$i\n        min_j=$j\n      fi\n    done\n  done\n\n  if [ $min_sum -gt 0 ]; then\n    echo $min_sum\n  else\n    echo $min_i $min_j\n  fi",
    "  local nums=$1\n  local min_sum=0\n  local i=0\n  local j=0\n  for ((i=0; i<${#nums}-1; i++)); do\n    for ((j=i+1; j<${#nums}; j++)); do\n      min_sum=$((min_sum + ${nums[i]} + ${nums[j]}))\n    done\n  done\n  echo $min_sum",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_sum\n  local nums_min\n  local nums_min_sum\n\n  nums=$1\n  nums_len=$(expr $(wc -l $nums) - 1)\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  nums_min=0\n  nums_min_sum=0\n\n  while [ $nums_i -lt $nums_len ]; do\n    if [ $nums_i -lt $nums_j ]; then\n      nums_sum=$nums_sum + $nums[$nums_i]\n      nums_i=$nums_i + 1\n    else\n      nums_sum=$nums_sum + $nums[$nums_i]\n      nums_i=$nums_i + 1\n      nums_j=$nums_j + 1\n      nums_sum=$nums_sum + $nums[$nums_j]\n      nums_i=$nums_i + 1\n    fi\n  done\n\n  min_sum=$nums_sum\n  nums_min=$nums_i\n  nums_min_sum=$nums_sum\n\n  for i in $(seq 1 $nums_len); do\n    nums_i=$(expr $i + 1)\n    nums_j=$(expr $nums_i + 1)\n    nums_sum=$nums_sum + $nums[$nums_i] - $nums[$nums_j]\n    if [ $nums_sum -lt $min_sum ]; then\n      min_sum=$nums_sum\n      nums_min=$nums_i\n      nums_min_sum=$nums_sum\n    fi\n  done\n\n  echo $min_sum",
    "    local i\n    local j\n    local sum\n    local min_sum\n    local min_start\n    local min_end\n    local nums\n\n    nums=$1\n    min_sum=0\n    min_start=0\n    min_end=0\n\n    for i in $nums; do\n        sum=$(($i+1))\n        if [ $sum -gt $min_sum ]; then\n            min_sum=$sum\n            min_start=$i\n            min_end=i\n        fi\n    done\n\n    if [ $min_start == $min_end ]; then\n        min_sum=$min_sum\n    else\n        min_sum=$min_sum-$min_start\n    fi\n\n    echo $min_sum",
    "  local i j k\n  while read i j k\n  do\n    if [[ $i -gt 0 ]]\n      then\n        local sum\n        sum=$(( $i + $j + $k ))\n        if [[ $sum -lt 0 ]]\n          then\n            echo $sum\n          fi\n        fi\n      fi\n    fi\n  done",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local min_len\n    local min_start\n    local min_end\n\n    nums=$1\n    nums_len=0\n    for i in $nums; do\n        nums_len=nums_len+1\n    done\n\n    min_len=nums_len\n    min_start=0\n    min_end=0\n\n    for i in $nums; do\n        curr_sum=$(($i))\n        if [ $min_len -gt 0 ]; then\n            if [ $curr_sum -lt $min_sum ]; then\n                min_len=min_len\n                min_start=min_start\n                min_end=min_end\n                min_sum=$curr_sum\n            fi\n        fi\n        if [ $i -gt 0 ]; then\n            min_len=min_len+1\n            min_start=min_start+1\n        fi\n        if [ $i -lt 0 ]; then\n            min_len=min_len+1\n            min_end=min_end+1\n        fi\n    done\n\n    if [ $min_len -eq 0 ]; then\n        min_sum=0\n    else\n        min_sum=$min_sum\n    fi\n\n    echo $min_sum",
    "  local i j k\n  local result\n  for ((i=1; i<=${#nums[@]}; i++)) {\n    for ((j=i; j<=${#nums[@]}; j++)) {\n      for ((k=j; k<=${#nums[@]}; k++)) {\n        if ((i != j) && (j != k) && (k != i)) {\n          if (($nums[i-1] + $nums[j-1] + $nums[k-1]) < $nums[j-1]) {\n            result=$nums[j-1]\n          }\n        }\n      }\n    }\n  }\n  return $result",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local min_index\n  local min_value\n\n  nums=$1\n  min_sum=$2\n\n  for ((i=0;i<nums.length;i++)); do\n    curr_sum=0\n    min_index=i\n    min_value=nums[i]\n    for ((j=i;j<nums.length;j++)); do\n      curr_sum=curr_sum+nums[j]\n      if (curr_sum<min_sum); then\n        min_sum=curr_sum\n        min_index=j\n        min_value=nums[j]\n      fi\n    done\n  done\n\n  echo $min_value",
    "  local result\n  local i j\n  local nums\n  local min_sum\n  local min_start\n  local min_end\n\n  nums=()\n  min_sum=0\n  min_start=0\n  min_end=0\n\n  for i in \"${1}\"; do\n    nums=($nums \"$i\")\n  done\n\n  for i in \"${1}\"; do\n    for j in \"${nums}\"; do\n      min_sum=$((min_sum $i $j))\n      min_start=$((min_start $i))\n      min_end=$((min_end $i))\n    done\n  done\n\n  if [ $min_start -gt 0 ]; then\n    result=$((min_sum $min_start $min_end))\n  else\n    result=0\n  fi\n\n  echo $result",
    "  local curr_sum curr_min\n  local i j\n  for ((i=1; i<=${#nums[@]}; i++)); do\n    curr_sum=0\n    for ((j=1; j<=i; j++)); do\n      curr_sum=$(($curr_sum $nums[$j]))\n    done\n    if [ $curr_sum -lt $curr_min ]; then\n      curr_min=$curr_sum\n    fi\n  done\n  echo $curr_min",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n\n  nums=$1\n  min_sum=$2\n\n  for i in \"${nums[@]}\"\n  do\n    curr_sum=0\n    for j in \"${nums[@]}\"\n    do\n      curr_sum=$((${curr_sum} + ${j}))\n    done\n    if [ ${curr_sum} -lt ${min_sum} ]; then\n      min_sum=$curr_sum\n    fi\n  done\n\n  echo $min_sum",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local k\n    local len\n    local nums\n    local start\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_sum\n\n  nums=$1\n  nums_len=${#nums}\n  min_sum=0\n  for i in $(seq 1 ${nums_len}); do\n    sum=0\n    for j in $(seq 1 ${nums_len}); do\n      nums_i=$(printf \"%d\" $i)\n      nums_j=$(printf \"%d\" $j)\n      nums_sum=$(printf \"%d\" $nums_i + $nums_j)\n      sum=$(min $sum $nums_sum)\n    done\n    if [ $sum -lt $min_sum ]; then\n      min_sum=$sum\n    fi\n  done\n  echo $min_sum",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local min_len\n    local min_start\n    local min_end\n\n    nums=$1\n    nums_len=${#nums}\n    min_len=0\n    min_start=0\n    min_end=0\n    min_sum=0\n\n    for i in $(seq 1 ${nums_len}); do\n        curr_sum=0\n        for j in $(seq 1 ${nums_len}); do\n            curr_sum=${curr_sum}+${nums[${i}-1}-${j}]\n            if [ $curr_sum -lt $min_sum ]; then\n                min_sum=${curr_sum}\n                min_len=${j}-${i}+1\n                min_start=${i}\n                min_end=${j}\n            fi\n        done\n    done\n\n    echo $min_sum",
    "  local result=0\n  local i=0\n  local j=0\n  local nums=()\n  local min=0\n  local max=0\n  local sum=0\n\n  while [ $# -gt 0 ]; do\n    if [ $i -lt $# ]; then\n      nums=($nums $i)\n      i=i+1\n    fi\n    if [ $j -lt $# ]; then\n      nums=($nums $j)\n      j=j+1\n    fi\n    if [ $i -gt $j ]; then\n      break\n    fi\n  done\n\n  for i in $nums; do\n    sum=sum + $i\n    if [ $min -lt $sum ]; then\n      min=$i\n    fi\n    if [ $max -lt $sum ]; then\n      max=$i\n    fi\n  done\n\n  if [ $min -eq $max ]; then\n    min=$min\n  fi\n\n  result=$(($result $min))\n  return $result",
    "  local i j k\n  while read i j k\n  do\n    if [[ $i == -1 ]]; then\n      exit 0\n    fi\n    if [[ $j == -1 ]]; then\n      exit 0\n    fi\n    if [[ $k == -1 ]]; then\n      exit 0\n    fi\n    if [[ $i <= $j ]]; then\n      exit 0\n    fi\n    if [[ $j <= $k ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k > 0 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k < 0 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == 0 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -1 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -2 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -3 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -4 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -5 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -6 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -7 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -8 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -9 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -10 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -11 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -12 ]]; then\n      exit 0\n    fi\n    if [[ $i - $j - $k == -13 ]]; then\n      exit 0\n    fi\n    if [[ $",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_index\n  local min_index_sum\n  local min_index_sum_sum\n  local min_index_sum_sum_sum\n  local min_index_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_index_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local minSubArraySum\n\n  nums=$1\n  minSubArraySum=$2\n\n  for i in $nums; do\n    currSum=$(($i))\n    minSum=$(($minSubArraySum))\n    for j in $nums; do\n      if [ $j -gt $i ]; then\n        currSum=$(($currSum + $j))\n      fi\n      if [ $currSum -lt $minSum ]; then\n        minSum=$currSum\n      fi\n    done\n    minSubArraySum=$(($minSubArraySum + $minSum))\n  done\n  echo $minSubArraySum",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_index\n  local min_value\n  local min_index_value\n  local min_index_value_value\n  local min_index_value_value_value\n  local min_index_value_value_value_value\n  local min_index_value_value_value_value_value\n  local min_index_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\n  local min_index_value_value_value_value_value_value_value_value_value_value_value_value_value_",
    "  local i j k\n  local min_sum\n  local sum\n  local nums\n  local min_sub_sum\n  local min_sub_sum_index\n\n  min_sub_sum=0\n  min_sub_sum_index=0\n\n  for i in \"$@\"; do\n    sum=0\n    nums=()\n    for j in \"${i//[0-9]/}\"; do\n      sum=$(($sum + $j))\n      nums=($nums $(($nums + $j)))\n    done\n    if [ \"$sum\" -gt 0 ]; then\n      min_sub_sum=$(($min_sub_sum + $sum))\n      min_sub_sum_index=$(($min_sub_sum_index + 1))\n    fi\n  done\n\n  if [ \"$min_sub_sum\" -gt 0 ]; then\n    echo $min_sub_sum\n  else\n    echo \"0\"\n  fi",
    "  local -a\n  local -a nums\n  local -a min_sum\n  local -a min_sum_index\n  local -a min_sum_index_arr\n  local -a min_sum_arr\n  local -a min_sum_arr_index\n  local -a min_sum_arr_index_arr\n  local -a min_sum_arr_index_arr_index\n  local -a min_sum_arr_index_arr_index_arr\n  local -a min_sum_arr_index_arr_index_arr_index\n\n  nums=$1\n  min_sum_arr=()\n  min_sum_arr_index=()\n  min_sum_arr_index_arr=()\n  min_sum_arr_index_arr_index=()\n  min_sum_arr_index_arr_index_arr=()\n\n  for i in $nums; do\n    if [ -z \"$min_sum_arr\" ]; then\n      min_sum_arr=($i)\n    else\n      min_sum_arr=($min_sum_arr $i)\n    fi\n    if [ -z \"$min_sum_arr_index\" ]; then\n      min_sum_arr_index=($i)\n    else\n      min_sum_arr_index=($min_sum_arr_index $i)\n    fi\n    if [ -z \"$min_sum_arr_index_arr\" ]; then\n      min_sum_arr_index_arr=($i)\n    else\n      min_sum_arr_index_arr=($min_sum_arr_index_arr $i)\n    fi\n    if [ -z \"$min_sum_arr_index_arr_index\" ]; then\n      min_sum_arr_index_arr_index=($i)\n    else\n      min_sum_arr_index_arr_index=($min_sum_arr_index_arr_index $i)\n    fi\n    if [ -z \"$min_sum_arr_index_arr_index_arr\" ]; then\n      min_sum_arr_index_arr_index_arr=($i)\n    else\n      min_sum_arr_index_arr",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local min_sub_array_sum\n    local min_sub_array_sum_index\n\n    nums=$1\n    min_sub_array_sum=0\n    min_sub_array_sum_index=0\n\n    for i in $nums; do\n        curr_sum=$(expr $i + $((i+1)) + $((i+2)) + $((i+3)) + $((i+4)))\n        if [[ $curr_sum -lt $min_sub_array_sum ]]; then\n            min_sub_array_sum=$curr_sum\n            min_sub_array_sum_index=$((i+1))\n        fi\n    done\n\n    return $min_sub_array_sum_index",
    "  local currMin=$1\n  local i\n  for ((i=1; i<=${#1}-1; i++)); do\n    currMin=$((currMin + $1[i]))\n    if [ $currMin -lt $1[i+1] ]; then\n      currMin=$1[i+1]\n    fi\n  done\n  echo $currMin",
    "  local -a\n  local -a sum\n  local -a min\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a bb\n  local -a cc\n  local -a dd\n  local -a ee\n  local -a ff\n  local -a gg\n  local -a hh\n  local -a ii\n  local -a jj\n  local -a kk\n  local -a ll\n  local -a mm\n  local -a nn\n  local -a oo\n  local -a pp\n  local -a qq\n  local -a rr\n  local -a ss\n  local -a tt\n  local -a uu\n  local -a vv\n  local -a ww\n  local -a xx\n  local -a yy\n  local -a zz\n  local -a aaa\n  local -a bbb\n  local -a ccc\n  local -a ddd\n  local -a eee\n  local -a fff\n  local -a ggg\n  local -a hhh\n  local -a iii\n  local -a jjj\n  local -a kkk\n  local -a lll\n  local -a mmm\n  local -a nnn\n  local -a ooo\n  local -a ppp\n  local -a qqq\n  local -a rrr\n  local -a sss\n  local -a ttt\n  local -a uuu\n  local -a vvv\n  local -a www\n  local -a xxx\n  local -a yyy\n  local -a zzz\n\n  # $1 is a space-separated list of numbers\n  # $2 is the minimum sum\n  # $3 is the maximum number of elements in",
    "  local -a\n  local -a sum\n  local -a min\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a aaa\n  local -a aab\n  local -a aac\n  local -a aad\n  local -a aae\n  local -a aaf\n  local -a aag\n  local -a aah\n  local -a aai\n  local -a aaj\n  local -a aak\n  local -a aal\n  local -a aam\n  local -a aan\n  local -a aao\n  local -a aap\n  local -a aaq\n  local -a aar\n  local -a aas\n  local -a aat\n  local -a aau\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a aaaa\n  local -a aaab\n  local -a aaac\n  local -a aaad\n  local -a aaae\n  local -a aaaf\n  ",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_len_i\n    local nums_len_j\n    local nums_i_j\n    local nums_i_j_len\n    local nums_i_j_len_i\n    local nums_i_j_len_j\n    local nums_i_j_len_i_j\n    local nums_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len_i\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len_i_j\n    local nums_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len_i_j_len\n    local nums_i_j_",
    "  local result\n  local i\n  local j\n  local min\n  local sum\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_min\n\n  nums=$1\n  nums_len=$(echo $nums | wc -w)\n  nums_i=0\n  nums_j=0\n  nums_min=0\n  while [ $nums_i < $nums_len ]; do\n    sum=$(echo $nums | awk '{print $1}')\n    min=$(echo $nums | awk '{print $2}')\n    nums_i=$((nums_i+1))\n    nums_j=$((nums_j+1))\n    if [ $nums_j == $nums_len ]; then\n      nums_j=0\n    fi\n    if [ $sum -gt $nums_min ]; then\n      nums_min=$sum\n    fi\n  done\n  result=$(echo $nums | awk '{print $3}')\n  echo $result",
    "    local currSum currMin\n    local i\n    local j\n    local nums\n    local minSum\n    local minSubSum\n    local minSubArraySum\n\n    nums=$1\n    minSum=0\n    minSubSum=0\n    for i in $nums; do\n        currSum=$(($i))\n        minSubSum=$(($minSubSum))\n        minSum=$(($minSum))\n        for j in $nums; do\n            if [ $j -lt $i ]; then\n                continue\n            else\n                currSum=$(($currSum + $j))\n                minSubSum=$(($minSubSum + $j))\n                minSum=$(($minSum + $j))\n            fi\n        done\n    done\n\n    minSubArraySum=$(($minSubSum))\n    if [ $minSubArraySum -lt $minSum ]; then\n        minSubArraySum=$(($minSubSum + $minSum))\n    fi\n\n    echo $minSubArraySum",
    "  local result\n  local nums\n  local i\n  local j\n  local min\n\n  nums=$1\n  result=0\n  for i in $nums; do\n    min=$i\n    for j in $nums[i+1:]; do\n      if [ $j -lt $min ]; then\n        min=$j\n      fi\n    done\n    result=$(($result + $min))\n  done\n  echo $result",
    "    local i j\n    while read i j\n    do\n        if [ $# -eq 0 ]\n        then\n            echo \"Usage: $0 <array> <min>\"\n            exit 1\n        fi\n        min=$1\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min}\")\n        min=$(minSubArraySum \"${min",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local sub_array_sum\n\n  nums=$1\n  min_sum=$2\n\n  for i in $nums; do\n    curr_sum=0\n    for j in $nums; do\n      if [[ $i <= $j ]]; then\n        sub_array_sum=$((curr_sum+$j))\n        if [[ $sub_array_sum < $min_sum ]]; then\n          min_sum=$sub_array_sum\n        fi\n        curr_sum=$((curr_sum+$j))\n      fi\n    done\n  done\n\n  echo $min_sum",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_len_i\n    local nums_len_j\n    local nums_len_k\n    local nums_len_l\n    local nums_len_m\n    local nums_len_n\n    local nums_len_o\n    local nums_len_p\n    local nums_len_q\n    local nums_len_r\n    local nums_len_s\n    local nums_len_t\n    local nums_len_u\n    local nums_len_v\n    local nums_len_w\n    local nums_len_x\n    local nums_len_y\n    local nums_len_z\n    local nums_len_aa\n    local nums_len_ab\n    local nums_len_ac\n    local nums_len_ad\n    local nums_len_ae\n    local nums_len_af\n    local nums_len_ag\n    local nums_len_ah\n    local nums_len_ai\n    local nums_len_aj\n    local nums_len_ak\n    local nums_len_al\n    local nums_len_am\n    local nums_len_an\n    local nums_len_ao\n    local nums_len_ap\n    local nums_len_aq\n    local nums_len_ar\n    local nums_len_as\n    local nums_len_at\n    local nums_len_au\n    local nums_len_av\n    local nums_len_aw\n    local nums_len_ax\n    local nums_len_ay\n    local nums_len_az\n    local nums_len_ba\n    local nums_len_bb\n    local nums_len_bc\n    local nums_len_bd\n    local nums_len_be\n    local nums_len_bf\n    local nums_len_bg\n    local nums_len_bh\n    local nums_len_bi\n    local",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local min_sub_array_sum\n  local min_sub_array_sum_index\n\n  nums=$1\n  min_sub_array_sum=0\n  min_sub_array_sum_index=0\n\n  for i in $nums; do\n    curr_sum=$(($i))\n    min_sub_array_sum=$(($min_sub_array_sum + $curr_sum))\n    min_sub_array_sum_index=$(($min_sub_array_sum_index + 1))\n    if [ $min_sub_array_sum_index -gt 0 ]; then\n      min_sub_array_sum=$(($min_sub_array_sum - $nums[$min_sub_array_sum_index-1]))\n      min_sub_array_sum_index=$(($min_sub_array_sum_index - 1))\n    fi\n  done\n\n  echo $min_sub_array_sum",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local k\n    local nums\n    local sub_sum\n    local sub_sum_min\n\n    nums=$1\n    min_sum=$2\n\n    for i in $nums; do\n        curr_sum=$(($i))\n        for j in $nums; do\n            for k in $nums; do\n                sub_sum=$(($i+$j+$k))\n                if [ $sub_sum -lt $min_sum ]; then\n                    min_sum=$sub_sum\n                fi\n            done\n        done\n    done\n\n    echo $min_sum",
    "  local result=0\n  local i\n  local j\n  local nums\n  local min\n  local sum\n  local min_sum\n  local min_sum_i\n  local min_sum_j\n  local min_sum_i_j\n  local min_sum_i_j_k\n  local min_sum_i_j_k_l\n\n  nums=$1\n  min_sum_i_j_k_l=0\n  min_sum_i_j_k=0\n  min_sum_i_j=0\n  min_sum_i=0\n  min_sum=0\n  for i in $nums\n  do\n    sum=0\n    for j in $nums\n    do\n      sum=$(($sum + $i))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_sum_i=$i\n        min_sum_j=$j\n      fi\n    done\n  done\n\n  min_sum_i_j_k_l=$min_sum_i_j_k_l\n  min_sum_i_j_k=$min_sum_i_j_k\n  min_sum_i_j=$min_sum_i_j\n  min_sum_i=$min_sum_i\n  min_sum=$min_sum\n  min=$min_sum_i_j_k_l\n  if [ $min -lt $min_sum_i_j_k ]; then\n    min=$min_sum_i_j_k\n  fi\n  if [ $min -lt $min_sum_i_j ]; then\n    min=$min_sum_i_j\n  fi\n  if [ $min -lt $min_sum_i ]; then\n    min=$min_sum_i\n  fi\n  if [ $min -lt $min_sum ]; then\n    min=$min_sum\n  fi\n  if [ $min -lt $min_sum_i_j_k_l ]; then\n    min=$min_sum_i_j_k_l\n  fi\n  if [ $min -lt $min_sum_i_j_k ]; then\n",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local min_sub_array_sum\n\n    nums=$1\n    min_sub_array_sum=$2\n\n    for i in $nums; do\n        curr_sum=$(($i))\n        min_sum=$(($min_sub_array_sum))\n        for j in $nums; do\n            if [ $j -lt $i ]; then\n                continue\n            fi\n            curr_sum=$(($curr_sum + $j))\n            if [ $curr_sum -lt $min_sum ]; then\n                min_sum=$curr_sum\n            fi\n        done\n        min_sub_array_sum=$(($min_sum))\n    done\n    echo $min_sub_array_sum",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local nums_len\n  local min_len\n  local min_start\n  local min_end\n\n  nums=$1\n  nums_len=0\n  for ((i=0;i<${#nums[@]};i++)); do\n    nums_len=$((nums_len+1))\n  done\n\n  min_len=0\n  min_start=0\n  min_end=0\n\n  for ((i=0;i<nums_len;i++)); do\n    curr_sum=$((nums[i]))\n    for ((j=i+1;j<nums_len;j++)); do\n      curr_sum=$((curr_sum+nums[j]))\n    done\n\n    if ((curr_sum < min_sum)); then\n      min_sum=curr_sum\n      min_len=i-min_start+1\n      min_start=i\n      min_end=j\n    fi\n  done\n\n  if ((min_len == 0)); then\n    min_sum=0\n  fi\n\n  echo $min_sum",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local numsSize\n  local minSize\n  local minSumSize\n  local minSumSizeSum\n  local minSumSizeSumSum\n  local minSumSizeSumSumSum\n  local minSumSizeSumSumSumSum\n  local minSumSizeSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSumSum\n  local minSumSizeSumSumSumSumSumSumSumSumSumSum",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local start\n  local end\n\n  nums=$1\n  min_sum=$2\n\n  for i in $nums; do\n    curr_sum=0\n    start=0\n    end=0\n    for j in $nums; do\n      if [[ $j -gt $i ]]; then\n        curr_sum=$curr_sum + $j\n        end=$j\n      else\n        if [[ $j -le $i ]]; then\n          start=$j\n        fi\n      fi\n    done\n\n    if [[ $curr_sum -lt $min_sum ]]; then\n      min_sum=$curr_sum\n      start=$start\n      end=$end\n    fi\n  done\n\n  echo $min_sum",
    "  local i j k\n  local sum\n  local nums\n  local min_sum\n  local min_start\n  local min_end\n\n  min_sum=999999999\n  min_start=0\n  min_end=0\n\n  nums=()\n  for i in \"$@\"; do\n    nums=($nums $i)\n  done\n\n  for i in \"$@\"; do\n    sum=$(echo $i | wc -c)\n    if [ $sum -gt 0 ]; then\n      for j in $(seq 1 $sum); do\n        for k in $(seq 1 $sum); do\n          if [ $j -lt $k ]; then\n            sum=$(($sum-$j+$k))\n            if [ $sum -lt $min_sum ]; then\n              min_sum=$sum\n              min_start=$j\n              min_end=$k\n            fi\n          fi\n        done\n      done\n    fi\n  done\n\n  echo $min_sum",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local sub_sum\n  local sub_sum_i\n  local sub_sum_j\n  local sub_sum_k\n  local sub_sum_l\n\n  nums=$1\n  min_sum=$2\n\n  for i in \"${nums[@]}\"; do\n    curr_sum=0\n    for j in \"${nums[@]}\"; do\n      sub_sum_i=${i}\n      sub_sum_j=${j}\n      sub_sum_k=0\n      sub_sum_l=0\n      for k in \"${nums[@]}\"; do\n        sub_sum_k=${k}\n        sub_sum_l=${sub_sum_l}+${sub_sum_k}\n        if [ $sub_sum_l -gt 0 ]; then\n          sub_sum_l=0\n          sub_sum_k=0\n        fi\n        if [ $sub_sum_k -gt 0 ]; then\n          sub_sum_k=0\n        fi\n        if [ $sub_sum_i -gt 0 && $sub_sum_j -gt 0 && $sub_sum_k -gt 0 && $sub_sum_l -gt 0 ]; then\n          sub_sum_k=${sub_sum_k}-${sub_sum_l}\n          sub_sum_l=0\n          sub_sum_k=${sub_sum_k}-${sub_sum_j}\n          sub_sum_j=0\n          sub_sum_k=${sub_sum_k}-${sub_sum_i}\n          sub_sum_i=0\n          sub_sum_k=${sub_sum_k}\n        fi\n      done\n      sub_sum_l=${sub_sum_l}+${sub_sum_k}\n      if [ $sub_sum_l -gt 0 ]; then\n        sub_sum_l=0\n        sub_sum_k=0\n      fi\n      if [ $sub_sum_k -gt 0 ]; then\n        sub_sum_k=0\n      fi\n",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local min_index\n    local min_value\n    local min_index_str\n    local min_value_str\n\n    nums=$1\n    min_index=0\n    min_value=0\n    for ((i=0;i<=nums[0];i++)); do\n        curr_sum=0\n        for ((j=0;j<nums[i];j++)); do\n            curr_sum=curr_sum+nums[j]\n        done\n        if (curr_sum<min_value); then\n            min_value=curr_sum\n            min_index=i\n        fi\n    done\n    min_index_str=$(printf \"%d\" min_index)\n    min_value_str=$(printf \"%d\" min_value)\n    printf \"%s\" \"$min_index_str\"\n    printf \"%s\" \"$min_value_str\"",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n\n  nums=$1\n  min_sum=$2\n\n  for i in $nums\n  do\n    curr_sum=0\n    for j in $nums\n    do\n      if [[ $i <= $j ]]\n        then\n        curr_sum=$((curr_sum+$j))\n      fi\n    done\n    if [[ $curr_sum < $min_sum ]]\n      then\n      min_sum=$curr_sum\n    fi\n  done\n\n  echo $min_sum",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local minSubArraySum\n\n  nums=$1\n  minSubArraySum=\"$1\"\n\n  for i in $nums; do\n    currSum=$(($i))\n    for j in $nums; do\n      if [[ $j -lt $i ]]; then\n        continue\n      fi\n      currSum=$(($currSum + $j))\n      if [[ $currSum -lt $minSum ]]; then\n        minSum=$currSum\n      fi\n    done\n    if [[ $currSum -lt $minSum ]]; then\n      minSum=$currSum\n    fi\n  done\n\n  echo $minSubArraySum",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_len_i\n    local nums_len_j\n    local nums_i_j\n    local nums_len_i_j\n    local nums_i_j_len\n    local nums_i_j_len_i\n    local nums_i_j_len_j\n    local nums_i_j_len_i_j\n    local nums_i_j_len_i_j_i\n    local nums_i_j_len_i_j_j\n    local nums_i_j_len_i_j_i_j\n    local nums_i_j_len_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_j\n    local nums_i_j_len_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_j\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_j\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_j\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i_j\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i_j_i\n    local nums_i_j_len_i_j_i_j_i_j_i_j_i_j_i_j",
    "  local i j k\n  while read i j k\n  do\n    if [ $? -ne 0 ]; then\n      return 1\n    fi\n    if [ $i -lt 0 ]; then\n      continue\n    fi\n    if [ $j -lt 0 ]; then\n      continue\n    fi\n    if [ $k -lt 0 ]; then\n      continue\n    fi\n    sum=$(( $i + $j + $k ))\n    if [ $sum -lt 0 ]; then\n      continue\n    fi\n    if [ $sum -eq 0 ]; then\n      continue\n    fi\n    echo $sum\n  done",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local minSubArray\n  local minSubArraySum\n\n  nums=$1\n  minSubArraySum=0\n  for i in $nums; do\n    currSum=$(($i))\n    minSum=$(($minSum))\n    minSubArray=$(($minSubArray))\n    for j in $nums; do\n      if [ $j -gt $i ]; then\n        currSum=$(($currSum + $j))\n        minSum=$(($minSum + $j))\n        minSubArray=$(($minSubArray + $j))\n      fi\n    done\n    if [ $currSum -lt $minSum ]; then\n      minSubArraySum=$(($minSubArraySum + $currSum - $minSum))\n      minSum=$(($minSum))\n      minSubArray=$(($minSubArray))\n    fi\n  done\n  echo $minSubArraySum",
    "    local i\n    local j\n    local sum\n    local min_sum\n    local min_start\n    local min_end\n    local min_start_index\n    local min_end_index\n    local nums\n    local nums_length\n    local nums_index\n    local nums_index_start\n    local nums_index_end\n    local nums_index_start_index\n    local nums_index_end_index\n    local nums_index_start_index_sum\n    local nums_index_end_index_sum\n    local nums_index_start_index_min_sum\n    local nums_index_end_index_min_sum\n\n    nums=$1\n    nums_length=$(echo $nums | wc -c)\n    nums_index_start=0\n    nums_index_end=0\n    nums_index_start_index=0\n    nums_index_end_index=0\n    nums_index_start_index_sum=0\n    nums_index_end_index_sum=0\n    nums_index_start_index_min_sum=0\n    nums_index_end_index_min_sum=0\n\n    for ((i=0;i<nums_length;i++)); do\n        sum=$(echo $nums | awk '{print $i}')\n        if [ $sum -gt 0 ]; then\n            min_sum=$sum\n            min_start=i\n            min_end=i\n            min_start_index=i\n            min_end_index=i\n            nums_index_start_index_sum=$sum\n            nums_index_end_index_sum=0\n            nums_index_start_index_min_sum=$sum\n            nums_index_end_index_min_sum=0\n            nums_index_start_index=i\n            nums_index_end_index=i\n            nums_index_start=i\n            nums_index_end=i\n            continue\n        fi\n        if [ $sum -lt 0 ]; then\n            min_sum=$sum\n            min_start=i\n",
    "  local result=0\n  local i\n  local j\n  local nums\n  local min\n  local sum\n  local min_sum\n  local min_sum_index\n  local min_sum_index_i\n  local min_sum_index_j\n  local min_sum_index_sum\n  local min_sum_index_sum_i\n  local min_sum_index_sum_j\n  local min_sum_index_sum_sum\n\n  nums=$1\n  min_sum_index_sum=0\n  min_sum_index_sum_i=0\n  min_sum_index_sum_j=0\n  min_sum_index_sum_sum=0\n\n  for i in $nums; do\n    sum=0\n    for j in $nums; do\n      sum=$(($sum + $j))\n      if [ $sum -lt $min_sum_index_sum_sum ]; then\n        min_sum_index_sum_sum=$sum\n        min_sum_index_sum_i=$i\n        min_sum_index_sum_j=$j\n      fi\n    done\n  done\n\n  min_sum_index_sum_sum=$min_sum_index_sum_sum\n  min_sum_index_sum_i=$min_sum_index_sum_i\n  min_sum_index_sum_j=$min_sum_index_sum_j\n\n  min_sum_index_sum_sum_i=$min_sum_index_sum_sum_i\n  min_sum_index_sum_sum_j=$min_sum_index_sum_sum_j\n\n  min_sum_index_sum_sum_i_j=$min_sum_index_sum_sum_i_j\n\n  min_sum_index_sum_sum_i_j_sum=$min_sum_index_sum_sum_i_j_sum\n\n  min_sum_index_sum_sum_i_j_sum_i=$min_sum_index_sum_sum_i_j_sum_i\n  min_sum_index_sum_sum_i_j_sum_j=$min_sum_index_sum_sum_i_j_",
    "  local i j k\n  for ((i=1; i<=${#nums[@]}; i++)) {\n    for ((j=i; j<=${#nums[@]}; j++)) {\n      for ((k=j; k<=${#nums[@]}; k++)) {\n        if ((i != j) && (j != k) && (k != i)) {\n          local sum\n          sum=$(minSubArraySum \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums[@]}\" \"${nums",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local start\n  local end\n\n  nums=$1\n  min_sum=$2\n\n  for i in $nums; do\n    curr_sum=$(($i))\n    start=0\n    end=0\n    for j in $nums; do\n      if [ $j -lt $i ]; then\n        start=$j\n        break\n      fi\n    done\n    for j in $nums; do\n      if [ $j -gt $i ]; then\n        end=$j\n        break\n      fi\n    done\n    if [ $start -ne 0 ]; then\n      if [ $end -ne 0 ]; then\n        curr_sum=$((curr_sum - $start - $end))\n      fi\n    fi\n    if [ $curr_sum -lt $min_sum ]; then\n      min_sum=$curr_sum\n    fi\n  done\n\n  echo $min_sum",
    "  local i j k\n  for ((i=1; i<=${#nums[@]}; i++)) {\n    for ((j=i; j<=${#nums[@]}; j++)) {\n      for ((k=j; k<=${#nums[@]}; k++)) {\n        if (($nums[i-1] + $nums[j-1] + $nums[k-1]) < $nums[k-1]) {\n          echo $nums[i-1] $nums[j-1] $nums[k-1]\n          return\n        }\n      }\n    }\n  }",
    "    local currMin\n    local i\n    local j\n    local sum\n    local nums\n    local minSum\n\n    nums=$1\n    minSum=0\n    for i in $nums; do\n        sum=$(($i))\n        currMin=$(($sum))\n        for j in $nums; do\n            sum=$(($sum + $j))\n            if [ $sum -lt $currMin ]; then\n                currMin=$sum\n            fi\n        done\n        minSum=$(($minSum + $currMin))\n    done\n    echo $minSum",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_index\n  local min_index_sum\n  local min_index_sum_i\n  local min_index_sum_j\n  local min_index_sum_i_j\n  local min_index_sum_i_j_k\n  local min_index_sum_i_j_k_l\n  local min_index_sum_i_j_k_l_m\n  local min_index_sum_i_j_k_l_m_n\n  local min_index_sum_i_j_k_l_m_n_o\n  local min_index_sum_i_j_k_l_m_n_o_p\n  local min_index_sum_i_j_k_l_m_n_o_p_q\n  local min_index_sum_i_j_k_l_m_n_o_p_q_r\n  local min_index_sum_i_j_k_l_m_n_o_p_q_r_s\n  local min_index_sum_i_j_k_l_m_n_o_p_q_r_s_t\n  local min_index_sum_i_j_k_l_m_n_o_p_q_r_s_t_u\n  local min_index_sum_i_j_k_l_m_n_o_p_q_r_s_t_u_v\n  local min_index_sum_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w\n  local min_index_sum_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x\n  local min_index_sum_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y\n  local min_index_sum_i_j_k_l_m_n_o_p_",
    "  local i j k\n  local min_sum\n  local sum\n  local nums\n  local min_sum_i\n  local min_sum_j\n  local min_sum_k\n\n  min_sum_i=0\n  min_sum_j=0\n  min_sum_k=0\n\n  min_sum=0\n\n  nums=()\n\n  for i in \"$@\"; do\n    sum=$(echo $i | wc -c)\n    nums=($nums $i)\n    if [ $sum -gt 0 ]; then\n      min_sum_i=$i\n      min_sum_j=0\n      min_sum_k=0\n      break\n    fi\n  done\n\n  for j in \"$@\"; do\n    sum=$(echo $j | wc -c)\n    nums=($nums $j)\n    if [ $sum -gt 0 ]; then\n      min_sum_j=$j\n      min_sum_i=0\n      min_sum_k=0\n      break\n    fi\n  done\n\n  for k in \"$@\"; do\n    sum=$(echo $k | wc -c)\n    nums=($nums $k)\n    if [ $sum -gt 0 ]; then\n      min_sum_k=$k\n      min_sum_i=0\n      min_sum_j=0\n      break\n    fi\n  done\n\n  for i in \"$@\"; do\n    sum=$(echo $i | wc -c)\n    nums=($nums $i)\n    if [ $sum -gt 0 ]; then\n      min_sum_i=$i\n      min_sum_j=0\n      min_sum_k=0\n      break\n    fi\n  done\n\n  for j in \"$@\"; do\n    sum=$(echo $j | wc -c)\n    nums=($nums $j)\n    if [ $sum -gt 0 ]; then\n      min_sum_j=$j\n      min_sum_i=0\n      min_sum_k=0\n      break\n    fi\n  done\n\n  for k in \"$@\"; do\n    sum=$(echo $k | wc -c)",
    "  local result=$1\n  local i\n  for ((i=1; i<=${#1}; i++)) {\n    local sum=$1[i]\n    if [ $i -gt 1 ]; then sum=$sum+$1[i-1]\n    if [ $sum -lt 0 ]; then sum=$sum\n    if [ $sum -gt 0 ]; then sum=$sum\n    result=$result\" \"+sum\n  }\n  return $result",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_index\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_sum\n  local nums_min\n\n  nums=$1\n  nums_len=${#nums}\n  min_index=0\n  min_sum=0\n  for ((i=0;i<nums_len;i++)); do\n    sum=0\n    for ((j=i;j<nums_len;j++)); do\n      nums_i=$(echo $nums | cut -d' ' -f$i)\n      nums_j=$(echo $nums | cut -d' ' -f$j)\n      nums_sum=$(echo $nums | cut -d' ' -f$i,$j)\n      nums_min=$(echo $nums | cut -d' ' -f$i,$j)\n      nums_min_sum=$(echo $nums | cut -d' ' -f$i,$j)\n      nums_min_index=$(echo $nums | cut -d' ' -f$i,$j)\n      sum=$(echo $nums_sum | cut -d' ' -f1)\n      if [ -z \"$sum\" ]; then\n        sum=0\n      fi\n      if [ -z \"$nums_min\" ]; then\n        nums_min=0\n      fi\n      if [ -z \"$nums_min_sum\" ]; then\n        nums_min_sum=0\n      fi\n      if [ -z \"$nums_min_index\" ]; then\n        nums_min_index=0\n      fi\n      if [ $nums_min_index -gt $min_index ]; then\n        min_index=$nums_min_index\n        min_sum=$nums_min_sum\n      fi\n      if [ $nums_min -gt $min_sum ]; then\n        min_sum=$nums_min\n        min_index=$nums_min_index\n      fi\n    done\n    ",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_index\n  local min_index_i\n  local min_index_j\n  local nums\n\n  nums=$1\n  min_sum=0\n  min_index_i=0\n  min_index_j=0\n  for i in $nums\n  do\n    sum=0\n    for j in $nums[$i+1:]\n    do\n      sum=$(($sum + $j))\n      if [ $sum - $min_sum ] < 0\n      then\n        min_sum=$sum\n        min_index_i=$i\n        min_index_j=$j\n      fi\n    done\n  done\n  echo $min_index_i $min_index_j",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_i\n  local min_j\n  local min_len\n  local len\n  local nums\n  local nums_len\n  local nums_i\n  local nums_j\n  local nums_sum\n\n  nums_len=0\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min_len=0\n  min_i=0\n  ",
    "  local result\n  local i\n  local j\n  local sum\n  local nums\n\n  nums=$1\n  result=0\n  for i in \"${nums[@]}\"\n  do\n    sum=0\n    for j in \"${nums[@]}\"\n    do\n      sum=$(($sum $j))\n    done\n    if [ $sum -gt 0 ]; then\n      result=$(($result $sum))\n    fi\n  done\n  echo $result",
    "    local i\n    local j\n    local sum\n    local min_sum\n    local min_i\n    local min_j\n    local nums\n    local nums_i\n    local nums_j\n    local nums_len\n    local nums_len_i\n    local nums_len_j\n    local nums_len_i_j\n\n    nums=$1\n    nums_i=0\n    nums_j=0\n    nums_len=0\n    nums_len_i=0\n    nums_len_j=0\n    nums_len_i_j=0\n    min_sum=0\n    min_i=0\n    min_j=0\n\n    for i in $nums; do\n        nums_i=$nums_i + $i\n        nums_len=$nums_len + 1\n        if [ $nums_len -gt 1 ]; then\n            nums_len_i=$nums_len_i + 1\n            nums_len_j=$nums_len_j + 1\n            nums_len_i_j=$nums_len_i_j + 1\n            min_i=$nums_i\n            min_j=$nums_j\n            min_sum=$nums_i\n            nums_i=0\n            nums_j=0\n        fi\n    done\n\n    if [ $nums_len -gt 1 ]; then\n        min_i=$nums_i\n        min_j=$nums_j\n        min_sum=$nums_i\n    fi\n\n    return $min_sum",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local sub_sum\n    local start\n    local end\n\n    nums=$1\n    min_sum=$2\n\n    for i in \"${nums[@]}\"; do\n        curr_sum=0\n        start=0\n        end=0\n        for j in \"${nums[@]}\"; do\n            if [[ $j -gt $i ]]; then\n                break\n            fi\n            end=j\n            sub_sum=$(minSubArraySum \"${nums[@]}\" \"${start} ${end}\")\n            if [[ $sub_sum -lt $min_sum ]]; then\n                min_sum=$sub_sum\n            fi\n            curr_sum=curr_sum+$j\n            start=j\n        done\n    done\n\n    echo $min_sum",
    "  local result=0\n  local i\n  local j\n  local k\n  local sum\n  local nums\n  local min\n  local min_index\n  local min_sum\n\n  nums=$1\n  min_index=0\n  min_sum=0\n\n  for i in \"${nums[@]}\"\n  do\n    sum=0\n    for j in \"${nums[@]}\"\n    do\n      for k in \"${nums[@]}\"\n      do\n        sum=$(($sum + \"${j}${k}\") - min_sum)\n        if [ $sum -lt 0 ]; then\n          min_sum=$sum\n          min_index=$(($i+$j+$k)-1)\n        fi\n      done\n    done\n  done\n\n  min=$(($min_sum + \"${nums[@]}\"))\n  if [ $min -lt 0 ]; then\n    min_index=$(($min_index + 1))\n  fi\n\n  echo $min_index",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_i\n  local min_j\n  local min_i_j\n\n  min_i_j=0\n  min_i=0\n  min_j=0\n  min_sum=0\n  min=0\n  sum=0\n\n  for i in \"$@\"; do\n    sum=0\n    for j in \"${i//[0-9]/}\"; do\n      sum=$(($sum + $j))\n      if [ \"$sum\" -lt \"$min_sum\" ]; then\n        min_sum=$sum\n        min_i=$i\n        min_j=$j\n      fi\n    done\n  done\n\n  if [ \"$min_i\" == \"0\" ]; then\n    min_i_j=0\n  else\n    min_i_j=$min_i_j + $min_i - 1\n  fi\n\n  min_i_j=$min_i_j + $min_j - 1\n\n  min_i_j=$min_i_j + $min_sum - 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_j + 1\n\n  min_i_j=$min_i_",
    "    local curr_sum\n    local min_sum\n    local i\n    local j\n    local nums\n    local start\n    local end\n\n    nums=$1\n    min_sum=$2\n\n    for i in \"${nums[@]}\"\n    do\n        curr_sum=0\n        start=0\n        end=0\n        for j in \"${nums[@]}\"\n        do\n            if [[ $j -ge $i ]]\n            then\n                curr_sum=$((curr_sum+$j))\n                end=$((end+1))\n            else\n                start=$((start+1))\n            fi\n        done\n\n        if [[ $end -ge $start ]]\n        then\n            if [[ $curr_sum -lt $min_sum ]]\n            then\n                min_sum=$curr_sum\n            fi\n        fi\n    done\n\n    echo $min_sum",
    "  local -a\n  local -a sum\n  local -a minSum\n  local -a minSubArray\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a bb\n  local -a cc\n  local -a dd\n  local -a ee\n  local -a ff\n  local -a gg\n  local -a hh\n  local -a ii\n  local -a jj\n  local -a kk\n  local -a ll\n  local -a mm\n  local -a nn\n  local -a oo\n  local -a pp\n  local -a qq\n  local -a rr\n  local -a ss\n  local -a tt\n  local -a uu\n  local -a vv\n  local -a ww\n  local -a xx\n  local -a yy\n  local -a zz\n  local -a aaa\n  local -a bbb\n  local -a ccc\n  local -a ddd\n  local -a eee\n  local -a fff\n  local -a ggg\n  local -a hhh\n  local -a iii\n  local -a jjj\n  local -a kkk\n  local -a lll\n  local -a mmm\n  local -a nnn\n  local -a ooo\n  local -a ppp\n  local -a qqq\n  local -a rrr\n  local -a sss\n  local -a ttt\n  local -a uuu\n  local -a vvv\n  local -a www\n  local -a xxx\n  local -a yyy\n  local -a zzz\n  local -a aaaa\n  local -a bbbb\n  local -a cccc\n  local",
    "  local result=0\n  local i\n  local j\n  local nums\n  local min\n  local sum\n\n  nums=$1\n  min=$2\n\n  for i in \"${nums[@]}\"\n  do\n    sum=$(($i + $result))\n    if [ $sum -lt $min ]; then\n      min=$sum\n    fi\n    result=$(($i + $result))\n  done\n\n  echo $result",
    "    local i\n    local j\n    local sum\n    local min\n    local min_sum\n    local min_start\n    local min_end\n\n    min_sum=0\n    min_start=0\n    min_end=0\n\n    for i in \"$@\"; do\n        sum=0\n        for j in \"${i//[0-9]/}\"; do\n            sum=sum+$j\n        done\n        if [ $sum -gt 0 ]; then\n            if [ $sum -lt $min_sum ]; then\n                min_sum=$sum\n                min_start=$i\n                min_end=$i\n            fi\n        fi\n    done\n\n    if [ $min_sum -gt 0 ]; then\n        echo $min_start $min_end\n    fi",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_i\n  local min_j\n  local min_i_j\n  local nums\n  local nums_i\n  local nums_j\n  local nums_i_j\n\n  nums=$1\n  min_sum=0\n  min_i=0\n  min_j=0\n  min_i_j=0\n\n  for i in $nums; do\n    sum=0\n    for j in $nums; do\n      sum=$(($sum + $j))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_i=$i\n        min_j=$j\n      fi\n    done\n  done\n\n  for i in $nums; do\n    nums_i=$(echo $i)\n    for j in $nums; do\n      nums_j=$(echo $j)\n      nums_i_j=$(echo $nums_i $nums_j)\n      if [ $nums_i_j -lt $min_i_j ]; then\n        min_i_j=$nums_i_j\n        min_i=$i\n        min_j=$j\n      fi\n    done\n  done\n\n  echo $min_i $min_j",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_start\n  local min_end\n  local min_start_index\n  local min_end_index\n  local nums\n  local nums_length\n  local nums_index\n  local nums_index_start\n  local nums_index_end\n  local nums_index_start_index\n  local nums_index_end_index\n  local nums_index_start_index_sum\n  local nums_index_end_index_sum\n\n  nums=$1\n  nums_length=${#nums}\n  min_sum=0\n  min_start_index=0\n  min_end_index=0\n  min_start=0\n  min_end=0\n\n  for ((i=0;i<nums_length;i++)); do\n    sum=0\n    nums_index_start=i\n    nums_index_end=i\n    nums_index_start_index=i\n    nums_index_end_index=i\n    nums_index_start_index_sum=0\n    nums_index_end_index_sum=0\n    for ((j=i;j<nums_length;j++)); do\n      sum=$(($sum + $(nums[j])))\n      if ((sum < min_sum)); then\n        min_sum=$sum\n        min_start_index=$(nums_index_start_index)\n        min_end_index=$(nums_index_end_index)\n        min_start=$(nums[min_start_index])\n        min_end=$(nums[min_end_index])\n      fi\n    done\n  done\n\n  echo $min_sum",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local sub_sum\n  local sub_sum_i\n  local sub_sum_j\n  local sub_sum_size\n  local sub_sum_size_i\n  local sub_sum_size_j\n  local sub_sum_size_k\n  local sub_sum_size_k_i\n  local sub_sum_size_k_j\n  local sub_sum_size_k_k\n  local sub_sum_size_k_k_i\n  local sub_sum_size_k_k_j\n  local sub_sum_size_k_k_k\n  local sub_sum_size_k_k_k_i\n  local sub_sum_size_k_k_k_j\n  local sub_sum_size_k_k_k_k\n  local sub_sum_size_k_k_k_k_i\n  local sub_sum_size_k_k_k_k_j\n  local sub_sum_size_k_k_k_k_k\n  local sub_sum_size_k_k_k_k_k_i\n  local sub_sum_size_k_k_k_k_k_j\n  local sub_sum_size_k_k_k_k_k_k\n  local sub_sum_size_k_k_k_k_k_k_i\n  local sub_sum_size_k_k_k_k_k_k_j\n  local sub_sum_size_k_k_k_k_k_k_k\n  local sub_sum_size_k_k_k_k_k_k_k_i\n  local sub_sum_size_k_k_k_k_k_k_k_j\n  local sub_sum_size_k_k_k_k_k_k_k_k\n  local sub_sum_size_k_k_k_k_k_k_k_k_i\n  local sub_sum_size_k_k_k_k_k_k_k_",
    "    local curr_sum\n    local i\n    local j\n    local min_sum\n    local min_i\n    local min_j\n    local nums\n    local nums_len\n    local result\n\n    nums=$1\n    nums_len=0\n    for ((i=0; i<$#nums; i++)); do\n        nums_len=$((nums_len + 1))\n    done\n\n    min_i=0\n    min_j=0\n    min_sum=0\n    for ((i=0; i<nums_len; i++)); do\n        curr_sum=$((nums[i]))\n        for ((j=i+1; j<nums_len; j++)); do\n            curr_sum=$((curr_sum + nums[j]))\n        done\n        if ((curr_sum < min_sum)); then\n            min_sum=curr_sum\n            min_i=i\n            min_j=j\n        fi\n    done\n\n    result=$(printf \"%d %d\" \"$min_i\" \"$min_j\")\n    return $result",
    "  local i j k\n  for i in \"$@\"; do\n    j=0\n    while [ $j -lt $# ]; do\n      k=\"$i\"\n      while [ $k -lt $# ]; do\n        if [ $k -eq $j ]; then\n          k=\"$k\"\n          break\n        fi\n        k=\"$k+1\"\n      done\n      j=$j+1\n    done\n    if [ $j -gt 0 ]; then\n      echo \"$i\"\n    fi\n  done",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_i\n  local min_j\n  local nums\n  local nums_i\n  local nums_j\n  local nums_sum\n  local nums_min\n  local nums_min_i\n  local nums_min_j\n  local nums_min_sum\n  local nums_min_min_i\n  local nums_min_min_j\n  local nums_min_min_sum\n\n  nums=$1\n  min_sum=0\n  min_i=0\n  min_j=0\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  nums_min=0\n  nums_min_i=0\n  nums_min_j=0\n  nums_min_sum=0\n  nums_min_min_i=0\n  nums_min_min_j=0\n  nums_min_min_sum=0\n\n  for ((i=0;i<=nums[0];i++)); do\n    for ((j=0;j<=nums[0];j++)); do\n      nums_i=$(echo $nums | sed -n \"s/[^0-9]*$i *//p\")\n      nums_j=$(echo $nums | sed -n \"s/[^0-9]*$j *//p\")\n      nums_sum=$(echo $nums | sed -n \"s/[^0-9]*$i *$j *//p\")\n      nums_min=$(echo $nums | sed -n \"s/[^0-9]*$i *$j *//p\")\n      nums_min_i=$(echo $nums_i | sed -n \"s/[^0-9]*$i *//p\")\n      nums_min_j=$(echo $nums_j | sed -n \"s/[^0-9]*$j *//p\")\n      nums_min_sum=$(echo $nums_",
    "    local currMin\n    local i\n    local j\n    local sum\n    local nums\n    local minSum\n    local minSubSum\n    local minSubArraySum\n\n    minSubArraySum=\"$1\"\n    nums=$1\n    minSum=$1\n    for i in \"${nums[@]}\"; do\n        sum=$(($i))\n        if [ -z \"${currMin}\" ]; then\n            currMin=$sum\n        else\n            if [ \"$sum\" -lt \"${currMin}\" ]; then\n                currMin=$sum\n            fi\n        fi\n    done\n\n    for i in \"${nums[@]}\"; do\n        sum=$(($i))\n        if [ -z \"${currMin}\" ]; then\n            currMin=$sum\n        else\n            if [ \"$sum\" -lt \"${currMin}\" ]; then\n                currMin=$sum\n            fi\n        fi\n    done\n\n    for i in \"${nums[@]}\"; do\n        sum=$(($i))\n        if [ -z \"${currMin}\" ]; then\n            currMin=$sum\n        else\n            if [ \"$sum\" -lt \"${currMin}\" ]; then\n                currMin=$sum\n            fi\n        fi\n    done\n\n    for i in \"${nums[@]}\"; do\n        sum=$(($i))\n        if [ -z \"${currMin}\" ]; then\n            currMin=$sum\n        else\n            if [ \"$sum\" -lt \"${currMin}\" ]; then\n                currMin=$sum\n            fi\n        fi\n    done\n\n    for i in \"${nums[@]}\"; do\n        sum=$(($i))\n        if [ -z \"${currMin}\" ]; then\n            currMin=$sum\n        else\n            if [ \"$sum\" -lt \"${currMin}\" ]; then\n                currMin=$sum\n            fi\n        fi\n    done\n\n    for i in \"${nums[@]}\"; do\n        sum=$(($i))\n        if [ -z \"${currMin}\" ]; then\n            currMin=$sum\n        else\n            if [ \"$sum\" -lt",
    "  local i j k\n  local min_sum\n  local sum\n  local nums\n\n  min_sum=0\n  nums=$1\n  for i in $nums\n  do\n    sum=$(($i))\n    for j in $nums\n      do\n        for k in $nums\n          do\n            sum=$(($sum + $j + $k))\n            if [ $sum - $min_sum ] < 0\n            then\n              min_sum=$sum\n            fi\n          done\n        done\n      done\n    done\n  done\n\n  echo $min_sum",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_index\n  local min_index_i\n  local min_index_j\n  local min_index_i_j\n  local min_index_i_j_sum\n  local min_index_i_j_sum_i\n  local min_index_i_j_sum_j\n  local min_index_i_j_sum_i_j\n  local min_index_i_j_sum_i_j_sum\n  local min_index_i_j_sum_i_j_sum_i\n  local min_index_i_j_sum_i_j_sum_j\n  local min_index_i_j_sum_i_j_sum_i_j\n  local min_index_i_j_sum_i_j_sum_i_j_sum\n  local min_index_i_j_sum_i_j_sum_i_j_sum_i\n  local min_index_i_j_sum_i_j_sum_i_j_sum_j\n  local min_index_i_j_sum_i_j_sum_i_j_sum_i_j\n  local min_index_i_j_sum_i_j_sum_i_j_sum_i_j_sum\n  local min_index_i_j_sum_i_j_sum_i_j_sum_i_j_sum_i\n  local min_index_i_j_sum_i_j_sum_i_j_sum_i_j_sum_j\n  local min_index_i_j_sum_i_j_sum_i_j_sum_i_j_sum_i_j\n  local min_index_i_j_sum_i_j_sum_i_j_sum_i_j_sum_i_j_sum\n  local min_index_i_j_sum_i_j_sum_i_j_sum_i_j_sum_i_j_sum_i\n  local min_index_i_j_sum_i_j_sum_i_",
    "  local i j k\n  while read -r i j k\n  do\n    if [[ $i -lt 0 ]]\n      then\n        echo -n $k\n      fi\n    fi\n  done < $1",
    "  local i j k\n  while read i j k\n  do\n    if [[ $i -ge 0 ]]\n      then\n        local sum\n        sum=$(( $i + $j + $k ))\n        if [[ $sum -lt 0 ]]\n          then\n            echo $sum\n          fi\n        fi\n      fi\n    fi\n  done",
    "  local -a\n  local -a nums\n  local -a minSum\n  local -a minSumIndex\n  local -a minSumIndex2\n  local -a minSumIndex3\n  local -a minSumIndex4\n  local -a minSumIndex5\n  local -a minSumIndex6\n  local -a minSumIndex7\n  local -a minSumIndex8\n  local -a minSumIndex9\n  local -a minSumIndex10\n  local -a minSumIndex11\n  local -a minSumIndex12\n  local -a minSumIndex13\n  local -a minSumIndex14\n  local -a minSumIndex15\n  local -a minSumIndex16\n  local -a minSumIndex17\n  local -a minSumIndex18\n  local -a minSumIndex19\n  local -a minSumIndex20\n  local -a minSumIndex21\n  local -a minSumIndex22\n  local -a minSumIndex23\n  local -a minSumIndex24\n  local -a minSumIndex25\n  local -a minSumIndex26\n  local -a minSumIndex27\n  local -a minSumIndex28\n  local -a minSumIndex29\n  local -a minSumIndex30\n  local -a minSumIndex31\n  local -a minSumIndex32\n  local -a minSumIndex33\n  local -a minSumIndex34\n  local -a minSumIndex35\n  local -a minSumIndex36\n  local -a minSumIndex37\n  local -a minSumIndex38\n  local -a minSumIndex39\n  local -a minSumIndex40\n  local -a minSumIndex41\n  local -a minSumIndex42\n  local -a minSumIndex43\n  local -a minSumIndex44\n  local -a minSumIndex45\n  local -a minSumIndex46\n  local -a minSumIndex47\n  local -a minSumIndex48\n  local -a minSumIndex49\n  local -a minSumIndex50\n  local -a minSumIndex51\n  local -a minSumIndex52\n  local -a minSumIndex53\n  local -a minSumIndex54\n  local -a minSumIndex55",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local minSubArraySum\n  local minSubArraySum_i\n  local minSubArraySum_j\n  local minSubArraySum_i_j\n\n  nums=$1\n  minSubArraySum=\"$1\"\n  for i in $nums\n  do\n    currSum=$i\n    minSum=$i\n    for j in $nums\n      do\n        if [ $j -lt $i ]\n        then\n          continue\n        fi\n        currSum=$((currSum+$j))\n        if [ $currSum -lt $minSum ]\n        then\n          minSum=$currSum\n        fi\n      done\n    if [ $minSum -lt $minSubArraySum ]\n    then\n      minSubArraySum=$minSum\n      minSubArraySum_i=$i\n      minSubArraySum_j=$minSubArraySum_i\n      minSubArraySum_i_j=$minSubArraySum_i_j\n    fi\n  done\n  echo $minSubArraySum",
    "  local i j k\n  local sum\n  local min_sum\n  local min_sum_index\n  local min_sum_value\n\n  min_sum_index=0\n  min_sum_value=0\n\n  for i in \"$@\"; do\n    sum=0\n    for j in \"${i//[0-9]/}\"; do\n      sum=$(($sum + $j))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_sum_index=$((i+1))\n        min_sum_value=$j\n      fi\n    done\n  done\n\n  if [ $min_sum_index -ne 0 ]; then\n    echo $min_sum_value\n  else\n    echo \"No sub-array found\"\n  fi",
    "  local i j k\n  while read i j k\n  do\n    if [[ $i -gt 0 ]]\n      then\n        echo $i $j $k\n        local min_sum\n        min_sum=$(minSubArraySum $i $j $k)\n        if [[ $min_sum -ne 0 ]]\n          then\n            echo $min_sum\n          fi\n    fi\n  done < $1",
    "  local result\n  local i\n  local j\n  local sum\n  local nums\n  local min\n  local min_sum\n  local min_start\n  local min_end\n\n  nums=$1\n  min_sum=0\n  min_start=0\n  min_end=0\n\n  for i in $nums\n  do\n    sum=$(($i))\n    if [ $sum -lt 0 ]; then\n      min_sum=$sum\n      min_start=$i\n      min_end=i\n    fi\n  done\n\n  if [ $min_sum -eq 0 ]; then\n    result=$min_start\n  else\n    result=$min_end\n  fi\n\n  echo $result",
    "    local result=$1\n    shift\n    while [ $# -gt 0 ]; do\n        result=$(minSubArraySum \"${result} ${1}\")\n        shift\n    done\n    echo $result",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_sum_index\n  local min_sum_index_start\n  local min_sum_index_end\n  local min_sum_index_start_end\n  local min_sum_index_start_end_sum\n  local min_sum_index_start_end_sum_sum\n  local min_sum_index_start_end_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n  local min_sum_index_start_end_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_",
    "  local curr_sum\n  local i\n  local j\n  local min_sum\n  local nums\n  local start\n  local end\n\n  nums=$1\n  start=1\n  end=1\n  min_sum=0\n  for ((i=1;i<=nums[0];i++)); do\n    for ((j=1;j<=nums[i];j++)); do\n      curr_sum=$((nums[start] + nums[end]))\n      if ((curr_sum < min_sum)); then\n        min_sum=$curr_sum\n      fi\n      end=$((end+1))\n    done\n    start=$((start+1))\n  done\n  echo $min_sum",
    "  local currSum\n  local minSum\n  local i\n  local j\n  local nums\n  local sum\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n  local sum98",
    "  local i j k\n  local min_sum\n  local sum\n  local nums\n  local min_sum_index\n  local min_sum_value\n\n  min_sum_index=0\n  min_sum_value=0\n\n  nums=$1\n  for i in $nums; do\n    sum=$(($i))\n    for j in $nums; do\n      for k in $nums; do\n        if [[ $j < $k ]]; then\n          sum=$(($sum + $k))\n        fi\n      done\n    done\n    if [[ $sum < $min_sum ]]; then\n      min_sum=$sum\n      min_sum_index=$i\n      min_sum_value=$k\n    fi\n  done\n\n  if [[ $min_sum_index == 0 ]]; then\n    min_sum_value=0\n  fi\n\n  echo $min_sum_value",
    "  local i\n  local j\n  local min\n  local sum\n  local array\n  local array_len\n  local array_sum\n\n  array=$1\n  array_len=$2\n  array_sum=$3\n\n  for i in $(seq 1 $array_len); do\n    sum=$(minSubArraySum $array $i)\n    if [ $sum -lt $array_sum ]; then\n      min=$sum\n      j=$i\n    fi\n  done\n\n  if [ $min -eq $array_sum ]; then\n    echo $min\n  else\n    echo $min-$array[$j-1]\n  fi",
    "    local i\n    local j\n    local k\n    local sum\n    local min\n    local min_sum\n    local nums\n    local nums_len\n    local nums_i\n    local nums_j\n    local nums_k\n    local nums_sum\n    local nums_min\n    local nums_min_sum\n    local nums_min_i\n    local nums_min_j\n    local nums_min_k\n    local nums_min_sum\n    local nums_min_i_min_j\n    local nums_min_i_min_k\n    local nums_min_j_min_k\n    local nums_min_i_min_j_min_k\n\n    nums=$1\n    nums_len=$(echo $nums | wc -c)\n    nums_i=0\n    nums_j=0\n    nums_k=0\n    nums_sum=0\n    nums_min=0\n    nums_min_sum=0\n    nums_min_i=0\n    nums_min_j=0\n    nums_min_k=0\n    nums_min_sum=0\n    nums_min_i_min_j=0\n    nums_min_i_min_k=0\n    nums_min_j_min_k=0\n    nums_min_i_min_j_min_k=0\n\n    while [ $nums_i -lt $nums_len ]; do\n        nums_i=$(echo $nums | cut -d \" \" -f $nums_i)\n        nums_j=$(echo $nums | cut -d \" \" -f $nums_j)\n        nums_k=$(echo $nums | cut -d \" \" -f $nums_k)\n        nums_sum=$(echo $nums | cut -d \" \" -f $nums_sum)\n        nums_min=$(echo $nums | cut -d \" \" -f $nums_min)\n        nums_min_sum=$(echo $nums | cut -",
    "  local result=0\n  local i\n  local j\n  local sum\n  local min\n  for i in \"${1//[ \\t\\n]+}\"\n  do\n    sum=0\n    for j in \"${i//[ \\t\\n]+}\"\n    do\n      sum=$(($sum $j))\n    done\n    min=$(($sum $i))\n    if [ \"$min\" -lt 0 ]; then\n      min=$i\n    fi\n    result=$(($result $min))\n  done\n  echo $result",
    "  local i\n  local j\n  local sum\n  local min_sum\n  local min_index\n  local min_value\n  local nums\n  local nums_len\n  local nums_index\n  local nums_value\n\n  nums_len=`expr $1 | wc -w`\n  nums=`echo $1 | tr -d ' '`\n  nums_index=0\n  nums_value=0\n  nums_index=0\n  min_index=0\n  min_value=0\n  min_sum=0\n  for i in `seq 1 $nums_len`; do\n    if [ $nums_index -lt $nums_len ]; then\n      nums_value=`expr $nums[$nums_index]`\n      nums_index=`expr $nums_index + 1`\n    else\n      nums_value=0\n      nums_index=0\n    fi\n    sum=`expr $sum + $nums_value`\n    if [ $sum -lt $min_sum ]; then\n      min_sum=`expr $sum`\n      min_index=`expr $nums_index`\n      min_value=`expr $nums_value`\n    fi\n  done\n  echo $min_value",
    "  local curr_sum\n  local min_sum\n  local i\n  local j\n  local nums\n  local min_nums\n  local min_nums_sum\n\n  nums=$1\n  min_nums=0\n  min_nums_sum=0\n\n  for i in $nums; do\n    curr_sum=$(($i))\n    min_nums=$(($min_nums + 1))\n    min_nums_sum=$(($min_nums_sum + curr_sum))\n    for j in $nums; do\n      if [ $j -lt $i ]; then\n        break\n      fi\n      curr_sum=$(($curr_sum + $j))\n      min_nums=$(($min_nums + 1))\n      min_nums_sum=$(($min_nums_sum + $j))\n    done\n  done\n\n  min_nums_sum=$(($min_nums_sum + $i))\n  min_sum=$(($min_nums_sum))\n  for i in $nums; do\n    if [ $i -lt $min_nums ]; then\n      break\n    fi\n    curr_sum=$(($curr_sum + $i))\n    min_nums=$(($min_nums + 1))\n    min_nums_sum=$(($min_nums_sum + $i))\n    min_sum=$(($min_nums_sum))\n  done\n\n  echo $min_sum",
    "  local result\n  local i\n  local j\n  local sum\n  local nums\n  local min\n\n  nums=$1\n  min=0\n  for i in $nums; do\n    sum=$(($i))\n    if [ $sum -lt 0 ]; then\n      sum=0\n    fi\n    if [ $sum -gt 0 ]; then\n      min=$sum\n    fi\n    if [ $sum -gt 0 ]; then\n      sum=$sum\n    fi\n  done\n\n  result=$(($min))\n  return $result",
    "  local curr_sum curr_min\n  local i\n  local j\n  local nums\n  local min_sum\n  local min_sub_sum\n\n  nums=$1\n  min_sum=$2\n  min_sub_sum=$3\n\n  for i in $nums; do\n    curr_sum=0\n    curr_min=0\n    for j in $nums; do\n      if [[ $j -gt 0 ]]; then\n        curr_sum=$((curr_sum + $j))\n        if [[ $curr_min -lt $curr_sum ]]; then\n          curr_min=$curr_sum\n        fi\n      fi\n    done\n    if [[ $curr_min -lt $min_sum ]]; then\n      min_sum=$curr_min\n      min_sub_sum=$curr_sum\n    fi\n  done\n\n  echo $min_sub_sum",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_i\n  local min_j\n  local min_sum_i\n  local min_sum_j\n  local nums\n  local nums_i\n  local nums_j\n  local nums_sum\n  local nums_sum_i\n  local nums_sum_j\n  local nums_sum_sum\n  local nums_sum_sum_i\n  local nums_sum_sum_j\n  local nums_sum_sum_sum\n\n  nums=$1\n  min_sum=0\n  min_i=0\n  min_j=0\n  nums_i=0\n  nums_j=0\n  nums_sum=0\n  nums_sum_i=0\n  nums_sum_j=0\n  nums_sum_sum=0\n  nums_sum_sum_i=0\n  nums_sum_sum_j=0\n  nums_sum_sum_sum=0\n\n  for ((i=0;i<nums[0];i++)); do\n    for ((j=0;j<nums[1];j++)); do\n      sum=nums[2*i+j]\n      if ((sum>0)); then\n        nums_sum_sum_sum=nums_sum_sum_sum+sum\n        nums_sum_sum_i=nums_sum_sum_i+i\n        nums_sum_sum_j=nums_sum_sum_j+j\n        nums_sum_sum=nums_sum_sum+sum\n        nums_sum_i=nums_sum_i+i\n        nums_sum_j=nums_sum_j+j\n        nums_sum=nums_sum+sum\n        nums_i=nums_i+i\n        nums_j=nums_j+j\n        nums_sum=nums_sum+sum\n      fi\n    done\n  done\n\n  min_sum=nums_sum_sum_sum\n  min_i=nums_sum_",
    "  local nums\n  local min_sum\n  local i\n  local j\n  local sum\n  local min_sum_i\n  local min_sum_j\n  local min_sum_sum\n  local min_sum_sum_i\n  local min_sum_sum_j\n\n  nums=$1\n  min_sum_i=0\n  min_sum_j=0\n  min_sum_sum=0\n  for i in $nums; do\n    sum=$(($i+1))\n    min_sum_i=$(($min_sum_i+sum))\n    min_sum_j=$(($min_sum_j+sum))\n    min_sum_sum=$(($min_sum_sum+sum))\n    if [ $min_sum_i -lt $min_sum_sum ]; then\n      min_sum_i=$min_sum_i\n      min_sum_j=$min_sum_j\n      min_sum_sum=$min_sum_sum\n    fi\n  done\n  echo $min_sum_i",
    "  local i\n  local j\n  local sum\n  local min\n  local min_sum\n  local min_i\n  local min_j\n  local nums\n\n  nums=$1\n  min_i=0\n  min_j=0\n  min_sum=0\n  for i in $nums; do\n    sum=0\n    for j in $nums; do\n      sum=$(($sum + $j))\n      if [ $sum -lt $min_sum ]; then\n        min_sum=$sum\n        min_i=$i\n        min_j=$j\n      fi\n    done\n  done\n\n  echo $min_i $min_j $min_sum"
  ],
  "stop_tokens": [
    "\n}"
  ]
}